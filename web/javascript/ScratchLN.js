var scratchLN =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 80);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/*
 Utils using lodash style API. (not necessarily 100% compliant) for functional and other utils.
 These utils should replace usage of lodash in the production code base. not because they are any better...
 but for the purpose of being a dependency free library.

 The hotspots in the code are already written in imperative style for performance reasons.
 so writing several dozen utils which may be slower than the original lodash, does not matter as much
 considering they will not be invoked in hotspots...
 */
function isEmpty(arr) {
    return arr && arr.length === 0;
}
exports.isEmpty = isEmpty;
function keys(obj) {
    if (obj === undefined || obj === null) {
        return [];
    }
    return Object.keys(obj);
}
exports.keys = keys;
function values(obj) {
    var vals = [];
    var keys = Object.keys(obj);
    for (var i = 0; i < keys.length; i++) {
        vals.push(obj[keys[i]]);
    }
    return vals;
}
exports.values = values;
function mapValues(obj, callback) {
    var result = [];
    var objKeys = keys(obj);
    for (var idx = 0; idx < objKeys.length; idx++) {
        var currKey = objKeys[idx];
        result.push(callback.call(null, obj[currKey], currKey));
    }
    return result;
}
exports.mapValues = mapValues;
function map(arr, callback) {
    var result = [];
    for (var idx = 0; idx < arr.length; idx++) {
        result.push(callback.call(null, arr[idx], idx));
    }
    return result;
}
exports.map = map;
function flatten(arr) {
    var result = [];
    for (var idx = 0; idx < arr.length; idx++) {
        var currItem = arr[idx];
        if (Array.isArray(currItem)) {
            result = result.concat(flatten(currItem));
        }
        else {
            result.push(currItem);
        }
    }
    return result;
}
exports.flatten = flatten;
function first(arr) {
    return isEmpty(arr) ? undefined : arr[0];
}
exports.first = first;
function last(arr) {
    var len = arr && arr.length;
    return len ? arr[len - 1] : undefined;
}
exports.last = last;
function forEach(collection, iteratorCallback) {
    /* istanbul ignore else */
    if (Array.isArray(collection)) {
        for (var i = 0; i < collection.length; i++) {
            iteratorCallback.call(null, collection[i], i);
        }
    }
    else if (isObject(collection)) {
        var colKeys = keys(collection);
        for (var i = 0; i < colKeys.length; i++) {
            var key = colKeys[i];
            var value = collection[key];
            iteratorCallback.call(null, value, key);
        }
    }
    else {
        throw Error("non exhaustive match");
    }
}
exports.forEach = forEach;
function isString(item) {
    return typeof item === "string";
}
exports.isString = isString;
function isUndefined(item) {
    return item === undefined;
}
exports.isUndefined = isUndefined;
function isFunction(item) {
    return item instanceof Function;
}
exports.isFunction = isFunction;
function drop(arr, howMuch) {
    if (howMuch === void 0) { howMuch = 1; }
    return arr.slice(howMuch, arr.length);
}
exports.drop = drop;
function dropRight(arr, howMuch) {
    if (howMuch === void 0) { howMuch = 1; }
    return arr.slice(0, arr.length - howMuch);
}
exports.dropRight = dropRight;
function filter(arr, predicate) {
    var result = [];
    if (Array.isArray(arr)) {
        for (var i = 0; i < arr.length; i++) {
            var item = arr[i];
            if (predicate.call(null, item)) {
                result.push(item);
            }
        }
    }
    return result;
}
exports.filter = filter;
function reject(arr, predicate) {
    return filter(arr, function (item) { return !predicate(item); });
}
exports.reject = reject;
function pick(obj, predicate) {
    var keys = Object.keys(obj);
    var result = {};
    for (var i = 0; i < keys.length; i++) {
        var currKey = keys[i];
        var currItem = obj[currKey];
        if (predicate(currItem)) {
            result[currKey] = currItem;
        }
    }
    return result;
}
exports.pick = pick;
function has(obj, prop) {
    if (isObject(obj)) {
        return obj.hasOwnProperty(prop);
    }
    return false;
}
exports.has = has;
function contains(arr, item) {
    return find(arr, function (currItem) { return currItem === item; }) !== undefined ? true : false;
}
exports.contains = contains;
/**
 * shallow clone
 */
function cloneArr(arr) {
    var newArr = [];
    for (var i = 0; i < arr.length; i++) {
        newArr.push(arr[i]);
    }
    return newArr;
}
exports.cloneArr = cloneArr;
/**
 * shallow clone
 */
function cloneObj(obj) {
    var clonedObj = {};
    for (var key in obj) {
        /* istanbul ignore else */
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            clonedObj[key] = obj[key];
        }
    }
    return clonedObj;
}
exports.cloneObj = cloneObj;
function find(arr, predicate) {
    for (var i = 0; i < arr.length; i++) {
        var item = arr[i];
        if (predicate.call(null, item)) {
            return item;
        }
    }
    return undefined;
}
exports.find = find;
function findAll(arr, predicate) {
    var found = [];
    for (var i = 0; i < arr.length; i++) {
        var item = arr[i];
        if (predicate.call(null, item)) {
            found.push(item);
        }
    }
    return found;
}
exports.findAll = findAll;
function reduce(arrOrObj, iterator, initial) {
    var isArr = Array.isArray(arrOrObj);
    var vals = isArr ? arrOrObj : values(arrOrObj);
    var objKeys = isArr ? [] : keys(arrOrObj);
    var accumulator = initial;
    for (var i = 0; i < vals.length; i++) {
        accumulator = iterator.call(null, accumulator, vals[i], isArr ? i : objKeys[i]);
    }
    return accumulator;
}
exports.reduce = reduce;
function compact(arr) {
    return reject(arr, function (item) { return item === null || item === undefined; });
}
exports.compact = compact;
function uniq(arr, identity) {
    if (identity === void 0) { identity = function (item) { return item; }; }
    var identities = [];
    return reduce(arr, function (result, currItem) {
        var currIdentity = identity(currItem);
        if (contains(identities, currIdentity)) {
            return result;
        }
        else {
            identities.push(currIdentity);
            return result.concat(currItem);
        }
    }, []);
}
exports.uniq = uniq;
function partial(func) {
    var restArgs = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        restArgs[_i - 1] = arguments[_i];
    }
    var firstArg = [null];
    var allArgs = firstArg.concat(restArgs);
    return Function.bind.apply(func, allArgs);
}
exports.partial = partial;
function isArray(obj) {
    return Array.isArray(obj);
}
exports.isArray = isArray;
function isRegExp(obj) {
    return obj instanceof RegExp;
}
exports.isRegExp = isRegExp;
function isObject(obj) {
    return obj instanceof Object;
}
exports.isObject = isObject;
function every(arr, predicate) {
    for (var i = 0; i < arr.length; i++) {
        if (!predicate(arr[i], i)) {
            return false;
        }
    }
    return true;
}
exports.every = every;
function difference(arr, values) {
    return reject(arr, function (item) { return contains(values, item); });
}
exports.difference = difference;
function some(arr, predicate) {
    for (var i = 0; i < arr.length; i++) {
        if (predicate(arr[i])) {
            return true;
        }
    }
    return false;
}
exports.some = some;
function indexOf(arr, value) {
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] === value) {
            return i;
        }
    }
    return -1;
}
exports.indexOf = indexOf;
function sortBy(arr, orderFunc) {
    var result = cloneArr(arr);
    result.sort(function (a, b) { return orderFunc(a) - orderFunc(b); });
    return result;
}
exports.sortBy = sortBy;
function zipObject(keys, values) {
    if (keys.length !== values.length) {
        throw Error("can't zipObject with different number of keys and values!");
    }
    var result = {};
    for (var i = 0; i < keys.length; i++) {
        result[keys[i]] = values[i];
    }
    return result;
}
exports.zipObject = zipObject;
/**
 * mutates! (and returns) target
 */
function assign(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    for (var i = 0; i < sources.length; i++) {
        var curSource = sources[i];
        var currSourceKeys = keys(curSource);
        for (var j = 0; j < currSourceKeys.length; j++) {
            var currKey = currSourceKeys[j];
            target[currKey] = curSource[currKey];
        }
    }
    return target;
}
exports.assign = assign;
/**
 * mutates! (and returns) target
 */
function assignNoOverwrite(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    for (var i = 0; i < sources.length; i++) {
        var curSource = sources[i];
        if (isUndefined(curSource)) {
            continue;
        }
        var currSourceKeys = keys(curSource);
        for (var j = 0; j < currSourceKeys.length; j++) {
            var currKey = currSourceKeys[j];
            if (!has(target, currKey)) {
                target[currKey] = curSource[currKey];
            }
        }
    }
    return target;
}
exports.assignNoOverwrite = assignNoOverwrite;
function defaults() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    return assignNoOverwrite.apply(null, [{}].concat(sources));
}
exports.defaults = defaults;
function groupBy(arr, groupKeyFunc) {
    var result = {};
    forEach(arr, function (item) {
        var currGroupKey = groupKeyFunc(item);
        var currGroupArr = result[currGroupKey];
        if (currGroupArr) {
            currGroupArr.push(item);
        }
        else {
            result[currGroupKey] = [item];
        }
    });
    return result;
}
exports.groupBy = groupBy;
/**
 * Merge obj2 into obj1.
 * Will overwrite existing properties with the same name
 */
function merge(obj1, obj2) {
    var result = cloneObj(obj1);
    var keys2 = keys(obj2);
    for (var i = 0; i < keys2.length; i++) {
        var key = keys2[i];
        var value = obj2[key];
        result[key] = value;
    }
    return result;
}
exports.merge = merge;
function NOOP() { }
exports.NOOP = NOOP;
function IDENTITY(item) {
    return item;
}
exports.IDENTITY = IDENTITY;
/**
 * Will return a new packed array with same values.
 */
function packArray(holeyArr) {
    var result = [];
    for (var i = 0; i < holeyArr.length; i++) {
        var orgValue = holeyArr[i];
        result.push(orgValue !== undefined ? orgValue : undefined);
    }
    return result;
}
exports.packArray = packArray;
function PRINT_ERROR(msg) {
    /* istanbul ignore else - can't override global.console in node.js */
    if (console && console.error) {
        console.error("Error: " + msg);
    }
}
exports.PRINT_ERROR = PRINT_ERROR;
function PRINT_WARNING(msg) {
    /* istanbul ignore else - can't override global.console in node.js*/
    if (console && console.warn) {
        // TODO: modify docs accordingly
        console.warn("Warning: " + msg);
    }
}
exports.PRINT_WARNING = PRINT_WARNING;
//# sourceMappingURL=utils.js.map

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var tokens_public_1 = __webpack_require__(3);
var AbstractProduction = /** @class */ (function () {
    function AbstractProduction(definition) {
        this.definition = definition;
    }
    AbstractProduction.prototype.accept = function (visitor) {
        visitor.visit(this);
        utils_1.forEach(this.definition, function (prod) {
            prod.accept(visitor);
        });
    };
    return AbstractProduction;
}());
exports.AbstractProduction = AbstractProduction;
var NonTerminal = /** @class */ (function (_super) {
    __extends(NonTerminal, _super);
    function NonTerminal(options) {
        var _this = _super.call(this, []) || this;
        _this.idx = 1;
        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    Object.defineProperty(NonTerminal.prototype, "definition", {
        get: function () {
            if (this.referencedRule !== undefined) {
                return this.referencedRule.definition;
            }
            return [];
        },
        set: function (definition) {
            // immutable
        },
        enumerable: true,
        configurable: true
    });
    NonTerminal.prototype.accept = function (visitor) {
        visitor.visit(this);
        // don't visit children of a reference, we will get cyclic infinite loops if we do so
    };
    return NonTerminal;
}(AbstractProduction));
exports.NonTerminal = NonTerminal;
var Rule = /** @class */ (function (_super) {
    __extends(Rule, _super);
    function Rule(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.orgText = "";
        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return Rule;
}(AbstractProduction));
exports.Rule = Rule;
var Flat = /** @class */ (function (_super) {
    __extends(Flat, _super);
    // A named Flat production is used to indicate a Nested Rule in an alternation
    function Flat(options) {
        var _this = _super.call(this, options.definition) || this;
        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return Flat;
}(AbstractProduction));
exports.Flat = Flat;
var Option = /** @class */ (function (_super) {
    __extends(Option, _super);
    function Option(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return Option;
}(AbstractProduction));
exports.Option = Option;
var RepetitionMandatory = /** @class */ (function (_super) {
    __extends(RepetitionMandatory, _super);
    function RepetitionMandatory(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return RepetitionMandatory;
}(AbstractProduction));
exports.RepetitionMandatory = RepetitionMandatory;
var RepetitionMandatoryWithSeparator = /** @class */ (function (_super) {
    __extends(RepetitionMandatoryWithSeparator, _super);
    function RepetitionMandatoryWithSeparator(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return RepetitionMandatoryWithSeparator;
}(AbstractProduction));
exports.RepetitionMandatoryWithSeparator = RepetitionMandatoryWithSeparator;
var Repetition = /** @class */ (function (_super) {
    __extends(Repetition, _super);
    function Repetition(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return Repetition;
}(AbstractProduction));
exports.Repetition = Repetition;
var RepetitionWithSeparator = /** @class */ (function (_super) {
    __extends(RepetitionWithSeparator, _super);
    function RepetitionWithSeparator(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return RepetitionWithSeparator;
}(AbstractProduction));
exports.RepetitionWithSeparator = RepetitionWithSeparator;
var Alternation = /** @class */ (function (_super) {
    __extends(Alternation, _super);
    function Alternation(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return Alternation;
}(AbstractProduction));
exports.Alternation = Alternation;
var Terminal = /** @class */ (function () {
    function Terminal(options) {
        this.idx = 1;
        utils_1.assign(this, utils_1.pick(options, function (v) { return v !== undefined; }));
    }
    Terminal.prototype.accept = function (visitor) {
        visitor.visit(this);
    };
    return Terminal;
}());
exports.Terminal = Terminal;
function serializeGrammar(topRules) {
    return utils_1.map(topRules, serializeProduction);
}
exports.serializeGrammar = serializeGrammar;
function serializeProduction(node) {
    function convertDefinition(definition) {
        return utils_1.map(definition, serializeProduction);
    }
    /* istanbul ignore else */
    if (node instanceof NonTerminal) {
        return {
            type: "NonTerminal",
            name: node.nonTerminalName,
            idx: node.idx
        };
    }
    else if (node instanceof Flat) {
        return {
            type: "Flat",
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof Option) {
        return {
            type: "Option",
            idx: node.idx,
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof RepetitionMandatory) {
        return {
            type: "RepetitionMandatory",
            name: node.name,
            idx: node.idx,
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof RepetitionMandatoryWithSeparator) {
        return {
            type: "RepetitionMandatoryWithSeparator",
            name: node.name,
            idx: node.idx,
            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof RepetitionWithSeparator) {
        return {
            type: "RepetitionWithSeparator",
            name: node.name,
            idx: node.idx,
            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof Repetition) {
        return {
            type: "Repetition",
            name: node.name,
            idx: node.idx,
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof Alternation) {
        return {
            type: "Alternation",
            name: node.name,
            idx: node.idx,
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof Terminal) {
        var serializedTerminal = {
            type: "Terminal",
            name: tokens_public_1.tokenName(node.terminalType),
            label: tokens_public_1.tokenLabel(node.terminalType),
            idx: node.idx
        };
        var pattern = node.terminalType.PATTERN;
        if (node.terminalType.PATTERN) {
            serializedTerminal.pattern = utils_1.isRegExp(pattern)
                ? pattern.source
                : pattern;
        }
        return serializedTerminal;
    }
    else if (node instanceof Rule) {
        return {
            type: "Rule",
            name: node.name,
            orgText: node.orgText,
            definition: convertDefinition(node.definition)
        };
    }
    else {
        throw Error("non exhaustive match");
    }
}
exports.serializeProduction = serializeProduction;
//# sourceMappingURL=gast_public.js.map

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,
    hasProp = {}.hasOwnProperty;

  ref = __webpack_require__(4), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;

  XMLElement = null;

  XMLCData = null;

  XMLComment = null;

  XMLDeclaration = null;

  XMLDocType = null;

  XMLRaw = null;

  XMLText = null;

  XMLProcessingInstruction = null;

  module.exports = XMLNode = (function() {
    function XMLNode(parent) {
      this.parent = parent;
      if (this.parent) {
        this.options = this.parent.options;
        this.stringify = this.parent.stringify;
      }
      this.children = [];
      if (!XMLElement) {
        XMLElement = __webpack_require__(19);
        XMLCData = __webpack_require__(11);
        XMLComment = __webpack_require__(12);
        XMLDeclaration = __webpack_require__(17);
        XMLDocType = __webpack_require__(18);
        XMLRaw = __webpack_require__(21);
        XMLText = __webpack_require__(22);
        XMLProcessingInstruction = __webpack_require__(20);
      }
    }

    XMLNode.prototype.element = function(name, attributes, text) {
      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;
      lastChild = null;
      if (attributes == null) {
        attributes = {};
      }
      attributes = attributes.valueOf();
      if (!isObject(attributes)) {
        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];
      }
      if (name != null) {
        name = name.valueOf();
      }
      if (Array.isArray(name)) {
        for (j = 0, len = name.length; j < len; j++) {
          item = name[j];
          lastChild = this.element(item);
        }
      } else if (isFunction(name)) {
        lastChild = this.element(name.apply());
      } else if (isObject(name)) {
        for (key in name) {
          if (!hasProp.call(name, key)) continue;
          val = name[key];
          if (isFunction(val)) {
            val = val.apply();
          }
          if ((isObject(val)) && (isEmpty(val))) {
            val = null;
          }
          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {
            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);
          } else if (!this.options.separateArrayItems && Array.isArray(val)) {
            for (k = 0, len1 = val.length; k < len1; k++) {
              item = val[k];
              childNode = {};
              childNode[key] = item;
              lastChild = this.element(childNode);
            }
          } else if (isObject(val)) {
            lastChild = this.element(key);
            lastChild.element(val);
          } else {
            lastChild = this.element(key, val);
          }
        }
      } else {
        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {
          lastChild = this.text(text);
        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {
          lastChild = this.cdata(text);
        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {
          lastChild = this.comment(text);
        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {
          lastChild = this.raw(text);
        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {
          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);
        } else {
          lastChild = this.node(name, attributes, text);
        }
      }
      if (lastChild == null) {
        throw new Error("Could not create any elements with: " + name);
      }
      return lastChild;
    };

    XMLNode.prototype.insertBefore = function(name, attributes, text) {
      var child, i, removed;
      if (this.isRoot) {
        throw new Error("Cannot insert elements at root level");
      }
      i = this.parent.children.indexOf(this);
      removed = this.parent.children.splice(i);
      child = this.parent.element(name, attributes, text);
      Array.prototype.push.apply(this.parent.children, removed);
      return child;
    };

    XMLNode.prototype.insertAfter = function(name, attributes, text) {
      var child, i, removed;
      if (this.isRoot) {
        throw new Error("Cannot insert elements at root level");
      }
      i = this.parent.children.indexOf(this);
      removed = this.parent.children.splice(i + 1);
      child = this.parent.element(name, attributes, text);
      Array.prototype.push.apply(this.parent.children, removed);
      return child;
    };

    XMLNode.prototype.remove = function() {
      var i, ref1;
      if (this.isRoot) {
        throw new Error("Cannot remove the root element");
      }
      i = this.parent.children.indexOf(this);
      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;
      return this.parent;
    };

    XMLNode.prototype.node = function(name, attributes, text) {
      var child, ref1;
      if (name != null) {
        name = name.valueOf();
      }
      attributes || (attributes = {});
      attributes = attributes.valueOf();
      if (!isObject(attributes)) {
        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];
      }
      child = new XMLElement(this, name, attributes);
      if (text != null) {
        child.text(text);
      }
      this.children.push(child);
      return child;
    };

    XMLNode.prototype.text = function(value) {
      var child;
      child = new XMLText(this, value);
      this.children.push(child);
      return this;
    };

    XMLNode.prototype.cdata = function(value) {
      var child;
      child = new XMLCData(this, value);
      this.children.push(child);
      return this;
    };

    XMLNode.prototype.comment = function(value) {
      var child;
      child = new XMLComment(this, value);
      this.children.push(child);
      return this;
    };

    XMLNode.prototype.commentBefore = function(value) {
      var child, i, removed;
      i = this.parent.children.indexOf(this);
      removed = this.parent.children.splice(i);
      child = this.parent.comment(value);
      Array.prototype.push.apply(this.parent.children, removed);
      return this;
    };

    XMLNode.prototype.commentAfter = function(value) {
      var child, i, removed;
      i = this.parent.children.indexOf(this);
      removed = this.parent.children.splice(i + 1);
      child = this.parent.comment(value);
      Array.prototype.push.apply(this.parent.children, removed);
      return this;
    };

    XMLNode.prototype.raw = function(value) {
      var child;
      child = new XMLRaw(this, value);
      this.children.push(child);
      return this;
    };

    XMLNode.prototype.instruction = function(target, value) {
      var insTarget, insValue, instruction, j, len;
      if (target != null) {
        target = target.valueOf();
      }
      if (value != null) {
        value = value.valueOf();
      }
      if (Array.isArray(target)) {
        for (j = 0, len = target.length; j < len; j++) {
          insTarget = target[j];
          this.instruction(insTarget);
        }
      } else if (isObject(target)) {
        for (insTarget in target) {
          if (!hasProp.call(target, insTarget)) continue;
          insValue = target[insTarget];
          this.instruction(insTarget, insValue);
        }
      } else {
        if (isFunction(value)) {
          value = value.apply();
        }
        instruction = new XMLProcessingInstruction(this, target, value);
        this.children.push(instruction);
      }
      return this;
    };

    XMLNode.prototype.instructionBefore = function(target, value) {
      var child, i, removed;
      i = this.parent.children.indexOf(this);
      removed = this.parent.children.splice(i);
      child = this.parent.instruction(target, value);
      Array.prototype.push.apply(this.parent.children, removed);
      return this;
    };

    XMLNode.prototype.instructionAfter = function(target, value) {
      var child, i, removed;
      i = this.parent.children.indexOf(this);
      removed = this.parent.children.splice(i + 1);
      child = this.parent.instruction(target, value);
      Array.prototype.push.apply(this.parent.children, removed);
      return this;
    };

    XMLNode.prototype.declaration = function(version, encoding, standalone) {
      var doc, xmldec;
      doc = this.document();
      xmldec = new XMLDeclaration(doc, version, encoding, standalone);
      if (doc.children[0] instanceof XMLDeclaration) {
        doc.children[0] = xmldec;
      } else {
        doc.children.unshift(xmldec);
      }
      return doc.root() || doc;
    };

    XMLNode.prototype.doctype = function(pubID, sysID) {
      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;
      doc = this.document();
      doctype = new XMLDocType(doc, pubID, sysID);
      ref1 = doc.children;
      for (i = j = 0, len = ref1.length; j < len; i = ++j) {
        child = ref1[i];
        if (child instanceof XMLDocType) {
          doc.children[i] = doctype;
          return doctype;
        }
      }
      ref2 = doc.children;
      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {
        child = ref2[i];
        if (child.isRoot) {
          doc.children.splice(i, 0, doctype);
          return doctype;
        }
      }
      doc.children.push(doctype);
      return doctype;
    };

    XMLNode.prototype.up = function() {
      if (this.isRoot) {
        throw new Error("The root node has no parent. Use doc() if you need to get the document object.");
      }
      return this.parent;
    };

    XMLNode.prototype.root = function() {
      var node;
      node = this;
      while (node) {
        if (node.isDocument) {
          return node.rootObject;
        } else if (node.isRoot) {
          return node;
        } else {
          node = node.parent;
        }
      }
    };

    XMLNode.prototype.document = function() {
      var node;
      node = this;
      while (node) {
        if (node.isDocument) {
          return node;
        } else {
          node = node.parent;
        }
      }
    };

    XMLNode.prototype.end = function(options) {
      return this.document().end(options);
    };

    XMLNode.prototype.prev = function() {
      var i;
      i = this.parent.children.indexOf(this);
      if (i < 1) {
        throw new Error("Already at the first node");
      }
      return this.parent.children[i - 1];
    };

    XMLNode.prototype.next = function() {
      var i;
      i = this.parent.children.indexOf(this);
      if (i === -1 || i === this.parent.children.length - 1) {
        throw new Error("Already at the last node");
      }
      return this.parent.children[i + 1];
    };

    XMLNode.prototype.importDocument = function(doc) {
      var clonedRoot;
      clonedRoot = doc.root().clone();
      clonedRoot.parent = this;
      clonedRoot.isRoot = false;
      this.children.push(clonedRoot);
      return this;
    };

    XMLNode.prototype.ele = function(name, attributes, text) {
      return this.element(name, attributes, text);
    };

    XMLNode.prototype.nod = function(name, attributes, text) {
      return this.node(name, attributes, text);
    };

    XMLNode.prototype.txt = function(value) {
      return this.text(value);
    };

    XMLNode.prototype.dat = function(value) {
      return this.cdata(value);
    };

    XMLNode.prototype.com = function(value) {
      return this.comment(value);
    };

    XMLNode.prototype.ins = function(target, value) {
      return this.instruction(target, value);
    };

    XMLNode.prototype.doc = function() {
      return this.document();
    };

    XMLNode.prototype.dec = function(version, encoding, standalone) {
      return this.declaration(version, encoding, standalone);
    };

    XMLNode.prototype.dtd = function(pubID, sysID) {
      return this.doctype(pubID, sysID);
    };

    XMLNode.prototype.e = function(name, attributes, text) {
      return this.element(name, attributes, text);
    };

    XMLNode.prototype.n = function(name, attributes, text) {
      return this.node(name, attributes, text);
    };

    XMLNode.prototype.t = function(value) {
      return this.text(value);
    };

    XMLNode.prototype.d = function(value) {
      return this.cdata(value);
    };

    XMLNode.prototype.c = function(value) {
      return this.comment(value);
    };

    XMLNode.prototype.r = function(value) {
      return this.raw(value);
    };

    XMLNode.prototype.i = function(target, value) {
      return this.instruction(target, value);
    };

    XMLNode.prototype.u = function() {
      return this.up();
    };

    XMLNode.prototype.importXMLBuilder = function(doc) {
      return this.importDocument(doc);
    };

    return XMLNode;

  })();

}).call(this);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var lang_extensions_1 = __webpack_require__(5);
var lexer_public_1 = __webpack_require__(28);
var tokens_1 = __webpack_require__(10);
function tokenLabel(clazz) {
    if (hasTokenLabel(clazz)) {
        return clazz.LABEL;
    }
    else {
        return tokenName(clazz);
    }
}
exports.tokenLabel = tokenLabel;
function hasTokenLabel(obj) {
    return utils_1.isString(obj.LABEL) && obj.LABEL !== "";
}
exports.hasTokenLabel = hasTokenLabel;
function tokenName(obj) {
    // The tokenName property is needed under some old versions of node.js (0.10/0.12)
    // where the Function.prototype.name property is not defined as a 'configurable' property
    // enable producing readable error messages.
    /* istanbul ignore if -> will only run in old versions of node.js */
    if (utils_1.isObject(obj) &&
        obj.hasOwnProperty("tokenName") &&
        utils_1.isString(obj.tokenName)) {
        return obj.tokenName;
    }
    else {
        return lang_extensions_1.functionName(obj);
    }
}
exports.tokenName = tokenName;
var PARENT = "parent";
var CATEGORIES = "categories";
var LABEL = "label";
var GROUP = "group";
var PUSH_MODE = "push_mode";
var POP_MODE = "pop_mode";
var LONGER_ALT = "longer_alt";
var LINE_BREAKS = "line_breaks";
var START_CHARS_HINT = "start_chars_hint";
function createToken(config) {
    return createTokenInternal(config);
}
exports.createToken = createToken;
function createTokenInternal(config) {
    var tokenName = config.name;
    var pattern = config.pattern;
    var tokenType = {};
    // can be overwritten according to:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/
    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname
    /* istanbul ignore if -> will only run in old versions of node.js */
    if (!lang_extensions_1.defineNameProp(tokenType, tokenName)) {
        // hack to save the tokenName in situations where the constructor's name property cannot be reconfigured
        tokenType.tokenName = tokenName;
    }
    if (!utils_1.isUndefined(pattern)) {
        tokenType.PATTERN = pattern;
    }
    if (utils_1.has(config, PARENT)) {
        throw "The parent property is no longer supported.\n" +
            "See: https://github.com/SAP/chevrotain/issues/564#issuecomment-349062346 for details.";
    }
    if (utils_1.has(config, CATEGORIES)) {
        tokenType.CATEGORIES = config[CATEGORIES];
    }
    tokens_1.augmentTokenTypes([tokenType]);
    if (utils_1.has(config, LABEL)) {
        tokenType.LABEL = config[LABEL];
    }
    if (utils_1.has(config, GROUP)) {
        tokenType.GROUP = config[GROUP];
    }
    if (utils_1.has(config, POP_MODE)) {
        tokenType.POP_MODE = config[POP_MODE];
    }
    if (utils_1.has(config, PUSH_MODE)) {
        tokenType.PUSH_MODE = config[PUSH_MODE];
    }
    if (utils_1.has(config, LONGER_ALT)) {
        tokenType.LONGER_ALT = config[LONGER_ALT];
    }
    if (utils_1.has(config, LINE_BREAKS)) {
        tokenType.LINE_BREAKS = config[LINE_BREAKS];
    }
    if (utils_1.has(config, START_CHARS_HINT)) {
        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];
    }
    return tokenType;
}
exports.EOF = createToken({ name: "EOF", pattern: lexer_public_1.Lexer.NA });
tokens_1.augmentTokenTypes([exports.EOF]);
function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {
    return {
        image: image,
        startOffset: startOffset,
        endOffset: endOffset,
        startLine: startLine,
        endLine: endLine,
        startColumn: startColumn,
        endColumn: endColumn,
        tokenTypeIdx: tokType.tokenTypeIdx,
        tokenType: tokType
    };
}
exports.createTokenInstance = createTokenInstance;
function tokenMatcher(token, tokType) {
    return tokens_1.tokenStructuredMatcher(token, tokType);
}
exports.tokenMatcher = tokenMatcher;
//# sourceMappingURL=tokens_public.js.map

/***/ }),
/* 4 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 1.12.7
(function() {
  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,
    slice = [].slice,
    hasProp = {}.hasOwnProperty;

  assign = function() {
    var i, key, len, source, sources, target;
    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    if (isFunction(Object.assign)) {
      Object.assign.apply(null, arguments);
    } else {
      for (i = 0, len = sources.length; i < len; i++) {
        source = sources[i];
        if (source != null) {
          for (key in source) {
            if (!hasProp.call(source, key)) continue;
            target[key] = source[key];
          }
        }
      }
    }
    return target;
  };

  isFunction = function(val) {
    return !!val && Object.prototype.toString.call(val) === '[object Function]';
  };

  isObject = function(val) {
    var ref;
    return !!val && ((ref = typeof val) === 'function' || ref === 'object');
  };

  isArray = function(val) {
    if (isFunction(Array.isArray)) {
      return Array.isArray(val);
    } else {
      return Object.prototype.toString.call(val) === '[object Array]';
    }
  };

  isEmpty = function(val) {
    var key;
    if (isArray(val)) {
      return !val.length;
    } else {
      for (key in val) {
        if (!hasProp.call(val, key)) continue;
        return false;
      }
      return true;
    }
  };

  isPlainObject = function(val) {
    var ctor, proto;
    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));
  };

  module.exports.assign = assign;

  module.exports.isFunction = isFunction;

  module.exports.isObject = isObject;

  module.exports.isArray = isArray;

  module.exports.isEmpty = isEmpty;

  module.exports.isPlainObject = isPlainObject;

}).call(this);


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
function classNameFromInstance(instance) {
    return functionName(instance.constructor);
}
exports.classNameFromInstance = classNameFromInstance;
var FUNC_NAME_REGEXP = /^\s*function\s*(\S*)\s*\(/;
var NAME = "name";
/* istanbul ignore next too many hacks for IE/old versions of node.js here*/
function functionName(func) {
    // Engines that support Function.prototype.name OR the nth (n>1) time after
    // the name has been computed in the following else block.
    var existingNameProp = func.name;
    if (existingNameProp) {
        return existingNameProp;
    }
    // hack for IE and engines that do not support Object.defineProperty on function.name (Node.js 0.10 && 0.12)
    var computedName = func.toString().match(FUNC_NAME_REGEXP)[1];
    return computedName;
}
exports.functionName = functionName;
/**
 * @returns {boolean} - has the property been successfully defined
 */
function defineNameProp(obj, nameValue) {
    var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);
    /* istanbul ignore else -> will only run in old versions of node.js */
    if (utils_1.isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {
        Object.defineProperty(obj, NAME, {
            enumerable: false,
            configurable: true,
            writable: false,
            value: nameValue
        });
        return true;
    }
    /* istanbul ignore next -> will only run in old versions of node.js */
    return false;
}
exports.defineNameProp = defineNameProp;
/**
 * simple Hashtable between a string and some generic value
 * this should be removed once typescript supports ES6 style Hashtable
 */
var HashTable = /** @class */ (function () {
    function HashTable() {
        this._state = {};
    }
    HashTable.prototype.keys = function () {
        return utils_1.keys(this._state);
    };
    HashTable.prototype.values = function () {
        return utils_1.values(this._state);
    };
    HashTable.prototype.put = function (key, value) {
        this._state[key] = value;
    };
    HashTable.prototype.putAll = function (other) {
        this._state = utils_1.assign(this._state, other._state);
    };
    HashTable.prototype.get = function (key) {
        // To avoid edge case with a key called "hasOwnProperty" we need to perform the commented out check below
        // -> if (Object.prototype.hasOwnProperty.call(this._state, key)) { ... } <-
        // however this costs nearly 25% of the parser's runtime.
        // if someone decides to name their Parser class "hasOwnProperty" they deserve what they will get :)
        return this._state[key];
    };
    HashTable.prototype.containsKey = function (key) {
        return utils_1.has(this._state, key);
    };
    HashTable.prototype.clear = function () {
        this._state = {};
    };
    return HashTable;
}());
exports.HashTable = HashTable;
//# sourceMappingURL=lang_extensions.js.map

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var gast_public_1 = __webpack_require__(1);
var GAstVisitor = /** @class */ (function () {
    function GAstVisitor() {
    }
    GAstVisitor.prototype.visit = function (node) {
        /* istanbul ignore next */
        if (node instanceof gast_public_1.NonTerminal) {
            return this.visitNonTerminal(node);
        }
        else if (node instanceof gast_public_1.Flat) {
            return this.visitFlat(node);
        }
        else if (node instanceof gast_public_1.Option) {
            return this.visitOption(node);
        }
        else if (node instanceof gast_public_1.RepetitionMandatory) {
            return this.visitRepetitionMandatory(node);
        }
        else if (node instanceof gast_public_1.RepetitionMandatoryWithSeparator) {
            return this.visitRepetitionMandatoryWithSeparator(node);
        }
        else if (node instanceof gast_public_1.RepetitionWithSeparator) {
            return this.visitRepetitionWithSeparator(node);
        }
        else if (node instanceof gast_public_1.Repetition) {
            return this.visitRepetition(node);
        }
        else if (node instanceof gast_public_1.Alternation) {
            return this.visitAlternation(node);
        }
        else if (node instanceof gast_public_1.Terminal) {
            return this.visitTerminal(node);
        }
        else if (node instanceof gast_public_1.Rule) {
            return this.visitRule(node);
        }
        else {
            throw Error("non exhaustive match");
        }
    };
    GAstVisitor.prototype.visitNonTerminal = function (node) { };
    GAstVisitor.prototype.visitFlat = function (node) { };
    GAstVisitor.prototype.visitOption = function (node) { };
    GAstVisitor.prototype.visitRepetition = function (node) { };
    GAstVisitor.prototype.visitRepetitionMandatory = function (node) { };
    GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) { };
    GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) { };
    GAstVisitor.prototype.visitAlternation = function (node) { };
    GAstVisitor.prototype.visitTerminal = function (node) { };
    GAstVisitor.prototype.visitRule = function (node) { };
    return GAstVisitor;
}());
exports.GAstVisitor = GAstVisitor;
//# sourceMappingURL=gast_visitor_public.js.map

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var parser_public_1 = __webpack_require__(27);
var lexer_public_1 = __webpack_require__(28);
var tokens_public_1 = __webpack_require__(3);
var exceptions_public_1 = __webpack_require__(36);
var version_1 = __webpack_require__(29);
var errors_public_1 = __webpack_require__(24);
var render_public_1 = __webpack_require__(53);
var gast_visitor_public_1 = __webpack_require__(6);
var gast_public_1 = __webpack_require__(1);
var gast_resolver_public_1 = __webpack_require__(38);
var generate_public_1 = __webpack_require__(55);
/**
 * defines the public API of
 * changes here may require major version change. (semVer)
 */
var API = {};
// semantic version
API.VERSION = version_1.VERSION;
// runtime API
API.Parser = parser_public_1.Parser;
API.ParserDefinitionErrorType = parser_public_1.ParserDefinitionErrorType;
API.Lexer = lexer_public_1.Lexer;
API.LexerDefinitionErrorType = lexer_public_1.LexerDefinitionErrorType;
API.EOF = tokens_public_1.EOF;
// Tokens utilities
API.tokenName = tokens_public_1.tokenName;
API.tokenLabel = tokens_public_1.tokenLabel;
API.tokenMatcher = tokens_public_1.tokenMatcher;
API.createToken = tokens_public_1.createToken;
API.createTokenInstance = tokens_public_1.createTokenInstance;
//
// // Other Utilities
API.EMPTY_ALT = parser_public_1.EMPTY_ALT;
API.defaultParserErrorProvider = errors_public_1.defaultParserErrorProvider;
API.isRecognitionException = exceptions_public_1.isRecognitionException;
API.EarlyExitException = exceptions_public_1.EarlyExitException;
API.MismatchedTokenException = exceptions_public_1.MismatchedTokenException;
API.NotAllInputParsedException = exceptions_public_1.NotAllInputParsedException;
API.NoViableAltException = exceptions_public_1.NoViableAltException;
//
// // grammar reflection API
API.Flat = gast_public_1.Flat;
API.Repetition = gast_public_1.Repetition;
API.RepetitionWithSeparator = gast_public_1.RepetitionWithSeparator;
API.RepetitionMandatory = gast_public_1.RepetitionMandatory;
API.RepetitionMandatoryWithSeparator = gast_public_1.RepetitionMandatoryWithSeparator;
API.Option = gast_public_1.Option;
API.Alternation = gast_public_1.Alternation;
API.NonTerminal = gast_public_1.NonTerminal;
API.Terminal = gast_public_1.Terminal;
API.Rule = gast_public_1.Rule;
// // GAST Utilities
API.GAstVisitor = gast_visitor_public_1.GAstVisitor;
API.serializeGrammar = gast_public_1.serializeGrammar;
API.serializeProduction = gast_public_1.serializeProduction;
API.resolveGrammar = gast_resolver_public_1.resolveGrammar;
API.defaultGrammarResolverErrorProvider = errors_public_1.defaultGrammarResolverErrorProvider;
API.validateGrammar = gast_resolver_public_1.validateGrammar;
API.defaultGrammarValidatorErrorProvider = errors_public_1.defaultGrammarValidatorErrorProvider;
API.assignOccurrenceIndices = gast_resolver_public_1.assignOccurrenceIndices;
/* istanbul ignore next */
API.clearCache = function () {
    console.warn("The clearCache function was 'soft' removed from the Chevrotain API." +
        "\n\t It performs no action other than printing this message." +
        "\n\t Please avoid using it as it will be completely removed in the future");
};
API.createSyntaxDiagramsCode = render_public_1.createSyntaxDiagramsCode;
API.generateParserFactory = generate_public_1.generateParserFactory;
API.generateParserModule = generate_public_1.generateParserModule;
module.exports = API;
//# sourceMappingURL=api.js.map

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils = __webpack_require__(0);
var utils_1 = __webpack_require__(0);
var parser_public_1 = __webpack_require__(27);
var gast_1 = __webpack_require__(9);
var tokens_public_1 = __webpack_require__(3);
var lookahead_1 = __webpack_require__(40);
var cst_1 = __webpack_require__(35);
var interpreter_1 = __webpack_require__(25);
var gast_public_1 = __webpack_require__(1);
var gast_visitor_public_1 = __webpack_require__(6);
function validateGrammar(topLevels, maxLookahead, tokenTypes, ignoredIssues, errMsgProvider, grammarName) {
    var duplicateErrors = utils.map(topLevels, function (currTopLevel) {
        return validateDuplicateProductions(currTopLevel, errMsgProvider);
    });
    var leftRecursionErrors = utils.map(topLevels, function (currTopRule) {
        return validateNoLeftRecursion(currTopRule, currTopRule, errMsgProvider);
    });
    var emptyAltErrors = [];
    var ambiguousAltsErrors = [];
    // left recursion could cause infinite loops in the following validations.
    // It is safest to first have the user fix the left recursion errors first and only then examine Further issues.
    if (utils_1.every(leftRecursionErrors, utils_1.isEmpty)) {
        emptyAltErrors = utils_1.map(topLevels, function (currTopRule) {
            return validateEmptyOrAlternative(currTopRule, errMsgProvider);
        });
        ambiguousAltsErrors = utils_1.map(topLevels, function (currTopRule) {
            return validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, ignoredIssues, errMsgProvider);
        });
    }
    var termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);
    var tokenNameErrors = utils.map(tokenTypes, function (currTokType) {
        return validateTokenName(currTokType, errMsgProvider);
    });
    var nestedRulesNameErrors = validateNestedRulesNames(topLevels, errMsgProvider);
    var nestedRulesDuplicateErrors = validateDuplicateNestedRules(topLevels, errMsgProvider);
    var emptyRepetitionErrors = validateSomeNonEmptyLookaheadPath(topLevels, maxLookahead, errMsgProvider);
    var tooManyAltsErrors = utils_1.map(topLevels, function (curRule) {
        return validateTooManyAlts(curRule, errMsgProvider);
    });
    var ruleNameErrors = utils_1.map(topLevels, function (curRule) {
        return validateRuleName(curRule, errMsgProvider);
    });
    var duplicateRulesError = utils_1.map(topLevels, function (curRule) {
        return validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider);
    });
    return (utils.flatten(duplicateErrors.concat(tokenNameErrors, nestedRulesNameErrors, nestedRulesDuplicateErrors, emptyRepetitionErrors, leftRecursionErrors, emptyAltErrors, ambiguousAltsErrors, termsNamespaceConflictErrors, tooManyAltsErrors, ruleNameErrors, duplicateRulesError)));
}
exports.validateGrammar = validateGrammar;
function validateNestedRulesNames(topLevels, errMsgProvider) {
    var result = [];
    utils_1.forEach(topLevels, function (curTopLevel) {
        var namedCollectorVisitor = new cst_1.NamedDSLMethodsCollectorVisitor("");
        curTopLevel.accept(namedCollectorVisitor);
        var nestedProds = utils_1.map(namedCollectorVisitor.result, function (currItem) { return currItem.orgProd; });
        result.push(utils_1.map(nestedProds, function (currNestedProd) {
            return validateNestedRuleName(curTopLevel, currNestedProd, errMsgProvider);
        }));
    });
    return utils_1.flatten(result);
}
function validateDuplicateProductions(topLevelRule, errMsgProvider) {
    var collectorVisitor = new OccurrenceValidationCollector();
    topLevelRule.accept(collectorVisitor);
    var allRuleProductions = collectorVisitor.allProductions;
    var productionGroups = utils.groupBy(allRuleProductions, identifyProductionForDuplicates);
    var duplicates = utils.pick(productionGroups, function (currGroup) {
        return currGroup.length > 1;
    });
    var errors = utils.map(utils.values(duplicates), function (currDuplicates) {
        var firstProd = utils.first(currDuplicates);
        var msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);
        var dslName = gast_1.getProductionDslName(firstProd);
        var defError = {
            message: msg,
            type: parser_public_1.ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,
            ruleName: topLevelRule.name,
            dslName: dslName,
            occurrence: firstProd.idx
        };
        var param = getExtraProductionArgument(firstProd);
        if (param) {
            defError.parameter = param;
        }
        return defError;
    });
    return errors;
}
function identifyProductionForDuplicates(prod) {
    return gast_1.getProductionDslName(prod) + "_#_" + prod.idx + "_#_" + getExtraProductionArgument(prod);
}
exports.identifyProductionForDuplicates = identifyProductionForDuplicates;
function getExtraProductionArgument(prod) {
    if (prod instanceof gast_public_1.Terminal) {
        return tokens_public_1.tokenName(prod.terminalType);
    }
    else if (prod instanceof gast_public_1.NonTerminal) {
        return prod.nonTerminalName;
    }
    else {
        return "";
    }
}
var OccurrenceValidationCollector = /** @class */ (function (_super) {
    __extends(OccurrenceValidationCollector, _super);
    function OccurrenceValidationCollector() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.allProductions = [];
        return _this;
    }
    OccurrenceValidationCollector.prototype.visitNonTerminal = function (subrule) {
        this.allProductions.push(subrule);
    };
    OccurrenceValidationCollector.prototype.visitOption = function (option) {
        this.allProductions.push(option);
    };
    OccurrenceValidationCollector.prototype.visitRepetitionWithSeparator = function (manySep) {
        this.allProductions.push(manySep);
    };
    OccurrenceValidationCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {
        this.allProductions.push(atLeastOne);
    };
    OccurrenceValidationCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {
        this.allProductions.push(atLeastOneSep);
    };
    OccurrenceValidationCollector.prototype.visitRepetition = function (many) {
        this.allProductions.push(many);
    };
    OccurrenceValidationCollector.prototype.visitAlternation = function (or) {
        this.allProductions.push(or);
    };
    OccurrenceValidationCollector.prototype.visitTerminal = function (terminal) {
        this.allProductions.push(terminal);
    };
    return OccurrenceValidationCollector;
}(gast_visitor_public_1.GAstVisitor));
exports.OccurrenceValidationCollector = OccurrenceValidationCollector;
exports.validTermsPattern = /^[a-zA-Z_]\w*$/;
exports.validNestedRuleName = new RegExp(exports.validTermsPattern.source.replace("^", "^\\$"));
function validateRuleName(rule, errMsgProvider) {
    var errors = [];
    var ruleName = rule.name;
    if (!ruleName.match(exports.validTermsPattern)) {
        errors.push({
            message: errMsgProvider.buildInvalidRuleNameError({
                topLevelRule: rule,
                expectedPattern: exports.validTermsPattern
            }),
            type: parser_public_1.ParserDefinitionErrorType.INVALID_RULE_NAME,
            ruleName: ruleName
        });
    }
    return errors;
}
exports.validateRuleName = validateRuleName;
function validateNestedRuleName(topLevel, nestedProd, errMsgProvider) {
    var errors = [];
    var errMsg;
    if (!nestedProd.name.match(exports.validNestedRuleName)) {
        errMsg = errMsgProvider.buildInvalidNestedRuleNameError(topLevel, nestedProd);
        errors.push({
            message: errMsg,
            type: parser_public_1.ParserDefinitionErrorType.INVALID_NESTED_RULE_NAME,
            ruleName: topLevel.name
        });
    }
    return errors;
}
exports.validateNestedRuleName = validateNestedRuleName;
function validateTokenName(tokenType, errMsgProvider) {
    var errors = [];
    var tokTypeName = tokens_public_1.tokenName(tokenType);
    if (!tokTypeName.match(exports.validTermsPattern)) {
        errors.push({
            message: errMsgProvider.buildTokenNameError({
                tokenType: tokenType,
                expectedPattern: exports.validTermsPattern
            }),
            type: parser_public_1.ParserDefinitionErrorType.INVALID_TOKEN_NAME
        });
    }
    return errors;
}
exports.validateTokenName = validateTokenName;
function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {
    var errors = [];
    var occurrences = utils_1.reduce(allRules, function (result, curRule) {
        if (curRule.name === rule.name) {
            return result + 1;
        }
        return result;
    }, 0);
    if (occurrences > 1) {
        var errMsg = errMsgProvider.buildDuplicateRuleNameError({
            topLevelRule: rule,
            grammarName: className
        });
        errors.push({
            message: errMsg,
            type: parser_public_1.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,
            ruleName: rule.name
        });
    }
    return errors;
}
exports.validateRuleDoesNotAlreadyExist = validateRuleDoesNotAlreadyExist;
// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?
// This is not part of the IGrammarErrorProvider because the validation cannot be performed on
// The grammar structure, only at runtime.
function validateRuleIsOverridden(ruleName, definedRulesNames, className) {
    var errors = [];
    var errMsg;
    if (!utils.contains(definedRulesNames, ruleName)) {
        errMsg =
            "Invalid rule override, rule: ->" + ruleName + "<- cannot be overridden in the grammar: ->" + className + "<-" +
                "as it is not defined in any of the super grammars ";
        errors.push({
            message: errMsg,
            type: parser_public_1.ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,
            ruleName: ruleName
        });
    }
    return errors;
}
exports.validateRuleIsOverridden = validateRuleIsOverridden;
function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path) {
    if (path === void 0) { path = []; }
    var errors = [];
    var nextNonTerminals = getFirstNoneTerminal(currRule.definition);
    if (utils.isEmpty(nextNonTerminals)) {
        return [];
    }
    else {
        var ruleName = topRule.name;
        var foundLeftRecursion = utils.contains(nextNonTerminals, topRule);
        if (foundLeftRecursion) {
            errors.push({
                message: errMsgProvider.buildLeftRecursionError({
                    topLevelRule: topRule,
                    leftRecursionPath: path
                }),
                type: parser_public_1.ParserDefinitionErrorType.LEFT_RECURSION,
                ruleName: ruleName
            });
        }
        // we are only looking for cyclic paths leading back to the specific topRule
        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...
        var validNextSteps = utils.difference(nextNonTerminals, path.concat([topRule]));
        var errorsFromNextSteps = utils.map(validNextSteps, function (currRefRule) {
            var newPath = utils.cloneArr(path);
            newPath.push(currRefRule);
            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);
        });
        return errors.concat(utils.flatten(errorsFromNextSteps));
    }
}
exports.validateNoLeftRecursion = validateNoLeftRecursion;
function getFirstNoneTerminal(definition) {
    var result = [];
    if (utils.isEmpty(definition)) {
        return result;
    }
    var firstProd = utils.first(definition);
    /* istanbul ignore else */
    if (firstProd instanceof gast_public_1.NonTerminal) {
        result.push(firstProd.referencedRule);
    }
    else if (firstProd instanceof gast_public_1.Flat ||
        firstProd instanceof gast_public_1.Option ||
        firstProd instanceof gast_public_1.RepetitionMandatory ||
        firstProd instanceof gast_public_1.RepetitionMandatoryWithSeparator ||
        firstProd instanceof gast_public_1.RepetitionWithSeparator ||
        firstProd instanceof gast_public_1.Repetition) {
        result = result.concat(getFirstNoneTerminal(firstProd.definition));
    }
    else if (firstProd instanceof gast_public_1.Alternation) {
        // each sub definition in alternation is a FLAT
        result = utils.flatten(utils.map(firstProd.definition, function (currSubDef) {
            return getFirstNoneTerminal(currSubDef.definition);
        }));
    }
    else if (firstProd instanceof gast_public_1.Terminal) {
        // nothing to see, move along
    }
    else {
        throw Error("non exhaustive match");
    }
    var isFirstOptional = gast_1.isOptionalProd(firstProd);
    var hasMore = definition.length > 1;
    if (isFirstOptional && hasMore) {
        var rest = utils.drop(definition);
        return result.concat(getFirstNoneTerminal(rest));
    }
    else {
        return result;
    }
}
exports.getFirstNoneTerminal = getFirstNoneTerminal;
var OrCollector = /** @class */ (function (_super) {
    __extends(OrCollector, _super);
    function OrCollector() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.alternations = [];
        return _this;
    }
    OrCollector.prototype.visitAlternation = function (node) {
        this.alternations.push(node);
    };
    return OrCollector;
}(gast_visitor_public_1.GAstVisitor));
function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {
    var orCollector = new OrCollector();
    topLevelRule.accept(orCollector);
    var ors = orCollector.alternations;
    var errors = utils.reduce(ors, function (errors, currOr) {
        var exceptLast = utils.dropRight(currOr.definition);
        var currErrors = utils.map(exceptLast, function (currAlternative, currAltIdx) {
            var possibleFirstInAlt = interpreter_1.nextPossibleTokensAfter([currAlternative], [], null, 1);
            if (utils.isEmpty(possibleFirstInAlt)) {
                return {
                    message: errMsgProvider.buildEmptyAlternationError({
                        topLevelRule: topLevelRule,
                        alternation: currOr,
                        emptyChoiceIdx: currAltIdx
                    }),
                    type: parser_public_1.ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,
                    ruleName: topLevelRule.name,
                    occurrence: currOr.idx,
                    alternative: currAltIdx + 1
                };
            }
            else {
                return null;
            }
        });
        return errors.concat(utils.compact(currErrors));
    }, []);
    return errors;
}
exports.validateEmptyOrAlternative = validateEmptyOrAlternative;
function validateAmbiguousAlternationAlternatives(topLevelRule, maxLookahead, ignoredIssues, errMsgProvider) {
    var orCollector = new OrCollector();
    topLevelRule.accept(orCollector);
    var ors = orCollector.alternations;
    var ignoredIssuesForCurrentRule = ignoredIssues[topLevelRule.name];
    if (ignoredIssuesForCurrentRule) {
        ors = utils_1.reject(ors, function (currOr) {
            return ignoredIssuesForCurrentRule[gast_1.getProductionDslName(currOr) +
                (currOr.idx === 0 ? "" : currOr.idx)];
        });
    }
    var errors = utils.reduce(ors, function (result, currOr) {
        var currOccurrence = currOr.idx;
        var alternatives = lookahead_1.getLookaheadPathsForOr(currOccurrence, topLevelRule, maxLookahead);
        var altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);
        var altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);
        return result.concat(altsAmbiguityErrors, altsPrefixAmbiguityErrors);
    }, []);
    return errors;
}
exports.validateAmbiguousAlternationAlternatives = validateAmbiguousAlternationAlternatives;
var RepetionCollector = /** @class */ (function (_super) {
    __extends(RepetionCollector, _super);
    function RepetionCollector() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.allProductions = [];
        return _this;
    }
    RepetionCollector.prototype.visitRepetitionWithSeparator = function (manySep) {
        this.allProductions.push(manySep);
    };
    RepetionCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {
        this.allProductions.push(atLeastOne);
    };
    RepetionCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {
        this.allProductions.push(atLeastOneSep);
    };
    RepetionCollector.prototype.visitRepetition = function (many) {
        this.allProductions.push(many);
    };
    return RepetionCollector;
}(gast_visitor_public_1.GAstVisitor));
exports.RepetionCollector = RepetionCollector;
function validateTooManyAlts(topLevelRule, errMsgProvider) {
    var orCollector = new OrCollector();
    topLevelRule.accept(orCollector);
    var ors = orCollector.alternations;
    var errors = utils.reduce(ors, function (errors, currOr) {
        if (currOr.definition.length > 255) {
            errors.push({
                message: errMsgProvider.buildTooManyAlternativesError({
                    topLevelRule: topLevelRule,
                    alternation: currOr
                }),
                type: parser_public_1.ParserDefinitionErrorType.TOO_MANY_ALTS,
                ruleName: topLevelRule.name,
                occurrence: currOr.idx
            });
        }
        return errors;
    }, []);
    return errors;
}
exports.validateTooManyAlts = validateTooManyAlts;
function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {
    var errors = [];
    utils_1.forEach(topLevelRules, function (currTopRule) {
        var collectorVisitor = new RepetionCollector();
        currTopRule.accept(collectorVisitor);
        var allRuleProductions = collectorVisitor.allProductions;
        utils_1.forEach(allRuleProductions, function (currProd) {
            var prodType = lookahead_1.getProdType(currProd);
            var currOccurrence = currProd.idx;
            var paths = lookahead_1.getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, maxLookahead);
            var pathsInsideProduction = paths[0];
            if (utils_1.isEmpty(utils_1.flatten(pathsInsideProduction))) {
                var errMsg = errMsgProvider.buildEmptyRepetitionError({
                    topLevelRule: currTopRule,
                    repetition: currProd
                });
                errors.push({
                    message: errMsg,
                    type: parser_public_1.ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,
                    ruleName: currTopRule.name
                });
            }
        });
    });
    return errors;
}
exports.validateSomeNonEmptyLookaheadPath = validateSomeNonEmptyLookaheadPath;
function checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {
    var foundAmbiguousPaths = [];
    var identicalAmbiguities = utils_1.reduce(alternatives, function (result, currAlt, currAltIdx) {
        utils_1.forEach(currAlt, function (currPath) {
            var altsCurrPathAppearsIn = [currAltIdx];
            utils_1.forEach(alternatives, function (currOtherAlt, currOtherAltIdx) {
                if (currAltIdx !== currOtherAltIdx &&
                    lookahead_1.containsPath(currOtherAlt, currPath)) {
                    altsCurrPathAppearsIn.push(currOtherAltIdx);
                }
            });
            if (altsCurrPathAppearsIn.length > 1 &&
                !lookahead_1.containsPath(foundAmbiguousPaths, currPath)) {
                foundAmbiguousPaths.push(currPath);
                result.push({
                    alts: altsCurrPathAppearsIn,
                    path: currPath
                });
            }
        });
        return result;
    }, []);
    var currErrors = utils.map(identicalAmbiguities, function (currAmbDescriptor) {
        var ambgIndices = utils_1.map(currAmbDescriptor.alts, function (currAltIdx) { return currAltIdx + 1; });
        var currMessage = errMsgProvider.buildAlternationAmbiguityError({
            topLevelRule: rule,
            alternation: alternation,
            ambiguityIndices: ambgIndices,
            prefixPath: currAmbDescriptor.path
        });
        return {
            message: currMessage,
            type: parser_public_1.ParserDefinitionErrorType.AMBIGUOUS_ALTS,
            ruleName: rule.name,
            occurrence: alternation.idx,
            alternatives: [currAmbDescriptor.alts]
        };
    });
    return currErrors;
}
function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {
    var errors = [];
    // flatten
    var pathsAndIndices = utils_1.reduce(alternatives, function (result, currAlt, idx) {
        var currPathsAndIdx = utils_1.map(currAlt, function (currPath) {
            return { idx: idx, path: currPath };
        });
        return result.concat(currPathsAndIdx);
    }, []);
    utils_1.forEach(pathsAndIndices, function (currPathAndIdx) {
        var targetIdx = currPathAndIdx.idx;
        var targetPath = currPathAndIdx.path;
        var prefixAmbiguitiesPathsAndIndices = utils_1.findAll(pathsAndIndices, function (searchPathAndIdx) {
            // prefix ambiguity can only be created from lower idx (higher priority) path
            return (searchPathAndIdx.idx < targetIdx &&
                // checking for strict prefix because identical lookaheads
                // will be be detected using a different validation.
                lookahead_1.isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));
        });
        var currPathPrefixErrors = utils_1.map(prefixAmbiguitiesPathsAndIndices, function (currAmbPathAndIdx) {
            var ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];
            var occurrence = alternation.idx === 0 ? "" : alternation.idx;
            var message = errMsgProvider.buildAlternationPrefixAmbiguityError({
                topLevelRule: rule,
                alternation: alternation,
                ambiguityIndices: ambgIndices,
                prefixPath: currAmbPathAndIdx.path
            });
            return {
                message: message,
                type: parser_public_1.ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,
                ruleName: rule.name,
                occurrence: occurrence,
                alternatives: ambgIndices
            };
        });
        errors = errors.concat(currPathPrefixErrors);
    });
    return errors;
}
function checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {
    var errors = [];
    var tokenNames = utils_1.map(tokenTypes, function (currToken) { return tokens_public_1.tokenName(currToken); });
    utils_1.forEach(topLevels, function (currRule) {
        var currRuleName = currRule.name;
        if (utils_1.contains(tokenNames, currRuleName)) {
            var errMsg = errMsgProvider.buildNamespaceConflictError(currRule);
            errors.push({
                message: errMsg,
                type: parser_public_1.ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,
                ruleName: currRuleName
            });
        }
    });
    return errors;
}
function validateDuplicateNestedRules(topLevelRules, errMsgProvider) {
    var errors = [];
    utils_1.forEach(topLevelRules, function (currTopRule) {
        var namedCollectorVisitor = new cst_1.NamedDSLMethodsCollectorVisitor("");
        currTopRule.accept(namedCollectorVisitor);
        var prodsByGroup = utils_1.groupBy(namedCollectorVisitor.result, function (item) { return item.name; });
        var duplicates = utils_1.pick(prodsByGroup, function (currGroup) {
            return currGroup.length > 1;
        });
        utils_1.forEach(utils_1.values(duplicates), function (currDupGroup) {
            var currDupProds = utils_1.map(currDupGroup, function (dupGroup) { return dupGroup.orgProd; });
            var errMsg = errMsgProvider.buildDuplicateNestedRuleNameError(currTopRule, currDupProds);
            errors.push({
                message: errMsg,
                type: parser_public_1.ParserDefinitionErrorType.DUPLICATE_NESTED_NAME,
                ruleName: currTopRule.name
            });
        });
    });
    return errors;
}
//# sourceMappingURL=checks.js.map

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var gast_public_1 = __webpack_require__(1);
var gast_visitor_public_1 = __webpack_require__(6);
var tokens_public_1 = __webpack_require__(3);
function isSequenceProd(prod) {
    return (prod instanceof gast_public_1.Flat ||
        prod instanceof gast_public_1.Option ||
        prod instanceof gast_public_1.Repetition ||
        prod instanceof gast_public_1.RepetitionMandatory ||
        prod instanceof gast_public_1.RepetitionMandatoryWithSeparator ||
        prod instanceof gast_public_1.RepetitionWithSeparator ||
        prod instanceof gast_public_1.Terminal ||
        prod instanceof gast_public_1.Rule);
}
exports.isSequenceProd = isSequenceProd;
function isOptionalProd(prod, alreadyVisited) {
    if (alreadyVisited === void 0) { alreadyVisited = []; }
    var isDirectlyOptional = prod instanceof gast_public_1.Option ||
        prod instanceof gast_public_1.Repetition ||
        prod instanceof gast_public_1.RepetitionWithSeparator;
    if (isDirectlyOptional) {
        return true;
    }
    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another
    // empty optional top rule
    // may be indirectly optional ((A?B?C?) | (D?E?F?))
    if (prod instanceof gast_public_1.Alternation) {
        // for OR its enough for just one of the alternatives to be optional
        return utils_1.some(prod.definition, function (subProd) {
            return isOptionalProd(subProd, alreadyVisited);
        });
    }
    else if (prod instanceof gast_public_1.NonTerminal && utils_1.contains(alreadyVisited, prod)) {
        // avoiding stack overflow due to infinite recursion
        return false;
    }
    else if (prod instanceof gast_public_1.AbstractProduction) {
        if (prod instanceof gast_public_1.NonTerminal) {
            alreadyVisited.push(prod);
        }
        return utils_1.every(prod.definition, function (subProd) {
            return isOptionalProd(subProd, alreadyVisited);
        });
    }
    else {
        return false;
    }
}
exports.isOptionalProd = isOptionalProd;
function isBranchingProd(prod) {
    return prod instanceof gast_public_1.Alternation;
}
exports.isBranchingProd = isBranchingProd;
function getProductionDslName(prod) {
    /* istanbul ignore else */
    if (prod instanceof gast_public_1.NonTerminal) {
        return "SUBRULE";
    }
    else if (prod instanceof gast_public_1.Option) {
        return "OPTION";
    }
    else if (prod instanceof gast_public_1.Alternation) {
        return "OR";
    }
    else if (prod instanceof gast_public_1.RepetitionMandatory) {
        return "AT_LEAST_ONE";
    }
    else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {
        return "AT_LEAST_ONE_SEP";
    }
    else if (prod instanceof gast_public_1.RepetitionWithSeparator) {
        return "MANY_SEP";
    }
    else if (prod instanceof gast_public_1.Repetition) {
        return "MANY";
    }
    else if (prod instanceof gast_public_1.Terminal) {
        return "CONSUME";
    }
    else {
        throw Error("non exhaustive match");
    }
}
exports.getProductionDslName = getProductionDslName;
var DslMethodsCollectorVisitor = /** @class */ (function (_super) {
    __extends(DslMethodsCollectorVisitor, _super);
    function DslMethodsCollectorVisitor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // A minus is never valid in an identifier name
        _this.separator = "-";
        _this.dslMethods = {
            option: [],
            alternation: [],
            repetition: [],
            repetitionWithSeparator: [],
            repetitionMandatory: [],
            repetitionMandatoryWithSeparator: []
        };
        return _this;
    }
    DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {
        var key = tokens_public_1.tokenName(terminal.terminalType) + this.separator + "Terminal";
        if (!utils_1.has(this.dslMethods, key)) {
            this.dslMethods[key] = [];
        }
        this.dslMethods[key].push(terminal);
    };
    DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {
        var key = subrule.nonTerminalName + this.separator + "Terminal";
        if (!utils_1.has(this.dslMethods, key)) {
            this.dslMethods[key] = [];
        }
        this.dslMethods[key].push(subrule);
    };
    DslMethodsCollectorVisitor.prototype.visitOption = function (option) {
        this.dslMethods.option.push(option);
    };
    DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {
        this.dslMethods.repetitionWithSeparator.push(manySep);
    };
    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {
        this.dslMethods.repetitionMandatory.push(atLeastOne);
    };
    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {
        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);
    };
    DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {
        this.dslMethods.repetition.push(many);
    };
    DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {
        this.dslMethods.alternation.push(or);
    };
    return DslMethodsCollectorVisitor;
}(gast_visitor_public_1.GAstVisitor));
exports.DslMethodsCollectorVisitor = DslMethodsCollectorVisitor;
//# sourceMappingURL=gast.js.map

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var lang_extensions_1 = __webpack_require__(5);
var tokens_public_1 = __webpack_require__(3);
function tokenStructuredMatcher(tokInstance, tokConstructor) {
    var instanceType = tokInstance.tokenTypeIdx;
    if (instanceType === tokConstructor.tokenTypeIdx) {
        return true;
    }
    else {
        return (tokConstructor.isParent === true &&
            tokConstructor.categoryMatchesMap[instanceType] === true);
    }
}
exports.tokenStructuredMatcher = tokenStructuredMatcher;
// Optimized tokenMatcher in case our grammar does not use token categories
// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead
function tokenStructuredMatcherNoCategories(token, tokType) {
    return token.tokenTypeIdx === tokType.tokenTypeIdx;
}
exports.tokenStructuredMatcherNoCategories = tokenStructuredMatcherNoCategories;
exports.tokenShortNameIdx = 1;
exports.tokenIdxToClass = new lang_extensions_1.HashTable();
function augmentTokenTypes(tokenTypes) {
    // collect the parent Token Types as well.
    var tokenTypesAndParents = expandCategories(tokenTypes);
    // add required tokenType and categoryMatches properties
    assignTokenDefaultProps(tokenTypesAndParents);
    // fill up the categoryMatches
    assignCategoriesMapProp(tokenTypesAndParents);
    assignCategoriesTokensProp(tokenTypesAndParents);
    utils_1.forEach(tokenTypesAndParents, function (tokType) {
        tokType.isParent = tokType.categoryMatches.length > 0;
    });
}
exports.augmentTokenTypes = augmentTokenTypes;
function expandCategories(tokenTypes) {
    var result = utils_1.cloneArr(tokenTypes);
    var categories = tokenTypes;
    var searching = true;
    while (searching) {
        categories = utils_1.compact(utils_1.flatten(utils_1.map(categories, function (currTokType) { return currTokType.CATEGORIES; })));
        var newCategories = utils_1.difference(categories, result);
        result = result.concat(newCategories);
        if (utils_1.isEmpty(newCategories)) {
            searching = false;
        }
        else {
            categories = newCategories;
        }
    }
    return result;
}
exports.expandCategories = expandCategories;
function assignTokenDefaultProps(tokenTypes) {
    utils_1.forEach(tokenTypes, function (currTokType) {
        if (!hasShortKeyProperty(currTokType)) {
            exports.tokenIdxToClass.put(exports.tokenShortNameIdx, currTokType);
            currTokType.tokenTypeIdx = exports.tokenShortNameIdx++;
        }
        // CATEGORIES? : TokenType | TokenType[]
        if (hasCategoriesProperty(currTokType) &&
            !utils_1.isArray(currTokType.CATEGORIES)
        // &&
        // !isUndefined(currTokType.CATEGORIES.PATTERN)
        ) {
            currTokType.CATEGORIES = [currTokType.CATEGORIES];
        }
        if (!hasCategoriesProperty(currTokType)) {
            currTokType.CATEGORIES = [];
        }
        if (!hasExtendingTokensTypesProperty(currTokType)) {
            currTokType.categoryMatches = [];
        }
        if (!hasExtendingTokensTypesMapProperty(currTokType)) {
            currTokType.categoryMatchesMap = {};
        }
        if (!hasTokenNameProperty(currTokType)) {
            // saved for fast access during CST building.
            currTokType.tokenName = tokens_public_1.tokenName(currTokType);
        }
    });
}
exports.assignTokenDefaultProps = assignTokenDefaultProps;
function assignCategoriesTokensProp(tokenTypes) {
    utils_1.forEach(tokenTypes, function (currTokType) {
        // avoid duplications
        currTokType.categoryMatches = [];
        utils_1.forEach(currTokType.categoryMatchesMap, function (val, key) {
            currTokType.categoryMatches.push(exports.tokenIdxToClass.get(key).tokenTypeIdx);
        });
    });
}
exports.assignCategoriesTokensProp = assignCategoriesTokensProp;
function assignCategoriesMapProp(tokenTypes) {
    utils_1.forEach(tokenTypes, function (currTokType) {
        singleAssignCategoriesToksMap([], currTokType);
    });
}
exports.assignCategoriesMapProp = assignCategoriesMapProp;
function singleAssignCategoriesToksMap(path, nextNode) {
    utils_1.forEach(path, function (pathNode) {
        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;
    });
    utils_1.forEach(nextNode.CATEGORIES, function (nextCategory) {
        var newPath = path.concat(nextNode);
        // avoids infinite loops due to cyclic categories.
        if (!utils_1.contains(newPath, nextCategory)) {
            singleAssignCategoriesToksMap(newPath, nextCategory);
        }
    });
}
exports.singleAssignCategoriesToksMap = singleAssignCategoriesToksMap;
function hasShortKeyProperty(tokType) {
    return utils_1.has(tokType, "tokenTypeIdx");
}
exports.hasShortKeyProperty = hasShortKeyProperty;
function hasCategoriesProperty(tokType) {
    return utils_1.has(tokType, "CATEGORIES");
}
exports.hasCategoriesProperty = hasCategoriesProperty;
function hasExtendingTokensTypesProperty(tokType) {
    return utils_1.has(tokType, "categoryMatches");
}
exports.hasExtendingTokensTypesProperty = hasExtendingTokensTypesProperty;
function hasExtendingTokensTypesMapProperty(tokType) {
    return utils_1.has(tokType, "categoryMatchesMap");
}
exports.hasExtendingTokensTypesMapProperty = hasExtendingTokensTypesMapProperty;
function hasTokenNameProperty(tokType) {
    return utils_1.has(tokType, "tokenName");
}
exports.hasTokenNameProperty = hasTokenNameProperty;
function isTokenType(tokType) {
    return utils_1.has(tokType, "tokenTypeIdx");
}
exports.isTokenType = isTokenType;
//# sourceMappingURL=tokens.js.map

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLCData, XMLNode,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLNode = __webpack_require__(2);

  module.exports = XMLCData = (function(superClass) {
    extend(XMLCData, superClass);

    function XMLCData(parent, text) {
      XMLCData.__super__.constructor.call(this, parent);
      if (text == null) {
        throw new Error("Missing CDATA text");
      }
      this.text = this.stringify.cdata(text);
    }

    XMLCData.prototype.clone = function() {
      return Object.create(this);
    };

    XMLCData.prototype.toString = function(options) {
      return this.options.writer.set(options).cdata(this);
    };

    return XMLCData;

  })(XMLNode);

}).call(this);


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLComment, XMLNode,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLNode = __webpack_require__(2);

  module.exports = XMLComment = (function(superClass) {
    extend(XMLComment, superClass);

    function XMLComment(parent, text) {
      XMLComment.__super__.constructor.call(this, parent);
      if (text == null) {
        throw new Error("Missing comment text");
      }
      this.text = this.stringify.comment(text);
    }

    XMLComment.prototype.clone = function() {
      return Object.create(this);
    };

    XMLComment.prototype.toString = function(options) {
      return this.options.writer.set(options).comment(this);
    };

    return XMLComment;

  })(XMLNode);

}).call(this);


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLDTDAttList, XMLNode,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLNode = __webpack_require__(2);

  module.exports = XMLDTDAttList = (function(superClass) {
    extend(XMLDTDAttList, superClass);

    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {
      XMLDTDAttList.__super__.constructor.call(this, parent);
      if (elementName == null) {
        throw new Error("Missing DTD element name");
      }
      if (attributeName == null) {
        throw new Error("Missing DTD attribute name");
      }
      if (!attributeType) {
        throw new Error("Missing DTD attribute type");
      }
      if (!defaultValueType) {
        throw new Error("Missing DTD attribute default");
      }
      if (defaultValueType.indexOf('#') !== 0) {
        defaultValueType = '#' + defaultValueType;
      }
      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {
        throw new Error("Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT");
      }
      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {
        throw new Error("Default value only applies to #FIXED or #DEFAULT");
      }
      this.elementName = this.stringify.eleName(elementName);
      this.attributeName = this.stringify.attName(attributeName);
      this.attributeType = this.stringify.dtdAttType(attributeType);
      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);
      this.defaultValueType = defaultValueType;
    }

    XMLDTDAttList.prototype.toString = function(options) {
      return this.options.writer.set(options).dtdAttList(this);
    };

    return XMLDTDAttList;

  })(XMLNode);

}).call(this);


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLDTDElement, XMLNode,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLNode = __webpack_require__(2);

  module.exports = XMLDTDElement = (function(superClass) {
    extend(XMLDTDElement, superClass);

    function XMLDTDElement(parent, name, value) {
      XMLDTDElement.__super__.constructor.call(this, parent);
      if (name == null) {
        throw new Error("Missing DTD element name");
      }
      if (!value) {
        value = '(#PCDATA)';
      }
      if (Array.isArray(value)) {
        value = '(' + value.join(',') + ')';
      }
      this.name = this.stringify.eleName(name);
      this.value = this.stringify.dtdElementValue(value);
    }

    XMLDTDElement.prototype.toString = function(options) {
      return this.options.writer.set(options).dtdElement(this);
    };

    return XMLDTDElement;

  })(XMLNode);

}).call(this);


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLDTDEntity, XMLNode, isObject,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  isObject = __webpack_require__(4).isObject;

  XMLNode = __webpack_require__(2);

  module.exports = XMLDTDEntity = (function(superClass) {
    extend(XMLDTDEntity, superClass);

    function XMLDTDEntity(parent, pe, name, value) {
      XMLDTDEntity.__super__.constructor.call(this, parent);
      if (name == null) {
        throw new Error("Missing entity name");
      }
      if (value == null) {
        throw new Error("Missing entity value");
      }
      this.pe = !!pe;
      this.name = this.stringify.eleName(name);
      if (!isObject(value)) {
        this.value = this.stringify.dtdEntityValue(value);
      } else {
        if (!value.pubID && !value.sysID) {
          throw new Error("Public and/or system identifiers are required for an external entity");
        }
        if (value.pubID && !value.sysID) {
          throw new Error("System identifier is required for a public external entity");
        }
        if (value.pubID != null) {
          this.pubID = this.stringify.dtdPubID(value.pubID);
        }
        if (value.sysID != null) {
          this.sysID = this.stringify.dtdSysID(value.sysID);
        }
        if (value.nData != null) {
          this.nData = this.stringify.dtdNData(value.nData);
        }
        if (this.pe && this.nData) {
          throw new Error("Notation declaration is not allowed in a parameter entity");
        }
      }
    }

    XMLDTDEntity.prototype.toString = function(options) {
      return this.options.writer.set(options).dtdEntity(this);
    };

    return XMLDTDEntity;

  })(XMLNode);

}).call(this);


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLDTDNotation, XMLNode,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLNode = __webpack_require__(2);

  module.exports = XMLDTDNotation = (function(superClass) {
    extend(XMLDTDNotation, superClass);

    function XMLDTDNotation(parent, name, value) {
      XMLDTDNotation.__super__.constructor.call(this, parent);
      if (name == null) {
        throw new Error("Missing notation name");
      }
      if (!value.pubID && !value.sysID) {
        throw new Error("Public or system identifiers are required for an external entity");
      }
      this.name = this.stringify.eleName(name);
      if (value.pubID != null) {
        this.pubID = this.stringify.dtdPubID(value.pubID);
      }
      if (value.sysID != null) {
        this.sysID = this.stringify.dtdSysID(value.sysID);
      }
    }

    XMLDTDNotation.prototype.toString = function(options) {
      return this.options.writer.set(options).dtdNotation(this);
    };

    return XMLDTDNotation;

  })(XMLNode);

}).call(this);


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLDeclaration, XMLNode, isObject,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  isObject = __webpack_require__(4).isObject;

  XMLNode = __webpack_require__(2);

  module.exports = XMLDeclaration = (function(superClass) {
    extend(XMLDeclaration, superClass);

    function XMLDeclaration(parent, version, encoding, standalone) {
      var ref;
      XMLDeclaration.__super__.constructor.call(this, parent);
      if (isObject(version)) {
        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;
      }
      if (!version) {
        version = '1.0';
      }
      this.version = this.stringify.xmlVersion(version);
      if (encoding != null) {
        this.encoding = this.stringify.xmlEncoding(encoding);
      }
      if (standalone != null) {
        this.standalone = this.stringify.xmlStandalone(standalone);
      }
    }

    XMLDeclaration.prototype.toString = function(options) {
      return this.options.writer.set(options).declaration(this);
    };

    return XMLDeclaration;

  })(XMLNode);

}).call(this);


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  isObject = __webpack_require__(4).isObject;

  XMLNode = __webpack_require__(2);

  XMLDTDAttList = __webpack_require__(13);

  XMLDTDEntity = __webpack_require__(15);

  XMLDTDElement = __webpack_require__(14);

  XMLDTDNotation = __webpack_require__(16);

  module.exports = XMLDocType = (function(superClass) {
    extend(XMLDocType, superClass);

    function XMLDocType(parent, pubID, sysID) {
      var ref, ref1;
      XMLDocType.__super__.constructor.call(this, parent);
      this.documentObject = parent;
      if (isObject(pubID)) {
        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;
      }
      if (sysID == null) {
        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];
      }
      if (pubID != null) {
        this.pubID = this.stringify.dtdPubID(pubID);
      }
      if (sysID != null) {
        this.sysID = this.stringify.dtdSysID(sysID);
      }
    }

    XMLDocType.prototype.element = function(name, value) {
      var child;
      child = new XMLDTDElement(this, name, value);
      this.children.push(child);
      return this;
    };

    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {
      var child;
      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);
      this.children.push(child);
      return this;
    };

    XMLDocType.prototype.entity = function(name, value) {
      var child;
      child = new XMLDTDEntity(this, false, name, value);
      this.children.push(child);
      return this;
    };

    XMLDocType.prototype.pEntity = function(name, value) {
      var child;
      child = new XMLDTDEntity(this, true, name, value);
      this.children.push(child);
      return this;
    };

    XMLDocType.prototype.notation = function(name, value) {
      var child;
      child = new XMLDTDNotation(this, name, value);
      this.children.push(child);
      return this;
    };

    XMLDocType.prototype.toString = function(options) {
      return this.options.writer.set(options).docType(this);
    };

    XMLDocType.prototype.ele = function(name, value) {
      return this.element(name, value);
    };

    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {
      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);
    };

    XMLDocType.prototype.ent = function(name, value) {
      return this.entity(name, value);
    };

    XMLDocType.prototype.pent = function(name, value) {
      return this.pEntity(name, value);
    };

    XMLDocType.prototype.not = function(name, value) {
      return this.notation(name, value);
    };

    XMLDocType.prototype.up = function() {
      return this.root() || this.documentObject;
    };

    return XMLDocType;

  })(XMLNode);

}).call(this);


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = __webpack_require__(4), isObject = ref.isObject, isFunction = ref.isFunction;

  XMLNode = __webpack_require__(2);

  XMLAttribute = __webpack_require__(43);

  module.exports = XMLElement = (function(superClass) {
    extend(XMLElement, superClass);

    function XMLElement(parent, name, attributes) {
      XMLElement.__super__.constructor.call(this, parent);
      if (name == null) {
        throw new Error("Missing element name");
      }
      this.name = this.stringify.eleName(name);
      this.attributes = {};
      if (attributes != null) {
        this.attribute(attributes);
      }
      if (parent.isDocument) {
        this.isRoot = true;
        this.documentObject = parent;
        parent.rootObject = this;
      }
    }

    XMLElement.prototype.clone = function() {
      var att, attName, clonedSelf, ref1;
      clonedSelf = Object.create(this);
      if (clonedSelf.isRoot) {
        clonedSelf.documentObject = null;
      }
      clonedSelf.attributes = {};
      ref1 = this.attributes;
      for (attName in ref1) {
        if (!hasProp.call(ref1, attName)) continue;
        att = ref1[attName];
        clonedSelf.attributes[attName] = att.clone();
      }
      clonedSelf.children = [];
      this.children.forEach(function(child) {
        var clonedChild;
        clonedChild = child.clone();
        clonedChild.parent = clonedSelf;
        return clonedSelf.children.push(clonedChild);
      });
      return clonedSelf;
    };

    XMLElement.prototype.attribute = function(name, value) {
      var attName, attValue;
      if (name != null) {
        name = name.valueOf();
      }
      if (isObject(name)) {
        for (attName in name) {
          if (!hasProp.call(name, attName)) continue;
          attValue = name[attName];
          this.attribute(attName, attValue);
        }
      } else {
        if (isFunction(value)) {
          value = value.apply();
        }
        if (!this.options.skipNullAttributes || (value != null)) {
          this.attributes[name] = new XMLAttribute(this, name, value);
        }
      }
      return this;
    };

    XMLElement.prototype.removeAttribute = function(name) {
      var attName, i, len;
      if (name == null) {
        throw new Error("Missing attribute name");
      }
      name = name.valueOf();
      if (Array.isArray(name)) {
        for (i = 0, len = name.length; i < len; i++) {
          attName = name[i];
          delete this.attributes[attName];
        }
      } else {
        delete this.attributes[name];
      }
      return this;
    };

    XMLElement.prototype.toString = function(options) {
      return this.options.writer.set(options).element(this);
    };

    XMLElement.prototype.att = function(name, value) {
      return this.attribute(name, value);
    };

    XMLElement.prototype.a = function(name, value) {
      return this.attribute(name, value);
    };

    return XMLElement;

  })(XMLNode);

}).call(this);


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLNode, XMLProcessingInstruction,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLNode = __webpack_require__(2);

  module.exports = XMLProcessingInstruction = (function(superClass) {
    extend(XMLProcessingInstruction, superClass);

    function XMLProcessingInstruction(parent, target, value) {
      XMLProcessingInstruction.__super__.constructor.call(this, parent);
      if (target == null) {
        throw new Error("Missing instruction target");
      }
      this.target = this.stringify.insTarget(target);
      if (value) {
        this.value = this.stringify.insValue(value);
      }
    }

    XMLProcessingInstruction.prototype.clone = function() {
      return Object.create(this);
    };

    XMLProcessingInstruction.prototype.toString = function(options) {
      return this.options.writer.set(options).processingInstruction(this);
    };

    return XMLProcessingInstruction;

  })(XMLNode);

}).call(this);


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLNode, XMLRaw,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLNode = __webpack_require__(2);

  module.exports = XMLRaw = (function(superClass) {
    extend(XMLRaw, superClass);

    function XMLRaw(parent, text) {
      XMLRaw.__super__.constructor.call(this, parent);
      if (text == null) {
        throw new Error("Missing raw text");
      }
      this.value = this.stringify.raw(text);
    }

    XMLRaw.prototype.clone = function() {
      return Object.create(this);
    };

    XMLRaw.prototype.toString = function(options) {
      return this.options.writer.set(options).raw(this);
    };

    return XMLRaw;

  })(XMLNode);

}).call(this);


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLNode, XMLText,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLNode = __webpack_require__(2);

  module.exports = XMLText = (function(superClass) {
    extend(XMLText, superClass);

    function XMLText(parent, text) {
      XMLText.__super__.constructor.call(this, parent);
      if (text == null) {
        throw new Error("Missing element text");
      }
      this.value = this.stringify.eleText(text);
    }

    XMLText.prototype.clone = function() {
      return Object.create(this);
    };

    XMLText.prototype.toString = function(options) {
      return this.options.writer.set(options).text(this);
    };

    return XMLText;

  })(XMLNode);

}).call(this);


/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chevrotain__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chevrotain___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_chevrotain__);
/**
 * LNLexer + tokens.
 *
 * @file   This files defines the lexer and tokens for  scratch-LN.
 * @author Ellen Vanhove.
 */


//DO NOT FORGET TO ADD THE EXPORT WHEN COPY PASTING
//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\
const Label = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Label",
    pattern:
    //necessary to escape: [] {} () " ; \n # | @ \n and whitespace
    //this cannot contain :: and should not partially match ::
    //--> :(?!:) : not followed by another :
    // --> x(?!y) = negative lookahead (matches 'x' when it's not followed by 'y')

    //atleast one character
    // - a : followed by a not :  = (:(?!:))
    // - normal - not necessary to escape or whitespace - characters = [^\{\|\(\)\}\<\>\[\];\\"\n#@: \t]
    // - \ followed by any character or a newline = [^] not

    //no whitespace in the beginning or end -> will be skipped (OR allow whitespace with keywords?)
    //char (whitespace* char)*

        /((:(?!:))|[^\{\|\(\)\}\<\>\[\];\\"#@: \t\n]|\\[^])([ \t]*((:(?!:))|[^\{\|\(\)\}\<\>\[\];\\"\n#@: \t]|\\[^]))*/,

    line_breaks: true
});
/* harmony export (immutable) */ __webpack_exports__["Label"] = Label;


const ScratchLNComment = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "ScratchLNComment",
    pattern: __WEBPACK_IMPORTED_MODULE_0_chevrotain__["Lexer"].NA,
})
/* harmony export (immutable) */ __webpack_exports__["ScratchLNComment"] = ScratchLNComment;


const LineComment = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "LineComment",
    pattern: /\/\/[^\n]*[\n]?/,
    group: __WEBPACK_IMPORTED_MODULE_0_chevrotain__["Lexer"].SKIPPED,
    categories: [ScratchLNComment],
});
/* harmony export (immutable) */ __webpack_exports__["LineComment"] = LineComment;


const BlockComment = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "BlockComment",
    //between /**/
    //allowed to use * and / within text but not after each other
    //most chars = [^\*]
    //* followed by /  = /\*(?!\/))
    pattern: /\/\*([^\*]|\*(?!\/))*\*\//,
    group: __WEBPACK_IMPORTED_MODULE_0_chevrotain__["Lexer"].SKIPPED,
    categories: [ScratchLNComment],
    line_breaks: true
});
/* harmony export (immutable) */ __webpack_exports__["BlockComment"] = BlockComment;


const LCurlyBracket = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "LCurlyBracket",
    pattern: /{/
});
/* harmony export (immutable) */ __webpack_exports__["LCurlyBracket"] = LCurlyBracket;


const RCurlyBracket = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "RCurlyBracket",
    pattern: /}/
});
/* harmony export (immutable) */ __webpack_exports__["RCurlyBracket"] = RCurlyBracket;


const LRoundBracket = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "LRoundBracket",
    pattern: /\(/
});
/* harmony export (immutable) */ __webpack_exports__["LRoundBracket"] = LRoundBracket;


const RRoundBracket = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "RRoundBracket",
    pattern: /\)/
});
/* harmony export (immutable) */ __webpack_exports__["RRoundBracket"] = RRoundBracket;


const LAngleBracket = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "LAngleBracket",
    pattern: /</
});
/* harmony export (immutable) */ __webpack_exports__["LAngleBracket"] = LAngleBracket;


const RAngleBracket = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "RAngleBracket",
    pattern: />/
});
/* harmony export (immutable) */ __webpack_exports__["RAngleBracket"] = RAngleBracket;


const Literal = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Literal",
    pattern: __WEBPACK_IMPORTED_MODULE_0_chevrotain__["Lexer"].NA
});
/* harmony export (immutable) */ __webpack_exports__["Literal"] = Literal;


const StringLiteral = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "StringLiteral",
    //"char*" -> "char+" or ""
    //most characters = [^"]
    //escaped the " char =  \\"
    //cannot end with \ so must end with = [^\\"] or \\"
    //empty is allowed ""
    pattern: /"([^"\\]|\\.)*"/,
    categories: [Literal],
    line_breaks: true
});
/* harmony export (immutable) */ __webpack_exports__["StringLiteral"] = StringLiteral;


const NumberLiteral = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "NumberLiteral",
    pattern: /-?(\d+)(\.\d+)?/,
    categories: [Literal,Label],
    longer_alt: Label,
});
/* harmony export (immutable) */ __webpack_exports__["NumberLiteral"] = NumberLiteral;


const ColorLiteral = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "ColorLiteral",
    //first the 6 , otherwise only 3 will be matched
    pattern: /#([0-9a-f]{6}|[0-9a-f]{3})/i,
    categories: [Literal]
});
/* harmony export (immutable) */ __webpack_exports__["ColorLiteral"] = ColorLiteral;


const ChoiceLiteral = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "ChoiceLiteral",
    //idem stringLiteral
    pattern: /\[([^\]\\]|\\.)*\]/,
    categories: [Literal],
    line_breaks: true
});
/* harmony export (immutable) */ __webpack_exports__["ChoiceLiteral"] = ChoiceLiteral;


const Keyword = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Keyword",
    pattern: __WEBPACK_IMPORTED_MODULE_0_chevrotain__["Lexer"].NA,
    //longer_alt: Label //I would expect that this is valid for all keywords but apparently not
});
/* harmony export (immutable) */ __webpack_exports__["Keyword"] = Keyword;


const If = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "If",
    pattern: /if/i,
    categories: [Keyword],
    longer_alt: Label
});
/* harmony export (immutable) */ __webpack_exports__["If"] = If;


const Then = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Then",
    pattern: /then/i,
    categories: [Keyword],
    longer_alt: Label
});
/* harmony export (immutable) */ __webpack_exports__["Then"] = Then;


const Else = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Else",
    pattern: /else/i,
    categories: [Keyword],
    longer_alt: Label
});
/* harmony export (immutable) */ __webpack_exports__["Else"] = Else;


const Forever = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Forever",
    pattern: /forever/i,
    categories: [Keyword],
    longer_alt: Label
});
/* harmony export (immutable) */ __webpack_exports__["Forever"] = Forever;


const RepeatUntil = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "RepeatUntil",
    pattern: /repeat[ \t]*until/i,
    categories: [Keyword],
    longer_alt: Label
});
/* harmony export (immutable) */ __webpack_exports__["RepeatUntil"] = RepeatUntil;


const Repeat = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Repeat",
    pattern: /repeat/i,
    categories: [Keyword],
    longer_alt: Label
});
/* harmony export (immutable) */ __webpack_exports__["Repeat"] = Repeat;



const End = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "End",
    pattern: /end/i,
    categories: [Keyword],
    longer_alt: Label
});
/* harmony export (immutable) */ __webpack_exports__["End"] = End;


const Modifier = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Modifier",
    pattern: /::((:(?!:))|[^\{\|\(\)<>\\#@: \t\n]|\\[^])([ \t]*((:(?!:))|[^\|\(\)<>\\#@: \t\n]|\\[^]))*/
});
/* harmony export (immutable) */ __webpack_exports__["Modifier"] = Modifier;


const Comment = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Comment",
    //similar to stringliteral but between ||
    pattern: /\|([^\|\\]|\\.)*\|/
});
/* harmony export (immutable) */ __webpack_exports__["Comment"] = Comment;


const ID = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "ID",
    pattern: /@[a-z0-9_]+/i
});
/* harmony export (immutable) */ __webpack_exports__["ID"] = ID;



const MultipleDelimiters = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "MultipleDelimiters",
    //; \n should always bee seen as a whole 
    //so a ; alone must explicitly not been followed by a \n
    pattern: /((;[ \t]*\n|;[ \t]*(?!\n)|\n)[ \t]*){2,}/,
    line_breaks: true
});
/* harmony export (immutable) */ __webpack_exports__["MultipleDelimiters"] = MultipleDelimiters;


const Delimiter = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "Delimiter",
    pattern: /;[ \t]*\n?|\n/,
    line_breaks: true,
    //longer_alt: MultipleDelimiter
});
/* harmony export (immutable) */ __webpack_exports__["Delimiter"] = Delimiter;




// marking WhiteSpace as 'SKIPPED' makes the lexer skip it.
const WhiteSpace = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["createToken"])({
    name: "WhiteSpace",
    pattern: /[ \t]+/,
    group: __WEBPACK_IMPORTED_MODULE_0_chevrotain__["Lexer"].SKIPPED,
    line_breaks: false
});
/* harmony export (immutable) */ __webpack_exports__["WhiteSpace"] = WhiteSpace;


//order matters!
const allTokens = [
    WhiteSpace,
    LineComment, BlockComment, Comment, //match before anything else
    Literal, StringLiteral, NumberLiteral, ColorLiteral, ChoiceLiteral,
    //WARNING: RepeatUntil must be defined before Repeat
    Forever, End, RepeatUntil, Repeat, If, Else, Then,
    //WARNING: StackDelimiter must be defined before Delimiter
    MultipleDelimiters, Delimiter,
    LCurlyBracket, RCurlyBracket,
    LRoundBracket, RRoundBracket,
    RAngleBracket, LAngleBracket,
    Modifier, ID,
    //WARNING: Label must be defined after anything else
    Label
];
/* harmony export (immutable) */ __webpack_exports__["allTokens"] = allTokens;

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\

const LNLexer = new __WEBPACK_IMPORTED_MODULE_0_chevrotain__["Lexer"](allTokens);
/* harmony export (immutable) */ __webpack_exports__["LNLexer"] = LNLexer;



/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tokens_public_1 = __webpack_require__(3);
var utils = __webpack_require__(0);
var utils_1 = __webpack_require__(0);
var gast_public_1 = __webpack_require__(1);
var gast_1 = __webpack_require__(9);
var checks_1 = __webpack_require__(8);
var version_1 = __webpack_require__(29);
exports.defaultParserErrorProvider = {
    buildMismatchTokenMessage: function (_a) {
        var expected = _a.expected, actual = _a.actual, previous = _a.previous, ruleName = _a.ruleName;
        var hasLabel = tokens_public_1.hasTokenLabel(expected);
        var expectedMsg = hasLabel
            ? "--> " + tokens_public_1.tokenLabel(expected) + " <--"
            : "token of type --> " + tokens_public_1.tokenName(expected) + " <--";
        var msg = "Expecting " + expectedMsg + " but found --> '" + actual.image + "' <--";
        return msg;
    },
    buildNotAllInputParsedMessage: function (_a) {
        var firstRedundant = _a.firstRedundant, ruleName = _a.ruleName;
        return ("Redundant input, expecting EOF but found: " + firstRedundant.image);
    },
    buildNoViableAltMessage: function (_a) {
        var expectedPathsPerAlt = _a.expectedPathsPerAlt, actual = _a.actual, previous = _a.previous, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;
        var errPrefix = "Expecting: ";
        // TODO: issue: No Viable Alternative Error may have incomplete details. #502
        var actualText = utils_1.first(actual).image;
        var errSuffix = "\nbut found: '" + actualText + "'";
        if (customUserDescription) {
            return errPrefix + customUserDescription + errSuffix;
        }
        else {
            var allLookAheadPaths = utils_1.reduce(expectedPathsPerAlt, function (result, currAltPaths) { return result.concat(currAltPaths); }, []);
            var nextValidTokenSequences = utils_1.map(allLookAheadPaths, function (currPath) {
                return "[" + utils_1.map(currPath, function (currTokenType) {
                    return tokens_public_1.tokenLabel(currTokenType);
                }).join(", ") + "]";
            });
            var nextValidSequenceItems = utils_1.map(nextValidTokenSequences, function (itemMsg, idx) { return "  " + (idx + 1) + ". " + itemMsg; });
            var calculatedDescription = "one of these possible Token sequences:\n" + nextValidSequenceItems.join("\n");
            return errPrefix + calculatedDescription + errSuffix;
        }
    },
    buildEarlyExitMessage: function (_a) {
        var expectedIterationPaths = _a.expectedIterationPaths, actual = _a.actual, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;
        var errPrefix = "Expecting: ";
        // TODO: issue: No Viable Alternative Error may have incomplete details. #502
        var actualText = utils_1.first(actual).image;
        var errSuffix = "\nbut found: '" + actualText + "'";
        if (customUserDescription) {
            return errPrefix + customUserDescription + errSuffix;
        }
        else {
            var nextValidTokenSequences = utils_1.map(expectedIterationPaths, function (currPath) {
                return "[" + utils_1.map(currPath, function (currTokenType) {
                    return tokens_public_1.tokenLabel(currTokenType);
                }).join(",") + "]";
            });
            var calculatedDescription = "expecting at least one iteration which starts with one of these possible Token sequences::\n  " +
                ("<" + nextValidTokenSequences.join(" ,") + ">");
            return errPrefix + calculatedDescription + errSuffix;
        }
    }
};
Object.freeze(exports.defaultParserErrorProvider);
exports.defaultGrammarResolverErrorProvider = {
    buildRuleNotFoundError: function (topLevelRule, undefinedRule) {
        var msg = "Invalid grammar, reference to a rule which is not defined: ->" +
            undefinedRule.nonTerminalName +
            "<-\n" +
            "inside top level rule: ->" +
            topLevelRule.name +
            "<-";
        return msg;
    }
};
exports.defaultGrammarValidatorErrorProvider = {
    buildDuplicateFoundError: function (topLevelRule, duplicateProds) {
        function getExtraProductionArgument(prod) {
            if (prod instanceof gast_public_1.Terminal) {
                return tokens_public_1.tokenName(prod.terminalType);
            }
            else if (prod instanceof gast_public_1.NonTerminal) {
                return prod.nonTerminalName;
            }
            else {
                return "";
            }
        }
        var topLevelName = topLevelRule.name;
        var duplicateProd = utils_1.first(duplicateProds);
        var index = duplicateProd.idx;
        var dslName = gast_1.getProductionDslName(duplicateProd);
        var extraArgument = getExtraProductionArgument(duplicateProd);
        var msg = "->" + dslName + "<- with numerical suffix: ->" + index + "<-\n                  " + (extraArgument ? "and argument: ->" + extraArgument + "<-" : "") + "\n                  appears more than once (" + duplicateProds.length + " times) in the top level rule: ->" + topLevelName + "<-.\n                  " + (index === 0
            ? "Also note that numerical suffix 0 means " + dslName + " without any suffix."
            : "") + "\n                  To fix this make sure each usage of " + dslName + " " + (extraArgument ? "with the argument: ->" + extraArgument + "<-" : "") + "\n                  in the rule ->" + topLevelName + "<- has a different occurrence index (0-5), as that combination acts as a unique\n                  position key in the grammar, which is needed by the parsing engine.\n                  \n                  For further details see: https://sap.github.io/chevrotain/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  ";
        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...
        msg = msg.replace(/[ \t]+/g, " ");
        msg = msg.replace(/\s\s+/g, "\n");
        return msg;
    },
    buildInvalidNestedRuleNameError: function (topLevelRule, nestedProd) {
        var msg = "Invalid nested rule name: ->" + nestedProd.name + "<- inside rule: ->" + topLevelRule.name + "<-\n" +
            ("it must match the pattern: ->" + checks_1.validNestedRuleName.toString() + "<-.\n") +
            "Note that this means a nested rule name must start with the '$'(dollar) sign.";
        return msg;
    },
    buildDuplicateNestedRuleNameError: function (topLevelRule, nestedProd) {
        var duplicateName = utils_1.first(nestedProd).name;
        var errMsg = "Duplicate nested rule name: ->" + duplicateName + "<- inside rule: ->" + topLevelRule.name + "<-\n" +
            "A nested name must be unique in the scope of a top level grammar rule.";
        return errMsg;
    },
    buildNamespaceConflictError: function (rule) {
        var errMsg = "Namespace conflict found in grammar.\n" +
            ("The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <" + rule.name + ">.\n") +
            "To resolve this make sure each Terminal and Non-Terminal names are unique\n" +
            "This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\n" +
            "and Non-Terminal names start with a lower case letter.";
        return errMsg;
    },
    buildAlternationPrefixAmbiguityError: function (options) {
        var pathMsg = utils_1.map(options.prefixPath, function (currTok) {
            return tokens_public_1.tokenLabel(currTok);
        }).join(", ");
        var occurrence = options.alternation.idx === 0 ? "" : options.alternation.idx;
        var errMsg = "Ambiguous alternatives: <" + options.ambiguityIndices.join(" ,") + "> due to common lookahead prefix\n" +
            ("in <OR" + occurrence + "> inside <" + options.topLevelRule.name + "> Rule,\n") +
            ("<" + pathMsg + "> may appears as a prefix path in all these alternatives.\n") +
            "https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\n" +
            "For Further details.";
        return errMsg;
    },
    buildAlternationAmbiguityError: function (options) {
        var pathMsg = utils_1.map(options.prefixPath, function (currtok) {
            return tokens_public_1.tokenLabel(currtok);
        }).join(", ");
        var occurrence = options.alternation.idx === 0 ? "" : options.alternation.idx;
        var currMessage = "Ambiguous alternatives: <" + options.ambiguityIndices.join(" ,") + "> in <OR" + occurrence + ">" +
            (" inside <" + options.topLevelRule.name + "> Rule,\n") +
            ("<" + pathMsg + "> may appears as a prefix path in all these alternatives.\n");
        var docs_version = version_1.VERSION.replace(/\./g, "_");
        // Should this information be on the error message or in some common errors docs?
        currMessage =
            currMessage +
                "To Resolve this, try one of of the following: \n" +
                "1. Refactor your grammar to be LL(K) for the current value of k (by default k=5)\n" +
                "2. Increase the value of K for your grammar by providing a larger 'maxLookahead' value in the parser's config\n" +
                "3. This issue can be ignored (if you know what you are doing...), see" +
                " https://sap.github.io/chevrotain/documentation/" +
                docs_version +
                "/interfaces/iparserconfig.html#ignoredissues for more" +
                " details\n";
        return currMessage;
    },
    buildEmptyRepetitionError: function (options) {
        var dslName = gast_1.getProductionDslName(options.repetition);
        if (options.repetition.idx !== 0) {
            dslName += options.repetition.idx;
        }
        var errMsg = "The repetition <" + dslName + "> within Rule <" + options.topLevelRule.name + "> can never consume any tokens.\n" +
            "This could lead to an infinite loop.";
        return errMsg;
    },
    buildTokenNameError: function (options) {
        var tokTypeName = tokens_public_1.tokenName(options.tokenType);
        var errMsg = "Invalid Grammar Token name: ->" + tokTypeName + "<- it must match the pattern: ->" + options.expectedPattern.toString() + "<-";
        return errMsg;
    },
    buildEmptyAlternationError: function (options) {
        var errMsg = "Ambiguous empty alternative: <" + (options.emptyChoiceIdx + 1) + ">" +
            (" in <OR" + options.alternation.idx + "> inside <" + options.topLevelRule.name + "> Rule.\n") +
            "Only the last alternative may be an empty alternative.";
        return errMsg;
    },
    buildTooManyAlternativesError: function (options) {
        var errMsg = "An Alternation cannot have more than 256 alternatives:\n" +
            ("<OR" + options.alternation.idx + "> inside <" + options.topLevelRule.name + "> Rule.\n has " + (options.alternation.definition.length +
                1) + " alternatives.");
        return errMsg;
    },
    buildLeftRecursionError: function (options) {
        var ruleName = options.topLevelRule.name;
        var pathNames = utils.map(options.leftRecursionPath, function (currRule) { return currRule.name; });
        var leftRecursivePath = ruleName + " --> " + pathNames
            .concat([ruleName])
            .join(" --> ");
        var errMsg = "Left Recursion found in grammar.\n" +
            ("rule: <" + ruleName + "> can be invoked from itself (directly or indirectly)\n") +
            ("without consuming any Tokens. The grammar path that causes this is: \n " + leftRecursivePath + "\n") +
            " To fix this refactor your grammar to remove the left recursion.\n" +
            "see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.";
        return errMsg;
    },
    buildInvalidRuleNameError: function (options) {
        var ruleName = options.topLevelRule.name;
        var expectedPatternString = options.expectedPattern.toString();
        var errMsg = "Invalid grammar rule name: ->" + ruleName + "<- it must match the pattern: ->" + expectedPatternString + "<-";
        return errMsg;
    },
    buildDuplicateRuleNameError: function (options) {
        var ruleName;
        if (options.topLevelRule instanceof gast_public_1.Rule) {
            ruleName = options.topLevelRule.name;
        }
        else {
            ruleName = options.topLevelRule;
        }
        var errMsg = "Duplicate definition, rule: ->" + ruleName + "<- is already defined in the grammar: ->" + options.grammarName + "<-";
        return errMsg;
    }
};
//# sourceMappingURL=errors_public.js.map

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* istanbul ignore next */ var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var rest_1 = __webpack_require__(26);
var utils_1 = __webpack_require__(0);
var tokens_public_1 = __webpack_require__(3);
var first_1 = __webpack_require__(37);
var gast_public_1 = __webpack_require__(1);
var AbstractNextPossibleTokensWalker = /** @class */ (function (_super) {
    __extends(AbstractNextPossibleTokensWalker, _super);
    function AbstractNextPossibleTokensWalker(topProd, path) {
        var _this = _super.call(this) /* istanbul ignore next */ || this;
        _this.topProd = topProd;
        _this.path = path;
        _this.possibleTokTypes = [];
        _this.nextProductionName = "";
        _this.nextProductionOccurrence = 0;
        _this.found = false;
        _this.isAtEndOfPath = false;
        return _this;
    }
    AbstractNextPossibleTokensWalker.prototype.startWalking = function () {
        this.found = false;
        if (this.path.ruleStack[0] !== this.topProd.name) {
            throw Error("The path does not start with the walker's top Rule!");
        }
        // immutable for the win
        this.ruleStack = utils_1.cloneArr(this.path.ruleStack).reverse(); // intelij bug requires assertion
        this.occurrenceStack = utils_1.cloneArr(this.path.occurrenceStack).reverse(); // intelij bug requires assertion
        // already verified that the first production is valid, we now seek the 2nd production
        this.ruleStack.pop();
        this.occurrenceStack.pop();
        this.updateExpectedNext();
        this.walk(this.topProd);
        return this.possibleTokTypes;
    };
    AbstractNextPossibleTokensWalker.prototype.walk = function (prod, prevRest) {
        if (prevRest === void 0) { prevRest = []; }
        // stop scanning once we found the path
        if (!this.found) {
            _super.prototype.walk.call(this, prod, prevRest);
        }
    };
    AbstractNextPossibleTokensWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {
        // found the next production, need to keep walking in it
        if (refProd.referencedRule.name === this.nextProductionName &&
            refProd.idx === this.nextProductionOccurrence) {
            var fullRest = currRest.concat(prevRest);
            this.updateExpectedNext();
            this.walk(refProd.referencedRule, fullRest);
        }
    };
    AbstractNextPossibleTokensWalker.prototype.updateExpectedNext = function () {
        // need to consume the Terminal
        if (utils_1.isEmpty(this.ruleStack)) {
            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are
            // really seeking is the last Terminal...
            this.nextProductionName = "";
            this.nextProductionOccurrence = 0;
            this.isAtEndOfPath = true;
        }
        else {
            this.nextProductionName = this.ruleStack.pop();
            this.nextProductionOccurrence = this.occurrenceStack.pop();
        }
    };
    return AbstractNextPossibleTokensWalker;
}(rest_1.RestWalker));
exports.AbstractNextPossibleTokensWalker = AbstractNextPossibleTokensWalker;
var NextAfterTokenWalker = /** @class */ (function (_super) {
    __extends(NextAfterTokenWalker, _super);
    function NextAfterTokenWalker(topProd, path) {
        var _this = _super.call(this, topProd, path) /* istanbul ignore next */ || this;
        _this.path = path;
        _this.nextTerminalName = "";
        _this.nextTerminalOccurrence = 0;
        _this.nextTerminalName = tokens_public_1.tokenName(_this.path.lastTok);
        _this.nextTerminalOccurrence = _this.path.lastTokOccurrence;
        return _this;
    }
    NextAfterTokenWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {
        if (this.isAtEndOfPath &&
            tokens_public_1.tokenName(terminal.terminalType) === this.nextTerminalName &&
            terminal.idx === this.nextTerminalOccurrence &&
            !this.found) {
            var fullRest = currRest.concat(prevRest);
            var restProd = new gast_public_1.Flat({ definition: fullRest });
            this.possibleTokTypes = first_1.first(restProd);
            this.found = true;
        }
    };
    return NextAfterTokenWalker;
}(AbstractNextPossibleTokensWalker));
exports.NextAfterTokenWalker = NextAfterTokenWalker;
/**
 * This walker only "walks" a single "TOP" level in the Grammar Ast, this means
 * it never "follows" production refs
 */
var AbstractNextTerminalAfterProductionWalker = /** @class */ (function (_super) {
    __extends(AbstractNextTerminalAfterProductionWalker, _super);
    function AbstractNextTerminalAfterProductionWalker(topRule, occurrence) {
        var _this = _super.call(this) /* istanbul ignore next */ || this;
        _this.topRule = topRule;
        _this.occurrence = occurrence;
        _this.result = {
            token: undefined,
            occurrence: undefined,
            isEndOfRule: undefined
        };
        return _this;
    }
    AbstractNextTerminalAfterProductionWalker.prototype.startWalking = function () {
        this.walk(this.topRule);
        return this.result;
    };
    return AbstractNextTerminalAfterProductionWalker;
}(rest_1.RestWalker));
exports.AbstractNextTerminalAfterProductionWalker = AbstractNextTerminalAfterProductionWalker;
var NextTerminalAfterManyWalker = /** @class */ (function (_super) {
    __extends(NextTerminalAfterManyWalker, _super);
    function NextTerminalAfterManyWalker() {
        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;
    }
    NextTerminalAfterManyWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {
        if (manyProd.idx === this.occurrence) {
            var firstAfterMany = utils_1.first(currRest.concat(prevRest));
            this.result.isEndOfRule = firstAfterMany === undefined;
            if (firstAfterMany instanceof gast_public_1.Terminal) {
                this.result.token = firstAfterMany.terminalType;
                this.result.occurrence = firstAfterMany.idx;
            }
        }
        else {
            _super.prototype.walkMany.call(this, manyProd, currRest, prevRest);
        }
    };
    return NextTerminalAfterManyWalker;
}(AbstractNextTerminalAfterProductionWalker));
exports.NextTerminalAfterManyWalker = NextTerminalAfterManyWalker;
var NextTerminalAfterManySepWalker = /** @class */ (function (_super) {
    __extends(NextTerminalAfterManySepWalker, _super);
    function NextTerminalAfterManySepWalker() {
        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;
    }
    NextTerminalAfterManySepWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {
        if (manySepProd.idx === this.occurrence) {
            var firstAfterManySep = utils_1.first(currRest.concat(prevRest));
            this.result.isEndOfRule = firstAfterManySep === undefined;
            if (firstAfterManySep instanceof gast_public_1.Terminal) {
                this.result.token = firstAfterManySep.terminalType;
                this.result.occurrence = firstAfterManySep.idx;
            }
        }
        else {
            _super.prototype.walkManySep.call(this, manySepProd, currRest, prevRest);
        }
    };
    return NextTerminalAfterManySepWalker;
}(AbstractNextTerminalAfterProductionWalker));
exports.NextTerminalAfterManySepWalker = NextTerminalAfterManySepWalker;
var NextTerminalAfterAtLeastOneWalker = /** @class */ (function (_super) {
    __extends(NextTerminalAfterAtLeastOneWalker, _super);
    function NextTerminalAfterAtLeastOneWalker() {
        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;
    }
    NextTerminalAfterAtLeastOneWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {
        if (atLeastOneProd.idx === this.occurrence) {
            var firstAfterAtLeastOne = utils_1.first(currRest.concat(prevRest));
            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;
            if (firstAfterAtLeastOne instanceof gast_public_1.Terminal) {
                this.result.token = firstAfterAtLeastOne.terminalType;
                this.result.occurrence = firstAfterAtLeastOne.idx;
            }
        }
        else {
            _super.prototype.walkAtLeastOne.call(this, atLeastOneProd, currRest, prevRest);
        }
    };
    return NextTerminalAfterAtLeastOneWalker;
}(AbstractNextTerminalAfterProductionWalker));
exports.NextTerminalAfterAtLeastOneWalker = NextTerminalAfterAtLeastOneWalker;
// TODO: reduce code duplication in the AfterWalkers
var NextTerminalAfterAtLeastOneSepWalker = /** @class */ (function (_super) {
    __extends(NextTerminalAfterAtLeastOneSepWalker, _super);
    function NextTerminalAfterAtLeastOneSepWalker() {
        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;
    }
    NextTerminalAfterAtLeastOneSepWalker.prototype.walkAtLeastOneSep = function (atleastOneSepProd, currRest, prevRest) {
        if (atleastOneSepProd.idx === this.occurrence) {
            var firstAfterfirstAfterAtLeastOneSep = utils_1.first(currRest.concat(prevRest));
            this.result.isEndOfRule =
                firstAfterfirstAfterAtLeastOneSep === undefined;
            if (firstAfterfirstAfterAtLeastOneSep instanceof gast_public_1.Terminal) {
                this.result.token =
                    firstAfterfirstAfterAtLeastOneSep.terminalType;
                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;
            }
        }
        else {
            _super.prototype.walkAtLeastOneSep.call(this, atleastOneSepProd, currRest, prevRest);
        }
    };
    return NextTerminalAfterAtLeastOneSepWalker;
}(AbstractNextTerminalAfterProductionWalker));
exports.NextTerminalAfterAtLeastOneSepWalker = NextTerminalAfterAtLeastOneSepWalker;
function possiblePathsFrom(targetDef, maxLength, currPath) {
    if (currPath === void 0) { currPath = []; }
    // avoid side effects
    currPath = utils_1.cloneArr(currPath);
    var result = [];
    var i = 0;
    function remainingPathWith(nextDef) {
        return nextDef.concat(utils_1.drop(targetDef, i + 1));
    }
    function getAlternativesForProd(definition) {
        var alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);
        return result.concat(alternatives);
    }
    /**
     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the
     * following (rest) of the targetDef.
     *
     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the
     * the optional production.
     */
    while (currPath.length < maxLength && i < targetDef.length) {
        var prod = targetDef[i];
        /* istanbul ignore else */
        if (prod instanceof gast_public_1.Flat) {
            return getAlternativesForProd(prod.definition);
        }
        else if (prod instanceof gast_public_1.NonTerminal) {
            return getAlternativesForProd(prod.definition);
        }
        else if (prod instanceof gast_public_1.Option) {
            result = getAlternativesForProd(prod.definition);
        }
        else if (prod instanceof gast_public_1.RepetitionMandatory) {
            return getAlternativesForProd(prod.definition);
        }
        else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {
            var newDef = [
                new gast_public_1.Flat({ definition: prod.definition }),
                new gast_public_1.Repetition({
                    definition: [
                        new gast_public_1.Terminal({ terminalType: prod.separator })
                    ].concat(prod.definition)
                })
            ];
            return getAlternativesForProd(newDef);
        }
        else if (prod instanceof gast_public_1.RepetitionWithSeparator) {
            var newDef = prod.definition.concat([
                new gast_public_1.Repetition({
                    definition: [
                        new gast_public_1.Terminal({ terminalType: prod.separator })
                    ].concat(prod.definition)
                })
            ]);
            result = getAlternativesForProd(newDef);
        }
        else if (prod instanceof gast_public_1.Repetition) {
            result = getAlternativesForProd(prod.definition);
        }
        else if (prod instanceof gast_public_1.Alternation) {
            utils_1.forEach(prod.definition, function (currAlt) {
                result = getAlternativesForProd(currAlt.definition);
            });
            return result;
        }
        else if (prod instanceof gast_public_1.Terminal) {
            currPath.push(prod.terminalType);
        }
        else {
            throw Error("non exhaustive match");
        }
        i++;
    }
    result.push({
        partialPath: currPath,
        suffixDef: utils_1.drop(targetDef, i)
    });
    return result;
}
exports.possiblePathsFrom = possiblePathsFrom;
function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {
    var EXIT_NON_TERMINAL = "EXIT_NONE_TERMINAL";
    // to avoid creating a new Array each time.
    var EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];
    var EXIT_ALTERNATIVE = "EXIT_ALTERNATIVE";
    var foundCompletePath = false;
    var tokenVectorLength = tokenVector.length;
    var minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;
    var result = [];
    var possiblePaths = [];
    possiblePaths.push({
        idx: -1,
        def: initialDef,
        ruleStack: [],
        occurrenceStack: []
    });
    while (!utils_1.isEmpty(possiblePaths)) {
        var currPath = possiblePaths.pop();
        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)
        if (currPath === EXIT_ALTERNATIVE) {
            if (foundCompletePath &&
                utils_1.last(possiblePaths).idx <= minimalAlternativesIndex) {
                // remove irrelevant alternative
                possiblePaths.pop();
            }
            continue;
        }
        var currDef = currPath.def;
        var currIdx = currPath.idx;
        var currRuleStack = currPath.ruleStack;
        var currOccurrenceStack = currPath.occurrenceStack;
        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT
        if (utils_1.isEmpty(currDef)) {
            continue;
        }
        var prod = currDef[0];
        /* istanbul ignore else */
        if (prod === EXIT_NON_TERMINAL) {
            var nextPath = {
                idx: currIdx,
                def: utils_1.drop(currDef),
                ruleStack: utils_1.dropRight(currRuleStack),
                occurrenceStack: utils_1.dropRight(currOccurrenceStack)
            };
            possiblePaths.push(nextPath);
        }
        else if (prod instanceof gast_public_1.Terminal) {
            /* istanbul ignore else */
            if (currIdx < tokenVectorLength - 1) {
                var nextIdx = currIdx + 1;
                var actualToken = tokenVector[nextIdx];
                if (tokMatcher(actualToken, prod.terminalType)) {
                    var nextPath = {
                        idx: nextIdx,
                        def: utils_1.drop(currDef),
                        ruleStack: currRuleStack,
                        occurrenceStack: currOccurrenceStack
                    };
                    possiblePaths.push(nextPath);
                }
                // end of the line
            }
            else if (currIdx === tokenVectorLength - 1) {
                // IGNORE ABOVE ELSE
                result.push({
                    nextTokenType: prod.terminalType,
                    nextTokenOccurrence: prod.idx,
                    ruleStack: currRuleStack,
                    occurrenceStack: currOccurrenceStack
                });
                foundCompletePath = true;
            }
            else {
                throw Error("non exhaustive match");
            }
        }
        else if (prod instanceof gast_public_1.NonTerminal) {
            var newRuleStack = utils_1.cloneArr(currRuleStack);
            newRuleStack.push(prod.nonTerminalName);
            var newOccurrenceStack = utils_1.cloneArr(currOccurrenceStack);
            newOccurrenceStack.push(prod.idx);
            var nextPath = {
                idx: currIdx,
                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, utils_1.drop(currDef)),
                ruleStack: newRuleStack,
                occurrenceStack: newOccurrenceStack
            };
            possiblePaths.push(nextPath);
        }
        else if (prod instanceof gast_public_1.Option) {
            // the order of alternatives is meaningful, FILO (Last path will be traversed first).
            var nextPathWithout = {
                idx: currIdx,
                def: utils_1.drop(currDef),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWithout);
            // required marker to avoid backtracking paths whose higher priority alternatives already matched
            possiblePaths.push(EXIT_ALTERNATIVE);
            var nextPathWith = {
                idx: currIdx,
                def: prod.definition.concat(utils_1.drop(currDef)),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWith);
        }
        else if (prod instanceof gast_public_1.RepetitionMandatory) {
            // TODO:(THE NEW operators here take a while...) (convert once?)
            var secondIteration = new gast_public_1.Repetition({
                definition: prod.definition,
                idx: prod.idx
            });
            var nextDef = prod.definition.concat([secondIteration], utils_1.drop(currDef));
            var nextPath = {
                idx: currIdx,
                def: nextDef,
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPath);
        }
        else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {
            // TODO:(THE NEW operators here take a while...) (convert once?)
            var separatorGast = new gast_public_1.Terminal({
                terminalType: prod.separator
            });
            var secondIteration = new gast_public_1.Repetition({
                definition: [separatorGast].concat(prod.definition),
                idx: prod.idx
            });
            var nextDef = prod.definition.concat([secondIteration], utils_1.drop(currDef));
            var nextPath = {
                idx: currIdx,
                def: nextDef,
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPath);
        }
        else if (prod instanceof gast_public_1.RepetitionWithSeparator) {
            // the order of alternatives is meaningful, FILO (Last path will be traversed first).
            var nextPathWithout = {
                idx: currIdx,
                def: utils_1.drop(currDef),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWithout);
            // required marker to avoid backtracking paths whose higher priority alternatives already matched
            possiblePaths.push(EXIT_ALTERNATIVE);
            var separatorGast = new gast_public_1.Terminal({
                terminalType: prod.separator
            });
            var nthRepetition = new gast_public_1.Repetition({
                definition: [separatorGast].concat(prod.definition),
                idx: prod.idx
            });
            var nextDef = prod.definition.concat([nthRepetition], utils_1.drop(currDef));
            var nextPathWith = {
                idx: currIdx,
                def: nextDef,
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWith);
        }
        else if (prod instanceof gast_public_1.Repetition) {
            // the order of alternatives is meaningful, FILO (Last path will be traversed first).
            var nextPathWithout = {
                idx: currIdx,
                def: utils_1.drop(currDef),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWithout);
            // required marker to avoid backtracking paths whose higher priority alternatives already matched
            possiblePaths.push(EXIT_ALTERNATIVE);
            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?
            var nthRepetition = new gast_public_1.Repetition({
                definition: prod.definition,
                idx: prod.idx
            });
            var nextDef = prod.definition.concat([nthRepetition], utils_1.drop(currDef));
            var nextPathWith = {
                idx: currIdx,
                def: nextDef,
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWith);
        }
        else if (prod instanceof gast_public_1.Alternation) {
            // the order of alternatives is meaningful, FILO (Last path will be traversed first).
            for (var i = prod.definition.length - 1; i >= 0; i--) {
                var currAlt = prod.definition[i];
                var currAltPath = {
                    idx: currIdx,
                    def: currAlt.definition.concat(utils_1.drop(currDef)),
                    ruleStack: currRuleStack,
                    occurrenceStack: currOccurrenceStack
                };
                possiblePaths.push(currAltPath);
                possiblePaths.push(EXIT_ALTERNATIVE);
            }
        }
        else if (prod instanceof gast_public_1.Flat) {
            possiblePaths.push({
                idx: currIdx,
                def: prod.definition.concat(utils_1.drop(currDef)),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            });
        }
        else if (prod instanceof gast_public_1.Rule) {
            // last because we should only encounter at most a single one of these per invocation.
            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));
        }
        else {
            throw Error("non exhaustive match");
        }
    }
    return result;
}
exports.nextPossibleTokensAfter = nextPossibleTokensAfter;
function expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {
    var newRuleStack = utils_1.cloneArr(currRuleStack);
    newRuleStack.push(topRule.name);
    var newCurrOccurrenceStack = utils_1.cloneArr(currOccurrenceStack);
    // top rule is always assumed to have been called with occurrence index 1
    newCurrOccurrenceStack.push(1);
    return {
        idx: currIdx,
        def: topRule.definition,
        ruleStack: newRuleStack,
        occurrenceStack: newCurrOccurrenceStack
    };
}
//# sourceMappingURL=interpreter.js.map

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var gast_public_1 = __webpack_require__(1);
/**
 *  A Grammar Walker that computes the "remaining" grammar "after" a productions in the grammar.
 */
var RestWalker = /** @class */ (function () {
    function RestWalker() {
    }
    RestWalker.prototype.walk = function (prod, prevRest) {
        var _this = this;
        if (prevRest === void 0) { prevRest = []; }
        utils_1.forEach(prod.definition, function (subProd, index) {
            var currRest = utils_1.drop(prod.definition, index + 1);
            /* istanbul ignore else */
            if (subProd instanceof gast_public_1.NonTerminal) {
                _this.walkProdRef(subProd, currRest, prevRest);
            }
            else if (subProd instanceof gast_public_1.Terminal) {
                _this.walkTerminal(subProd, currRest, prevRest);
            }
            else if (subProd instanceof gast_public_1.Flat) {
                _this.walkFlat(subProd, currRest, prevRest);
            }
            else if (subProd instanceof gast_public_1.Option) {
                _this.walkOption(subProd, currRest, prevRest);
            }
            else if (subProd instanceof gast_public_1.RepetitionMandatory) {
                _this.walkAtLeastOne(subProd, currRest, prevRest);
            }
            else if (subProd instanceof gast_public_1.RepetitionMandatoryWithSeparator) {
                _this.walkAtLeastOneSep(subProd, currRest, prevRest);
            }
            else if (subProd instanceof gast_public_1.RepetitionWithSeparator) {
                _this.walkManySep(subProd, currRest, prevRest);
            }
            else if (subProd instanceof gast_public_1.Repetition) {
                _this.walkMany(subProd, currRest, prevRest);
            }
            else if (subProd instanceof gast_public_1.Alternation) {
                _this.walkOr(subProd, currRest, prevRest);
            }
            else {
                throw Error("non exhaustive match");
            }
        });
    };
    RestWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) { };
    RestWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) { };
    RestWalker.prototype.walkFlat = function (flatProd, currRest, prevRest) {
        // ABCDEF => after the D the rest is EF
        var fullOrRest = currRest.concat(prevRest);
        this.walk(flatProd, fullOrRest);
    };
    RestWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {
        // ABC(DE)?F => after the (DE)? the rest is F
        var fullOrRest = currRest.concat(prevRest);
        this.walk(optionProd, fullOrRest);
    };
    RestWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {
        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F
        var fullAtLeastOneRest = [
            new gast_public_1.Option({ definition: atLeastOneProd.definition })
        ].concat(currRest, prevRest);
        this.walk(atLeastOneProd, fullAtLeastOneRest);
    };
    RestWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {
        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F
        var fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);
        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);
    };
    RestWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {
        // ABC(DE)*F => after the (DE)* the rest is (DE)?F
        var fullManyRest = [
            new gast_public_1.Option({ definition: manyProd.definition })
        ].concat(currRest, prevRest);
        this.walk(manyProd, fullManyRest);
    };
    RestWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {
        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F
        var fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);
        this.walk(manySepProd, fullManySepRest);
    };
    RestWalker.prototype.walkOr = function (orProd, currRest, prevRest) {
        var _this = this;
        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G
        var fullOrRest = currRest.concat(prevRest);
        // walk all different alternatives
        utils_1.forEach(orProd.definition, function (alt) {
            // wrapping each alternative in a single definition wrapper
            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows
            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1
            var prodWrapper = new gast_public_1.Flat({ definition: [alt] });
            _this.walk(prodWrapper, fullOrRest);
        });
    };
    return RestWalker;
}());
exports.RestWalker = RestWalker;
function restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {
    var repSepRest = [
        new gast_public_1.Option({
            definition: [
                new gast_public_1.Terminal({ terminalType: repSepProd.separator })
            ].concat(repSepProd.definition)
        })
    ];
    var fullRepSepRest = repSepRest.concat(currRest, prevRest);
    return fullRepSepRest;
}
//# sourceMappingURL=rest.js.map

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var exceptions_public_1 = __webpack_require__(36);
var lang_extensions_1 = __webpack_require__(5);
var checks_1 = __webpack_require__(8);
var utils_1 = __webpack_require__(0);
var follow_1 = __webpack_require__(58);
var tokens_public_1 = __webpack_require__(3);
var lookahead_1 = __webpack_require__(40);
var gast_builder_1 = __webpack_require__(57);
var interpreter_1 = __webpack_require__(25);
var constants_1 = __webpack_require__(34);
var tokens_1 = __webpack_require__(10);
var cst_1 = __webpack_require__(35);
var keys_1 = __webpack_require__(39);
var cst_visitor_1 = __webpack_require__(56);
var errors_public_1 = __webpack_require__(24);
var gast_public_1 = __webpack_require__(1);
var gast_resolver_public_1 = __webpack_require__(38);
var IN_RULE_RECOVERY_EXCEPTION = "InRuleRecoveryException";
exports.END_OF_FILE = tokens_public_1.createTokenInstance(tokens_public_1.EOF, "", NaN, NaN, NaN, NaN, NaN, NaN);
Object.freeze(exports.END_OF_FILE);
var DEFAULT_PARSER_CONFIG = Object.freeze({
    recoveryEnabled: false,
    maxLookahead: 4,
    ignoredIssues: {},
    dynamicTokensEnabled: false,
    outputCst: false,
    errorMessageProvider: errors_public_1.defaultParserErrorProvider,
    serializedGrammar: null
});
var DEFAULT_RULE_CONFIG = Object.freeze({
    recoveryValueFunc: function () { return undefined; },
    resyncEnabled: true
});
var ParserDefinitionErrorType;
(function (ParserDefinitionErrorType) {
    ParserDefinitionErrorType[ParserDefinitionErrorType["INVALID_RULE_NAME"] = 0] = "INVALID_RULE_NAME";
    ParserDefinitionErrorType[ParserDefinitionErrorType["DUPLICATE_RULE_NAME"] = 1] = "DUPLICATE_RULE_NAME";
    ParserDefinitionErrorType[ParserDefinitionErrorType["INVALID_RULE_OVERRIDE"] = 2] = "INVALID_RULE_OVERRIDE";
    ParserDefinitionErrorType[ParserDefinitionErrorType["DUPLICATE_PRODUCTIONS"] = 3] = "DUPLICATE_PRODUCTIONS";
    ParserDefinitionErrorType[ParserDefinitionErrorType["UNRESOLVED_SUBRULE_REF"] = 4] = "UNRESOLVED_SUBRULE_REF";
    ParserDefinitionErrorType[ParserDefinitionErrorType["LEFT_RECURSION"] = 5] = "LEFT_RECURSION";
    ParserDefinitionErrorType[ParserDefinitionErrorType["NONE_LAST_EMPTY_ALT"] = 6] = "NONE_LAST_EMPTY_ALT";
    ParserDefinitionErrorType[ParserDefinitionErrorType["AMBIGUOUS_ALTS"] = 7] = "AMBIGUOUS_ALTS";
    ParserDefinitionErrorType[ParserDefinitionErrorType["CONFLICT_TOKENS_RULES_NAMESPACE"] = 8] = "CONFLICT_TOKENS_RULES_NAMESPACE";
    ParserDefinitionErrorType[ParserDefinitionErrorType["INVALID_TOKEN_NAME"] = 9] = "INVALID_TOKEN_NAME";
    ParserDefinitionErrorType[ParserDefinitionErrorType["INVALID_NESTED_RULE_NAME"] = 10] = "INVALID_NESTED_RULE_NAME";
    ParserDefinitionErrorType[ParserDefinitionErrorType["DUPLICATE_NESTED_NAME"] = 11] = "DUPLICATE_NESTED_NAME";
    ParserDefinitionErrorType[ParserDefinitionErrorType["NO_NON_EMPTY_LOOKAHEAD"] = 12] = "NO_NON_EMPTY_LOOKAHEAD";
    ParserDefinitionErrorType[ParserDefinitionErrorType["AMBIGUOUS_PREFIX_ALTS"] = 13] = "AMBIGUOUS_PREFIX_ALTS";
    ParserDefinitionErrorType[ParserDefinitionErrorType["TOO_MANY_ALTS"] = 14] = "TOO_MANY_ALTS";
})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));
function EMPTY_ALT(value) {
    if (value === void 0) { value = undefined; }
    return function () {
        return value;
    };
}
exports.EMPTY_ALT = EMPTY_ALT;
var EOF_FOLLOW_KEY = {};
var Parser = /** @class */ (function () {
    function Parser(input, tokenVocabulary, config) {
        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }
        this.gastProductionsCache = new lang_extensions_1.HashTable();
        this.ProductionOverriddenForClass = new lang_extensions_1.HashTable();
        this._errors = [];
        this.isBackTrackingStack = [];
        this.RULE_STACK = [];
        this.RULE_OCCURRENCE_STACK = [];
        this.CST_STACK = [];
        this.tokensMap = undefined;
        this.definitionErrors = [];
        this.definedRulesNames = [];
        this.shortRuleNameToFull = new lang_extensions_1.HashTable();
        this.fullRuleNameToShort = new lang_extensions_1.HashTable();
        // The shortName Index must be coded "after" the first 8bits to enable building unique lookahead keys
        this.ruleShortNameIdx = 256;
        this.LAST_EXPLICIT_RULE_STACK = [];
        this.selfAnalysisDone = false;
        this.currIdx = -1;
        this.input = input;
        // configuration
        this.recoveryEnabled = utils_1.has(config, "recoveryEnabled")
            ? config.recoveryEnabled
            : DEFAULT_PARSER_CONFIG.recoveryEnabled;
        // performance optimization, NOOP will be inlined which
        // effectively means that this optional feature does not exist
        // when not used.
        if (!this.recoveryEnabled) {
            this.attemptInRepetitionRecovery = utils_1.NOOP;
        }
        this.dynamicTokensEnabled = utils_1.has(config, "dynamicTokensEnabled")
            ? config.dynamicTokensEnabled
            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;
        this.maxLookahead = utils_1.has(config, "maxLookahead")
            ? config.maxLookahead
            : DEFAULT_PARSER_CONFIG.maxLookahead;
        this.ignoredIssues = utils_1.has(config, "ignoredIssues")
            ? config.ignoredIssues
            : DEFAULT_PARSER_CONFIG.ignoredIssues;
        this.outputCst = utils_1.has(config, "outputCst")
            ? config.outputCst
            : DEFAULT_PARSER_CONFIG.outputCst;
        this.errorMessageProvider = utils_1.defaults(config.errorMessageProvider, DEFAULT_PARSER_CONFIG.errorMessageProvider);
        this.serializedGrammar = utils_1.has(config, "serializedGrammar")
            ? config.serializedGrammar
            : DEFAULT_PARSER_CONFIG.serializedGrammar;
        if (!this.outputCst) {
            this.cstInvocationStateUpdate = utils_1.NOOP;
            this.cstFinallyStateUpdate = utils_1.NOOP;
            this.cstPostTerminal = utils_1.NOOP;
            this.cstPostNonTerminal = utils_1.NOOP;
            this.getLastExplicitRuleShortName = this.getLastExplicitRuleShortNameNoCst;
            this.getPreviousExplicitRuleShortName = this.getPreviousExplicitRuleShortNameNoCst;
            this.getLastExplicitRuleOccurrenceIndex = this.getLastExplicitRuleOccurrenceIndexNoCst;
            this.manyInternal = this.manyInternalNoCst;
            this.orInternal = this.orInternalNoCst;
            this.optionInternal = this.optionInternalNoCst;
            this.atLeastOneInternal = this.atLeastOneInternalNoCst;
            this.manySepFirstInternal = this.manySepFirstInternalNoCst;
            this.atLeastOneSepFirstInternal = this.atLeastOneSepFirstInternalNoCst;
        }
        this.className = lang_extensions_1.classNameFromInstance(this);
        this.firstAfterRepMap = new lang_extensions_1.HashTable();
        this.lookAheadFuncsCache = [];
        if (utils_1.isArray(tokenVocabulary)) {
            this.tokensMap = utils_1.reduce(tokenVocabulary, function (acc, tokenClazz) {
                acc[tokens_public_1.tokenName(tokenClazz)] = tokenClazz;
                return acc;
            }, {});
        }
        else if (utils_1.has(tokenVocabulary, "modes") &&
            utils_1.every(utils_1.flatten(utils_1.values(tokenVocabulary.modes)), tokens_1.isTokenType)) {
            var allTokenTypes = utils_1.flatten(utils_1.values(tokenVocabulary.modes));
            var uniqueTokens = utils_1.uniq(allTokenTypes);
            this.tokensMap = utils_1.reduce(uniqueTokens, function (acc, tokenClazz) {
                acc[tokens_public_1.tokenName(tokenClazz)] = tokenClazz;
                return acc;
            }, {});
        }
        else if (utils_1.isObject(tokenVocabulary)) {
            this.tokensMap = utils_1.cloneObj(tokenVocabulary);
        }
        else {
            throw new Error("<tokensDictionary> argument must be An Array of Token constructors" +
                " A dictionary of Token constructors or an IMultiModeLexerDefinition");
        }
        var noTokenCategoriesUsed = utils_1.every(utils_1.values(tokenVocabulary), function (tokenConstructor) { return utils_1.isEmpty(tokenConstructor.categoryMatches); });
        this.tokenMatcher = noTokenCategoriesUsed
            ? tokens_1.tokenStructuredMatcherNoCategories
            : tokens_1.tokenStructuredMatcher;
        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been
        // parsed with a clear error message ("expecting EOF but found ...")
        /* tslint:disable */
        this.tokensMap["EOF"] = tokens_public_1.EOF;
        /* tslint:enable */
        // Because ES2015+ syntax should be supported for creating Token classes
        // We cannot assume that the Token classes were created using the "extendToken" utilities
        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization
        tokens_1.augmentTokenTypes(utils_1.values(this.tokensMap));
    }
    /**
     *  @deprecated use the **instance** method with the same name instead
     */
    Parser.performSelfAnalysis = function (parserInstance) {
        parserInstance.performSelfAnalysis();
    };
    Parser.prototype.performSelfAnalysis = function () {
        var _this = this;
        var defErrorsMsgs;
        this.selfAnalysisDone = true;
        var className = lang_extensions_1.classNameFromInstance(this);
        var productions = this.gastProductionsCache;
        if (this.serializedGrammar) {
            var rules = gast_builder_1.deserializeGrammar(this.serializedGrammar, this.tokensMap);
            utils_1.forEach(rules, function (rule) {
                _this.gastProductionsCache.put(rule.name, rule);
            });
        }
        var resolverErrors = gast_resolver_public_1.resolveGrammar({
            rules: productions.values()
        });
        this.definitionErrors.push.apply(this.definitionErrors, resolverErrors); // mutability for the win?
        // only perform additional grammar validations IFF no resolving errors have occurred.
        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.
        if (utils_1.isEmpty(resolverErrors)) {
            var validationErrors = gast_resolver_public_1.validateGrammar({
                rules: productions.values(),
                maxLookahead: this.maxLookahead,
                tokenTypes: utils_1.values(this.tokensMap),
                ignoredIssues: this.ignoredIssues,
                errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,
                grammarName: className
            });
            this.definitionErrors.push.apply(this.definitionErrors, validationErrors); // mutability for the win?
        }
        if (utils_1.isEmpty(this.definitionErrors)) {
            // this analysis may fail if the grammar is not perfectly valid
            var allFollows = follow_1.computeAllProdsFollows(productions.values());
            this.resyncFollows = allFollows;
        }
        var cstAnalysisResult = cst_1.analyzeCst(productions.values(), this.fullRuleNameToShort);
        this.allRuleNames = cstAnalysisResult.allRuleNames;
        if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&
            !utils_1.isEmpty(this.definitionErrors)) {
            defErrorsMsgs = utils_1.map(this.definitionErrors, function (defError) { return defError.message; });
            throw new Error("Parser Definition Errors detected:\n " + defErrorsMsgs.join("\n-------------------------------\n"));
        }
    };
    Object.defineProperty(Parser.prototype, "errors", {
        get: function () {
            return utils_1.cloneArr(this._errors);
        },
        set: function (newErrors) {
            this._errors = newErrors;
        },
        enumerable: true,
        configurable: true
    });
    Parser.prototype.reset = function () {
        this.resetLexerState();
        this.isBackTrackingStack = [];
        this.errors = [];
        this.RULE_STACK = [];
        this.LAST_EXPLICIT_RULE_STACK = [];
        this.CST_STACK = [];
        this.RULE_OCCURRENCE_STACK = [];
    };
    Parser.prototype.isAtEndOfInput = function () {
        return this.tokenMatcher(this.LA(1), tokens_public_1.EOF);
    };
    Parser.prototype.getBaseCstVisitorConstructor = function () {
        if (utils_1.isUndefined(this.baseCstVisitorConstructor)) {
            var newBaseCstVisitorConstructor = cst_visitor_1.createBaseSemanticVisitorConstructor(this.className, this.allRuleNames);
            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;
            return newBaseCstVisitorConstructor;
        }
        return this.baseCstVisitorConstructor;
    };
    Parser.prototype.getBaseCstVisitorConstructorWithDefaults = function () {
        if (utils_1.isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {
            var newConstructor = cst_visitor_1.createBaseVisitorConstructorWithDefaults(this.className, this.allRuleNames, this.getBaseCstVisitorConstructor());
            this.baseCstVisitorWithDefaultsConstructor = newConstructor;
            return newConstructor;
        }
        return this.baseCstVisitorWithDefaultsConstructor;
    };
    Parser.prototype.getGAstProductions = function () {
        return this.gastProductionsCache;
    };
    Parser.prototype.getSerializedGastProductions = function () {
        return gast_public_1.serializeGrammar(this.gastProductionsCache.values());
    };
    Parser.prototype.computeContentAssist = function (startRuleName, precedingInput) {
        var startRuleGast = this.gastProductionsCache.get(startRuleName);
        if (utils_1.isUndefined(startRuleGast)) {
            throw Error("Rule ->" + startRuleName + "<- does not exist in this grammar.");
        }
        return interpreter_1.nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);
    };
    Parser.prototype.BACKTRACK = function (grammarRule, args) {
        return function () {
            // save org state
            this.isBackTrackingStack.push(1);
            var orgState = this.saveRecogState();
            try {
                grammarRule.apply(this, args);
                // if no exception was thrown we have succeed parsing the rule.
                return true;
            }
            catch (e) {
                if (exceptions_public_1.isRecognitionException(e)) {
                    return false;
                }
                else {
                    throw e;
                }
            }
            finally {
                this.reloadRecogState(orgState);
                this.isBackTrackingStack.pop();
            }
        };
    };
    Parser.prototype.SAVE_ERROR = function (error) {
        if (exceptions_public_1.isRecognitionException(error)) {
            error.context = {
                ruleStack: this.getHumanReadableRuleStack(),
                ruleOccurrenceStack: utils_1.cloneArr(this.RULE_OCCURRENCE_STACK)
            };
            this._errors.push(error);
            return error;
        }
        else {
            throw Error("Trying to save an Error which is not a RecognitionException");
        }
    };
    Parser.prototype.isBackTracking = function () {
        return !utils_1.isEmpty(this.isBackTrackingStack);
    };
    Parser.prototype.getCurrRuleFullName = function () {
        var shortName = this.getLastExplicitRuleShortName();
        return this.shortRuleNameToFull.get(shortName);
    };
    Parser.prototype.shortRuleNameToFullName = function (shortName) {
        return this.shortRuleNameToFull.get(shortName);
    };
    Parser.prototype.getHumanReadableRuleStack = function () {
        var _this = this;
        if (!utils_1.isEmpty(this.LAST_EXPLICIT_RULE_STACK)) {
            return utils_1.map(this.LAST_EXPLICIT_RULE_STACK, function (currIdx) {
                return _this.shortRuleNameToFullName(_this.RULE_STACK[currIdx]);
            });
        }
        else {
            return utils_1.map(this.RULE_STACK, function (currShortName) {
                return _this.shortRuleNameToFullName(currShortName);
            });
        }
    };
    // Parsing DSL
    Parser.prototype.CONSUME = function (tokType, options) {
        return this.consumeInternal(tokType, 0, options);
    };
    Parser.prototype.CONSUME1 = function (tokType, options) {
        return this.consumeInternal(tokType, 1, options);
    };
    Parser.prototype.CONSUME2 = function (tokType, options) {
        return this.consumeInternal(tokType, 2, options);
    };
    Parser.prototype.CONSUME3 = function (tokType, options) {
        return this.consumeInternal(tokType, 3, options);
    };
    Parser.prototype.CONSUME4 = function (tokType, options) {
        return this.consumeInternal(tokType, 4, options);
    };
    Parser.prototype.CONSUME5 = function (tokType, options) {
        return this.consumeInternal(tokType, 5, options);
    };
    Parser.prototype.CONSUME6 = function (tokType, options) {
        return this.consumeInternal(tokType, 6, options);
    };
    Parser.prototype.CONSUME7 = function (tokType, options) {
        return this.consumeInternal(tokType, 7, options);
    };
    Parser.prototype.CONSUME8 = function (tokType, options) {
        return this.consumeInternal(tokType, 8, options);
    };
    Parser.prototype.CONSUME9 = function (tokType, options) {
        return this.consumeInternal(tokType, 9, options);
    };
    Parser.prototype.SUBRULE = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 0, options);
    };
    Parser.prototype.SUBRULE1 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 1, options);
    };
    Parser.prototype.SUBRULE2 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 2, options);
    };
    Parser.prototype.SUBRULE3 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 3, options);
    };
    Parser.prototype.SUBRULE4 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 4, options);
    };
    Parser.prototype.SUBRULE5 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 5, options);
    };
    Parser.prototype.SUBRULE6 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 6, options);
    };
    Parser.prototype.SUBRULE7 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 7, options);
    };
    Parser.prototype.SUBRULE8 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 8, options);
    };
    Parser.prototype.SUBRULE9 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 9, options);
    };
    Parser.prototype.OPTION = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 0);
    };
    Parser.prototype.OPTION1 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 1);
    };
    Parser.prototype.OPTION2 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 2);
    };
    Parser.prototype.OPTION3 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 3);
    };
    Parser.prototype.OPTION4 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 4);
    };
    Parser.prototype.OPTION5 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 5);
    };
    Parser.prototype.OPTION6 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 6);
    };
    Parser.prototype.OPTION7 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 7);
    };
    Parser.prototype.OPTION8 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 8);
    };
    Parser.prototype.OPTION9 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 9);
    };
    Parser.prototype.OR = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 0);
    };
    Parser.prototype.OR1 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 1);
    };
    Parser.prototype.OR2 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 2);
    };
    Parser.prototype.OR3 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 3);
    };
    Parser.prototype.OR4 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 4);
    };
    Parser.prototype.OR5 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 5);
    };
    Parser.prototype.OR6 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 6);
    };
    Parser.prototype.OR7 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 7);
    };
    Parser.prototype.OR8 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 8);
    };
    Parser.prototype.OR9 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 9);
    };
    Parser.prototype.MANY = function (actionORMethodDef) {
        return this.manyInternal(0, actionORMethodDef, []);
    };
    Parser.prototype.MANY1 = function (actionORMethodDef) {
        return this.manyInternal(1, actionORMethodDef, []);
    };
    Parser.prototype.MANY2 = function (actionORMethodDef) {
        return this.manyInternal(2, actionORMethodDef, []);
    };
    Parser.prototype.MANY3 = function (actionORMethodDef) {
        return this.manyInternal(3, actionORMethodDef, []);
    };
    Parser.prototype.MANY4 = function (actionORMethodDef) {
        return this.manyInternal(4, actionORMethodDef, []);
    };
    Parser.prototype.MANY5 = function (actionORMethodDef) {
        return this.manyInternal(5, actionORMethodDef, []);
    };
    Parser.prototype.MANY6 = function (actionORMethodDef) {
        return this.manyInternal(6, actionORMethodDef, []);
    };
    Parser.prototype.MANY7 = function (actionORMethodDef) {
        return this.manyInternal(7, actionORMethodDef, []);
    };
    Parser.prototype.MANY8 = function (actionORMethodDef) {
        return this.manyInternal(8, actionORMethodDef, []);
    };
    Parser.prototype.MANY9 = function (actionORMethodDef) {
        return this.manyInternal(9, actionORMethodDef, []);
    };
    Parser.prototype.MANY_SEP = function (options) {
        return this.manySepFirstInternal(0, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.MANY_SEP1 = function (options) {
        return this.manySepFirstInternal(1, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.MANY_SEP2 = function (options) {
        return this.manySepFirstInternal(2, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.MANY_SEP3 = function (options) {
        return this.manySepFirstInternal(3, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.MANY_SEP4 = function (options) {
        return this.manySepFirstInternal(4, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.MANY_SEP5 = function (options) {
        return this.manySepFirstInternal(5, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.MANY_SEP6 = function (options) {
        return this.manySepFirstInternal(6, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.MANY_SEP7 = function (options) {
        return this.manySepFirstInternal(7, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.MANY_SEP8 = function (options) {
        return this.manySepFirstInternal(8, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.MANY_SEP9 = function (options) {
        return this.manySepFirstInternal(9, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE = function (actionORMethodDef) {
        return this.atLeastOneInternal(0, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE1 = function (actionORMethodDef) {
        return this.atLeastOneInternal(1, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE2 = function (actionORMethodDef) {
        return this.atLeastOneInternal(2, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE3 = function (actionORMethodDef) {
        return this.atLeastOneInternal(3, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE4 = function (actionORMethodDef) {
        return this.atLeastOneInternal(4, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE5 = function (actionORMethodDef) {
        return this.atLeastOneInternal(5, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE6 = function (actionORMethodDef) {
        return this.atLeastOneInternal(6, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE7 = function (actionORMethodDef) {
        return this.atLeastOneInternal(7, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE8 = function (actionORMethodDef) {
        return this.atLeastOneInternal(8, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE9 = function (actionORMethodDef) {
        return this.atLeastOneInternal(9, actionORMethodDef, []);
    };
    Parser.prototype.AT_LEAST_ONE_SEP = function (options) {
        return this.atLeastOneSepFirstInternal(0, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE_SEP1 = function (options) {
        return this.atLeastOneSepFirstInternal(1, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE_SEP2 = function (options) {
        return this.atLeastOneSepFirstInternal(2, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE_SEP3 = function (options) {
        return this.atLeastOneSepFirstInternal(3, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE_SEP4 = function (options) {
        return this.atLeastOneSepFirstInternal(4, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE_SEP5 = function (options) {
        return this.atLeastOneSepFirstInternal(5, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE_SEP6 = function (options) {
        return this.atLeastOneSepFirstInternal(6, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE_SEP7 = function (options) {
        return this.atLeastOneSepFirstInternal(7, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE_SEP8 = function (options) {
        return this.atLeastOneSepFirstInternal(8, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.AT_LEAST_ONE_SEP9 = function (options) {
        return this.atLeastOneSepFirstInternal(9, options, {
            values: [],
            separators: []
        });
    };
    Parser.prototype.RULE = function (name, implementation, 
    // TODO: how to describe the optional return type of CSTNode? T|CstNode is not good because it is not backward
    // compatible, T|any is very general...
    config) {
        if (config === void 0) { 
        // TODO: how to describe the optional return type of CSTNode? T|CstNode is not good because it is not backward
        // compatible, T|any is very general...
        config = DEFAULT_RULE_CONFIG; }
        if (utils_1.contains(this.definedRulesNames, name)) {
            var errMsg = errors_public_1.defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({
                topLevelRule: name,
                grammarName: this.className
            });
            var error = {
                message: errMsg,
                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,
                ruleName: name
            };
            this.definitionErrors.push(error);
        }
        this.definedRulesNames.push(name);
        // only build the gast representation once.
        if (!this.gastProductionsCache.containsKey(name) &&
            !this.serializedGrammar) {
            var gastProduction = gast_builder_1.buildTopProduction(implementation.toString(), name, this.tokensMap);
            this.gastProductionsCache.put(name, gastProduction);
        }
        var ruleImplementation = this.defineRule(name, implementation, config);
        this[name] = ruleImplementation;
        return ruleImplementation;
    };
    Parser.prototype.OVERRIDE_RULE = function (name, impl, config) {
        if (config === void 0) { config = DEFAULT_RULE_CONFIG; }
        var ruleErrors = [];
        ruleErrors = ruleErrors.concat(checks_1.validateRuleIsOverridden(name, this.definedRulesNames, this.className));
        this.definitionErrors.push.apply(this.definitionErrors, ruleErrors); // mutability for the win
        this.ProductionOverriddenForClass.put(name, true);
        // TODO: avoid building the rule when serializing grammars
        var gastProduction = gast_builder_1.buildTopProduction(impl.toString(), name, this.tokensMap);
        this.gastProductionsCache.put(name, gastProduction);
        return this.defineRule(name, impl, config);
    };
    Parser.prototype.getTokenToInsert = function (tokType) {
        var tokToInsert = tokens_public_1.createTokenInstance(tokType, "", NaN, NaN, NaN, NaN, NaN, NaN);
        tokToInsert.isInsertedInRecovery = true;
        return tokToInsert;
    };
    Parser.prototype.canTokenTypeBeInsertedInRecovery = function (tokType) {
        return true;
    };
    Parser.prototype.ruleInvocationStateUpdate = function (shortName, fullName, idxInCallingRule) {
        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);
        this.RULE_STACK.push(shortName);
        // NOOP when cst is disabled
        this.cstInvocationStateUpdate(fullName, shortName);
    };
    Parser.prototype.ruleFinallyStateUpdate = function () {
        this.RULE_STACK.pop();
        this.RULE_OCCURRENCE_STACK.pop();
        // NOOP when cst is disabled
        this.cstFinallyStateUpdate();
        if (this.RULE_STACK.length === 0 && !this.isAtEndOfInput()) {
            var firstRedundantTok = this.LA(1);
            var errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({
                firstRedundant: firstRedundantTok,
                ruleName: this.getCurrRuleFullName()
            });
            this.SAVE_ERROR(new exceptions_public_1.NotAllInputParsedException(errMsg, firstRedundantTok));
        }
    };
    Parser.prototype.nestedRuleInvocationStateUpdate = function (nestedRuleName, shortNameKey) {
        this.RULE_OCCURRENCE_STACK.push(1);
        this.RULE_STACK.push(shortNameKey);
        this.cstNestedInvocationStateUpdate(nestedRuleName, shortNameKey);
    };
    Parser.prototype.nestedRuleFinallyStateUpdate = function () {
        this.RULE_STACK.pop();
        this.RULE_OCCURRENCE_STACK.pop();
        // NOOP when cst is disabled
        this.cstNestedFinallyStateUpdate();
    };
    Parser.prototype.getCurrentGrammarPath = function (tokType, tokIdxInRule) {
        var pathRuleStack = this.getHumanReadableRuleStack();
        var pathOccurrenceStack = utils_1.cloneArr(this.RULE_OCCURRENCE_STACK);
        var grammarPath = {
            ruleStack: pathRuleStack,
            occurrenceStack: pathOccurrenceStack,
            lastTok: tokType,
            lastTokOccurrence: tokIdxInRule
        };
        return grammarPath;
    };
    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...
    // TODO: should this be more explicitly part of the public API?
    Parser.prototype.getNextPossibleTokenTypes = function (grammarPath) {
        var topRuleName = utils_1.first(grammarPath.ruleStack);
        var gastProductions = this.getGAstProductions();
        var topProduction = gastProductions.get(topRuleName);
        var nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();
        return nextPossibleTokenTypes;
    };
    Parser.prototype.subruleInternal = function (ruleToCall, idx, options) {
        var args = options !== undefined ? options.ARGS : undefined;
        var ruleResult = ruleToCall.call(this, idx, args);
        this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined
            ? options.LABEL
            : ruleToCall.ruleName);
        return ruleResult;
    };
    /**
     * @param tokType - The Type of Token we wish to consume (Reference to its constructor function).
     * @param idx - Occurrence index of consumed token in the invoking parser rule text
     *         for example:
     *         IDENT (DOT IDENT)*
     *         the first ident will have idx 1 and the second one idx 2
     *         * note that for the second ident the idx is always 2 even if its invoked 30 times in the same rule
     *           the idx is about the position in grammar (source code) and has nothing to do with a specific invocation
     *           details.
     * @param options -
     *
     * @returns {Token} - The consumed Token.
     */
    Parser.prototype.consumeInternal = function (tokType, idx, options) {
        var consumedToken;
        try {
            var nextToken = this.LA(1);
            if (this.tokenMatcher(nextToken, tokType) === true) {
                this.consumeToken();
                consumedToken = nextToken;
            }
            else {
                var msg = void 0;
                var previousToken = this.LA(0);
                if (options !== undefined && options.ERR_MSG) {
                    msg = options.ERR_MSG;
                }
                else {
                    msg = this.errorMessageProvider.buildMismatchTokenMessage({
                        expected: tokType,
                        actual: nextToken,
                        previous: previousToken,
                        ruleName: this.getCurrRuleFullName()
                    });
                }
                throw this.SAVE_ERROR(new exceptions_public_1.MismatchedTokenException(msg, nextToken, previousToken));
            }
        }
        catch (eFromConsumption) {
            // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it
            // but the original syntax could have been parsed successfully without any backtracking + recovery
            if (this.recoveryEnabled &&
                // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?
                eFromConsumption.name === "MismatchedTokenException" &&
                !this.isBackTracking()) {
                var follows = this.getFollowsForInRuleRecovery(tokType, idx);
                try {
                    consumedToken = this.tryInRuleRecovery(tokType, follows);
                }
                catch (eFromInRuleRecovery) {
                    if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {
                        // failed in RuleRecovery.
                        // throw the original error in order to trigger reSync error recovery
                        throw eFromConsumption;
                    }
                    else {
                        throw eFromInRuleRecovery;
                    }
                }
            }
            else {
                throw eFromConsumption;
            }
        }
        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined
            ? options.LABEL
            : tokType.tokenName, consumedToken);
        return consumedToken;
    };
    // other functionality
    Parser.prototype.saveRecogState = function () {
        // errors is a getter which will clone the errors array
        var savedErrors = this.errors;
        var savedRuleStack = utils_1.cloneArr(this.RULE_STACK);
        return {
            errors: savedErrors,
            lexerState: this.exportLexerState(),
            RULE_STACK: savedRuleStack,
            CST_STACK: this.CST_STACK,
            LAST_EXPLICIT_RULE_STACK: this.LAST_EXPLICIT_RULE_STACK
        };
    };
    Parser.prototype.reloadRecogState = function (newState) {
        this.errors = newState.errors;
        this.importLexerState(newState.lexerState);
        this.RULE_STACK = newState.RULE_STACK;
    };
    Parser.prototype.defineRule = function (ruleName, impl, config) {
        if (this.selfAnalysisDone) {
            throw Error("Grammar rule <" + ruleName + "> may not be defined after the 'performSelfAnalysis' method has been called'\n" +
                "Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.");
        }
        var resyncEnabled = utils_1.has(config, "resyncEnabled")
            ? config.resyncEnabled
            : DEFAULT_RULE_CONFIG.resyncEnabled;
        var recoveryValueFunc = utils_1.has(config, "recoveryValueFunc")
            ? config.recoveryValueFunc
            : DEFAULT_RULE_CONFIG.recoveryValueFunc;
        // performance optimization: Use small integers as keys for the longer human readable "full" rule names.
        // this greatly improves Map access time (as much as 8% for some performance benchmarks).
        /* tslint:disable */
        var shortName = this.ruleShortNameIdx <<
            (keys_1.BITS_FOR_METHOD_IDX + keys_1.BITS_FOR_OCCURRENCE_IDX);
        /* tslint:enable */
        this.ruleShortNameIdx++;
        this.shortRuleNameToFull.put(shortName, ruleName);
        this.fullRuleNameToShort.put(ruleName, shortName);
        function invokeRuleWithTry(args) {
            try {
                // TODO: dynamically get rid of this?
                if (this.outputCst === true) {
                    impl.apply(this, args);
                    return this.CST_STACK[this.CST_STACK.length - 1];
                }
                else {
                    return impl.apply(this, args);
                }
            }
            catch (e) {
                var isFirstInvokedRule = this.RULE_STACK.length === 1;
                // note the reSync is always enabled for the first rule invocation, because we must always be able to
                // reSync with EOF and just output some INVALID ParseTree
                // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking
                // path is really the most valid one
                var reSyncEnabled = resyncEnabled &&
                    !this.isBackTracking() &&
                    this.recoveryEnabled;
                if (exceptions_public_1.isRecognitionException(e)) {
                    if (reSyncEnabled) {
                        var reSyncTokType = this.findReSyncTokenType();
                        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {
                            e.resyncedTokens = this.reSyncTo(reSyncTokType);
                            if (this.outputCst) {
                                var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];
                                partialCstResult.recoveredNode = true;
                                return partialCstResult;
                            }
                            else {
                                return recoveryValueFunc();
                            }
                        }
                        else {
                            if (this.outputCst) {
                                // recovery is only for "real" non nested rules
                                var prevRuleShortName = this.getLastExplicitRuleShortNameNoCst();
                                var preRuleFullName = this.shortRuleNameToFull.get(prevRuleShortName);
                                var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];
                                partialCstResult.recoveredNode = true;
                                this.cstPostNonTerminalRecovery(partialCstResult, preRuleFullName);
                            }
                            // to be handled Further up the call stack
                            throw e;
                        }
                    }
                    else if (isFirstInvokedRule) {
                        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case
                        this.moveToTerminatedState();
                        // the parser should never throw one of its own errors outside its flow.
                        // even if error recovery is disabled
                        return recoveryValueFunc();
                    }
                    else {
                        // to be handled Further up the call stack
                        throw e;
                    }
                }
                else {
                    // some other Error type which we don't know how to handle (for example a built in JavaScript Error)
                    throw e;
                }
            }
            finally {
                this.ruleFinallyStateUpdate();
            }
        }
        var wrappedGrammarRule;
        wrappedGrammarRule = function (idxInCallingRule, args) {
            if (idxInCallingRule === void 0) { idxInCallingRule = 0; }
            this.ruleInvocationStateUpdate(shortName, ruleName, idxInCallingRule);
            return invokeRuleWithTry.call(this, args);
        };
        var ruleNamePropName = "ruleName";
        wrappedGrammarRule[ruleNamePropName] = ruleName;
        return wrappedGrammarRule;
    };
    Parser.prototype.tryInRepetitionRecovery = function (grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {
        var _this = this;
        // TODO: can the resyncTokenType be cached?
        var reSyncTokType = this.findReSyncTokenType();
        var savedLexerState = this.exportLexerState();
        var resyncedTokens = [];
        var passedResyncPoint = false;
        var nextTokenWithoutResync = this.LA(1);
        var currToken = this.LA(1);
        var generateErrorMessage = function () {
            var previousToken = _this.LA(0);
            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce
            // the error that would have been thrown
            var msg = _this.errorMessageProvider.buildMismatchTokenMessage({
                expected: expectedTokType,
                actual: nextTokenWithoutResync,
                previous: previousToken,
                ruleName: _this.getCurrRuleFullName()
            });
            var error = new exceptions_public_1.MismatchedTokenException(msg, nextTokenWithoutResync, _this.LA(0));
            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.
            error.resyncedTokens = utils_1.dropRight(resyncedTokens);
            _this.SAVE_ERROR(error);
        };
        while (!passedResyncPoint) {
            // re-synced to a point where we can safely exit the repetition/
            if (this.tokenMatcher(currToken, expectedTokType)) {
                generateErrorMessage();
                return; // must return here to avoid reverting the inputIdx
            }
            else if (lookAheadFunc.call(this)) {
                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule
                generateErrorMessage();
                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule
                grammarRule.apply(this, grammarRuleArgs);
                return; // must return here to avoid reverting the inputIdx
            }
            else if (this.tokenMatcher(currToken, reSyncTokType)) {
                passedResyncPoint = true;
            }
            else {
                currToken = this.SKIP_TOKEN();
                this.addToResyncTokens(currToken, resyncedTokens);
            }
        }
        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.
        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by
        // "between rules" resync recovery later in the flow.
        this.importLexerState(savedLexerState);
    };
    Parser.prototype.shouldInRepetitionRecoveryBeTried = function (expectTokAfterLastMatch, nextTokIdx) {
        // arguments to try and perform resync into the next iteration of the many are missing
        if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {
            return false;
        }
        // no need to recover, next token is what we expect...
        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {
            return false;
        }
        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path
        // and prefer some backtracking path that includes recovered errors.
        if (this.isBackTracking()) {
            return false;
        }
        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm
        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)
        //noinspection RedundantIfStatementJS
        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {
            return false;
        }
        return true;
    };
    // Error Recovery functionality
    Parser.prototype.getFollowsForInRuleRecovery = function (tokType, tokIdxInRule) {
        var grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);
        var follows = this.getNextPossibleTokenTypes(grammarPath);
        return follows;
    };
    Parser.prototype.tryInRuleRecovery = function (expectedTokType, follows) {
        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {
            var tokToInsert = this.getTokenToInsert(expectedTokType);
            return tokToInsert;
        }
        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {
            var nextTok = this.SKIP_TOKEN();
            this.consumeToken();
            return nextTok;
        }
        throw new InRuleRecoveryException("sad sad panda");
    };
    Parser.prototype.canPerformInRuleRecovery = function (expectedToken, follows) {
        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||
            this.canRecoverWithSingleTokenDeletion(expectedToken));
    };
    Parser.prototype.canRecoverWithSingleTokenInsertion = function (expectedTokType, follows) {
        var _this = this;
        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {
            return false;
        }
        // must know the possible following tokens to perform single token insertion
        if (utils_1.isEmpty(follows)) {
            return false;
        }
        var mismatchedTok = this.LA(1);
        var isMisMatchedTokInFollows = utils_1.find(follows, function (possibleFollowsTokType) {
            return _this.tokenMatcher(mismatchedTok, possibleFollowsTokType);
        }) !== undefined;
        return isMisMatchedTokInFollows;
    };
    Parser.prototype.canRecoverWithSingleTokenDeletion = function (expectedTokType) {
        var isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);
        return isNextTokenWhatIsExpected;
    };
    Parser.prototype.isInCurrentRuleReSyncSet = function (tokenTypeIdx) {
        var followKey = this.getCurrFollowKey();
        var currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);
        return utils_1.contains(currentRuleReSyncSet, tokenTypeIdx);
    };
    Parser.prototype.findReSyncTokenType = function () {
        var allPossibleReSyncTokTypes = this.flattenFollowSet();
        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input
        var nextToken = this.LA(1);
        var k = 2;
        while (true) {
            var nextTokenType = nextToken.tokenType;
            if (utils_1.contains(allPossibleReSyncTokTypes, nextTokenType)) {
                return nextTokenType;
            }
            nextToken = this.LA(k);
            k++;
        }
    };
    Parser.prototype.getCurrFollowKey = function () {
        // the length is at least one as we always add the ruleName to the stack before invoking the rule.
        if (this.RULE_STACK.length === 1) {
            return EOF_FOLLOW_KEY;
        }
        var currRuleShortName = this.getLastExplicitRuleShortName();
        var currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();
        var prevRuleShortName = this.getPreviousExplicitRuleShortName();
        return {
            ruleName: this.shortRuleNameToFullName(currRuleShortName),
            idxInCallingRule: currRuleIdx,
            inRule: this.shortRuleNameToFullName(prevRuleShortName)
        };
    };
    Parser.prototype.buildFullFollowKeyStack = function () {
        var _this = this;
        var explicitRuleStack = this.RULE_STACK;
        var explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;
        if (!utils_1.isEmpty(this.LAST_EXPLICIT_RULE_STACK)) {
            explicitRuleStack = utils_1.map(this.LAST_EXPLICIT_RULE_STACK, function (idx) { return _this.RULE_STACK[idx]; });
            explicitOccurrenceStack = utils_1.map(this.LAST_EXPLICIT_RULE_STACK, function (idx) { return _this.RULE_OCCURRENCE_STACK[idx]; });
        }
        // TODO: only iterate over explicit rules here
        return utils_1.map(explicitRuleStack, function (ruleName, idx) {
            if (idx === 0) {
                return EOF_FOLLOW_KEY;
            }
            return {
                ruleName: _this.shortRuleNameToFullName(ruleName),
                idxInCallingRule: explicitOccurrenceStack[idx],
                inRule: _this.shortRuleNameToFullName(explicitRuleStack[idx - 1])
            };
        });
    };
    Parser.prototype.flattenFollowSet = function () {
        var _this = this;
        var followStack = utils_1.map(this.buildFullFollowKeyStack(), function (currKey) {
            return _this.getFollowSetFromFollowKey(currKey);
        });
        return utils_1.flatten(followStack);
    };
    Parser.prototype.getFollowSetFromFollowKey = function (followKey) {
        if (followKey === EOF_FOLLOW_KEY) {
            return [tokens_public_1.EOF];
        }
        var followName = followKey.ruleName +
            followKey.idxInCallingRule +
            constants_1.IN +
            followKey.inRule;
        return this.resyncFollows.get(followName);
    };
    // It does not make any sense to include a virtual EOF token in the list of resynced tokens
    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)
    Parser.prototype.addToResyncTokens = function (token, resyncTokens) {
        if (!this.tokenMatcher(token, tokens_public_1.EOF)) {
            resyncTokens.push(token);
        }
        return resyncTokens;
    };
    Parser.prototype.reSyncTo = function (tokType) {
        var resyncedTokens = [];
        var nextTok = this.LA(1);
        while (this.tokenMatcher(nextTok, tokType) === false) {
            nextTok = this.SKIP_TOKEN();
            this.addToResyncTokens(nextTok, resyncedTokens);
        }
        // the last token is not part of the error.
        return utils_1.dropRight(resyncedTokens);
    };
    Parser.prototype.attemptInRepetitionRecovery = function (prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker) {
        var key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);
        var firstAfterRepInfo = this.firstAfterRepMap.get(key);
        if (firstAfterRepInfo === undefined) {
            var currRuleName = this.getCurrRuleFullName();
            var ruleGrammar = this.getGAstProductions().get(currRuleName);
            var walker = new nextToksWalker(ruleGrammar, prodOccurrence);
            firstAfterRepInfo = walker.startWalking();
            this.firstAfterRepMap.put(key, firstAfterRepInfo);
        }
        var expectTokAfterLastMatch = firstAfterRepInfo.token;
        var nextTokIdx = firstAfterRepInfo.occurrence;
        var isEndOfRule = firstAfterRepInfo.isEndOfRule;
        // special edge case of a TOP most repetition after which the input should END.
        // this will force an attempt for inRule recovery in that scenario.
        if (this.RULE_STACK.length === 1 &&
            isEndOfRule &&
            expectTokAfterLastMatch === undefined) {
            expectTokAfterLastMatch = tokens_public_1.EOF;
            nextTokIdx = 1;
        }
        if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx)) {
            // TODO: performance optimization: instead of passing the original args here, we modify
            // the args param (or create a new one) and make sure the lookahead func is explicitly provided
            // to avoid searching the cache for it once more.
            this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);
        }
    };
    Parser.prototype.cstNestedInvocationStateUpdate = function (nestedName, shortName) {
        this.CST_STACK.push({
            name: nestedName,
            fullName: this.shortRuleNameToFull.get(this.getLastExplicitRuleShortName()) + nestedName,
            children: {}
        });
    };
    Parser.prototype.cstInvocationStateUpdate = function (fullRuleName, shortName) {
        this.LAST_EXPLICIT_RULE_STACK.push(this.RULE_STACK.length - 1);
        this.CST_STACK.push({
            name: fullRuleName,
            children: {}
        });
    };
    Parser.prototype.cstFinallyStateUpdate = function () {
        this.LAST_EXPLICIT_RULE_STACK.pop();
        this.CST_STACK.pop();
    };
    Parser.prototype.cstNestedFinallyStateUpdate = function () {
        this.CST_STACK.pop();
    };
    // Implementation of parsing DSL
    Parser.prototype.optionInternal = function (actionORMethodDef, occurrence) {
        var key = this.getKeyForAutomaticLookahead(keys_1.OPTION_IDX, occurrence);
        var nestedName = this.nestedRuleBeforeClause(actionORMethodDef, key);
        try {
            return this.optionInternalLogic(actionORMethodDef, occurrence, key);
        }
        finally {
            if (nestedName !== undefined) {
                this.nestedRuleFinallyClause(key, nestedName);
            }
        }
    };
    Parser.prototype.optionInternalNoCst = function (actionORMethodDef, occurrence) {
        var key = this.getKeyForAutomaticLookahead(keys_1.OPTION_IDX, occurrence);
        return this.optionInternalLogic(actionORMethodDef, occurrence, key);
    };
    Parser.prototype.optionInternalLogic = function (actionORMethodDef, occurrence, key) {
        var _this = this;
        var lookAheadFunc = this.getLookaheadFuncForOption(key, occurrence);
        var action;
        var predicate;
        if (actionORMethodDef.DEF !== undefined) {
            action = actionORMethodDef.DEF;
            predicate = actionORMethodDef.GATE;
            // predicate present
            if (predicate !== undefined) {
                var orgLookaheadFunction_1 = lookAheadFunc;
                lookAheadFunc = function () {
                    return (predicate.call(_this) && orgLookaheadFunction_1.call(_this));
                };
            }
        }
        else {
            action = actionORMethodDef;
        }
        if (lookAheadFunc.call(this) === true) {
            return action.call(this);
        }
        return undefined;
    };
    Parser.prototype.atLeastOneInternal = function (prodOccurrence, actionORMethodDef, result) {
        var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_IDX, prodOccurrence);
        var nestedName = this.nestedRuleBeforeClause(actionORMethodDef, laKey);
        try {
            return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, result, laKey);
        }
        finally {
            if (nestedName !== undefined) {
                this.nestedRuleFinallyClause(laKey, nestedName);
            }
        }
    };
    Parser.prototype.atLeastOneInternalNoCst = function (prodOccurrence, actionORMethodDef, result) {
        var key = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_IDX, prodOccurrence);
        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, result, key);
    };
    Parser.prototype.atLeastOneInternalLogic = function (prodOccurrence, actionORMethodDef, result, key) {
        var _this = this;
        var lookAheadFunc = this.getLookaheadFuncForAtLeastOne(key, prodOccurrence);
        var action;
        var predicate;
        if (actionORMethodDef.DEF !== undefined) {
            action = actionORMethodDef.DEF;
            predicate = actionORMethodDef.GATE;
            // predicate present
            if (predicate !== undefined) {
                var orgLookaheadFunction_2 = lookAheadFunc;
                lookAheadFunc = function () {
                    return (predicate.call(_this) && orgLookaheadFunction_2.call(_this));
                };
            }
        }
        else {
            action = actionORMethodDef;
        }
        if (lookAheadFunc.call(this) === true) {
            result.push(action.call(this));
            while (lookAheadFunc.call(this) === true) {
                result.push(action.call(this));
            }
        }
        else {
            throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);
        }
        // note that while it may seem that this can cause an error because by using a recursive call to
        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call
        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.
        // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef, result], lookAheadFunc, keys_1.AT_LEAST_ONE_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneWalker);
        return result;
    };
    Parser.prototype.atLeastOneSepFirstInternal = function (prodOccurrence, options, result) {
        var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence);
        var nestedName = this.nestedRuleBeforeClause(options, laKey);
        try {
            return this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, result, laKey);
        }
        finally {
            if (nestedName !== undefined) {
                this.nestedRuleFinallyClause(laKey, nestedName);
            }
        }
    };
    Parser.prototype.atLeastOneSepFirstInternalNoCst = function (prodOccurrence, options, result) {
        var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence);
        return this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, result, laKey);
    };
    Parser.prototype.atLeastOneSepFirstInternalLogic = function (prodOccurrence, options, result, key) {
        var _this = this;
        var action = options.DEF;
        var separator = options.SEP;
        var firstIterationLookaheadFunc = this.getLookaheadFuncForAtLeastOneSep(key, prodOccurrence);
        var values = result.values;
        var separators = result.separators;
        // 1st iteration
        if (firstIterationLookaheadFunc.call(this) === true) {
            values.push(action.call(this));
            var separatorLookAheadFunc = function () {
                return _this.tokenMatcher(_this.LA(1), separator);
            };
            // 2nd..nth iterations
            while (this.tokenMatcher(this.LA(1), separator) === true) {
                // note that this CONSUME will never enter recovery because
                // the separatorLookAheadFunc checks that the separator really does exist.
                separators.push(this.CONSUME(separator));
                values.push(action.call(this));
            }
            // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [
                prodOccurrence,
                separator,
                separatorLookAheadFunc,
                action,
                interpreter_1.NextTerminalAfterAtLeastOneSepWalker,
                result
            ], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneSepWalker);
        }
        else {
            throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);
        }
        return result;
    };
    Parser.prototype.manyInternal = function (prodOccurrence, actionORMethodDef, result) {
        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_IDX, prodOccurrence);
        var nestedName = this.nestedRuleBeforeClause(actionORMethodDef, laKey);
        try {
            return this.manyInternalLogic(prodOccurrence, actionORMethodDef, result, laKey);
        }
        finally {
            if (nestedName !== undefined) {
                this.nestedRuleFinallyClause(laKey, nestedName);
            }
        }
    };
    Parser.prototype.manyInternalNoCst = function (prodOccurrence, actionORMethodDef, result) {
        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_IDX, prodOccurrence);
        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, result, laKey);
    };
    Parser.prototype.manyInternalLogic = function (prodOccurrence, actionORMethodDef, result, key) {
        var _this = this;
        var lookaheadFunction = this.getLookaheadFuncForMany(key, prodOccurrence);
        var action;
        var predicate;
        if (actionORMethodDef.DEF !== undefined) {
            action = actionORMethodDef.DEF;
            predicate = actionORMethodDef.GATE;
            // predicate present
            if (predicate !== undefined) {
                var orgLookaheadFunction_3 = lookaheadFunction;
                lookaheadFunction = function () {
                    return (predicate.call(_this) && orgLookaheadFunction_3.call(_this));
                };
            }
        }
        else {
            action = actionORMethodDef;
        }
        while (lookaheadFunction.call(this)) {
            result.push(action.call(this));
        }
        // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef, result], lookaheadFunction, keys_1.MANY_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManyWalker);
        return result;
    };
    Parser.prototype.manySepFirstInternal = function (prodOccurrence, options, result) {
        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_SEP_IDX, prodOccurrence);
        var nestedName = this.nestedRuleBeforeClause(options, laKey);
        try {
            return this.manySepFirstInternalLogic(prodOccurrence, options, result, laKey);
        }
        finally {
            if (nestedName !== undefined) {
                this.nestedRuleFinallyClause(laKey, nestedName);
            }
        }
    };
    Parser.prototype.manySepFirstInternalNoCst = function (prodOccurrence, options, result) {
        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_SEP_IDX, prodOccurrence);
        return this.manySepFirstInternalLogic(prodOccurrence, options, result, laKey);
    };
    Parser.prototype.manySepFirstInternalLogic = function (prodOccurrence, options, result, key) {
        var _this = this;
        var action = options.DEF;
        var separator = options.SEP;
        var firstIterationLaFunc = this.getLookaheadFuncForManySep(key, prodOccurrence);
        var values = result.values;
        var separators = result.separators;
        // 1st iteration
        if (firstIterationLaFunc.call(this) === true) {
            values.push(action.call(this));
            var separatorLookAheadFunc = function () {
                return _this.tokenMatcher(_this.LA(1), separator);
            };
            // 2nd..nth iterations
            while (this.tokenMatcher(this.LA(1), separator) === true) {
                // note that this CONSUME will never enter recovery because
                // the separatorLookAheadFunc checks that the separator really does exist.
                separators.push(this.CONSUME(separator));
                values.push(action.call(this));
            }
            // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [
                prodOccurrence,
                separator,
                separatorLookAheadFunc,
                action,
                interpreter_1.NextTerminalAfterManySepWalker,
                result
            ], separatorLookAheadFunc, keys_1.MANY_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManySepWalker);
        }
        return result;
    };
    Parser.prototype.repetitionSepSecondInternal = function (prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker, result) {
        while (separatorLookAheadFunc()) {
            // note that this CONSUME will never enter recovery because
            // the separatorLookAheadFunc checks that the separator really does exist.
            result.separators.push(this.CONSUME(separator));
            result.values.push(action.call(this));
        }
        // we can only arrive to this function after an error
        // has occurred (hence the name 'second') so the following
        // IF will always be entered, its possible to remove it...
        // however it is kept to avoid confusion and be consistent.
        // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
        /* istanbul ignore else */
        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [
            prodOccurrence,
            separator,
            separatorLookAheadFunc,
            action,
            nextTerminalAfterWalker,
            result
        ], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);
    };
    Parser.prototype.orInternalNoCst = function (altsOrOpts, occurrence) {
        var alts = utils_1.isArray(altsOrOpts)
            ? altsOrOpts
            : altsOrOpts.DEF;
        var laFunc = this.getLookaheadFuncForOr(occurrence, alts);
        var altIdxToTake = laFunc.call(this, alts);
        if (altIdxToTake !== undefined) {
            var chosenAlternative = alts[altIdxToTake];
            return chosenAlternative.ALT.call(this);
        }
        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);
    };
    Parser.prototype.orInternal = function (altsOrOpts, occurrence) {
        var laKey = this.getKeyForAutomaticLookahead(keys_1.OR_IDX, occurrence);
        var nestedName = this.nestedRuleBeforeClause(altsOrOpts, laKey);
        try {
            var alts = utils_1.isArray(altsOrOpts)
                ? altsOrOpts
                : altsOrOpts.DEF;
            var laFunc = this.getLookaheadFuncForOr(occurrence, alts);
            var altIdxToTake = laFunc.call(this, alts);
            if (altIdxToTake !== undefined) {
                var chosenAlternative = alts[altIdxToTake];
                var nestedAltBeforeClauseResult = this.nestedAltBeforeClause(chosenAlternative, occurrence, keys_1.OR_IDX, altIdxToTake);
                try {
                    return chosenAlternative.ALT.call(this);
                }
                finally {
                    if (nestedAltBeforeClauseResult !== undefined) {
                        this.nestedRuleFinallyClause(nestedAltBeforeClauseResult.shortName, nestedAltBeforeClauseResult.nestedName);
                    }
                }
            }
            this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);
        }
        finally {
            if (nestedName !== undefined) {
                this.nestedRuleFinallyClause(laKey, nestedName);
            }
        }
    };
    // this actually returns a number, but it is always used as a string (object prop key)
    Parser.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {
        var currRuleShortName = this.getLastExplicitRuleShortName();
        return keys_1.getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);
    };
    Parser.prototype.getLookaheadFuncForOr = function (occurrence, alts) {
        var key = this.getKeyForAutomaticLookahead(keys_1.OR_IDX, occurrence);
        var laFunc = this.lookAheadFuncsCache[key];
        if (laFunc === undefined) {
            var ruleName = this.getCurrRuleFullName();
            var ruleGrammar = this.getGAstProductions().get(ruleName);
            // note that hasPredicates is only computed once.
            var hasPredicates = utils_1.some(alts, function (currAlt) {
                return utils_1.isFunction(currAlt.GATE);
            });
            laFunc = lookahead_1.buildLookaheadFuncForOr(occurrence, ruleGrammar, this.maxLookahead, hasPredicates, this.dynamicTokensEnabled, this.lookAheadBuilderForAlternatives);
            this.lookAheadFuncsCache[key] = laFunc;
            return laFunc;
        }
        else {
            return laFunc;
        }
    };
    // Automatic lookahead calculation
    Parser.prototype.getLookaheadFuncForOption = function (key, occurrence) {
        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.OPTION);
    };
    Parser.prototype.getLookaheadFuncForMany = function (key, occurrence) {
        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.REPETITION);
    };
    Parser.prototype.getLookaheadFuncForManySep = function (key, occurrence) {
        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.REPETITION_WITH_SEPARATOR);
    };
    Parser.prototype.getLookaheadFuncForAtLeastOne = function (key, occurrence) {
        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.REPETITION_MANDATORY);
    };
    Parser.prototype.getLookaheadFuncForAtLeastOneSep = function (key, occurrence) {
        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);
    };
    // TODO: consider caching the error message computed information
    Parser.prototype.raiseNoAltException = function (occurrence, errMsgTypes) {
        var ruleName = this.getCurrRuleFullName();
        var ruleGrammar = this.getGAstProductions().get(ruleName);
        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?
        var lookAheadPathsPerAlternative = lookahead_1.getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);
        var actualTokens = [];
        for (var i = 1; i < this.maxLookahead; i++) {
            actualTokens.push(this.LA(i));
        }
        var previousToken = this.LA(0);
        var errMsg = this.errorMessageProvider.buildNoViableAltMessage({
            expectedPathsPerAlt: lookAheadPathsPerAlternative,
            actual: actualTokens,
            previous: previousToken,
            customUserDescription: errMsgTypes,
            ruleName: this.getCurrRuleFullName()
        });
        throw this.SAVE_ERROR(new exceptions_public_1.NoViableAltException(errMsg, this.LA(1), previousToken));
    };
    Parser.prototype.getLookaheadFuncFor = function (key, occurrence, maxLookahead, prodType) {
        var laFunc = this.lookAheadFuncsCache[key];
        if (laFunc === undefined) {
            var ruleName = this.getCurrRuleFullName();
            var ruleGrammar = this.getGAstProductions().get(ruleName);
            laFunc = lookahead_1.buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, maxLookahead, this.dynamicTokensEnabled, prodType, this.lookAheadBuilderForOptional);
            this.lookAheadFuncsCache[key] = laFunc;
            return laFunc;
        }
        else {
            return laFunc;
        }
    };
    // TODO: consider caching the error message computed information
    Parser.prototype.raiseEarlyExitException = function (occurrence, prodType, userDefinedErrMsg) {
        var ruleName = this.getCurrRuleFullName();
        var ruleGrammar = this.getGAstProductions().get(ruleName);
        var lookAheadPathsPerAlternative = lookahead_1.getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);
        var insideProdPaths = lookAheadPathsPerAlternative[0];
        var actualTokens = [];
        for (var i = 1; i < this.maxLookahead; i++) {
            actualTokens.push(this.LA(i));
        }
        var msg = this.errorMessageProvider.buildEarlyExitMessage({
            expectedIterationPaths: insideProdPaths,
            actual: actualTokens,
            previous: this.LA(0),
            customUserDescription: userDefinedErrMsg,
            ruleName: ruleName
        });
        throw this.SAVE_ERROR(new exceptions_public_1.EarlyExitException(msg, this.LA(1), this.LA(0)));
    };
    Parser.prototype.getLastExplicitRuleShortName = function () {
        var lastExplictIndex = this.LAST_EXPLICIT_RULE_STACK[this.LAST_EXPLICIT_RULE_STACK.length - 1];
        return this.RULE_STACK[lastExplictIndex];
    };
    Parser.prototype.getLastExplicitRuleShortNameNoCst = function () {
        var ruleStack = this.RULE_STACK;
        return ruleStack[ruleStack.length - 1];
    };
    Parser.prototype.getPreviousExplicitRuleShortName = function () {
        var lastExplicitIndex = this.LAST_EXPLICIT_RULE_STACK[this.LAST_EXPLICIT_RULE_STACK.length - 2];
        return this.RULE_STACK[lastExplicitIndex];
    };
    Parser.prototype.getPreviousExplicitRuleShortNameNoCst = function () {
        var ruleStack = this.RULE_STACK;
        return ruleStack[ruleStack.length - 2];
    };
    Parser.prototype.getLastExplicitRuleOccurrenceIndex = function () {
        var lastExplicitIndex = this.LAST_EXPLICIT_RULE_STACK[this.LAST_EXPLICIT_RULE_STACK.length - 1];
        return this.RULE_OCCURRENCE_STACK[lastExplicitIndex];
    };
    Parser.prototype.getLastExplicitRuleOccurrenceIndexNoCst = function () {
        var occurrenceStack = this.RULE_OCCURRENCE_STACK;
        return occurrenceStack[occurrenceStack.length - 1];
    };
    Parser.prototype.nestedRuleBeforeClause = function (methodOpts, laKey) {
        var nestedName;
        if (methodOpts.NAME !== undefined) {
            nestedName = methodOpts.NAME;
            this.nestedRuleInvocationStateUpdate(nestedName, laKey);
            return nestedName;
        }
        else {
            return undefined;
        }
    };
    Parser.prototype.nestedAltBeforeClause = function (methodOpts, occurrence, methodKeyIdx, altIdx) {
        var ruleIdx = this.getLastExplicitRuleShortName();
        var shortName = keys_1.getKeyForAltIndex(ruleIdx, methodKeyIdx, occurrence, altIdx);
        var nestedName;
        if (methodOpts.NAME !== undefined) {
            nestedName = methodOpts.NAME;
            this.nestedRuleInvocationStateUpdate(nestedName, shortName);
            return {
                shortName: shortName,
                nestedName: nestedName
            };
        }
        else {
            return undefined;
        }
    };
    Parser.prototype.nestedRuleFinallyClause = function (laKey, nestedName) {
        var cstStack = this.CST_STACK;
        var nestedRuleCst = cstStack[cstStack.length - 1];
        this.nestedRuleFinallyStateUpdate();
        // this return a different result than the previous invocation because "nestedRuleFinallyStateUpdate" pops the cst stack
        var parentCstNode = cstStack[cstStack.length - 1];
        cst_1.addNoneTerminalToCst(parentCstNode, nestedName, nestedRuleCst);
    };
    Parser.prototype.cstPostTerminal = function (key, consumedToken) {
        // TODO: would save the "current rootCST be faster than locating it for each terminal?
        var rootCst = this.CST_STACK[this.CST_STACK.length - 1];
        cst_1.addTerminalToCst(rootCst, consumedToken, key);
    };
    Parser.prototype.cstPostNonTerminal = function (ruleCstResult, ruleName) {
        cst_1.addNoneTerminalToCst(this.CST_STACK[this.CST_STACK.length - 1], ruleName, ruleCstResult);
    };
    Parser.prototype.cstPostNonTerminalRecovery = function (ruleCstResult, ruleName) {
        // TODO: assumes not first rule, is this assumption always correct?
        cst_1.addNoneTerminalToCst(this.CST_STACK[this.CST_STACK.length - 2], ruleName, ruleCstResult);
    };
    Object.defineProperty(Parser.prototype, "input", {
        get: function () {
            return this.tokVector;
        },
        // lexer related methods
        set: function (newInput) {
            this.reset();
            this.tokVector = newInput;
            this.tokVectorLength = newInput.length;
        },
        enumerable: true,
        configurable: true
    });
    // skips a token and returns the next token
    Parser.prototype.SKIP_TOKEN = function () {
        if (this.currIdx <= this.tokVector.length - 2) {
            this.consumeToken();
            return this.LA(1);
        }
        else {
            return exports.END_OF_FILE;
        }
    };
    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers
    // or lexers dependent on parser context.
    Parser.prototype.LA = function (howMuch) {
        // does: is this optimization (saving tokVectorLength benefits?)
        if (this.currIdx + howMuch < 0 ||
            this.tokVectorLength <= this.currIdx + howMuch) {
            return exports.END_OF_FILE;
        }
        else {
            return this.tokVector[this.currIdx + howMuch];
        }
    };
    Parser.prototype.consumeToken = function () {
        this.currIdx++;
    };
    Parser.prototype.exportLexerState = function () {
        return this.currIdx;
    };
    Parser.prototype.importLexerState = function (newState) {
        this.currIdx = newState;
    };
    Parser.prototype.resetLexerState = function () {
        this.currIdx = -1;
    };
    Parser.prototype.moveToTerminatedState = function () {
        this.currIdx = this.tokVector.length - 1;
    };
    Parser.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {
        return lookahead_1.buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);
    };
    Parser.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {
        return lookahead_1.buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);
    };
    Parser.NO_RESYNC = false;
    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.
    // (normally during the parser's constructor).
    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,
    // for example: duplicate rule names, referencing an unresolved subrule, ect...
    // This flag should not be enabled during normal usage, it is used in special situations, for example when
    // needing to display the parser definition errors in some GUI(online playground).
    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;
    return Parser;
}());
exports.Parser = Parser;
function InRuleRecoveryException(message) {
    this.name = IN_RULE_RECOVERY_EXCEPTION;
    this.message = message;
}
InRuleRecoveryException.prototype = Error.prototype;
//# sourceMappingURL=parser_public.js.map

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lexer_1 = __webpack_require__(60);
var utils_1 = __webpack_require__(0);
var tokens_1 = __webpack_require__(10);
var LexerDefinitionErrorType;
(function (LexerDefinitionErrorType) {
    LexerDefinitionErrorType[LexerDefinitionErrorType["MISSING_PATTERN"] = 0] = "MISSING_PATTERN";
    LexerDefinitionErrorType[LexerDefinitionErrorType["INVALID_PATTERN"] = 1] = "INVALID_PATTERN";
    LexerDefinitionErrorType[LexerDefinitionErrorType["EOI_ANCHOR_FOUND"] = 2] = "EOI_ANCHOR_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["UNSUPPORTED_FLAGS_FOUND"] = 3] = "UNSUPPORTED_FLAGS_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["DUPLICATE_PATTERNS_FOUND"] = 4] = "DUPLICATE_PATTERNS_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["INVALID_GROUP_TYPE_FOUND"] = 5] = "INVALID_GROUP_TYPE_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["PUSH_MODE_DOES_NOT_EXIST"] = 6] = "PUSH_MODE_DOES_NOT_EXIST";
    LexerDefinitionErrorType[LexerDefinitionErrorType["MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE"] = 7] = "MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE";
    LexerDefinitionErrorType[LexerDefinitionErrorType["MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY"] = 8] = "MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY";
    LexerDefinitionErrorType[LexerDefinitionErrorType["MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST"] = 9] = "MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST";
    LexerDefinitionErrorType[LexerDefinitionErrorType["LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED"] = 10] = "LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED";
    LexerDefinitionErrorType[LexerDefinitionErrorType["SOI_ANCHOR_FOUND"] = 11] = "SOI_ANCHOR_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["EMPTY_MATCH_PATTERN"] = 12] = "EMPTY_MATCH_PATTERN";
    LexerDefinitionErrorType[LexerDefinitionErrorType["NO_LINE_BREAKS_FLAGS"] = 13] = "NO_LINE_BREAKS_FLAGS";
    LexerDefinitionErrorType[LexerDefinitionErrorType["UNREACHABLE_PATTERN"] = 14] = "UNREACHABLE_PATTERN";
    LexerDefinitionErrorType[LexerDefinitionErrorType["IDENTIFY_TERMINATOR"] = 15] = "IDENTIFY_TERMINATOR";
    LexerDefinitionErrorType[LexerDefinitionErrorType["CUSTOM_LINE_BREAK"] = 16] = "CUSTOM_LINE_BREAK";
})(LexerDefinitionErrorType = exports.LexerDefinitionErrorType || (exports.LexerDefinitionErrorType = {}));
var DEFAULT_LEXER_CONFIG = {
    deferDefinitionErrorsHandling: false,
    positionTracking: "full",
    lineTerminatorsPattern: /\n|\r\n?/g,
    lineTerminatorCharacters: ["\n", "\r"],
    ensureOptimizations: false,
    safeMode: false
};
Object.freeze(DEFAULT_LEXER_CONFIG);
var Lexer = /** @class */ (function () {
    function Lexer(lexerDefinition, config) {
        if (config === void 0) { config = DEFAULT_LEXER_CONFIG; }
        var _this = this;
        this.lexerDefinition = lexerDefinition;
        this.lexerDefinitionErrors = [];
        this.lexerDefinitionWarning = [];
        this.patternIdxToConfig = {};
        this.charCodeToPatternIdxToConfig = {};
        this.modes = [];
        this.emptyGroups = {};
        this.config = undefined;
        this.trackStartLines = true;
        this.trackEndLines = true;
        this.hasCustom = false;
        this.canModeBeOptimized = {};
        if (typeof config === "boolean") {
            throw Error("The second argument to the Lexer constructor is now an ILexerConfig Object.\n" +
                "a boolean 2nd argument is no longer supported");
        }
        // todo: defaults func?
        this.config = utils_1.merge(DEFAULT_LEXER_CONFIG, config);
        if (this.config.lineTerminatorsPattern ===
            DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {
            // optimized built-in implementation for the defaults definition of lineTerminators
            this.config.lineTerminatorsPattern = lexer_1.LineTerminatorOptimizedTester;
        }
        else {
            if (this.config.lineTerminatorCharacters ===
                DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {
                throw Error("Error: Missing <lineTerminatorCharacters> property on the Lexer config.\n" +
                    "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS");
            }
        }
        if (config.safeMode && config.ensureOptimizations) {
            throw Error('"safeMode" and "ensureOptimizations" flags are mutually exclusive.');
        }
        this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);
        this.trackEndLines = /full/i.test(this.config.positionTracking);
        var hasOnlySingleMode = true;
        var actualDefinition;
        // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.
        if (utils_1.isArray(lexerDefinition)) {
            actualDefinition = { modes: {} };
            actualDefinition.modes[lexer_1.DEFAULT_MODE] = utils_1.cloneArr((lexerDefinition));
            actualDefinition[lexer_1.DEFAULT_MODE] = lexer_1.DEFAULT_MODE;
        }
        else {
            // no conversion needed, input should already be a IMultiModeLexerDefinition
            hasOnlySingleMode = false;
            actualDefinition = utils_1.cloneObj((lexerDefinition));
        }
        this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(lexer_1.performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));
        this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(lexer_1.performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));
        // for extra robustness to avoid throwing an none informative error message
        actualDefinition.modes = actualDefinition.modes
            ? actualDefinition.modes
            : {};
        // an error of undefined TokenTypes will be detected in "performRuntimeChecks" above.
        // this transformation is to increase robustness in the case of partially invalid lexer definition.
        utils_1.forEach(actualDefinition.modes, function (currModeValue, currModeName) {
            actualDefinition.modes[currModeName] = utils_1.reject(currModeValue, function (currTokType) { return utils_1.isUndefined(currTokType); });
        });
        var allModeNames = utils_1.keys(actualDefinition.modes);
        utils_1.forEach(actualDefinition.modes, function (currModDef, currModName) {
            _this.modes.push(currModName);
            _this.lexerDefinitionErrors = _this.lexerDefinitionErrors.concat(lexer_1.validatePatterns(currModDef, allModeNames));
            // If definition errors were encountered, the analysis phase may fail unexpectedly/
            // Considering a lexer with definition errors may never be used, there is no point
            // to performing the analysis anyhow...
            if (utils_1.isEmpty(_this.lexerDefinitionErrors)) {
                tokens_1.augmentTokenTypes(currModDef);
                var currAnalyzeResult = lexer_1.analyzeTokenTypes(currModDef, {
                    lineTerminatorCharacters: _this.config
                        .lineTerminatorCharacters,
                    positionTracking: config.positionTracking,
                    ensureOptimizations: config.ensureOptimizations,
                    safeMode: config.safeMode
                });
                _this.patternIdxToConfig[currModName] =
                    currAnalyzeResult.patternIdxToConfig;
                _this.charCodeToPatternIdxToConfig[currModName] =
                    currAnalyzeResult.charCodeToPatternIdxToConfig;
                _this.emptyGroups = utils_1.merge(_this.emptyGroups, currAnalyzeResult.emptyGroups);
                _this.hasCustom =
                    currAnalyzeResult.hasCustom || _this.hasCustom;
                _this.canModeBeOptimized[currModName] =
                    currAnalyzeResult.canBeOptimized;
            }
        });
        this.defaultMode = actualDefinition.defaultMode;
        if (!utils_1.isEmpty(this.lexerDefinitionErrors) &&
            !this.config.deferDefinitionErrorsHandling) {
            var allErrMessages = utils_1.map(this.lexerDefinitionErrors, function (error) {
                return error.message;
            });
            var allErrMessagesString = allErrMessages.join("-----------------------\n");
            throw new Error("Errors detected in definition of Lexer:\n" +
                allErrMessagesString);
        }
        // Only print warning if there are no errors, This will avoid pl
        utils_1.forEach(this.lexerDefinitionWarning, function (warningDescriptor) {
            utils_1.PRINT_WARNING(warningDescriptor.message);
        });
        // Choose the relevant internal implementations for this specific parser.
        // These implementations should be in-lined by the JavaScript engine
        // to provide optimal performance in each scenario.
        if (lexer_1.SUPPORT_STICKY) {
            this.chopInput = utils_1.IDENTITY;
            this.match = this.matchWithTest;
        }
        else {
            this.updateLastIndex = utils_1.NOOP;
            this.match = this.matchWithExec;
        }
        if (hasOnlySingleMode) {
            this.handleModes = utils_1.NOOP;
        }
        if (this.trackStartLines === false) {
            this.computeNewColumn = utils_1.IDENTITY;
        }
        if (this.trackEndLines === false) {
            this.updateTokenEndLineColumnLocation = utils_1.NOOP;
        }
        if (/full/i.test(this.config.positionTracking)) {
            this.createTokenInstance = this.createFullToken;
        }
        else if (/onlyStart/i.test(this.config.positionTracking)) {
            this.createTokenInstance = this.createStartOnlyToken;
        }
        else if (/onlyOffset/i.test(this.config.positionTracking)) {
            this.createTokenInstance = this.createOffsetOnlyToken;
        }
        else {
            throw Error("Invalid <positionTracking> config option: \"" + this.config.positionTracking + "\"");
        }
        if (this.hasCustom) {
            this.addToken = this.addTokenUsingPush;
        }
        else {
            this.addToken = this.addTokenUsingMemberAccess;
        }
        var unOptimizedModes = utils_1.reduce(this.canModeBeOptimized, function (cannotBeOptimized, canBeOptimized, modeName) {
            if (canBeOptimized === false) {
                cannotBeOptimized.push(modeName);
            }
            return cannotBeOptimized;
        }, []);
        if (config.ensureOptimizations && !utils_1.isEmpty(unOptimizedModes)) {
            throw Error("Lexer Modes: < " + unOptimizedModes.join(", ") + " > cannot be optimized.\n" +
                '\t Disable the "ensureOptimizations" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\n' +
                "\t Or inspect the console log for details on how to resolve these issues.");
        }
    }
    Lexer.prototype.tokenize = function (text, initialMode) {
        if (initialMode === void 0) { initialMode = this.defaultMode; }
        if (!utils_1.isEmpty(this.lexerDefinitionErrors)) {
            var allErrMessages = utils_1.map(this.lexerDefinitionErrors, function (error) {
                return error.message;
            });
            var allErrMessagesString = allErrMessages.join("-----------------------\n");
            throw new Error("Unable to Tokenize because Errors detected in definition of Lexer:\n" +
                allErrMessagesString);
        }
        var lexResult = this.tokenizeInternal(text, initialMode);
        return lexResult;
    };
    // There is quite a bit of duplication between this and "tokenizeInternalLazy"
    // This is intentional due to performance considerations.
    Lexer.prototype.tokenizeInternal = function (text, initialMode) {
        var _this = this;
        var i, j, matchAltImage, longerAltIdx, matchedImage, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;
        var orgText = text;
        var orgLength = orgText.length;
        var offset = 0;
        var matchedTokensIndex = 0;
        // initializing the tokensArray to the "guessed" size.
        // guessing too little will still reduce the number of array re-sizes on pushes.
        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory
        // but would still have a faster runtime by avoiding (All but one) array resizing.
        var guessedNumberOfTokens = this.hasCustom
            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.
            : Math.floor(text.length / 10);
        var matchedTokens = new Array(guessedNumberOfTokens);
        var errors = [];
        var line = this.trackStartLines ? 1 : undefined;
        var column = this.trackStartLines ? 1 : undefined;
        var groups = lexer_1.cloneEmptyGroups(this.emptyGroups);
        var trackLines = this.trackStartLines;
        var lineTerminatorPattern = this.config.lineTerminatorsPattern;
        var currModePatternsLength = 0;
        var patternIdxToConfig = [];
        var currCharCodeToPatternIdxToConfig = [];
        var modeStack = [];
        var emptyArray = [];
        Object.freeze(emptyArray);
        var getPossiblePatterns = undefined;
        var pop_mode = function (popToken) {
            // TODO: perhaps avoid this error in the edge case there is no more input?
            if (modeStack.length === 1 &&
                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a "transition"
                // So no error should occur.
                popToken.tokenType.PUSH_MODE === undefined) {
                // if we try to pop the last mode there lexer will no longer have ANY mode.
                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.
                var msg_1 = "Unable to pop Lexer Mode after encountering Token ->" + popToken.image + "<- The Mode Stack is empty";
                errors.push({
                    offset: popToken.startOffset,
                    line: popToken.startLine !== undefined
                        ? popToken.startLine
                        : undefined,
                    column: popToken.startColumn !== undefined
                        ? popToken.startColumn
                        : undefined,
                    length: popToken.image.length,
                    message: msg_1
                });
            }
            else {
                modeStack.pop();
                var newMode = utils_1.last(modeStack);
                patternIdxToConfig = _this.patternIdxToConfig[newMode];
                currCharCodeToPatternIdxToConfig = _this
                    .charCodeToPatternIdxToConfig[newMode];
                currModePatternsLength = patternIdxToConfig.length;
                var modeCanBeOptimized = _this.canModeBeOptimized[newMode] &&
                    _this.config.safeMode === false;
                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {
                    getPossiblePatterns = function (charCode) {
                        var possiblePatterns = currCharCodeToPatternIdxToConfig[charCode];
                        if (possiblePatterns === undefined) {
                            return emptyArray;
                        }
                        else {
                            return possiblePatterns;
                        }
                    };
                }
                else {
                    getPossiblePatterns = function () {
                        return patternIdxToConfig;
                    };
                }
            }
        };
        function push_mode(newMode) {
            modeStack.push(newMode);
            currCharCodeToPatternIdxToConfig = this
                .charCodeToPatternIdxToConfig[newMode];
            patternIdxToConfig = this.patternIdxToConfig[newMode];
            currModePatternsLength = patternIdxToConfig.length;
            currModePatternsLength = patternIdxToConfig.length;
            var modeCanBeOptimized = this.canModeBeOptimized[newMode] &&
                this.config.safeMode === false;
            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {
                getPossiblePatterns = function (charCode) {
                    var possiblePatterns = currCharCodeToPatternIdxToConfig[charCode];
                    if (possiblePatterns === undefined) {
                        return emptyArray;
                    }
                    else {
                        return possiblePatterns;
                    }
                };
            }
            else {
                getPossiblePatterns = function () {
                    return patternIdxToConfig;
                };
            }
        }
        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not
        // seem to matter performance wise.
        push_mode.call(this, initialMode);
        var currConfig;
        while (offset < orgLength) {
            matchedImage = null;
            var nextCharCode = orgText.charCodeAt(offset);
            var chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);
            var chosenPatternsLength = chosenPatternIdxToConfig.length;
            for (i = 0; i < chosenPatternsLength; i++) {
                currConfig = chosenPatternIdxToConfig[i];
                var currPattern = currConfig.pattern;
                // manually in-lined because > 600 chars won't be in-lined in V8
                var singleCharCode = currConfig.short;
                if (singleCharCode !== false) {
                    if (nextCharCode === singleCharCode) {
                        // single character string
                        matchedImage = currPattern;
                    }
                }
                else if (currConfig.isCustom === true) {
                    match = currPattern.exec(orgText, offset, matchedTokens, groups);
                    matchedImage = match !== null ? match[0] : match;
                }
                else {
                    this.updateLastIndex(currPattern, offset);
                    matchedImage = this.match(currPattern, text, offset);
                }
                if (matchedImage !== null) {
                    // even though this pattern matched we must try a another longer alternative.
                    // this can be used to prioritize keywords over identifiers
                    longerAltIdx = currConfig.longerAlt;
                    if (longerAltIdx !== undefined) {
                        // TODO: micro optimize, avoid extra prop access
                        // by saving/linking longerAlt on the original config?
                        var longerAltConfig = patternIdxToConfig[longerAltIdx];
                        var longerAltPattern = longerAltConfig.pattern;
                        // single Char can never be a longer alt so no need to test it.
                        // manually in-lined because > 600 chars won't be in-lined in V8
                        if (longerAltConfig.isCustom === true) {
                            match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);
                            matchAltImage = match !== null ? match[0] : match;
                        }
                        else {
                            this.updateLastIndex(longerAltPattern, offset);
                            matchAltImage = this.match(longerAltPattern, text, offset);
                        }
                        if (matchAltImage &&
                            matchAltImage.length > matchedImage.length) {
                            matchedImage = matchAltImage;
                            currConfig = longerAltConfig;
                        }
                    }
                    break;
                }
            }
            // successful match
            if (matchedImage !== null) {
                // matchedImage = match[0]
                imageLength = matchedImage.length;
                group = currConfig.group;
                if (group !== undefined) {
                    tokType = currConfig.tokenTypeIdx;
                    // TODO: "offset + imageLength" and the new column may be computed twice in case of "full" location information inside
                    // createFullToken method
                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);
                    if (group === false) {
                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);
                    }
                    else {
                        groups[group].push(newToken);
                    }
                }
                text = this.chopInput(text, imageLength);
                offset = offset + imageLength;
                // TODO: with newlines the column may be assigned twice
                column = this.computeNewColumn(column, imageLength);
                if (trackLines === true &&
                    currConfig.canLineTerminator === true) {
                    var numOfLTsInMatch = 0;
                    var foundTerminator = void 0;
                    var lastLTEndOffset = void 0;
                    lineTerminatorPattern.lastIndex = 0;
                    do {
                        foundTerminator = lineTerminatorPattern.test(matchedImage);
                        if (foundTerminator === true) {
                            lastLTEndOffset =
                                lineTerminatorPattern.lastIndex - 1;
                            numOfLTsInMatch++;
                        }
                    } while (foundTerminator);
                    if (numOfLTsInMatch !== 0) {
                        line = line + numOfLTsInMatch;
                        column = imageLength - lastLTEndOffset;
                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);
                    }
                }
                // will be NOOP if no modes present
                this.handleModes(currConfig, pop_mode, push_mode, newToken);
            }
            else {
                // error recovery, drop characters until we identify a valid token's start point
                var errorStartOffset = offset;
                var errorLine = line;
                var errorColumn = column;
                var foundResyncPoint = false;
                while (!foundResyncPoint && offset < orgLength) {
                    // drop chars until we succeed in matching something
                    droppedChar = orgText.charCodeAt(offset);
                    // Identity Func (when sticky flag is enabled)
                    text = this.chopInput(text, 1);
                    offset++;
                    for (j = 0; j < currModePatternsLength; j++) {
                        var currConfig_1 = patternIdxToConfig[j];
                        var currPattern = currConfig_1.pattern;
                        // manually in-lined because > 600 chars won't be in-lined in V8
                        var singleCharCode = currConfig_1.short;
                        if (singleCharCode !== false) {
                            if (orgText.charCodeAt(offset) === singleCharCode) {
                                // single character string
                                foundResyncPoint = true;
                            }
                        }
                        else if (currConfig_1.isCustom === true) {
                            foundResyncPoint =
                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;
                        }
                        else {
                            this.updateLastIndex(currPattern, offset);
                            foundResyncPoint = currPattern.exec(text) !== null;
                        }
                        if (foundResyncPoint === true) {
                            break;
                        }
                    }
                }
                errLength = offset - errorStartOffset;
                // at this point we either re-synced or reached the end of the input text
                msg =
                    "unexpected character: ->" + orgText.charAt(errorStartOffset) + "<- at offset: " + errorStartOffset + "," +
                        (" skipped " + (offset - errorStartOffset) + " characters.");
                errors.push({
                    offset: errorStartOffset,
                    line: errorLine,
                    column: errorColumn,
                    length: errLength,
                    message: msg
                });
            }
        }
        // if we do have custom patterns which push directly into the
        if (!this.hasCustom) {
            // if we guessed a too large size for the tokens array this will shrink it to the right size.
            matchedTokens.length = matchedTokensIndex;
        }
        return {
            tokens: matchedTokens,
            groups: groups,
            errors: errors
        };
    };
    Lexer.prototype.handleModes = function (config, pop_mode, push_mode, newToken) {
        if (config.pop === true) {
            // need to save the PUSH_MODE property as if the mode is popped
            // patternIdxToPopMode is updated to reflect the new mode after popping the stack
            var pushMode = config.push;
            pop_mode(newToken);
            if (pushMode !== undefined) {
                push_mode.call(this, pushMode);
            }
        }
        else if (config.push !== undefined) {
            push_mode.call(this, config.push);
        }
    };
    Lexer.prototype.chopInput = function (text, length) {
        return text.substring(length);
    };
    Lexer.prototype.updateLastIndex = function (regExp, newLastIndex) {
        regExp.lastIndex = newLastIndex;
    };
    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler
    Lexer.prototype.updateTokenEndLineColumnLocation = function (newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {
        var lastCharIsLT, fixForEndingInLT;
        if (group !== undefined) {
            // a none skipped multi line Token, need to update endLine/endColumn
            lastCharIsLT = lastLTIdx === imageLength - 1;
            fixForEndingInLT = lastCharIsLT ? -1 : 0;
            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {
                // if a token ends in a LT that last LT only affects the line numbering of following Tokens
                newToken.endLine = line + fixForEndingInLT;
                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)
                // inclusive to exclusive range.
                newToken.endColumn = column - 1 + -fixForEndingInLT;
            }
            // else single LT in the last character of a token, no need to modify the endLine/EndColumn
        }
    };
    Lexer.prototype.computeNewColumn = function (oldColumn, imageLength) {
        return oldColumn + imageLength;
    };
    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.
    /* istanbul ignore next - place holder */
    Lexer.prototype.createTokenInstance = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    };
    Lexer.prototype.createOffsetOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType) {
        return {
            image: image,
            startOffset: startOffset,
            tokenTypeIdx: tokenTypeIdx,
            tokenType: tokenType
        };
    };
    Lexer.prototype.createStartOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {
        return {
            image: image,
            startOffset: startOffset,
            startLine: startLine,
            startColumn: startColumn,
            tokenTypeIdx: tokenTypeIdx,
            tokenType: tokenType
        };
    };
    Lexer.prototype.createFullToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {
        return {
            image: image,
            startOffset: startOffset,
            endOffset: startOffset + imageLength - 1,
            startLine: startLine,
            endLine: startLine,
            startColumn: startColumn,
            endColumn: startColumn + imageLength - 1,
            tokenTypeIdx: tokenTypeIdx,
            tokenType: tokenType
        };
    };
    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.
    /* istanbul ignore next - place holder */
    Lexer.prototype.addToken = function (tokenVector, index, tokenToAdd) {
        return 666;
    };
    Lexer.prototype.addTokenUsingPush = function (tokenVector, index, tokenToAdd) {
        tokenVector.push(tokenToAdd);
        return index;
    };
    Lexer.prototype.addTokenUsingMemberAccess = function (tokenVector, index, tokenToAdd) {
        tokenVector[index] = tokenToAdd;
        index++;
        return index;
    };
    /* istanbul ignore next - place holder to be replaced with chosen alternative at runtime */
    Lexer.prototype.match = function (pattern, text, offset) {
        return null;
    };
    Lexer.prototype.matchWithTest = function (pattern, text, offset) {
        var found = pattern.test(text);
        if (found === true) {
            return text.substring(offset, pattern.lastIndex);
        }
        return null;
    };
    Lexer.prototype.matchWithExec = function (pattern, text) {
        var regExpArray = pattern.exec(text);
        return regExpArray !== null ? regExpArray[0] : regExpArray;
    };
    Lexer.SKIPPED = "This marks a skipped Token pattern, this means each token identified by it will" +
        "be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.";
    Lexer.NA = /NOT_APPLICABLE/;
    return Lexer;
}());
exports.Lexer = Lexer;
//# sourceMappingURL=lexer_public.js.map

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// needs a separate module as this is required inside chevrotain productive code
// and also in the entry point for webpack(api.ts).
// A separate file avoids cyclic dependencies and webpack errors.
exports.VERSION = "3.7.0";
//# sourceMappingURL=version.js.map

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(42).goog;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLDeclaration = __webpack_require__(17);

  XMLDocType = __webpack_require__(18);

  XMLCData = __webpack_require__(11);

  XMLComment = __webpack_require__(12);

  XMLElement = __webpack_require__(19);

  XMLRaw = __webpack_require__(21);

  XMLText = __webpack_require__(22);

  XMLProcessingInstruction = __webpack_require__(20);

  XMLDTDAttList = __webpack_require__(13);

  XMLDTDElement = __webpack_require__(14);

  XMLDTDEntity = __webpack_require__(15);

  XMLDTDNotation = __webpack_require__(16);

  XMLWriterBase = __webpack_require__(45);

  module.exports = XMLStringWriter = (function(superClass) {
    extend(XMLStringWriter, superClass);

    function XMLStringWriter(options) {
      XMLStringWriter.__super__.constructor.call(this, options);
    }

    XMLStringWriter.prototype.document = function(doc) {
      var child, i, len, r, ref;
      this.textispresent = false;
      r = '';
      ref = doc.children;
      for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        r += (function() {
          switch (false) {
            case !(child instanceof XMLDeclaration):
              return this.declaration(child);
            case !(child instanceof XMLDocType):
              return this.docType(child);
            case !(child instanceof XMLComment):
              return this.comment(child);
            case !(child instanceof XMLProcessingInstruction):
              return this.processingInstruction(child);
            default:
              return this.element(child, 0);
          }
        }).call(this);
      }
      if (this.pretty && r.slice(-this.newline.length) === this.newline) {
        r = r.slice(0, -this.newline.length);
      }
      return r;
    };

    XMLStringWriter.prototype.attribute = function(att) {
      return ' ' + att.name + '="' + att.value + '"';
    };

    XMLStringWriter.prototype.cdata = function(node, level) {
      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;
    };

    XMLStringWriter.prototype.comment = function(node, level) {
      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;
    };

    XMLStringWriter.prototype.declaration = function(node, level) {
      var r;
      r = this.space(level);
      r += '<?xml version="' + node.version + '"';
      if (node.encoding != null) {
        r += ' encoding="' + node.encoding + '"';
      }
      if (node.standalone != null) {
        r += ' standalone="' + node.standalone + '"';
      }
      r += this.spacebeforeslash + '?>';
      r += this.newline;
      return r;
    };

    XMLStringWriter.prototype.docType = function(node, level) {
      var child, i, len, r, ref;
      level || (level = 0);
      r = this.space(level);
      r += '<!DOCTYPE ' + node.root().name;
      if (node.pubID && node.sysID) {
        r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"';
      } else if (node.sysID) {
        r += ' SYSTEM "' + node.sysID + '"';
      }
      if (node.children.length > 0) {
        r += ' [';
        r += this.newline;
        ref = node.children;
        for (i = 0, len = ref.length; i < len; i++) {
          child = ref[i];
          r += (function() {
            switch (false) {
              case !(child instanceof XMLDTDAttList):
                return this.dtdAttList(child, level + 1);
              case !(child instanceof XMLDTDElement):
                return this.dtdElement(child, level + 1);
              case !(child instanceof XMLDTDEntity):
                return this.dtdEntity(child, level + 1);
              case !(child instanceof XMLDTDNotation):
                return this.dtdNotation(child, level + 1);
              case !(child instanceof XMLCData):
                return this.cdata(child, level + 1);
              case !(child instanceof XMLComment):
                return this.comment(child, level + 1);
              case !(child instanceof XMLProcessingInstruction):
                return this.processingInstruction(child, level + 1);
              default:
                throw new Error("Unknown DTD node type: " + child.constructor.name);
            }
          }).call(this);
        }
        r += ']';
      }
      r += this.spacebeforeslash + '>';
      r += this.newline;
      return r;
    };

    XMLStringWriter.prototype.element = function(node, level) {
      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;
      level || (level = 0);
      textispresentwasset = false;
      if (this.textispresent) {
        this.newline = '';
        this.pretty = false;
      } else {
        this.newline = this.newlinedefault;
        this.pretty = this.prettydefault;
      }
      space = this.space(level);
      r = '';
      r += space + '<' + node.name;
      ref = node.attributes;
      for (name in ref) {
        if (!hasProp.call(ref, name)) continue;
        att = ref[name];
        r += this.attribute(att);
      }
      if (node.children.length === 0 || node.children.every(function(e) {
        return e.value === '';
      })) {
        if (this.allowEmpty) {
          r += '></' + node.name + '>' + this.newline;
        } else {
          r += this.spacebeforeslash + '/>' + this.newline;
        }
      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {
        r += '>';
        r += node.children[0].value;
        r += '</' + node.name + '>' + this.newline;
      } else {
        if (this.dontprettytextnodes) {
          ref1 = node.children;
          for (i = 0, len = ref1.length; i < len; i++) {
            child = ref1[i];
            if (child.value != null) {
              this.textispresent++;
              textispresentwasset = true;
              break;
            }
          }
        }
        if (this.textispresent) {
          this.newline = '';
          this.pretty = false;
          space = this.space(level);
        }
        r += '>' + this.newline;
        ref2 = node.children;
        for (j = 0, len1 = ref2.length; j < len1; j++) {
          child = ref2[j];
          r += (function() {
            switch (false) {
              case !(child instanceof XMLCData):
                return this.cdata(child, level + 1);
              case !(child instanceof XMLComment):
                return this.comment(child, level + 1);
              case !(child instanceof XMLElement):
                return this.element(child, level + 1);
              case !(child instanceof XMLRaw):
                return this.raw(child, level + 1);
              case !(child instanceof XMLText):
                return this.text(child, level + 1);
              case !(child instanceof XMLProcessingInstruction):
                return this.processingInstruction(child, level + 1);
              default:
                throw new Error("Unknown XML node type: " + child.constructor.name);
            }
          }).call(this);
        }
        if (textispresentwasset) {
          this.textispresent--;
        }
        if (!this.textispresent) {
          this.newline = this.newlinedefault;
          this.pretty = this.prettydefault;
        }
        r += space + '</' + node.name + '>' + this.newline;
      }
      return r;
    };

    XMLStringWriter.prototype.processingInstruction = function(node, level) {
      var r;
      r = this.space(level) + '<?' + node.target;
      if (node.value) {
        r += ' ' + node.value;
      }
      r += this.spacebeforeslash + '?>' + this.newline;
      return r;
    };

    XMLStringWriter.prototype.raw = function(node, level) {
      return this.space(level) + node.value + this.newline;
    };

    XMLStringWriter.prototype.text = function(node, level) {
      return this.space(level) + node.value + this.newline;
    };

    XMLStringWriter.prototype.dtdAttList = function(node, level) {
      var r;
      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;
      if (node.defaultValueType !== '#DEFAULT') {
        r += ' ' + node.defaultValueType;
      }
      if (node.defaultValue) {
        r += ' "' + node.defaultValue + '"';
      }
      r += this.spacebeforeslash + '>' + this.newline;
      return r;
    };

    XMLStringWriter.prototype.dtdElement = function(node, level) {
      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;
    };

    XMLStringWriter.prototype.dtdEntity = function(node, level) {
      var r;
      r = this.space(level) + '<!ENTITY';
      if (node.pe) {
        r += ' %';
      }
      r += ' ' + node.name;
      if (node.value) {
        r += ' "' + node.value + '"';
      } else {
        if (node.pubID && node.sysID) {
          r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"';
        } else if (node.sysID) {
          r += ' SYSTEM "' + node.sysID + '"';
        }
        if (node.nData) {
          r += ' NDATA ' + node.nData;
        }
      }
      r += this.spacebeforeslash + '>' + this.newline;
      return r;
    };

    XMLStringWriter.prototype.dtdNotation = function(node, level) {
      var r;
      r = this.space(level) + '<!NOTATION ' + node.name;
      if (node.pubID && node.sysID) {
        r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"';
      } else if (node.pubID) {
        r += ' PUBLIC "' + node.pubID + '"';
      } else if (node.sysID) {
        r += ' SYSTEM "' + node.sysID + '"';
      }
      r += this.spacebeforeslash + '>' + this.newline;
      return r;
    };

    XMLStringWriter.prototype.openNode = function(node, level) {
      var att, name, r, ref;
      level || (level = 0);
      if (node instanceof XMLElement) {
        r = this.space(level) + '<' + node.name;
        ref = node.attributes;
        for (name in ref) {
          if (!hasProp.call(ref, name)) continue;
          att = ref[name];
          r += this.attribute(att);
        }
        r += (node.children ? '>' : '/>') + this.newline;
        return r;
      } else {
        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;
        if (node.pubID && node.sysID) {
          r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"';
        } else if (node.sysID) {
          r += ' SYSTEM "' + node.sysID + '"';
        }
        r += (node.children ? ' [' : '>') + this.newline;
        return r;
      }
    };

    XMLStringWriter.prototype.closeNode = function(node, level) {
      level || (level = 0);
      switch (false) {
        case !(node instanceof XMLElement):
          return this.space(level) + '</' + node.name + '>' + this.newline;
        case !(node instanceof XMLDocType):
          return this.space(level) + ']>' + this.newline;
      }
    };

    return XMLStringWriter;

  })(XMLWriterBase);

}).call(this);


/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = parse;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chevrotain__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chevrotain___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_chevrotain__);
/**
 * Parser
 *
 * Define parser rules
 *
 * @file   This files defines the LNParser class and parse function.
 * @author Ellen Vanhove.
 */
// Using ES6 style imports, this means Webpack 2 can perform tree shaking


const lntokens = __webpack_require__(23);

let LNLexer = lntokens.LNLexer;
let allTokens = lntokens.allTokens;

let Label = lntokens.Label;
let Delimiter = lntokens.Delimiter;
let MultipleDelimiters = lntokens.MultipleDelimiters;

let Literal = lntokens.Literal;
let StringLiteral = lntokens.StringLiteral;
let ColorLiteral = lntokens.ColorLiteral;
let NumberLiteral = lntokens.NumberLiteral;
let ChoiceLiteral = lntokens.ChoiceLiteral;


let Forever = lntokens.Forever;
let End = lntokens.End;
let RepeatUntil = lntokens.RepeatUntil;
let Repeat = lntokens.Repeat;
let If = lntokens.If;
let Else = lntokens.Else;
let Then = lntokens.Then;

let LCurlyBracket = lntokens.LCurlyBracket;
let RCurlyBracket = lntokens.RCurlyBracket;
let LRoundBracket = lntokens.LRoundBracket;
let RRoundBracket = lntokens.RRoundBracket;
let RAngleBracket = lntokens.RAngleBracket;
let LAngleBracket = lntokens.LAngleBracket;

let Modifier = lntokens.Modifier;
let ID = lntokens.ID;

let Comment = lntokens.Comment;

//REMINDER: remove chevroitain.emptyalt
//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\
// ----------------- parser -----------------
// Note that this is a Pure grammar, it only describes the grammar
// Not any actions (semantics) to perform during parsing.
function LNParser(input) {
    __WEBPACK_IMPORTED_MODULE_0_chevrotain__["Parser"].call(this, input, allTokens, {
        outputCst: true
    });

    const $ = this;

    $.RULE("code", () => {
        $.SUBRULE($.delimiters);
        $.OPTION(() => {
            $.SUBRULE($.comments);
        })
        $.OPTION2(() => {
            $.SUBRULE($.stack);
            $.MANY({
                DEF: () => {
                    $.SUBRULE($.stackDelimiter);
                    $.OPTION3(() => {
                        $.SUBRULE2($.stack);
                    })
                }
            });
        })
        //$.CONSUME(chevrotain.EOF);
    });


    $.RULE("delimiters", () => {
        $.OR([{
            ALT: () => {
                $.CONSUME(Delimiter, {
                    LABEL: "leadingCodeDelimiters"
                });
            }
        }, {
            ALT: () => {
                $.CONSUME(MultipleDelimiters, {
                    LABEL: "leadingCodeDelimiters"
                });
            },
        }, {
            ALT: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["EMPTY_ALT"])()
        }])
    })

    $.RULE("stackDelimiter", () => {
        $.AT_LEAST_ONE({
            DEF: () => {
                $.OR([{
                    ALT: () => {
                        $.CONSUME(MultipleDelimiters, {
                            LABEL: "intermediateCodeDelimiters"
                        });
                    }
                }, {
                    ALT: () => {
                        $.SUBRULE($.comments);
                    }
                }]);
            }
        });
    });

    $.RULE("comments", () => {
        $.AT_LEAST_ONE(() => {
            $.SUBRULE($.comment);
            $.SUBRULE($.delimiters, {
                LABEL: "trailingCommentsDelimiters"
            });
        });
    });

    $.RULE("stack", () => {
        $.SUBRULE($.block);
        $.MANY(() => {
            $.CONSUME(Delimiter, {
                LABEL: "intermediateStackDelimiter"
            });
            $.SUBRULE2($.block);
        });
        $.OPTION(() => {
            $.CONSUME2(Delimiter, {
                LABEL: "trailingStackDelimiter"
            });
        })
    });

    $.RULE("block", () => {
        $.OR([{
            ALT: () => {
                $.SUBRULE($.atomic);
            }
        }, {
            ALT: () => {
                $.SUBRULE($.composite);
            }
        }]);
    });

    $.RULE("atomic", () => {
        $.AT_LEAST_ONE(() => {
            $.OR([{
                ALT: () => {
                    $.CONSUME(Label);
                }
            }, {
                ALT: () => {
                    $.SUBRULE($.argument);
                }
            }]);
        });
        $.SUBRULE($.annotations);
    });

    $.RULE("composite", () => {
        $.OR([{
            ALT: () => {
                $.SUBRULE($.ifelse);
            }
        }, {
            ALT: () => {
                $.SUBRULE($.forever);
            }
        }, {
            ALT: () => {
                $.SUBRULE($.repeat);
            }
        }, {
            ALT: () => {
                $.SUBRULE($.repeatuntil);
            }
        }]);
    });

    $.RULE("ifelse", () => {
        $.CONSUME(If);
        $.SUBRULE($.condition);
        $.OPTION(() => {
            $.CONSUME(Then);
        });
        $.SUBRULE($.annotations);
        $.SUBRULE($.clause, {
            LABEL: "ifClause"
        });
        $.OPTION3(() => {
            /*$.OPTION4(() => {
                $.CONSUME(Delimiter, {
                    LABEL: "trailingIfClauseDelimiter"
                });
            });*/
            $.CONSUME(Else);
            $.SUBRULE3($.clause, {
                LABEL: "elseClause"
            });
        });
    });

    $.RULE("forever", () => {
        $.CONSUME(Forever);
        $.SUBRULE($.annotations);
        $.SUBRULE($.clause);
    });


    $.RULE("repeat", () => {
        $.CONSUME(Repeat);
        $.SUBRULE($.argument);
        $.SUBRULE($.annotations);
        $.SUBRULE($.clause);
    });

    $.RULE("repeatuntil", () => {
        $.CONSUME(RepeatUntil);
        $.SUBRULE($.condition);
        $.SUBRULE($.annotations);
        $.SUBRULE($.clause);
    });




    $.RULE("clause", () => {
        $.OPTION(() => {
            $.CONSUME(Delimiter, {
                LABEL: "leadingClauseDelimiter"
            });
        });
        $.OPTION2(() => {
            $.SUBRULE($.stack);
        });
        $.OPTION3(() => {
            $.CONSUME(End);
        })
    });

    $.RULE("annotations", () => {
        $.SUBRULE($.modifiers);
        $.SUBRULE($.id);
        $.OPTION(() => {
            $.SUBRULE($.comment);
        });

    });

    $.RULE("modifiers", () => {
        $.MANY(() => {
            $.CONSUME(Modifier);
        })
    });

    $.RULE("id", () => {
        $.OPTION(() => {
            $.CONSUME(ID);
        });
    });

    $.RULE("comment", () => {
        $.CONSUME(Comment);
        $.SUBRULE($.modifiers);
        $.SUBRULE($.id);
    });

    $.RULE("argument", () => {
        $.OR([{
            ALT: () => {
                $.CONSUME(LCurlyBracket);
                $.OR2([{
                    ALT: () => {
                        $.CONSUME(Literal);
                    }
                }, {
                    ALT: () => {
                        $.CONSUME(Label);
                    }
                }, {
                    ALT: () => {
                        $.SUBRULE($.expression);
                    }
                }, {
                    ALT: () => {
                        $.SUBRULE($.predicate);
                    }
                }, {
                    NAME: "$empty",
                    ALT: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["EMPTY_ALT"])()
                }, ]);
                $.SUBRULE($.id);
                $.CONSUME(RCurlyBracket);
            }
        }, {
            ALT: () => {
                $.OR3([{
                    ALT: () => {
                        $.CONSUME(StringLiteral, {
                            LABEL: "Literal"
                        });
                    }
                }, {
                    ALT: () => {
                        $.CONSUME(ColorLiteral, {
                            LABEL: "Literal"
                        });
                    }
                }, {
                    ALT: () => {
                        $.CONSUME(ChoiceLiteral, {
                            LABEL: "Literal"
                        });
                    }
                }, {
                    ALT: () => {
                        $.SUBRULE2($.expression);
                    }
                }, {
                    ALT: () => {
                        $.SUBRULE2($.predicate);
                    }
                }]);
            }
        }])

    });

    $.RULE("condition", () => {
        $.OR([{
            ALT: () => {
                $.CONSUME(LCurlyBracket);
                $.OR2([{
                    ALT: () => {
                        $.SUBRULE($.predicate);
                    }
                }, {
                    NAME: "$empty",
                    ALT: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["EMPTY_ALT"])()
                }, ]);
                $.OPTION2(() => {
                    $.CONSUME(ID);
                });
                $.CONSUME(RCurlyBracket);
            }
        }, {
            ALT: () => {
                $.SUBRULE2($.predicate);
            }
        }])
    });

    $.RULE("expression", () => {
        $.CONSUME(LRoundBracket);
        $.OPTION(() => {
            $.SUBRULE($.atomic);
        });
        $.CONSUME(RRoundBracket);
    });


    $.RULE("predicate", () => {
        $.CONSUME(LAngleBracket);
        $.OPTION(() => {
            $.SUBRULE($.atomic);
        });
        $.CONSUME(RAngleBracket);
    });


    // very important to call this after all the rules have been defined.
    // otherwise the parser may not work correctly as it will lack information
    // derived during the self analysis phase.
    __WEBPACK_IMPORTED_MODULE_0_chevrotain__["Parser"].performSelfAnalysis(this);
}

//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\
LNParser.prototype = Object.create(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["Parser"].prototype);
LNParser.prototype.constructor = LNParser;

// wrapping it all together
// reuse the same parser instance.
const lnparser = new LNParser([]);
/* harmony export (immutable) */ __webpack_exports__["b"] = lnparser;


function parse(text) {
    //console.log('seperate file, function');
    const lexResult = LNLexer.tokenize(text);
    // setting a new input will RESET the parser instance's state.
    //console.log(lexResult.tokens);
    lnparser.input = lexResult.tokens;
    // any top level rule may be used as an entry point
    const value = lnparser.code(); //TOP RULE
    return {
        value: value,
        lexErrors: lexResult.errors,
        parseErrors: lnparser.errors
    }
}



/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = universalBlockConverter;
/* harmony export (immutable) */ __webpack_exports__["d"] = addType;
/* harmony export (immutable) */ __webpack_exports__["g"] = variableBlockConverter;
/* harmony export (immutable) */ __webpack_exports__["c"] = listBlockConverter;
/* harmony export (immutable) */ __webpack_exports__["f"] = messageShadowBlockconverter;
/* harmony export (immutable) */ __webpack_exports__["e"] = messageBlockconverter;
/* harmony export (immutable) */ __webpack_exports__["h"] = stopConverter;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__IDManager__ = __webpack_require__(46);
let blocks = {};
/* harmony default export */ __webpack_exports__["a"] = (blocks);



/**
 *
 * @param ctx
 * @param visitor
 * @param arg definition from the structure
 * @param i the index of the argument in the ctx
 */
function makeArgument(ctx, visitor, arg, i) {
    if (arg.menu) {
        visitor.xml = visitor.xml.ele('value', {
            'name': arg.name
        });
        visitor.xml.ele('shadow', {
            'type': arg.menu //this was added to the json and was not default.
        }).ele('field', {
            'name': arg.name
        }, visitor.infoVisitor.getString(ctx.argument[i])); // '_mouse_'
        visitor.xml = visitor.xml.up();
    } else if (arg.type === 'input_value') {
        visitor.xml = visitor.xml.ele('value', {
            'name': arg.name
        });
        visitor.visit(ctx.argument[i]);
        visitor.xml = visitor.xml.up();
    } else if (arg.type === 'field_dropdown') {
        visitor.xml = visitor.xml.ele('field', {
            'name': arg.name
        }, visitor.infoVisitor.getString(ctx.argument[i]));
        visitor.xml = visitor.xml.up();
    }
}

function universalBlockConverter(ctx, visitor, structure) {
    if (structure.shape === "hatblock") {
        visitor.interruptStack();
    }
    addType(ctx, visitor, structure.type);
    for (let i = 0; ctx.argument && i < ctx.argument.length; i++) {
        let arg = structure.args[i];
        makeArgument(ctx, visitor, arg, i);
    }
    if (structure.shape === "hatblock") {
        visitor.startStack();
    }
    if (structure.shape === "capblock") {
        visitor.interruptStack();
    }
}


function addType(ctx, visitor, type) {
    let blockid = visitor.idManager.getNextBlockID(visitor.infoVisitor.getID(ctx, "atomic"));
    visitor.xml = visitor.xml.ele('block', {
        'id': blockid,
        'type': type
    });
    visitor.state.addBlock(blockid);
};

//=======================================================================================================================================
// variable and list operations require special treatment considering the IDS
//=======================================================================================================================================

function variableBlockConverter(ctx, visitor, structure) {
    addType(ctx, visitor, structure.type);
    //name of the variable
    let varble = visitor.infoVisitor.getString(ctx.argument[0]);
    //function must be called to register VariableID
    visitor.idManager.acquireVariableID(varble);
    visitor.xml = visitor.xml.ele('field', {
        'name': 'VARIABLE'
    }, varble);
    if(structure.args.length>1) {
        visitor.xml = visitor.xml.up().ele('value', {
            'name': 'VALUE'
        });
    }
    //the second argument.
    visitor.visit(ctx.argument[1]);
    visitor.xml = visitor.xml.up();
}

//todo
function listBlockConverter(ctx, visitor, structure) {
    addType(ctx, visitor, structure.type);
    for (let i = 0; i < ctx.argument.length; i++) {
        let arg = structure.args[i];
        if (arg.name === 'LIST') {
            let varble = visitor.infoVisitor.getString(ctx.argument[i]);
            visitor.idManager.acquireVariableID(varble, __WEBPACK_IMPORTED_MODULE_0__IDManager__["a" /* LIST */]);
            visitor.xml = visitor.xml.ele('field', {
                'name': 'LIST',
                'variabletype': 'list',
            }, varble);
            visitor.xml = visitor.xml.up();
        } else {
            makeArgument(ctx, visitor, arg, i);
        }
    }
}

//todo
function messageShadowBlockconverter(ctx, visitor, structure) {
    addType(ctx, visitor, structure.type);
    let varble = visitor.infoVisitor.getString(ctx.argument[0]);
    let arg = structure.args[0];
    let id = visitor.idManager.acquireVariableID(varble, __WEBPACK_IMPORTED_MODULE_0__IDManager__["b" /* BROADCAST */]);

    visitor.xml = visitor.xml.ele('value', {
        'name': arg.name
    });
    visitor.xml.ele('shadow', {
        'type': "event_broadcast_menu"
    }).ele('field', {
        'name': 'BROADCAST_OPTION',
        'variabletype': "broadcast_msg",
        'id': id
    }, varble);
    visitor.xml = visitor.xml.up();
}

// "when I receive %1"
function messageBlockconverter(ctx, visitor, structure) {
    if (structure.shape === "hatblock") {
        visitor.interruptStack();
    }
    addType(ctx, visitor, structure.type);

    let varble = visitor.infoVisitor.getString(ctx.argument[0]);
    let arg = structure.args[0];
    let id = visitor.idManager.acquireVariableID(varble, __WEBPACK_IMPORTED_MODULE_0__IDManager__["b" /* BROADCAST */]);

    visitor.xml.ele('field', {
        'name': "BROADCAST_OPTION",
        'variabletype': "broadcast_msg",
        'id': id
    }, varble);
    if (structure.shape === "hatblock") {
        visitor.startStack();
    }
}

//todo
function stopConverter(ctx, visitor, structure) {
    addType(ctx, visitor, structure.type);
    visitor.xml = visitor.xml.ele('field', {
        'name': "STOP_OPTION"
    }, visitor.infoVisitor.getString(ctx.argument[0]));
    visitor.xml = visitor.xml.up();
    visitor.interruptStack();
}

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// TODO: can this be removed? where is it used?
exports.IN = "_~IN~_";
//# sourceMappingURL=constants.js.map

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var lang_extensions_1 = __webpack_require__(5);
var keys_1 = __webpack_require__(39);
var gast_public_1 = __webpack_require__(1);
var gast_visitor_public_1 = __webpack_require__(6);
function addTerminalToCst(node, token, tokenTypeName) {
    if (node.children[tokenTypeName] === undefined) {
        node.children[tokenTypeName] = [token];
    }
    else {
        node.children[tokenTypeName].push(token);
    }
}
exports.addTerminalToCst = addTerminalToCst;
function addNoneTerminalToCst(node, ruleName, ruleResult) {
    if (node.children[ruleName] === undefined) {
        node.children[ruleName] = [ruleResult];
    }
    else {
        node.children[ruleName].push(ruleResult);
    }
}
exports.addNoneTerminalToCst = addNoneTerminalToCst;
var NamedDSLMethodsCollectorVisitor = /** @class */ (function (_super) {
    __extends(NamedDSLMethodsCollectorVisitor, _super);
    function NamedDSLMethodsCollectorVisitor(ruleIdx) {
        var _this = _super.call(this) || this;
        _this.result = [];
        _this.ruleIdx = ruleIdx;
        return _this;
    }
    NamedDSLMethodsCollectorVisitor.prototype.collectNamedDSLMethod = function (node, newNodeConstructor, methodIdx) {
        // TODO: better hack to copy what we need here...
        if (!utils_1.isUndefined(node.name)) {
            // copy without name so this will indeed be processed later.
            var nameLessNode 
            /* istanbul ignore else */
            = void 0;
            /* istanbul ignore else */
            if (node instanceof gast_public_1.Option ||
                node instanceof gast_public_1.Repetition ||
                node instanceof gast_public_1.RepetitionMandatory ||
                node instanceof gast_public_1.Alternation) {
                nameLessNode = new newNodeConstructor({
                    definition: node.definition,
                    idx: node.idx
                });
            }
            else if (node instanceof gast_public_1.RepetitionMandatoryWithSeparator ||
                node instanceof gast_public_1.RepetitionWithSeparator) {
                nameLessNode = new newNodeConstructor({
                    definition: node.definition,
                    idx: node.idx,
                    separator: node.separator
                });
            }
            else {
                throw Error("non exhaustive match");
            }
            var def = [nameLessNode];
            var key = keys_1.getKeyForAutomaticLookahead(this.ruleIdx, methodIdx, node.idx);
            this.result.push({ def: def, key: key, name: node.name, orgProd: node });
        }
    };
    NamedDSLMethodsCollectorVisitor.prototype.visitOption = function (node) {
        this.collectNamedDSLMethod(node, gast_public_1.Option, keys_1.OPTION_IDX);
    };
    NamedDSLMethodsCollectorVisitor.prototype.visitRepetition = function (node) {
        this.collectNamedDSLMethod(node, gast_public_1.Repetition, keys_1.MANY_IDX);
    };
    NamedDSLMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (node) {
        this.collectNamedDSLMethod(node, gast_public_1.RepetitionMandatory, keys_1.AT_LEAST_ONE_IDX);
    };
    NamedDSLMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {
        this.collectNamedDSLMethod(node, gast_public_1.RepetitionMandatoryWithSeparator, keys_1.AT_LEAST_ONE_SEP_IDX);
    };
    NamedDSLMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (node) {
        this.collectNamedDSLMethod(node, gast_public_1.RepetitionWithSeparator, keys_1.MANY_SEP_IDX);
    };
    NamedDSLMethodsCollectorVisitor.prototype.visitAlternation = function (node) {
        var _this = this;
        this.collectNamedDSLMethod(node, gast_public_1.Alternation, keys_1.OR_IDX);
        var hasMoreThanOneAlternative = node.definition.length > 1;
        utils_1.forEach(node.definition, function (currFlatAlt, altIdx) {
            if (!utils_1.isUndefined(currFlatAlt.name)) {
                var def = currFlatAlt.definition;
                if (hasMoreThanOneAlternative) {
                    def = [new gast_public_1.Option({ definition: currFlatAlt.definition })];
                }
                else {
                    // mandatory
                    def = currFlatAlt.definition;
                }
                var key = keys_1.getKeyForAltIndex(_this.ruleIdx, keys_1.OR_IDX, node.idx, altIdx);
                _this.result.push({
                    def: def,
                    key: key,
                    name: currFlatAlt.name,
                    orgProd: currFlatAlt
                });
            }
        });
    };
    return NamedDSLMethodsCollectorVisitor;
}(gast_visitor_public_1.GAstVisitor));
exports.NamedDSLMethodsCollectorVisitor = NamedDSLMethodsCollectorVisitor;
function analyzeCst(topRules, fullToShortName) {
    var result = {
        dictDef: new lang_extensions_1.HashTable(),
        allRuleNames: []
    };
    utils_1.forEach(topRules, function (currTopRule) {
        var currTopRuleShortName = fullToShortName.get(currTopRule.name);
        result.allRuleNames.push(currTopRule.name);
        var namedCollectorVisitor = new NamedDSLMethodsCollectorVisitor(currTopRuleShortName);
        currTopRule.accept(namedCollectorVisitor);
        utils_1.forEach(namedCollectorVisitor.result, function (_a) {
            var def = _a.def, key = _a.key, name = _a.name;
            result.allRuleNames.push(currTopRule.name + name);
        });
    });
    return result;
}
exports.analyzeCst = analyzeCst;
//# sourceMappingURL=cst.js.map

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var MISMATCHED_TOKEN_EXCEPTION = "MismatchedTokenException";
var NO_VIABLE_ALT_EXCEPTION = "NoViableAltException";
var EARLY_EXIT_EXCEPTION = "EarlyExitException";
var NOT_ALL_INPUT_PARSED_EXCEPTION = "NotAllInputParsedException";
var RECOGNITION_EXCEPTION_NAMES = [
    MISMATCHED_TOKEN_EXCEPTION,
    NO_VIABLE_ALT_EXCEPTION,
    EARLY_EXIT_EXCEPTION,
    NOT_ALL_INPUT_PARSED_EXCEPTION
];
Object.freeze(RECOGNITION_EXCEPTION_NAMES);
// hacks to bypass no support for custom Errors in javascript/typescript
function isRecognitionException(error) {
    // can't do instanceof on hacked custom js exceptions
    return utils_1.contains(RECOGNITION_EXCEPTION_NAMES, error.name);
}
exports.isRecognitionException = isRecognitionException;
function MismatchedTokenException(message, token, previousToken) {
    this.name = MISMATCHED_TOKEN_EXCEPTION;
    this.message = message;
    this.token = token;
    this.previousToken = previousToken;
    this.resyncedTokens = [];
}
exports.MismatchedTokenException = MismatchedTokenException;
// must use the "Error.prototype" instead of "new Error"
// because the stack trace points to where "new Error" was invoked"
MismatchedTokenException.prototype = Error.prototype;
function NoViableAltException(message, token, previousToken) {
    this.name = NO_VIABLE_ALT_EXCEPTION;
    this.message = message;
    this.token = token;
    this.previousToken = previousToken;
    this.resyncedTokens = [];
}
exports.NoViableAltException = NoViableAltException;
NoViableAltException.prototype = Error.prototype;
function NotAllInputParsedException(message, token) {
    this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;
    this.message = message;
    this.token = token;
    this.resyncedTokens = [];
}
exports.NotAllInputParsedException = NotAllInputParsedException;
NotAllInputParsedException.prototype = Error.prototype;
function EarlyExitException(message, token, previousToken) {
    this.name = EARLY_EXIT_EXCEPTION;
    this.message = message;
    this.token = token;
    this.previousToken = previousToken;
    this.resyncedTokens = [];
}
exports.EarlyExitException = EarlyExitException;
EarlyExitException.prototype = Error.prototype;
//# sourceMappingURL=exceptions_public.js.map

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var gast_public_1 = __webpack_require__(1);
var gast_1 = __webpack_require__(9);
function first(prod) {
    /* istanbul ignore else */
    if (prod instanceof gast_public_1.NonTerminal) {
        // this could in theory cause infinite loops if
        // (1) prod A refs prod B.
        // (2) prod B refs prod A
        // (3) AB can match the empty set
        // in other words a cycle where everything is optional so the first will keep
        // looking ahead for the next optional part and will never exit
        // currently there is no safeguard for this unique edge case because
        // (1) not sure a grammar in which this can happen is useful for anything (productive)
        return first(prod.referencedRule);
    }
    else if (prod instanceof gast_public_1.Terminal) {
        return firstForTerminal(prod);
    }
    else if (gast_1.isSequenceProd(prod)) {
        return firstForSequence(prod);
    }
    else if (gast_1.isBranchingProd(prod)) {
        return firstForBranching(prod);
    }
    else {
        throw Error("non exhaustive match");
    }
}
exports.first = first;
function firstForSequence(prod) {
    var firstSet = [];
    var seq = prod.definition;
    var nextSubProdIdx = 0;
    var hasInnerProdsRemaining = seq.length > nextSubProdIdx;
    var currSubProd;
    // so we enter the loop at least once (if the definition is not empty
    var isLastInnerProdOptional = true;
    // scan a sequence until it's end or until we have found a NONE optional production in it
    while (hasInnerProdsRemaining && isLastInnerProdOptional) {
        currSubProd = seq[nextSubProdIdx];
        isLastInnerProdOptional = gast_1.isOptionalProd(currSubProd);
        firstSet = firstSet.concat(first(currSubProd));
        nextSubProdIdx = nextSubProdIdx + 1;
        hasInnerProdsRemaining = seq.length > nextSubProdIdx;
    }
    return utils_1.uniq(firstSet);
}
exports.firstForSequence = firstForSequence;
function firstForBranching(prod) {
    var allAlternativesFirsts = utils_1.map(prod.definition, function (innerProd) {
        return first(innerProd);
    });
    return utils_1.uniq(utils_1.flatten(allAlternativesFirsts));
}
exports.firstForBranching = firstForBranching;
function firstForTerminal(terminal) {
    return [terminal.terminalType];
}
exports.firstForTerminal = firstForTerminal;
//# sourceMappingURL=first.js.map

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var lang_extensions_1 = __webpack_require__(5);
var resolver_1 = __webpack_require__(59);
var checks_1 = __webpack_require__(8);
var errors_public_1 = __webpack_require__(24);
var gast_1 = __webpack_require__(9);
function resolveGrammar(options) {
    options = utils_1.defaults(options, {
        errMsgProvider: errors_public_1.defaultGrammarResolverErrorProvider
    });
    var topRulesTable = new lang_extensions_1.HashTable();
    utils_1.forEach(options.rules, function (rule) {
        topRulesTable.put(rule.name, rule);
    });
    return resolver_1.resolveGrammar(topRulesTable, options.errMsgProvider);
}
exports.resolveGrammar = resolveGrammar;
function validateGrammar(options) {
    options = utils_1.defaults(options, {
        errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,
        ignoredIssues: {}
    });
    return checks_1.validateGrammar(options.rules, options.maxLookahead, options.tokenTypes, options.ignoredIssues, options.errMsgProvider, options.grammarName);
}
exports.validateGrammar = validateGrammar;
function assignOccurrenceIndices(options) {
    utils_1.forEach(options.rules, function (currRule) {
        var methodsCollector = new gast_1.DslMethodsCollectorVisitor();
        currRule.accept(methodsCollector);
        utils_1.forEach(methodsCollector.dslMethods, function (methods) {
            utils_1.forEach(methods, function (currMethod, arrIdx) {
                currMethod.idx = arrIdx + 1;
            });
        });
    });
}
exports.assignOccurrenceIndices = assignOccurrenceIndices;
//# sourceMappingURL=gast_resolver_public.js.map

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Lookahead keys are 32Bit integers in the form
// TTTTTTTTT-ZZZZZZZZZZZZZZZ-YYYY-XXXX
// XXXX -> Occurrence Index bitmap.
// YYYY -> DSL Method Name bitmap.
// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.
// TTTTTTTTT -> alternation alternative index bitmap
Object.defineProperty(exports, "__esModule", { value: true });
exports.BITS_FOR_METHOD_IDX = 4;
exports.BITS_FOR_OCCURRENCE_IDX = 4;
exports.BITS_FOR_RULE_IDX = 24;
// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.
exports.BITS_FOR_ALT_IDX = 8;
// short string used as part of mapping keys.
// being short improves the performance when composing KEYS for maps out of these
// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)
/* tslint:disable */
exports.OR_IDX = 1 << exports.BITS_FOR_METHOD_IDX;
exports.OPTION_IDX = 2 << exports.BITS_FOR_METHOD_IDX;
exports.MANY_IDX = 3 << exports.BITS_FOR_METHOD_IDX;
exports.AT_LEAST_ONE_IDX = 4 << exports.BITS_FOR_METHOD_IDX;
exports.MANY_SEP_IDX = 5 << exports.BITS_FOR_METHOD_IDX;
exports.AT_LEAST_ONE_SEP_IDX = 6 << exports.BITS_FOR_METHOD_IDX;
/* tslint:enable */
// this actually returns a number, but it is always used as a string (object prop key)
function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {
    /* tslint:disable */
    return occurrence | dslMethodIdx | ruleIdx;
    /* tslint:enable */
}
exports.getKeyForAutomaticLookahead = getKeyForAutomaticLookahead;
var BITS_START_FOR_ALT_IDX = 32 - exports.BITS_FOR_ALT_IDX;
function getKeyForAltIndex(ruleIdx, dslMethodIdx, occurrence, altIdx) {
    /* tslint:disable */
    // alternative indices are zero based, thus must always add one (turn on one bit) to guarantee uniqueness.
    var altIdxBitMap = (altIdx + 1) << BITS_START_FOR_ALT_IDX;
    return (getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) |
        altIdxBitMap);
    /* tslint:enable */
}
exports.getKeyForAltIndex = getKeyForAltIndex;
//# sourceMappingURL=keys.js.map

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var interpreter_1 = __webpack_require__(25);
var rest_1 = __webpack_require__(26);
var tokens_1 = __webpack_require__(10);
var gast_public_1 = __webpack_require__(1);
var gast_visitor_public_1 = __webpack_require__(6);
var PROD_TYPE;
(function (PROD_TYPE) {
    PROD_TYPE[PROD_TYPE["OPTION"] = 0] = "OPTION";
    PROD_TYPE[PROD_TYPE["REPETITION"] = 1] = "REPETITION";
    PROD_TYPE[PROD_TYPE["REPETITION_MANDATORY"] = 2] = "REPETITION_MANDATORY";
    PROD_TYPE[PROD_TYPE["REPETITION_MANDATORY_WITH_SEPARATOR"] = 3] = "REPETITION_MANDATORY_WITH_SEPARATOR";
    PROD_TYPE[PROD_TYPE["REPETITION_WITH_SEPARATOR"] = 4] = "REPETITION_WITH_SEPARATOR";
    PROD_TYPE[PROD_TYPE["ALTERNATION"] = 5] = "ALTERNATION";
})(PROD_TYPE = exports.PROD_TYPE || (exports.PROD_TYPE = {}));
function getProdType(prod) {
    /* istanbul ignore else */
    if (prod instanceof gast_public_1.Option) {
        return PROD_TYPE.OPTION;
    }
    else if (prod instanceof gast_public_1.Repetition) {
        return PROD_TYPE.REPETITION;
    }
    else if (prod instanceof gast_public_1.RepetitionMandatory) {
        return PROD_TYPE.REPETITION_MANDATORY;
    }
    else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {
        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;
    }
    else if (prod instanceof gast_public_1.RepetitionWithSeparator) {
        return PROD_TYPE.REPETITION_WITH_SEPARATOR;
    }
    else if (prod instanceof gast_public_1.Alternation) {
        return PROD_TYPE.ALTERNATION;
    }
    else {
        throw Error("non exhaustive match");
    }
}
exports.getProdType = getProdType;
function buildLookaheadFuncForOr(occurrence, ruleGrammar, k, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {
    var lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, k);
    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)
        ? tokens_1.tokenStructuredMatcherNoCategories
        : tokens_1.tokenStructuredMatcher;
    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);
}
exports.buildLookaheadFuncForOr = buildLookaheadFuncForOr;
/**
 *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare
 *  the lookahead "inside" the production and the lookahead immediately "after" it in the same top level rule (context free).
 *
 *  Example: given a production:
 *  ABC(DE)?DF
 *
 *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two
 *  alternatives.
 *
 *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.
 */
function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {
    var lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);
    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)
        ? tokens_1.tokenStructuredMatcherNoCategories
        : tokens_1.tokenStructuredMatcher;
    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);
}
exports.buildLookaheadFuncForOptionalProd = buildLookaheadFuncForOptionalProd;
function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {
    var numOfAlts = alts.length;
    var areAllOneTokenLookahead = utils_1.every(alts, function (currAlt) {
        return utils_1.every(currAlt, function (currPath) {
            return currPath.length === 1;
        });
    });
    // This version takes into account the predicates as well.
    if (hasPredicates) {
        /**
         * @returns {number} - The chosen alternative index
         */
        return function (orAlts) {
            // unfortunately the predicates must be extracted every single time
            // as they cannot be cached due to references to parameters(vars) which are no longer valid.
            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)
            var predicates = utils_1.map(orAlts, function (currAlt) { return currAlt.GATE; });
            for (var t = 0; t < numOfAlts; t++) {
                var currAlt = alts[t];
                var currNumOfPaths = currAlt.length;
                var currPredicate = predicates[t];
                if (currPredicate !== undefined &&
                    currPredicate.call(this) === false) {
                    // if the predicate does not match there is no point in checking the paths
                    continue;
                }
                nextPath: for (var j = 0; j < currNumOfPaths; j++) {
                    var currPath = currAlt[j];
                    var currPathLength = currPath.length;
                    for (var i = 0; i < currPathLength; i++) {
                        var nextToken = this.LA(i + 1);
                        if (tokenMatcher(nextToken, currPath[i]) === false) {
                            // mismatch in current path
                            // try the next pth
                            continue nextPath;
                        }
                    }
                    // found a full path that matches.
                    // this will also work for an empty ALT as the loop will be skipped
                    return t;
                }
                // none of the paths for the current alternative matched
                // try the next alternative
            }
            // none of the alternatives could be matched
            return undefined;
        };
    }
    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {
        // optimized (common) case of all the lookaheads paths requiring only
        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.
        var singleTokenAlts = utils_1.map(alts, function (currAlt) {
            return utils_1.flatten(currAlt);
        });
        var choiceToAlt_1 = utils_1.reduce(singleTokenAlts, function (result, currAlt, idx) {
            utils_1.forEach(currAlt, function (currTokType) {
                if (!utils_1.has(result, currTokType.tokenTypeIdx)) {
                    result[currTokType.tokenTypeIdx] = idx;
                }
                utils_1.forEach(currTokType.categoryMatches, function (currExtendingType) {
                    if (!utils_1.has(result, currExtendingType)) {
                        result[currExtendingType] = idx;
                    }
                });
            });
            return result;
        }, []);
        /**
         * @returns {number} - The chosen alternative index
         */
        return function () {
            var nextToken = this.LA(1);
            return choiceToAlt_1[nextToken.tokenTypeIdx];
        };
    }
    else {
        // optimized lookahead without needing to check the predicates at all.
        // this causes code duplication which is intentional to improve performance.
        /**
         * @returns {number} - The chosen alternative index
         */
        return function () {
            for (var t = 0; t < numOfAlts; t++) {
                var currAlt = alts[t];
                var currNumOfPaths = currAlt.length;
                nextPath: for (var j = 0; j < currNumOfPaths; j++) {
                    var currPath = currAlt[j];
                    var currPathLength = currPath.length;
                    for (var i = 0; i < currPathLength; i++) {
                        var nextToken = this.LA(i + 1);
                        if (tokenMatcher(nextToken, currPath[i]) === false) {
                            // mismatch in current path
                            // try the next pth
                            continue nextPath;
                        }
                    }
                    // found a full path that matches.
                    // this will also work for an empty ALT as the loop will be skipped
                    return t;
                }
                // none of the paths for the current alternative matched
                // try the next alternative
            }
            // none of the alternatives could be matched
            return undefined;
        };
    }
}
exports.buildAlternativesLookAheadFunc = buildAlternativesLookAheadFunc;
function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {
    var areAllOneTokenLookahead = utils_1.every(alt, function (currPath) {
        return currPath.length === 1;
    });
    var numOfPaths = alt.length;
    // optimized (common) case of all the lookaheads paths requiring only
    // a single token lookahead.
    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {
        var singleTokensTypes = utils_1.flatten(alt);
        if (singleTokensTypes.length === 1 &&
            utils_1.isEmpty(singleTokensTypes[0].categoryMatches)) {
            var expectedTokenType = singleTokensTypes[0];
            var expectedTokenUniqueKey_1 = expectedTokenType.tokenTypeIdx;
            return function () {
                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey_1;
            };
        }
        else {
            var choiceToAlt_2 = utils_1.reduce(singleTokensTypes, function (result, currTokType, idx) {
                result[currTokType.tokenTypeIdx] = true;
                utils_1.forEach(currTokType.categoryMatches, function (currExtendingType) {
                    result[currExtendingType] = true;
                });
                return result;
            }, []);
            return function () {
                var nextToken = this.LA(1);
                return choiceToAlt_2[nextToken.tokenTypeIdx] === true;
            };
        }
    }
    else {
        return function () {
            nextPath: for (var j = 0; j < numOfPaths; j++) {
                var currPath = alt[j];
                var currPathLength = currPath.length;
                for (var i = 0; i < currPathLength; i++) {
                    var nextToken = this.LA(i + 1);
                    if (tokenMatcher(nextToken, currPath[i]) === false) {
                        // mismatch in current path
                        // try the next pth
                        continue nextPath;
                    }
                }
                // found a full path that matches.
                return true;
            }
            // none of the paths matched
            return false;
        };
    }
}
exports.buildSingleAlternativeLookaheadFunction = buildSingleAlternativeLookaheadFunction;
var RestDefinitionFinderWalker = /** @class */ (function (_super) {
    __extends(RestDefinitionFinderWalker, _super);
    function RestDefinitionFinderWalker(topProd, targetOccurrence, targetProdType) {
        var _this = _super.call(this) || this;
        _this.topProd = topProd;
        _this.targetOccurrence = targetOccurrence;
        _this.targetProdType = targetProdType;
        return _this;
    }
    RestDefinitionFinderWalker.prototype.startWalking = function () {
        this.walk(this.topProd);
        return this.restDef;
    };
    RestDefinitionFinderWalker.prototype.checkIsTarget = function (node, expectedProdType, currRest, prevRest) {
        if (node.idx === this.targetOccurrence &&
            this.targetProdType === expectedProdType) {
            this.restDef = currRest.concat(prevRest);
            return true;
        }
        // performance optimization, do not iterate over the entire Grammar ast after we have found the target
        return false;
    };
    RestDefinitionFinderWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {
        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, optionProd, currRest, prevRest);
        }
    };
    RestDefinitionFinderWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {
        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, atLeastOneProd, currRest, prevRest);
        }
    };
    RestDefinitionFinderWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {
        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, atLeastOneSepProd, currRest, prevRest);
        }
    };
    RestDefinitionFinderWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {
        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, manyProd, currRest, prevRest);
        }
    };
    RestDefinitionFinderWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {
        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, manySepProd, currRest, prevRest);
        }
    };
    return RestDefinitionFinderWalker;
}(rest_1.RestWalker));
/**
 * Returns the definition of a target production in a top level level rule.
 */
var InsideDefinitionFinderVisitor = /** @class */ (function (_super) {
    __extends(InsideDefinitionFinderVisitor, _super);
    function InsideDefinitionFinderVisitor(targetOccurrence, targetProdType) {
        var _this = _super.call(this) || this;
        _this.targetOccurrence = targetOccurrence;
        _this.targetProdType = targetProdType;
        _this.result = [];
        return _this;
    }
    InsideDefinitionFinderVisitor.prototype.checkIsTarget = function (node, expectedProdName) {
        if (node.idx === this.targetOccurrence &&
            this.targetProdType === expectedProdName) {
            this.result = node.definition;
        }
    };
    InsideDefinitionFinderVisitor.prototype.visitOption = function (node) {
        this.checkIsTarget(node, PROD_TYPE.OPTION);
    };
    InsideDefinitionFinderVisitor.prototype.visitRepetition = function (node) {
        this.checkIsTarget(node, PROD_TYPE.REPETITION);
    };
    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatory = function (node) {
        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);
    };
    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {
        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);
    };
    InsideDefinitionFinderVisitor.prototype.visitRepetitionWithSeparator = function (node) {
        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);
    };
    InsideDefinitionFinderVisitor.prototype.visitAlternation = function (node) {
        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);
    };
    return InsideDefinitionFinderVisitor;
}(gast_visitor_public_1.GAstVisitor));
function lookAheadSequenceFromAlternatives(altsDefs, k) {
    function getOtherPaths(pathsAndSuffixes, filterIdx) {
        return utils_1.reduce(pathsAndSuffixes, function (result, currPathsAndSuffixes, currIdx) {
            if (currIdx !== filterIdx) {
                var currPartialPaths = utils_1.map(currPathsAndSuffixes, function (singlePathAndSuffix) { return singlePathAndSuffix.partialPath; });
                return result.concat(currPartialPaths);
            }
            return result;
        }, []);
    }
    function isUniquePrefix(arr, item) {
        return (utils_1.find(arr, function (currOtherPath) {
            return utils_1.every(item, function (currPathTok, idx) { return currPathTok === currOtherPath[idx]; });
        }) === undefined);
    }
    function initializeArrayOfArrays(size) {
        var result = [];
        for (var i = 0; i < size; i++) {
            result.push([]);
        }
        return result;
    }
    var partialAlts = utils_1.map(altsDefs, function (currAlt) { return interpreter_1.possiblePathsFrom([currAlt], 1); });
    var finalResult = initializeArrayOfArrays(partialAlts.length);
    var newData = partialAlts;
    // maxLookahead loop
    for (var pathLength = 1; pathLength <= k; pathLength++) {
        var currDataset = newData;
        newData = initializeArrayOfArrays(currDataset.length);
        // alternatives loop
        for (var resultIdx = 0; resultIdx < currDataset.length; resultIdx++) {
            var currAltPathsAndSuffixes = currDataset[resultIdx];
            var otherPaths = getOtherPaths(currDataset, resultIdx);
            // paths in current alternative loop
            for (var currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {
                var currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;
                var suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;
                var isUnique = isUniquePrefix(otherPaths, currPathPrefix);
                // even if a path is not unique, but there are no longer alternatives to try
                // or if we have reached the maximum lookahead (k) permitted.
                if (isUnique ||
                    utils_1.isEmpty(suffixDef) ||
                    currPathPrefix.length === k) {
                    var currAltResult = finalResult[resultIdx];
                    if (!containsPath(currAltResult, currPathPrefix)) {
                        currAltResult.push(currPathPrefix);
                    }
                }
                else {
                    var newPartialPathsAndSuffixes = interpreter_1.possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);
                    newData[resultIdx] = newData[resultIdx].concat(newPartialPathsAndSuffixes);
                }
            }
        }
    }
    return finalResult;
}
exports.lookAheadSequenceFromAlternatives = lookAheadSequenceFromAlternatives;
function getLookaheadPathsForOr(occurrence, ruleGrammar, k) {
    var visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION);
    ruleGrammar.accept(visitor);
    return lookAheadSequenceFromAlternatives(visitor.result, k);
}
exports.getLookaheadPathsForOr = getLookaheadPathsForOr;
function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {
    var insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);
    ruleGrammar.accept(insideDefVisitor);
    var insideDef = insideDefVisitor.result;
    var afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);
    var afterDef = afterDefWalker.startWalking();
    var insideFlat = new gast_public_1.Flat({ definition: insideDef });
    var afterFlat = new gast_public_1.Flat({ definition: afterDef });
    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);
}
exports.getLookaheadPathsForOptionalProd = getLookaheadPathsForOptionalProd;
function containsPath(alternative, path) {
    var found = utils_1.find(alternative, function (otherPath) {
        return (path.length === otherPath.length &&
            utils_1.every(path, function (targetItem, idx) {
                return targetItem === otherPath[idx];
            }));
    });
    return found !== undefined;
}
exports.containsPath = containsPath;
function isStrictPrefixOfPath(prefix, other) {
    return (prefix.length < other.length &&
        utils_1.every(prefix, function (tokType, idx) {
            return tokType === other[idx];
        }));
}
exports.isStrictPrefixOfPath = isStrictPrefixOfPath;
function areTokenCategoriesNotUsed(lookAheadPaths) {
    return utils_1.every(lookAheadPaths, function (singleAltPaths) {
        return utils_1.every(singleAltPaths, function (singlePath) {
            return utils_1.every(singlePath, function (token) { return utils_1.isEmpty(token.categoryMatches); });
        });
    });
}
exports.areTokenCategoriesNotUsed = areTokenCategoriesNotUsed;
//# sourceMappingURL=lookahead.js.map

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;;(function(root, factory) {
    // istanbul ignore next
    if (true) {
        // istanbul ignore next
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
    } else if (typeof module === "object" && module.exports) {
        module.exports = factory()
    } else {
        // istanbul ignore next
        root.regexpToAst = factory()
    }
})(
    typeof self !== "undefined"
        ? // istanbul ignore next
          self
        : this,
    function() {
        // references
        // https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983
        // https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern
        function RegExpParser() {}

        RegExpParser.prototype.saveState = function() {
            return {
                idx: this.idx,
                input: this.input,
                groupIdx: this.groupIdx
            }
        }

        RegExpParser.prototype.restoreState = function(newState) {
            this.idx = newState.idx
            this.input = newState.input
            this.groupIdx = newState.groupIdx
        }

        RegExpParser.prototype.pattern = function(input) {
            // parser state
            this.idx = 0
            this.input = input
            this.groupIdx = 0

            this.consumeChar("/")
            var value = this.disjunction()
            this.consumeChar("/")

            var flags = {
                type: "Flags",
                global: false,
                ignoreCase: false,
                multiLine: false,
                unicode: false,
                sticky: false
            }

            while (this.isRegExpFlag()) {
                switch (this.popChar()) {
                    case "g":
                        addFlag(flags, "global")
                        break
                    case "i":
                        addFlag(flags, "ignoreCase")
                        break
                    case "m":
                        addFlag(flags, "multiLine")
                        break
                    case "u":
                        addFlag(flags, "unicode")
                        break
                    case "y":
                        addFlag(flags, "sticky")
                        break
                }
            }

            if (this.idx !== this.input.length) {
                throw Error(
                    "Redundant input: " + this.input.substring(this.idx)
                )
            }
            return { type: "Pattern", flags: flags, value: value }
        }

        RegExpParser.prototype.disjunction = function() {
            var alts = []
            alts.push(this.alternative())

            while (this.peekChar() === "|") {
                this.consumeChar("|")
                alts.push(this.alternative())
            }

            return { type: "Disjunction", value: alts }
        }

        RegExpParser.prototype.alternative = function() {
            var terms = []

            while (this.isTerm()) {
                terms.push(this.term())
            }

            return { type: "Alternative", value: terms }
        }

        RegExpParser.prototype.term = function() {
            if (this.isAssertion()) {
                return this.assertion()
            } else {
                return this.atom()
            }
        }

        RegExpParser.prototype.assertion = function() {
            switch (this.popChar()) {
                case "^":
                    return { type: "StartAnchor" }
                case "$":
                    return { type: "EndAnchor" }
                // '\b' or '\B'
                case "\\":
                    switch (this.popChar()) {
                        case "b":
                            return { type: "WordBoundary" }
                        case "B":
                            return { type: "NonWordBoundary" }
                    }
                    // istanbul ignore next
                    throw Error("Invalid Assertion Escape")
                // '(?=' or '(?!'
                case "(":
                    this.consumeChar("?")

                    var type
                    switch (this.popChar()) {
                        case "=":
                            type = "Lookahead"
                            break
                        case "!":
                            type = "NegativeLookahead"
                            break
                    }
                    ASSERT_EXISTS(type)

                    var disjunction = this.disjunction()

                    this.consumeChar(")")

                    return { type: type, value: disjunction }
            }
            // istanbul ignore next
            ASSERT_NEVER_REACH_HERE()
        }

        RegExpParser.prototype.quantifier = function() {
            var range
            switch (this.popChar()) {
                case "*":
                    range = {
                        atLeast: 0,
                        atMost: Infinity
                    }
                    break
                case "+":
                    range = {
                        atLeast: 1,
                        atMost: Infinity
                    }
                    break
                case "?":
                    range = {
                        atLeast: 0,
                        atMost: 1
                    }
                    break
                case "{":
                    var atLeast = this.integerIncludingZero()
                    switch (this.popChar()) {
                        case "}":
                            range = {
                                atLeast: atLeast,
                                atMost: atLeast
                            }
                            break
                        case ",":
                            var atMost
                            if (this.isDigit()) {
                                atMost = this.integerIncludingZero()
                                range = {
                                    atLeast: atLeast,
                                    atMost: atMost
                                }
                            } else {
                                range = {
                                    atLeast: atLeast,
                                    atMost: Infinity
                                }
                            }
                            this.consumeChar("}")
                            break
                    }
                    ASSERT_EXISTS(range)
                    break
            }

            ASSERT_EXISTS(range)

            if (this.peekChar(0) === "?") {
                this.consumeChar("?")
                range.greedy = false
            } else {
                range.greedy = true
            }

            range.type = "Quantifier"
            return range
        }

        RegExpParser.prototype.atom = function() {
            var atom
            switch (this.peekChar()) {
                case ".":
                    atom = this.dotAll()
                    break
                case "\\":
                    atom = this.atomEscape()
                    break
                case "[":
                    atom = this.characterClass()
                    break
                case "(":
                    atom = this.group()
                    break
            }

            if (atom === undefined && this.isPatternCharacter()) {
                atom = this.patternCharacter()
            }

            ASSERT_EXISTS(atom)

            if (this.isQuantifier()) {
                atom.quantifier = this.quantifier()
            }

            return atom
        }

        RegExpParser.prototype.dotAll = function() {
            this.consumeChar(".")
            return {
                type: "Set",
                complement: true,
                value: [cc("\n"), cc("\r"), cc("\u2028"), cc("\u2029")]
            }
        }

        RegExpParser.prototype.atomEscape = function() {
            this.consumeChar("\\")

            switch (this.peekChar()) {
                case "1":
                case "2":
                case "3":
                case "4":
                case "5":
                case "6":
                case "7":
                case "8":
                case "9":
                    return this.decimalEscapeAtom()
                case "d":
                case "D":
                case "s":
                case "S":
                case "w":
                case "W":
                    return this.characterClassEscape()
                case "f":
                case "n":
                case "r":
                case "t":
                case "v":
                    return this.controlEscapeAtom()
                case "c":
                    return this.controlLetterEscapeAtom()
                case "0":
                    return this.nulCharacterAtom()
                case "x":
                    return this.hexEscapeSequenceAtom()
                case "u":
                    return this.regExpUnicodeEscapeSequenceAtom()
                default:
                    return this.identityEscapeAtom()
            }
        }

        RegExpParser.prototype.decimalEscapeAtom = function() {
            var value = this.positiveInteger()

            return { type: "GroupBackReference", value: value }
        }

        RegExpParser.prototype.characterClassEscape = function() {
            var set
            var complement = false
            switch (this.popChar()) {
                case "d":
                    set = digitsCharCodes
                    break
                case "D":
                    set = digitsCharCodes
                    complement = true
                    break
                case "s":
                    set = whitespaceCodes
                    break
                case "S":
                    set = whitespaceCodes
                    complement = true
                    break
                case "w":
                    set = wordCharCodes
                    break
                case "W":
                    set = wordCharCodes
                    complement = true
                    break
            }

            ASSERT_EXISTS(set)

            return { type: "Set", value: set, complement: complement }
        }

        RegExpParser.prototype.controlEscapeAtom = function() {
            var escapeCode
            switch (this.popChar()) {
                case "f":
                    escapeCode = cc("\f")
                    break
                case "n":
                    escapeCode = cc("\n")
                    break
                case "r":
                    escapeCode = cc("\r")
                    break
                case "t":
                    escapeCode = cc("\t")
                    break
                case "v":
                    escapeCode = cc("\v")
                    break
            }
            ASSERT_EXISTS(escapeCode)

            return { type: "Character", value: escapeCode }
        }

        RegExpParser.prototype.controlLetterEscapeAtom = function() {
            this.consumeChar("c")
            var letter = this.popChar()
            if (/[a-zA-Z]/.test(letter) === false) {
                throw Error("Invalid ")
            }

            var letterCode = letter.toUpperCase().charCodeAt(0) - 64
            return { type: "Character", value: letterCode }
        }

        RegExpParser.prototype.nulCharacterAtom = function() {
            // TODO implement '[lookahead ∉ DecimalDigit]'
            // TODO: for the deprecated octal escape sequence
            this.consumeChar("0")
            return { type: "Character", value: cc("\0") }
        }

        RegExpParser.prototype.hexEscapeSequenceAtom = function() {
            this.consumeChar("x")
            return this.parseHexDigits(2)
        }

        RegExpParser.prototype.regExpUnicodeEscapeSequenceAtom = function() {
            this.consumeChar("u")
            return this.parseHexDigits(4)
        }

        RegExpParser.prototype.identityEscapeAtom = function() {
            // TODO: implement "SourceCharacter but not UnicodeIDContinue"
            // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments
            var escapedChar = this.popChar()
            return { type: "Character", value: cc(escapedChar) }
        }

        RegExpParser.prototype.classPatternCharacterAtom = function() {
            switch (this.peekChar()) {
                // istanbul ignore next
                case "\n":
                // istanbul ignore next
                case "\r":
                // istanbul ignore next
                case "\u2028":
                // istanbul ignore next
                case "\u2029":
                // istanbul ignore next
                case "\\":
                // istanbul ignore next
                case "]":
                    throw Error("TBD")
                default:
                    var nextChar = this.popChar()
                    return { type: "Character", value: cc(nextChar) }
            }
        }

        RegExpParser.prototype.characterClass = function() {
            var set = []
            var complement = false
            this.consumeChar("[")
            if (this.peekChar(0) === "^") {
                this.consumeChar("^")
                complement = true
            }

            while (this.isClassAtom()) {
                var from = this.classAtom()
                var isFromSingleChar = from.type === "Character"
                if (isFromSingleChar && this.isRangeDash()) {
                    this.consumeChar("-")
                    var to = this.classAtom()
                    var isToSingleChar = to.type === "Character"

                    // a range can only be used when both sides are single characters
                    if (isToSingleChar) {
                        if (to.value < from.value) {
                            throw Error("Range out of order in character class")
                        }
                        for (
                            var charCode = from.value;
                            charCode <= to.value;
                            charCode++
                        ) {
                            set.push(charCode)
                        }
                    } else {
                        insertToSet(from.value, set)
                        set.push(cc("-"))
                        insertToSet(to.value, set)
                    }
                } else {
                    insertToSet(from.value, set)
                }
            }

            this.consumeChar("]")

            return { type: "Set", complement: complement, value: uniq(set) }
        }

        RegExpParser.prototype.classAtom = function() {
            switch (this.peekChar()) {
                // istanbul ignore next
                case "]":
                // istanbul ignore next
                case "\n":
                // istanbul ignore next
                case "\r":
                // istanbul ignore next
                case "\u2028":
                // istanbul ignore next
                case "\u2029":
                    throw Error("TBD")
                case "\\":
                    return this.classEscape()
                default:
                    return this.classPatternCharacterAtom()
            }
        }

        RegExpParser.prototype.classEscape = function() {
            this.consumeChar("\\")
            switch (this.peekChar()) {
                // Matches a backspace.
                // (Not to be confused with \b word boundary outside characterClass)
                case "b":
                    this.consumeChar("b")
                    return { type: "Character", value: cc("\u0008") }
                case "d":
                case "D":
                case "s":
                case "S":
                case "w":
                case "W":
                    return this.characterClassEscape()
                case "f":
                case "n":
                case "r":
                case "t":
                case "v":
                    return this.controlEscapeAtom()
                case "c":
                    return this.controlLetterEscapeAtom()
                case "0":
                    return this.nulCharacterAtom()
                case "x":
                    return this.hexEscapeSequenceAtom()
                case "u":
                    return this.regExpUnicodeEscapeSequenceAtom()
                default:
                    return this.identityEscapeAtom()
            }
        }

        RegExpParser.prototype.group = function() {
            var capturing = true
            this.consumeChar("(")
            switch (this.peekChar(0)) {
                case "?":
                    this.consumeChar("?")
                    this.consumeChar(":")
                    capturing = false
                    break
                default:
                    this.groupIdx++
                    break
            }
            var value = this.disjunction()
            this.consumeChar(")")

            var groupAst = {
                type: "Group",
                capturing: capturing,
                value: value
            }

            if (capturing) {
                groupAst.idx = this.groupIdx
            }

            return groupAst
        }

        RegExpParser.prototype.positiveInteger = function() {
            var number = this.popChar()

            // istanbul ignore next - can't ever get here due to previous lookahead checks
            // still implementing this error checking in case this ever changes.
            if (decimalPatternNoZero.test(number) === false) {
                throw Error("Expecting a positive integer")
            }

            while (decimalPattern.test(this.peekChar(0))) {
                number += this.popChar()
            }

            return parseInt(number, 10)
        }

        RegExpParser.prototype.integerIncludingZero = function() {
            var number = this.popChar()
            if (decimalPattern.test(number) === false) {
                throw Error("Expecting an integer")
            }

            while (decimalPattern.test(this.peekChar(0))) {
                number += this.popChar()
            }

            return parseInt(number, 10)
        }

        RegExpParser.prototype.patternCharacter = function() {
            var nextChar = this.popChar()
            switch (nextChar) {
                // istanbul ignore next
                case "\n":
                // istanbul ignore next
                case "\r":
                // istanbul ignore next
                case "\u2028":
                // istanbul ignore next
                case "\u2029":
                // istanbul ignore next
                case "^":
                // istanbul ignore next
                case "$":
                // istanbul ignore next
                case "\\":
                // istanbul ignore next
                case ".":
                // istanbul ignore next
                case "*":
                // istanbul ignore next
                case "+":
                // istanbul ignore next
                case "?":
                // istanbul ignore next
                case "(":
                // istanbul ignore next
                case ")":
                // istanbul ignore next
                case "[":
                // istanbul ignore next
                case "|":
                    // istanbul ignore next
                    throw Error("TBD")
                default:
                    return { type: "Character", value: cc(nextChar) }
            }
        }
        RegExpParser.prototype.isRegExpFlag = function() {
            switch (this.peekChar(0)) {
                case "g":
                case "i":
                case "m":
                case "u":
                case "y":
                    return true
                default:
                    return false
            }
        }

        RegExpParser.prototype.isRangeDash = function() {
            return this.peekChar() === "-" && this.isClassAtom(1)
        }

        RegExpParser.prototype.isDigit = function() {
            return decimalPattern.test(this.peekChar(0))
        }

        RegExpParser.prototype.isClassAtom = function(howMuch) {
            if (howMuch === undefined) {
                howMuch = 0
            }

            switch (this.peekChar(howMuch)) {
                case "]":
                case "\n":
                case "\r":
                case "\u2028":
                case "\u2029":
                    return false
                default:
                    return true
            }
        }

        RegExpParser.prototype.isTerm = function() {
            return this.isAtom() || this.isAssertion()
        }

        RegExpParser.prototype.isAtom = function() {
            if (this.isPatternCharacter()) {
                return true
            }

            switch (this.peekChar(0)) {
                case ".":
                case "\\": // atomEscape
                case "[": // characterClass
                // TODO: isAtom must be called before isAssertion - disambiguate
                case "(": // group
                    return true
                default:
                    return false
            }
        }

        RegExpParser.prototype.isAssertion = function() {
            switch (this.peekChar(0)) {
                case "^":
                case "$":
                    return true
                // '\b' or '\B'
                case "\\":
                    switch (this.peekChar(1)) {
                        case "b":
                        case "B":
                            return true
                        default:
                            return false
                    }
                // '(?=' or '(?!'
                case "(":
                    return (
                        this.peekChar(1) === "?" &&
                        (this.peekChar(2) === "=" || this.peekChar(2) === "!")
                    )
                default:
                    return false
            }
        }

        RegExpParser.prototype.isQuantifier = function() {
            var prevState = this.saveState()
            try {
                return this.quantifier()
            } catch (e) {
                return false
            } finally {
                this.restoreState(prevState)
            }
        }

        RegExpParser.prototype.isPatternCharacter = function() {
            switch (this.peekChar()) {
                case "^":
                case "$":
                case "\\":
                case ".":
                case "*":
                case "+":
                case "?":
                case "(":
                case ")":
                case "[":
                case "|":
                case "/":
                case "\n":
                case "\r":
                case "\u2028":
                case "\u2029":
                    return false
                default:
                    return true
            }
        }

        RegExpParser.prototype.parseHexDigits = function(howMany) {
            var hexString = ""
            for (var i = 0; i < howMany; i++) {
                var hexChar = this.popChar()
                if (hexDigitPattern.test(hexChar) === false) {
                    throw Error("Expecting a HexDecimal digits")
                }
                hexString += hexChar
            }
            var charCode = parseInt(hexString, 16)
            return { type: "Character", value: charCode }
        }

        RegExpParser.prototype.peekChar = function(howMuch) {
            if (howMuch === undefined) {
                howMuch = 0
            }
            return this.input[this.idx + howMuch]
        }

        RegExpParser.prototype.popChar = function() {
            var nextChar = this.peekChar(0)
            this.consumeChar()
            return nextChar
        }

        RegExpParser.prototype.consumeChar = function(char) {
            if (char !== undefined && this.input[this.idx] !== char) {
                throw Error(
                    "Expected: '" +
                        char +
                        "' but found: '" +
                        this.input[this.idx] +
                        "' at offset: " +
                        this.idx
                )
            }

            if (this.idx >= this.input.length) {
                throw Error("Unexpected end of input")
            }
            this.idx++
        }

        // consts and utilities
        var hexDigitPattern = /[0-9a-fA-F]/
        var decimalPattern = /[0-9]/
        var decimalPatternNoZero = /[1-9]/

        function cc(char) {
            return char.charCodeAt(0)
        }

        function uniq(arr) {
            var setMap = {}
            arr.forEach(function(item) {
                setMap[item] = item
            })

            var set = []
            for (var key in setMap) {
                set.push(setMap[key])
            }

            return set
        }

        function insertToSet(item, set) {
            if (item.length !== undefined) {
                item.forEach(function(subItem) {
                    set.push(subItem)
                })
            } else {
                set.push(item)
            }
        }

        function addFlag(flagObj, flagKey) {
            if (flagObj[flagKey] === true) {
                throw "duplicate flag " + flagKey
            }

            flagObj[flagKey] = true
        }

        function ASSERT_EXISTS(obj) {
            // istanbul ignore next
            if (obj === undefined) {
                throw Error("Internal Error - Should never get here!")
            }
        }

        // istanbul ignore next
        function ASSERT_NEVER_REACH_HERE() {
            throw Error("Internal Error - Should never get here!")
        }

        var i
        var digitsCharCodes = []
        for (i = cc("0"); i <= cc("9"); i++) {
            digitsCharCodes.push(i)
        }

        var wordCharCodes = [cc("_")].concat(digitsCharCodes)
        for (i = cc("a"); i <= cc("z"); i++) {
            wordCharCodes.push(i)
        }

        for (i = cc("A"); i <= cc("Z"); i++) {
            wordCharCodes.push(i)
        }

        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes
        var whitespaceCodes = [
            cc(" "),
            cc("\f"),
            cc("\n"),
            cc("\r"),
            cc("\t"),
            cc("\v"),
            cc("\t"),
            cc("\u00a0"),
            cc("\u1680"),
            cc("\u2000"),
            cc("\u2001"),
            cc("\u2002"),
            cc("\u2003"),
            cc("\u2004"),
            cc("\u2005"),
            cc("\u2006"),
            cc("\u2007"),
            cc("\u2008"),
            cc("\u2009"),
            cc("\u200a"),
            cc("\u2028"),
            cc("\u2029"),
            cc("\u202f"),
            cc("\u205f"),
            cc("\u3000"),
            cc("\ufeff")
        ]

        function BaseRegExpVisitor() {}

        BaseRegExpVisitor.prototype.visitChildren = function(node) {
            for (var key in node) {
                var child = node[key]
                /* istanbul ignore else */
                if (node.hasOwnProperty(key)) {
                    if (child.type !== undefined) {
                        this.visit(child)
                    } else if (Array.isArray(child)) {
                        child.forEach(function(subChild) {
                            this.visit(subChild)
                        }, this)
                    }
                }
            }
        }

        BaseRegExpVisitor.prototype.visit = function(node) {
            switch (node.type) {
                case "Pattern":
                    this.visitPattern(node)
                    break
                case "Flags":
                    this.visitFlags(node)
                    break
                case "Disjunction":
                    this.visitDisjunction(node)
                    break
                case "Alternative":
                    this.visitAlternative(node)
                    break
                case "StartAnchor":
                    this.visitStartAnchor(node)
                    break
                case "EndAnchor":
                    this.visitEndAnchor(node)
                    break
                case "WordBoundary":
                    this.visitWordBoundary(node)
                    break
                case "NonWordBoundary":
                    this.visitNonWordBoundary(node)
                    break
                case "Lookahead":
                    this.visitLookahead(node)
                    break
                case "NegativeLookahead":
                    this.visitNegativeLookahead(node)
                    break
                case "Character":
                    this.visitCharacter(node)
                    break
                case "Set":
                    this.visitSet(node)
                    break
                case "Group":
                    this.visitGroup(node)
                    break
                case "GroupBackReference":
                    this.visitGroupBackReference(node)
                    break
                case "Quantifier":
                    this.visitQuantifier(node)
                    break
            }

            this.visitChildren(node)
        }

        BaseRegExpVisitor.prototype.visitPattern = function(node) {}

        BaseRegExpVisitor.prototype.visitFlags = function(node) {}

        BaseRegExpVisitor.prototype.visitDisjunction = function(node) {}

        BaseRegExpVisitor.prototype.visitAlternative = function(node) {}

        // Assertion
        BaseRegExpVisitor.prototype.visitStartAnchor = function(node) {}

        BaseRegExpVisitor.prototype.visitEndAnchor = function(node) {}

        BaseRegExpVisitor.prototype.visitWordBoundary = function(node) {}

        BaseRegExpVisitor.prototype.visitNonWordBoundary = function(node) {}

        BaseRegExpVisitor.prototype.visitLookahead = function(node) {}

        BaseRegExpVisitor.prototype.visitNegativeLookahead = function(node) {}

        // atoms
        BaseRegExpVisitor.prototype.visitCharacter = function(node) {}

        BaseRegExpVisitor.prototype.visitSet = function(node) {}

        BaseRegExpVisitor.prototype.visitGroup = function(node) {}

        BaseRegExpVisitor.prototype.visitGroupBackReference = function(node) {}

        BaseRegExpVisitor.prototype.visitQuantifier = function(node) {}

        return {
            RegExpParser: RegExpParser,
            BaseRegExpVisitor: BaseRegExpVisitor,
            VERSION: "0.3.4"
        }
    }
)


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(67);


/***/ }),
/* 43 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLAttribute;

  module.exports = XMLAttribute = (function() {
    function XMLAttribute(parent, name, value) {
      this.options = parent.options;
      this.stringify = parent.stringify;
      if (name == null) {
        throw new Error("Missing attribute name of element " + parent.name);
      }
      if (value == null) {
        throw new Error("Missing attribute value for attribute " + name + " of element " + parent.name);
      }
      this.name = this.stringify.attName(name);
      this.value = this.stringify.attValue(value);
    }

    XMLAttribute.prototype.clone = function() {
      return Object.create(this);
    };

    XMLAttribute.prototype.toString = function(options) {
      return this.options.writer.set(options).attribute(this);
    };

    return XMLAttribute;

  })();

}).call(this);


/***/ }),
/* 44 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLStringifier,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    hasProp = {}.hasOwnProperty;

  module.exports = XMLStringifier = (function() {
    function XMLStringifier(options) {
      this.assertLegalChar = bind(this.assertLegalChar, this);
      var key, ref, value;
      options || (options = {});
      this.noDoubleEncoding = options.noDoubleEncoding;
      ref = options.stringify || {};
      for (key in ref) {
        if (!hasProp.call(ref, key)) continue;
        value = ref[key];
        this[key] = value;
      }
    }

    XMLStringifier.prototype.eleName = function(val) {
      val = '' + val || '';
      return this.assertLegalChar(val);
    };

    XMLStringifier.prototype.eleText = function(val) {
      val = '' + val || '';
      return this.assertLegalChar(this.elEscape(val));
    };

    XMLStringifier.prototype.cdata = function(val) {
      val = '' + val || '';
      val = val.replace(']]>', ']]]]><![CDATA[>');
      return this.assertLegalChar(val);
    };

    XMLStringifier.prototype.comment = function(val) {
      val = '' + val || '';
      if (val.match(/--/)) {
        throw new Error("Comment text cannot contain double-hypen: " + val);
      }
      return this.assertLegalChar(val);
    };

    XMLStringifier.prototype.raw = function(val) {
      return '' + val || '';
    };

    XMLStringifier.prototype.attName = function(val) {
      return val = '' + val || '';
    };

    XMLStringifier.prototype.attValue = function(val) {
      val = '' + val || '';
      return this.attEscape(val);
    };

    XMLStringifier.prototype.insTarget = function(val) {
      return '' + val || '';
    };

    XMLStringifier.prototype.insValue = function(val) {
      val = '' + val || '';
      if (val.match(/\?>/)) {
        throw new Error("Invalid processing instruction value: " + val);
      }
      return val;
    };

    XMLStringifier.prototype.xmlVersion = function(val) {
      val = '' + val || '';
      if (!val.match(/1\.[0-9]+/)) {
        throw new Error("Invalid version number: " + val);
      }
      return val;
    };

    XMLStringifier.prototype.xmlEncoding = function(val) {
      val = '' + val || '';
      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {
        throw new Error("Invalid encoding: " + val);
      }
      return val;
    };

    XMLStringifier.prototype.xmlStandalone = function(val) {
      if (val) {
        return "yes";
      } else {
        return "no";
      }
    };

    XMLStringifier.prototype.dtdPubID = function(val) {
      return '' + val || '';
    };

    XMLStringifier.prototype.dtdSysID = function(val) {
      return '' + val || '';
    };

    XMLStringifier.prototype.dtdElementValue = function(val) {
      return '' + val || '';
    };

    XMLStringifier.prototype.dtdAttType = function(val) {
      return '' + val || '';
    };

    XMLStringifier.prototype.dtdAttDefault = function(val) {
      if (val != null) {
        return '' + val || '';
      } else {
        return val;
      }
    };

    XMLStringifier.prototype.dtdEntityValue = function(val) {
      return '' + val || '';
    };

    XMLStringifier.prototype.dtdNData = function(val) {
      return '' + val || '';
    };

    XMLStringifier.prototype.convertAttKey = '@';

    XMLStringifier.prototype.convertPIKey = '?';

    XMLStringifier.prototype.convertTextKey = '#text';

    XMLStringifier.prototype.convertCDataKey = '#cdata';

    XMLStringifier.prototype.convertCommentKey = '#comment';

    XMLStringifier.prototype.convertRawKey = '#raw';

    XMLStringifier.prototype.assertLegalChar = function(str) {
      var res;
      res = str.match(/[\0\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/);
      if (res) {
        throw new Error("Invalid character in string: " + str + " at index " + res.index);
      }
      return str;
    };

    XMLStringifier.prototype.elEscape = function(str) {
      var ampregex;
      ampregex = this.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g;
      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\r/g, '&#xD;');
    };

    XMLStringifier.prototype.attEscape = function(str) {
      var ampregex;
      ampregex = this.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g;
      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/"/g, '&quot;').replace(/\t/g, '&#x9;').replace(/\n/g, '&#xA;').replace(/\r/g, '&#xD;');
    };

    return XMLStringifier;

  })();

}).call(this);


/***/ }),
/* 45 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLWriterBase,
    hasProp = {}.hasOwnProperty;

  module.exports = XMLWriterBase = (function() {
    function XMLWriterBase(options) {
      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;
      options || (options = {});
      this.pretty = options.pretty || false;
      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;
      if (this.pretty) {
        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';
        this.newline = (ref2 = options.newline) != null ? ref2 : '\n';
        this.offset = (ref3 = options.offset) != null ? ref3 : 0;
        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;
      } else {
        this.indent = '';
        this.newline = '';
        this.offset = 0;
        this.dontprettytextnodes = 0;
      }
      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';
      if (this.spacebeforeslash === true) {
        this.spacebeforeslash = ' ';
      }
      this.newlinedefault = this.newline;
      this.prettydefault = this.pretty;
      ref6 = options.writer || {};
      for (key in ref6) {
        if (!hasProp.call(ref6, key)) continue;
        value = ref6[key];
        this[key] = value;
      }
    }

    XMLWriterBase.prototype.set = function(options) {
      var key, ref, value;
      options || (options = {});
      if ("pretty" in options) {
        this.pretty = options.pretty;
      }
      if ("allowEmpty" in options) {
        this.allowEmpty = options.allowEmpty;
      }
      if (this.pretty) {
        this.indent = "indent" in options ? options.indent : '  ';
        this.newline = "newline" in options ? options.newline : '\n';
        this.offset = "offset" in options ? options.offset : 0;
        this.dontprettytextnodes = "dontprettytextnodes" in options ? options.dontprettytextnodes : 0;
      } else {
        this.indent = '';
        this.newline = '';
        this.offset = 0;
        this.dontprettytextnodes = 0;
      }
      this.spacebeforeslash = "spacebeforeslash" in options ? options.spacebeforeslash : '';
      if (this.spacebeforeslash === true) {
        this.spacebeforeslash = ' ';
      }
      this.newlinedefault = this.newline;
      this.prettydefault = this.pretty;
      ref = options.writer || {};
      for (key in ref) {
        if (!hasProp.call(ref, key)) continue;
        value = ref[key];
        this[key] = value;
      }
      return this;
    };

    XMLWriterBase.prototype.space = function(level) {
      var indent;
      if (this.pretty) {
        indent = (level || 0) + this.offset + 1;
        if (indent > 0) {
          return new Array(indent).join(this.indent);
        } else {
          return '';
        }
      } else {
        return '';
      }
    };

    return XMLWriterBase;

  })();

}).call(this);


/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Generation and storage of ids during the generation of an XML.
 *
 * things that need to be possible are:
 *      - varID, id for the variable
 *      - unique id for every block
 *      -
 *
 * @file   This files defines the BasicIDManager class.
 * @author Ellen Vanhove.
 */

const BROADCAST = 'broadcast_msg';
/* harmony export (immutable) */ __webpack_exports__["b"] = BROADCAST;

const LIST = '';
/* harmony export (immutable) */ __webpack_exports__["a"] = LIST;


class BasicIDManager{

    constructor(informationVisitor) {
        this.infoVisitor = informationVisitor;
        this.reset();
    }

    reset(){
        this.counter = 0;
        //maps blockid -> counter for the inputs
        this.inputCounter = {};
        //-- variables --
        //map a variablename  to its id
        this.varMap = {};
        this.varCounter = 0;
        //comments
        this.commentCounter = 0;
    }


    /**
     * generates an unique id for every block
     * todo: if an id is defined in the ctx this one should be used
     * todo: waring in case an id is used twice.
     * @param definedID the id defiend by the user, null incase the id is not defined
     * @returns {string}
     */
    getNextBlockID(definedID=null) {
        let id;
        if(definedID){
            id=definedID;
        }else {
            id = "block_" + this.counter++;
        }
        if (this.inputCounter[id]) {
            //the id is already used, this is not allowed
            //todo generate warning
        }
        this.inputCounter[id] = 0;
        return id;
    }

    /**
     * generates an unique id for every block
     * todo: if an id is defined in the ctx this one should be used
     * todo: waring in case an id is used twice.
     * @param definedID the id defiend by the user, null incase the id is not defined
     * @param parentID the id of the parent block that contains this input
     * @returns {string}
     */
    getNextInputID(parentID,definedID=null) {
        let id;
        if(definedID){
            id=definedID;
        }else {
            id=parentID + '_input_' + this.inputCounter[parentID]++;
        }
        return id;
    }

    /**
     * variable id is never defined or used by the user. it is only for internal reference to the same block
     * @param varName
     * @param variableType
     */
    acquireVariableID(varName, variableType = '') {
        //if first time this variable is encountered, create an ID for it
        if (!this.varMap[varName]) {
            this.varMap[varName] = {
                'id': 'variable_' + this.varCounter++,
                'variableType': variableType
            }
        }
        return this.varMap[varName].id;
    }


    /**
     * generates an unique id for every coment
     * todo: if an id is defined in the ctx this one should be used
     * todo: waring in case an id is used twice.
     * @param definedID
     * @param {boolean} pinned is it a stand alone block?
     * @returns {string}
     */
    getNextCommentID(definedID,pinned=true){
        let id;
        if(definedID){
            id=definedID;
        }else {
            id="comment_"+this.commentCounter++;
        }
        return id;
    }
}
/* harmony export (immutable) */ __webpack_exports__["c"] = BasicIDManager;


/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chevrotain__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chevrotain___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_chevrotain__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__LNParser__ = __webpack_require__(32);
/**
 * Template for the visitor.
 *
 * .Provides information about parts of the three in the format
 *
 * {
 * placeHolder: %b (boolean)| %s (string) ,
 * offset: number,
 * text: "a string",
 * type: "tokename" or "expression" or "predicate"
 * modifiers: list of tokens
 * }
 * the options are only avaible if they make sense.
 *
 * @file   This files defines the LNVisitor class.
 * @author Ellen Vanhove.
 */


//import {NumberLiteral, ColorLiteral} from "./LNLexer";
const lntokens = __webpack_require__(23);
let NumberLiteral = lntokens.NumberLiteral;
let ColorLiteral = lntokens.ColorLiteral;
let StringLiteral = lntokens.StringLiteral;
let ChoiceLiteral = lntokens.ChoiceLiteral;


const PLACEHOLDER = "placeholder";
/* unused harmony export PLACEHOLDER */

const OFFSET = "offset";
/* unused harmony export OFFSET */



const TYPE = "type";
/* unused harmony export TYPE */

const EXPRESSION = "expression";
/* unused harmony export EXPRESSION */

const PREDICATE = "predicate";
/* unused harmony export PREDICATE */

const ATOMIC = "atomic";
/* unused harmony export ATOMIC */

const EMPTY = "empty";
/* unused harmony export EMPTY */

const CHOICE = "choice";
/* harmony export (immutable) */ __webpack_exports__["a"] = CHOICE;

const TEXT = "text";
/* unused harmony export TEXT */

const TEXT_OR_NUMBER = "text or number";
/* unused harmony export TEXT_OR_NUMBER */

const COLOR = "color"
/* unused harmony export COLOR */


const COMMENT = "comment";
/* unused harmony export COMMENT */

const ID = "id";
/* unused harmony export ID */

const CBLOCK = "cblock"
/* unused harmony export CBLOCK */



const BaseCstVisitor = __WEBPACK_IMPORTED_MODULE_1__LNParser__["b" /* lnparser */].getBaseCstVisitorConstructor();


class InfoLNVisitor extends BaseCstVisitor {

    constructor() {
        super();
        // This helper will detect any missing or redundant methods on this visitor
        this.validateVisitor()
    }

    code(ctx) {

    }

    delimiters(ctx) {

    }

    stackDelimiter(ctx) {

    }

    comments(ctx) {

    }

    stack(ctx) {

    }

    block(ctx) {

    }

    atomic(ctx) {
        //calculate the offset
        let offset = 0;
        if (ctx.Label) {
            //if there is a label and a argument check which one occurs first
            if (ctx.argument) {
                offset = this.getOffsetArgument(ctx.argument[0]) < ctx.Label[0].startOffset ?
                    this.getOffsetArgument(ctx.argument[0]) : ctx.Label[0].startOffset
            } else {
                offset = ctx.Label[0].startOffset
            }
        } else {
            //only a argument
            offset = this.getOffsetArgument(ctx.argument[0])
        }

        return {
            TEXT: this.unescapeLabel(this.getTextAtomic(ctx)),
            OFFSET: offset,
            TYPE: ATOMIC,
            ID: this.visit(ctx.annotations).ID
        }
    }

    unescapeLabel(text){
        //replace a \ followed by a not nothing character by only the character
        return text.replace(/\\([^])/g, '$1');
    }

    /**
     * marges the labels into one string
     * @param ctx
     * @returns {string}
     */
    getTextAtomic(ctx) {
        let matchString = '';
        let a = 0;
        for (let i = 0; ctx.Label && i < ctx.Label.length; i++) {
            if (ctx.argument && a < ctx.argument.length) {
                while (a < ctx.argument.length && this.getOffsetArgument(ctx.argument[a]) < ctx.Label[i].startOffset) {
                    matchString += ' %' + (a + 1) + ' ';
                    ++a;
                }
            }
            matchString += ' ' + ctx.Label[i].image + ' ';
        }
        for (a; ctx.argument && a < ctx.argument.length; a++) {
            matchString += ' %' + (a + 1) + ' ';
        }
        return this.cleanupText(matchString)
    }

    getOffsetArgument(arg) {
        if (!arg) {
            return Number.MAX_SAFE_INTEGER; //avoid infinite loop
        }
        let child = this.visit(arg);
        return child.OFFSET
    }

    /**
     * cleanup a text
     * * to remove multiple spaces
     * * unescape special characters todo
     * @param text e.g. merged labels
     * @returns {*}
     */
    cleanupText(text) {
        //remove double spaces to easier match
        text = text.replace(/ +(?= )/g, '');
        //' ?'
        text = text.replace(/ +(?=[\?])/g, '');
        //text = text.replace(/ +(?=[\%][^sbn])/g, '');
        //remove spaces at beginning and end
        text = text.trim();

        return text;
    }

    composite(ctx) {

    }

    ifelse(ctx) {
        return {
            PLACEHOLDER: "%s",
            TEXT: "",
            OFFSET: ctx.If.offset,
            TYPE: CBLOCK,
            ID: this.visit(ctx.annotations).ID
        }
    }

    forever(ctx) {
        return {
            PLACEHOLDER: "%s",
            TEXT: "",
            OFFSET: ctx.Forever.offset,
            TYPE: CBLOCK,
            ID: this.visit(ctx.annotations).ID
        }
    }

    repeat(ctx) {
        return {
            PLACEHOLDER: "%s",
            TEXT: "",
            OFFSET: ctx.Repeat.offset,
            TYPE: CBLOCK,
            ID: this.visit(ctx.annotations).ID
        }
    }

    repeatuntil(ctx) {
        return {
            PLACEHOLDER: "%s",
            TEXT: "",
            OFFSET: ctx.RepeatUntil.offset,
            TYPE: CBLOCK,
            ID: this.visit(ctx.annotations).ID
        }
    }

    clause(ctx) {

    }

    modifiers(ctx) {
        if (!ctx.Modifier) {
            return {
                MODIFIERS: []
            }
        }
        return {
            MODIFIERS: ctx.Modifier
        }
    }

    id(ctx) {
        if (ctx && ctx.ID) {
            return {
                OFFSET: ctx.ID[0].offset,
                TEXT: ctx.ID[0].image,
                ID: ctx.ID[0].image,
                TYPE: ID
            }
        } else {
            return {
                ID: null,
                TYPE: ID
            }
        }
    }

    comment(ctx) {
        return {
            OFFSET: ctx.Comment[0].offset,
            TEXT: this.unescapeComment(ctx.Comment[0].image),
            TYPE: COMMENT
        }
    }


    unescapeComment(text) {
        return text.replace(/\\([^])/g, '$1').replace(/^\|(.*(?=\|$))\|$/, '$1');
    }

    annotations(ctx) {
        let idinfo = this.visit(ctx.id);
        let modInfo = this.visit(ctx.modifiers);
        return {
            ID: idinfo.ID,
            MODIFIERS: modInfo.MODIFIERS
        }

    }


    argument(ctx) {
        let type;
        let id = ctx.id?this.visit(ctx.id).ID:null;
        if (ctx.Literal) {
            let text = "";
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["tokenMatcher"])(ctx.Literal[0], ChoiceLiteral)) {
                text = this.unescapeChoiceLiteral(ctx.Literal[0].image);
                type = CHOICE;
            } else if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["tokenMatcher"])(ctx.Literal[0], ColorLiteral)) {
                text = this.makeValidColor(ctx.Literal[0].image);
                type = COLOR
            } else {
                text = this.unescapeStringLiteral(ctx.Literal[0].image);
                type = TEXT_OR_NUMBER
            }
            return {
                PLACEHOLDER: "%s",
                TEXT: text,
                OFFSET: ctx.Literal[0].startOffset,
                TYPE: type,
                ID: id
            }
        }else if (ctx.Label) {
            return {
                PLACEHOLDER: "%s",
                TEXT:  ctx.Label[0].image,
                OFFSET: ctx.Label[0].startOffset,
                TYPE: TEXT_OR_NUMBER,
                ID: id
            }
        } else if (ctx.expression) {
            return this.visit(ctx.expression);
        } else if (ctx.predicate) {
            return this.visit(ctx.predicate);
        } else {
            //empty argument
            return {
                PLACEHOLDER: "%s",
                TEXT: "",
                OFFSET: ctx.LCurlyBracket[0].startOffset,
                TYPE: EMPTY,
                ID: id
            }
        }
    }


    argument$empty(ctx) {

    }

    unescapeStringLiteral(text) {
        return text.replace(/\\([^])/g, '$1').replace(/^"(.*(?="$))"$/, '$1');
    }

    unescapeChoiceLiteral(text) {
        return text.replace(/\\([^])/g, '$1').replace(/^\[(.*(?=\]$))\]$/, '$1');
    }

    /**
     * color has to have 6 digits so ABC -> AABBCC
     * @param text
     */
    makeValidColor(text) {
        return text.replace(/^#([0-F])([0-F])([0-F])$/i, '#$1$1$2$2$3$3')
    }

    condition(ctx) {
        return this.visit(ctx.expression);
    }

    condition$empty(ctx) {

    }

    expression(ctx) {
        return {
            PLACEHOLDER: "%s",
            OFFSET: ctx.LRoundBracket[0].startOffset,
            TYPE: EXPRESSION,
            ID: this.id(ctx.ID).ID,
            TEXT: ctx.atomic?this.visit(ctx.atomic).TEXT:""
        }
    }

    predicate(ctx) {
        return {
            PLACEHOLDER: "%b",
            OFFSET: ctx.LAngleBracket[0].startOffset,
            TYPE: PREDICATE,
            ID: this.id(ctx.ID).ID,
            TEXT: ctx.atomic?this.visit(ctx.atomic).TEXT:""
        }
    }

    //////////////////////////////////////////////////
    //// no 'real' visitor methods as they are not rules.
    //////////////////////////////////////////////////


    //////////////////////////////////////////////////
    //// simplified getters
    //////////////////////////////////////////////////

    /**
     * returns a string for the given ctx
     * @param ctx
     * @param rule explicitly declare the rule that needs to be used:
     *             this is necessary if this function is called with whole ctx and not with a child
     */
    getString(ctx, rule = null) {
        let x;
        if (!rule) {
            x = this.visit(ctx);
        } else {
            x = this[rule](ctx);
        }
        return x.TEXT;
    }

    getPlaceholder(ctx, rule = null) {
        let x;
        if (!rule) {
            x = this.visit(ctx);
        } else {
            x = this[rule](ctx);
        }
        return x.PLACEHOLDER;
    }

    getID(ctx, rule = null) {
        let x;
        if (!rule) {
            x = this.visit(ctx);
        } else {
            x = this[rule](ctx);
        }
        return x.ID;
    }

    getType(ctx, rule = null) {
        let x;
        if (!rule) {
            x = this.visit(ctx);
        } else {
            x = this[rule](ctx);
        }
        return x.TYPE;
    }

    getModifiers(ctx, rule = null) {
        let x;
        if (!rule) {
            x = this.visit(ctx);
        } else {
            x = this[rule](ctx);
        }
        return x.MODIFIERS;
    }
}
/* harmony export (immutable) */ __webpack_exports__["b"] = InfoLNVisitor;



/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * config.
 *
 * Configuration parameters for developers
 *
 * @file   This files defines the consts.
 * @author Ellen Vanhove.
 */

const MEDIA = '/static/blocks-media/';
/* harmony export (immutable) */ __webpack_exports__["a"] = MEDIA;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};




	var preservedScriptAttributes = {
		type: true,
		src: true,
		noModule: true
	};

	function DOMEval( code, doc, node ) {
		doc = doc || document;

		var i,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {
				if ( node[ i ] ) {
					script[ i ] = node[ i ];
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.3.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && Array.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
        if ( nodeName( elem, "iframe" ) ) {
            return elem.contentDocument;
        }

        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
        // Treat the template element as a regular one in browsers that
        // don't support it.
        if ( nodeName( elem, "template" ) ) {
            elem = elem.content || elem;
        }

        return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc, node );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		div.style.position = "absolute";
		scrollboxSizeVal = div.offsetWidth === 36 || "absolute";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a property mapped along what jQuery.cssProps suggests or to
// a vendor prefixed property.
function finalPropName( name ) {
	var ret = jQuery.cssProps[ name ];
	if ( !ret ) {
		ret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;
	}
	return ret;
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5
		) );
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),
		val = curCSS( elem, dimension, styles ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox;

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}

	// Check for style in case a browser which returns unreliable values
	// for getComputedStyle silently falls back to the reliable elem.style
	valueIsBorderBox = valueIsBorderBox &&
		( support.boxSizingReliable() || val === elem.style[ dimension ] );

	// Fall back to offsetWidth/offsetHeight when value is "auto"
	// This happens for inline elements with no explicit setting (gh-3571)
	// Support: Android <=4.1 - 4.3 only
	// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
	if ( val === "auto" ||
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) {

		val = elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];

		// offsetWidth/offsetHeight provide border-box values
		valueIsBorderBox = true;
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),
				isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra && boxModelAdjustment(
					elem,
					dimension,
					extra,
					isBorderBox,
					styles
				);

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && support.scrollboxSize() === styles.position ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = Date.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
		return jQuery;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(64);


/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export init_parser_utils */
/* harmony export (immutable) */ __webpack_exports__["a"] = parseTextToXML;
/* unused harmony export parseTextToXMLWithWarnings */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__LNParser__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__XMLLNVisitor__ = __webpack_require__(77);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__blockspecification_blockspecification__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__blocks__ = __webpack_require__(33);
/**
 * Provide high level function to transform text to XML
 *
 * Perform lexing,parsing and visiting.
 *
 * @file   This files defines the parseTextToXML function.
 * @author Ellen Vanhove.
 */






const visitor = __WEBPACK_IMPORTED_MODULE_1__XMLLNVisitor__["a" /* XMLLNVisitor */];

/**
 * init blocks with information from blockspecifications
 */
function init_parser_utils() {
    // blockspecifications
    //generate the functions in blocks
    for (let x = 0; x < __WEBPACK_IMPORTED_MODULE_2__blockspecification_blockspecification__["a" /* blockspecifications */].length; x++) {
        let b = __WEBPACK_IMPORTED_MODULE_2__blockspecification_blockspecification__["a" /* blockspecifications */][x];
        if (Array.isArray(b['template'])) {
            let ts = b['template'];
            for (let t = 0; t < ts.length; t++) {
                createBlockEntry(b['template'][t], b)
            }
        } else {
            createBlockEntry(b['template'], b)

        }

    }

}

/**
 * adds an function element to blocks
 * @param templateString {String} to match so that the block from the definition is build
 * @param specification as defined in blockspecifications
 */
function createBlockEntry(templateString, specification) {
    //if the template has no converter assigned yet, there is no problem, just create it
    if (!__WEBPACK_IMPORTED_MODULE_3__blocks__["a" /* default */][templateString]) {
        __WEBPACK_IMPORTED_MODULE_3__blocks__["a" /* default */][templateString] = createBlockFunction(specification);
    } else {
        let higherDefinedSpecification = __WEBPACK_IMPORTED_MODULE_3__blocks__["a" /* default */][templateString];
        //wrap the previous one
        __WEBPACK_IMPORTED_MODULE_3__blocks__["a" /* default */][templateString] = function (ctx, visitor) {
            //if it not succeeds
            let first_call_executed = higherDefinedSpecification(ctx, visitor);
            if (!first_call_executed) {
                //Call the next one
                return createBlockFunction(specification)(ctx, visitor);
            }
            return first_call_executed;
        }
    }
}

/**
 * creates a function that can be called with (ctx,visitor)
 * it creates xml based on the specifications by calling the converter function if the predicate is true
 * @param specification object as defined in the file blockspecifications
 * @returns {Function}
 */
function createBlockFunction(specification) {
    let b = specification;
    return function (ctx, visitor) {
        if (!b['predicate'] || b['predicate'](ctx, visitor)) {
            b['converter'](ctx, visitor, b['description']);
            return true;
        }
        return false;
    };

}

init_parser_utils();

//////////////////////////////////////////////////////////////////
// public functions
//////////////////////////////////////////////////////////////////

/**
 * @param text
 * @returns xml or undefined
 */
function parseTextToXML(text) {
    let r = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__LNParser__["a" /* parse */])(text);
    let cst = r.value;
    if (cst) {
        let v = new visitor();
        let xml = v.getXML(cst).xml;
        return xml;
    }
}

/**
 * @param text
 * @returns object with xml and error/warning information
 */
function parseTextToXMLWithWarnings(text) {
    let r = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__LNParser__["a" /* parse */])(text);
    let cst = r.value;
    if (cst) {
        let v = new visitor();
        let ret = v.getXML(cst);
        return {
            xml: ret.xml,
            lexErrors: r.lexErrors,
            parseErrors: r.parseErrors,
            visitorWarnings: ret.warnings,
        };
    }else{
        return {
            lexErrors: r.lexErrors,
            parseErrors: r.parseErrors
        };
    }
}



/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__parser_blocks__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parser_InfoLNVisitor__ = __webpack_require__(47);
/**
 * Specification of blocks.
 *
 * Specifications of the blocks. See wiki: https://github.com/scratch4d/scratch-LN/wiki/blockspecifications
 *
 * @file   This files defines the blockspecifications const.
 * @author Ellen Vanhove.
 */



/*
 {"template":"",
        "description": ,
            "converter": universalBlockConverter
        }

 */
// ===============================================================================
// some frequently used predicates

let looksSoundPredicate = function (ctx, visitor) {
    let opt = ctx.option ? visitor.infoVisitor.getString(ctx.option[0]) : '';
    let label = visitor.infoVisitor.getString(ctx.argument[0]);
    return (opt === 'sound') || (label === "pan left/right" || label === 'pitch');
};

let listOperatorPredicate = function (ctx, visitor) {
    let argType = visitor.infoVisitor.getType(ctx.argument[0]);
    return (argType === __WEBPACK_IMPORTED_MODULE_1__parser_InfoLNVisitor__["a" /* CHOICE */]);
};
// ===============================================================================


const blockspecifications = [
        {
            "template": ["go to %1"],
            "description": {
                "type": "looks_gotofrontback",
                "args": [{
                    "type": "field_dropdown",
                    "name": "FRONT_BACK",
                    "options": [["front", "front"], ["back", "back"]]
                }],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */],
            "predicate": (ctx, visitor) => {
                let arg = visitor.infoVisitor.getString(ctx.argument[0]);
                return (arg === 'front' || arg === 'back');
            }

        },
        {
            "template": ["go to %1"],
            "description": {
                "type": "motion_goto",
                "args": [{"type": "input_value", "name": "TO", "menu": "motion_goto_menu"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */],
        },
        /*{
            "template": ["pen down"],
            "description": {"type": "pen_pendown", "shape": "statement"},
            "converter": universalBlockConverter
        },*/
        {
            "template": ["say %1"],
            "description": {
                "type": "looks_say",
                "args": [{"type": "input_value", "name": "MESSAGE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        }, {
            "template": "go to x: %1 y: %2",
            "description": {
                "type": "motion_gotoxy",
                "args": [{"type": "input_value", "name": "X"}, {"type": "input_value", "name": "Y"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        }, {
            "template": "set rotation style %1",
            "description": {
                "type": "motion_setrotationstyle",
                "args": [{
                    "type": "field_dropdown",
                    "name": "STYLE",
                    "options": [["left-right", "left-right"], ["don't rotate", "don't rotate"], ["all around", "all around"]]
                }],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        }, {
            "template": "%1 + %2",
            "description": {
                "type": "operator_add",
                "args": [{"type": "input_value", "name": "NUM1"}, {"type": "input_value", "name": "NUM2"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        }, {
            "template": "not %1",
            "description": {
                "type": "operator_not",
                "args": [{"type": "input_value", "name": "OPERAND", "check": "Boolean"}],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },

//==== operator ===================================================
        {
            "template": "%1 - %2",
            "description": {
                "type": "operator_subtract",
                "args": [{"type": "input_value", "name": "NUM1"}, {"type": "input_value", "name": "NUM2"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "%1 * %2",
            "description": {
                "type": "operator_multiply",
                "args": [{"type": "input_value", "name": "NUM1"}, {"type": "input_value", "name": "NUM2"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "%1 / %2",
            "description": {
                "type": "operator_divide",
                "args": [{"type": "input_value", "name": "NUM1"}, {"type": "input_value", "name": "NUM2"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "pick random %1 to %2",
            "description": {
                "type": "operator_random",
                "args": [{"type": "input_value", "name": "FROM"}, {"type": "input_value", "name": "TO"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["%1 lt %2", "%1 < %2", "%1 less than %2"],
            "description": {
                "type": "operator_lt",
                "args": [{"type": "input_value", "name": "OPERAND1"}, {"type": "input_value", "name": "OPERAND2"}],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "%1 = %2",
            "description": {
                "type": "operator_equals",
                "args": [{"type": "input_value", "name": "OPERAND1"}, {"type": "input_value", "name": "OPERAND2"}],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["%1 gt %2", "%1 > %2", "%1 greater than %2"],
            "description": {
                "type": "operator_gt",
                "args": [{"type": "input_value", "name": "OPERAND1"}, {"type": "input_value", "name": "OPERAND2"}],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "%1 and %2",
            "description": {
                "type": "operator_and",
                "args": [{"type": "input_value", "name": "OPERAND1", "check": "Boolean"}, {
                    "type": "input_value",
                    "name": "OPERAND2",
                    "check": "Boolean"
                }],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "%1 or %2",
            "description": {
                "type": "operator_or",
                "args": [{"type": "input_value", "name": "OPERAND1", "check": "Boolean"}, {
                    "type": "input_value",
                    "name": "OPERAND2",
                    "check": "Boolean"
                }],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "join %1 %2",
            "description": {
                "type": "operator_join",
                "args": [{"type": "input_value", "name": "STRING1"}, {"type": "input_value", "name": "STRING2"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "letter %1 of %2",
            "description": {
                "type": "operator_letter_of",
                "args": [{"type": "input_value", "name": "LETTER"}, {"type": "input_value", "name": "STRING"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "%1 mod %2",
            "description": {
                "type": "operator_mod",
                "args": [{"type": "input_value", "name": "NUM1"}, {"type": "input_value", "name": "NUM2"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "round %1",
            "description": {
                "type": "operator_round",
                "args": [{"type": "input_value", "name": "NUM"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
//=== control ===============================================================
        {
            "template": "wait %1 seconds",
            "description": {
                "type": "control_wait",
                "args": [{"type": "input_value", "name": "DURATION"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "wait until %1",
            "description": {
                "type": "control_wait_until",
                "args": [{"type": "input_value", "name": "CONDITION", "check": "Boolean"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "when I start as a clone",
            "description": {"type": "control_start_as_clone", "args": [], "shape": "hatblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "create clone of %1",
            "description": {
                "type": "control_create_clone_of",
                "args": [{"type": "input_value", "name": "CLONE_OPTION", "menu": "control_create_clone_of_menu"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "delete this clone",
            "description": {"type": "control_delete_this_clone", "args": [], "shape": "capblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
//=== sensing ===============================================================
        {
            "template": ["touching %1?", "touching %1"],
            "description": {
                "type": "sensing_touchingobject",
                "args": [{"type": "input_value", "name": "TOUCHINGOBJECTMENU", "menu": "sensing_touchingobjectmenu"}],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["touching color %1?", "touching color %1"],
            "description": {
                "type": "sensing_touchingcolor",
                "args": [{"type": "input_value", "name": "COLOR"}],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["color %1 is touching %2?", "color %1 is touching %2"],
            "description": {
                "type": "sensing_coloristouchingcolor",
                "args": [{"type": "input_value", "name": "COLOR"}, {"type": "input_value", "name": "COLOR2"}],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "distance to %1",
            "description": {
                "type": "sensing_distanceto",
                "args": [{"type": "input_value", "name": "DISTANCETOMENU", "menu": "sensing_distancetomenu"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "ask %1 and wait",
            "description": {
                "type": "sensing_askandwait",
                "args": [{"type": "input_value", "name": "QUESTION"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "answer",
            "description": {"type": "sensing_answer", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["key %1 pressed?", "key %1 pressed"],
            "description": {
                "type": "sensing_keypressed",
                "args": [{
                    "type": "input_value",
                    "name": "KEY_OPTION",
                    "options": [["space", "space"], ["left arrow", "left arrow"], ["right arrow", "right arrow"], ["down arrow", "down arrow"], ["up arrow", "up arrow"], ["any", "any"], ["a", "a"], ["b", "b"], ["c", "c"], ["d", "d"], ["e", "e"], ["f", "f"], ["g", "g"], ["h", "h"], ["i", "i"], ["j", "j"], ["k", "k"], ["l", "l"], ["m", "m"], ["n", "n"], ["o", "o"], ["p", "p"], ["q", "q"], ["r", "r"], ["s", "s"], ["t", "t"], ["u", "u"], ["v", "v"], ["w", "w"], ["x", "x"], ["y", "y"], ["z", "z"], ["0", "0"], ["1", "1"], ["2", "2"], ["3", "3"], ["4", "4"], ["5", "5"], ["6", "6"], ["7", "7"], ["8", "8"], ["9", "9"]],
                    "menu": "sensing_keyoptions"
                }],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["mouse down?", "mouse down"],
            "description": {"type": "sensing_mousedown", "shape": "booleanblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "mouse x",
            "description": {"type": "sensing_mousex", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "mouse y",
            "description": {"type": "sensing_mousey", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "set drag mode %1",
            "description": {
                "type": "sensing_setdragmode",
                "args": [{
                    "type": "field_dropdown",
                    "name": "DRAG_MODE",
                    "options": [["draggable", "draggable"], ["not draggable", "not draggable"]]
                }],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "loudness",
            "description": {"type": "sensing_loudness", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "video %1 on %2",
            "description": {
                "type": "sensing_videoon",
                "args": [{"type": "input_value", "name": "VIDEOONMENU1"}, {"type": "input_value", "name": "VIDEOONMENU2"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "turn video %1",
            "description": {
                "type": "sensing_videotoggle",
                "args": [{"type": "input_value", "name": "VIDEOTOGGLEMENU"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "set video transparency to %1%",
            "description": {
                "type": "sensing_setvideotransparency",
                "args": [{"type": "input_value", "name": "TRANSPARENCY"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "timer",
            "description": {"type": "sensing_timer", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "reset timer",
            "description": {"type": "sensing_resettimer", "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "current %1",
            "description": {
                "type": "sensing_current",
                "args": [{
                    "type": "field_dropdown",
                    "name": "CURRENTMENU",
                    "options": [["year", "YEAR"], ["month", "MONTH"], ["date", "DATE"], ["day of week", "DAYOFWEEK"], ["hour", "HOUR"], ["minute", "MINUTE"], ["second", "SECOND"]]
                }],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "days since 2000",
            "description": {"type": "sensing_dayssince2000", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "username",
            "description": {"type": "sensing_username", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },


//=== motion  ===============================================================
        {
            "template": "move %1 steps",
            "description": {
                "type": "motion_movesteps",
                "args": [{"type": "input_value", "name": "STEPS"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["turn right %1 degrees", "turn cw %1 degrees", "turn clockwise %1 degrees", "turn \u21BB %1 degrees"],
            "description": {
                "type": "motion_turnright",
                "args": [{"type": "input_value", "name": "DEGREES"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["turn left %1 degrees", "turn ccw %1 degrees", "turn counterclockwise %1 degrees",
                "turn anticlockwise %1 degrees", "turn acw %1 degrees", "turn \u21BA %1 degrees",],
            "description": {
                "type": "motion_turnleft",
                "args": [{"type": "input_value", "name": "DEGREES"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "point in direction %1",
            "description": {
                "type": "motion_pointindirection",
                "args": [{"type": "input_value", "name": "DIRECTION"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "point towards %1",
            "description": {
                "type": "motion_pointtowards",
                "args": [{"type": "input_value", "name": "TOWARDS", "menu": "motion_pointtowards_menu"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "glide %1 secs to x: %2 y: %3",
            "description": {
                "type": "motion_glidesecstoxy",
                "args": [{"type": "input_value", "name": "SECS"}, {
                    "type": "input_value",
                    "name": "X"
                }, {"type": "input_value", "name": "Y"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "glide %1 secs to %2",
            "description": {
                "type": "motion_glideto",
                "args": [{"type": "input_value", "name": "SECS"}, {
                    "type": "input_value",
                    "name": "TO",
                    "menu": "motion_glideto_menu"
                }],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "change x by %1",
            "description": {
                "type": "motion_changexby",
                "args": [{"type": "input_value", "name": "DX"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "set x to %1",
            "description": {"type": "motion_setx", "args": [{"type": "input_value", "name": "X"}], "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "change y by %1",
            "description": {
                "type": "motion_changeyby",
                "args": [{"type": "input_value", "name": "DY"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "set y to %1",
            "description": {"type": "motion_sety", "args": [{"type": "input_value", "name": "Y"}], "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["if on edge, bounce","bounce on edge"],
            "description": {"type": "motion_ifonedgebounce", "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "x position",
            "description": {"type": "motion_xposition", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "y position",
            "description": {"type": "motion_yposition", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "direction",
            "description": {"type": "motion_direction", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
//=== looks ======================================
        {
            "template": "say %1 for %2 seconds",
            "description": {
                "type": "looks_sayforsecs",
                "args": [{"type": "input_value", "name": "MESSAGE"}, {"type": "input_value", "name": "SECS"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "think %1 for %2 seconds",
            "description": {
                "type": "looks_thinkforsecs",
                "args": [{"type": "input_value", "name": "MESSAGE"}, {"type": "input_value", "name": "SECS"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "think %1",
            "description": {
                "type": "looks_think",
                "args": [{"type": "input_value", "name": "MESSAGE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "show",
            "description": {"type": "looks_show", "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "hide",
            "description": {"type": "looks_hide", "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "clear graphic effects",
            "description": {"type": "looks_cleargraphiceffects", "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "change size by %1",
            "description": {
                "type": "looks_changesizeby",
                "args": [{"type": "input_value", "name": "CHANGE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "set size to %1 %",
            "description": {
                "type": "looks_setsizeto",
                "args": [{"type": "input_value", "name": "SIZE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "size",
            "description": {"type": "looks_size", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "switch costume to %1",
            "description": {
                "type": "looks_switchcostumeto",
                "args": [{"type": "input_value", "name": "COSTUME", "menu": "looks_costume"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "next costume",
            "description": {"type": "looks_nextcostume", "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "switch backdrop to %1",
            "description": {
                "type": "looks_switchbackdropto",
                "args": [{"type": "input_value", "name": "BACKDROP", "menu": "looks_backdrops"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "go %1 %2 layers",
            "description": {
                "type": "looks_goforwardbackwardlayers",
                "args": [{
                    "type": "field_dropdown",
                    "name": "FORWARD_BACKWARD",
                    "options": [["forward", "forward"], ["backward", "backward"]]
                }, {"type": "input_value", "name": "NUM"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "backdrop %1",
            "description": {
                "type": "looks_backdropnumbername",
                "args": [{
                    "type": "field_dropdown",
                    "name": "NUMBER_NAME",
                    "options": [["number", "number"], ["name", "name"]]
                }],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "costume %1",
            "description": {
                "type": "looks_costumenumbername",
                "args": [{
                    "type": "field_dropdown",
                    "name": "NUMBER_NAME",
                    "options": [["number", "number"], ["name", "name"]]
                }],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "switch backdrop to %1 and wait",
            "description": {
                "type": "looks_switchbackdroptoandwait",
                "args": [{"type": "input_value", "name": "BACKDROP", "menu": "looks_backdrops"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "next backdrop",
            "description": {"type": "looks_nextbackdrop", "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        //=== pen
        //todo -> extensions
        /*{
            "template": "clear",
            "description": {"type": "pen_clear", "shape": "statement"},
            "converter": universalBlockConverter
        },
        {
            "template": "stamp",
            "description": {"type": "pen_stamp", "shape": "statement"},
            "converter": universalBlockConverter
        },
        {
            "template": "pen up",
            "description": {"type": "pen_penup", "shape": "statement"},
            "converter": universalBlockConverter
        },
        {
            "template": "set pen color to %1",
            "description": {
                "type": "pen_setpencolortocolor",
                "args": [{"type": "input_value", "name": "COLOR"}],
                "shape": "statement"
            },
            "converter": universalBlockConverter,
            "predicate": (ctx, visitor) => {
                let argType = visitor.infoVisitor.getType(ctx.argument[0]);
                return (argType === COLOR);
            }
        },
        {
            "template": "set pen color to %1",
            "description": {
                "type": "pen_setpencolortonum",
                "args": [{"type": "input_value", "name": "COLOR"}],
                "shape": "statement"
            },
            "converter": universalBlockConverter

        },
        {
            "template": "change pen color by %1",
            "description": {
                "type": "pen_changepencolorby",
                "args": [{"type": "input_value", "name": "COLOR"}],
                "shape": "statement"
            },
            "converter": universalBlockConverter
        },
        {
            "template": "change pen shade by %1",
            "description": {
                "type": "pen_changepenshadeby",
                "args": [{"type": "input_value", "name": "SHADE"}],
                "shape": "statement"
            },
            "converter": universalBlockConverter
        },
        {
            "template": "set pen shade to %1",
            "description": {
                "type": "pen_setpenshadeto",
                "args": [{"type": "input_value", "name": "SHADE"}],
                "shape": "statement"
            },
            "converter": universalBlockConverter
        },
        {
            "template": "change pen size by %1",
            "description": {
                "type": "pen_changepensizeby",
                "args": [{"type": "input_value", "name": "SIZE"}],
                "shape": "statement"
            },
            "converter": universalBlockConverter
        },
        {
            "template": "set pen size to %1",
            "description": {
                "type": "pen_setpensizeto",
                "args": [{"type": "input_value", "name": "SIZE"}],
                "shape": "statement"
            },
            "converter": universalBlockConverter
        },
        {
            "template": "change pen transparency by %1",
            "description": {
                "type": "pen_changepentransparencyby",
                "args": [{"type": "input_value", "name": "TRANSPARENCY"}],
                "shape": "statement"
            },
            "converter": universalBlockConverter
        },
        {
            "template": "set pen transparency to %1",
            "description": {
                "type": "pen_setpentransparencyto",
                "args": [{"type": "input_value", "name": "TRANSPARENCY"}],
                "shape": "statement"
            },
            "converter": universalBlockConverter
        },*/
        //=== sounds =======================================================
        {
            "template": "start sound %1",
            "description": {
                "type": "sound_play",
                "args": [{"type": "input_value", "name": "SOUND_MENU", "menu": "sound_sounds_menu"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "play sound %1 until done",
            "description": {
                "type": "sound_playuntildone",
                "args": [{"type": "input_value", "name": "SOUND_MENU", "menu": "sound_sounds_menu"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "stop all sounds",
            "description": {"type": "sound_stopallsounds", "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "clear sound effects",
            "description": {"type": "sound_cleareffects", "shape": "statement"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "change volume by %1",
            "description": {
                "type": "sound_changevolumeby",
                "args": [{"type": "input_value", "name": "VOLUME"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "set volume to %1 %",
            "description": {
                "type": "sound_setvolumeto",
                "args": [{"type": "input_value", "name": "VOLUME"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "volume",
            "description": {"type": "sound_volume", "shape": "reporterblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        //=== events =============================================================
        {
            "template": ["when gf clicked", "when greenflag clicked", "when green flag clicked", "when \u2691 clicked", "when flag clicked",],
            "description": {"type": "event_whenflagclicked", "args": [], "shape": "hatblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "when this sprite clicked",
            "description": {"type": "event_whenthisspriteclicked", "shape": "hatblock"},
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "when backdrop switches to %1",
            "description": {
                "type": "event_whenbackdropswitchesto",
                "args": [{"type": "field_dropdown", "name": "BACKDROP", "options": [["backdrop1", "BACKDROP1"]]}],
                "shape": "hatblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["when %1 gt %2", "when %1 greater than %2", "when %1 > %2"],
            "description": {
                "type": "event_whengreaterthan",
                "args": [{
                    "type": "field_dropdown",
                    "name": "WHENGREATERTHANMENU",
                    "options": [["timer", "TIMER"]]
                }, {"type": "input_value", "name": "VALUE"}],
                "shape": "hatblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "when %1 key pressed",
            "description": {
                "type": "event_whenkeypressed",
                "args": [{
                    "type": "field_dropdown",
                    "name": "KEY_OPTION",
                    "options": [["space", "space"], ["left arrow", "left arrow"], ["right arrow", "right arrow"], ["down arrow", "down arrow"], ["up arrow", "up arrow"], ["any", "any"], ["a", "a"], ["b", "b"], ["c", "c"], ["d", "d"], ["e", "e"], ["f", "f"], ["g", "g"], ["h", "h"], ["i", "i"], ["j", "j"], ["k", "k"], ["l", "l"], ["m", "m"], ["n", "n"], ["o", "o"], ["p", "p"], ["q", "q"], ["r", "r"], ["s", "s"], ["t", "t"], ["u", "u"], ["v", "v"], ["w", "w"], ["x", "x"], ["y", "y"], ["z", "z"], ["0", "0"], ["1", "1"], ["2", "2"], ["3", "3"], ["4", "4"], ["5", "5"], ["6", "6"], ["7", "7"], ["8", "8"], ["9", "9"]]
                }],
                "shape": "hatblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
// =========================================================
// with the same text
// =========================================================
        {
            "template": "set %1 effect to %2",
            "description": {
                "type": "sound_seteffectto",
                "args": [{
                    "type": "field_dropdown",
                    "name": "EFFECT",
                    "options": [["pitch", "PITCH"], ["pan left/right", "PAN"]]
                }, {"type": "input_value", "name": "VALUE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */],
            "predicate": looksSoundPredicate
        },
        {
            "template": "set %1 effect to %2",
            "description": {
                "type": "looks_seteffectto",
                "args": [{
                    "type": "field_dropdown",
                    "name": "EFFECT",
                    "options": [["color", "COLOR"], ["fisheye", "FISHEYE"], ["whirl", "WHIRL"], ["pixelate", "PIXELATE"], ["mosaic", "MOSAIC"], ["brightness", "BRIGHTNESS"], ["ghost", "GHOST"]]
                }, {"type": "input_value", "name": "VALUE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "change %1 effect by %2",
            "description": {
                "type": "sound_changeeffectby",
                "args": [{
                    "type": "field_dropdown",
                    "name": "EFFECT",
                    "options": [["pitch", "PITCH"], ["pan left/right", "PAN"]]
                }, {"type": "input_value", "name": "VALUE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */],
            "predicate": looksSoundPredicate
        },
        {
            "template": "change %1 effect by %2",
            "description": {
                "type": "looks_changeeffectby",
                "args": [{
                    "type": "field_dropdown",
                    "name": "EFFECT",
                    "options": [["color", "COLOR"], ["fisheye", "FISHEYE"], ["whirl", "WHIRL"], ["pixelate", "PIXELATE"], ["mosaic", "MOSAIC"], ["brightness", "BRIGHTNESS"], ["ghost", "GHOST"]]
                }, {"type": "input_value", "name": "CHANGE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "length of %1",
            "description": {
                "type": "data_lengthoflist",
                "args": [{"type": "field_variable", "name": "LIST", "variabletypes": ["list"]}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["c" /* listBlockConverter */],
            "predicate": listOperatorPredicate
        }, {
            "template": "length of %1",
            "description": {
                "type": "operator_length",
                "args": [{"type": "input_value", "name": "STRING"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": ["%1 contains %2?", "%1 contains %2"],
            "description": {
                "type": "data_listcontainsitem",
                "args": [{"type": "field_variable", "name": "LIST", "variabletypes": ["list"]}, {
                    "type": "input_value",
                    "name": "ITEM"
                }],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["c" /* listBlockConverter */],
            "predicate": listOperatorPredicate
        },
        {
            "template": ["%1 contains %2?", "%1 contains %2"],
            "description": {
                "type": "operator_contains",
                "args": [{"type": "input_value", "name": "STRING1"}, {"type": "input_value", "name": "STRING2"}],
                "shape": "booleanblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "%1 of %2",
            "description": {
                "type": "sensing_of",
                "args": [{
                    "type": "field_dropdown",
                    "name": "PROPERTY",
                    "options": [["x position", "x position"], ["y position", "y position"], ["direction", "direction"], ["costume #", "costume #"], ["costume name", "costume name"], ["size", "size"], ["volume", "volume"], ["backdrop #", "backdrop #"], ["backdrop name", "backdrop name"]],

                }, {"type": "input_value", "name": "OBJECT", 'menu': 'sensing_of_object_menu'}],
                "shape": "booleans"
            },
            "converter": function (ctx, visitor) {
                //something was weird here...
                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__parser_blocks__["d" /* addType */])(ctx, visitor, 'sensing_of')
                visitor.xml = visitor.xml.ele('field', {
                    'name': 'PROPERTY'
                }, visitor.infoVisitor.getString(ctx.argument[0])); //'all around' //this is ugly because 'option' is the only one that returns something... and there is no check whether the option is existing and valid
                visitor.xml = visitor.xml.up().ele('value', {
                    'name': 'OBJECT'
                });
                //no assignement bcs of visist
                visitor.xml.ele('shadow', {
                    'type': 'sensing_of_object_menu' //this was added to the json and was not default.
                }).ele('field', {
                    'name': 'OBJECT'
                }, visitor.infoVisitor.getString(ctx.argument[1])); // '_mouse_'
                visitor.xml = visitor.xml.up();
            },
            "predicate": function (ctx, visitor) {
                let argType = visitor.infoVisitor.getType(ctx.argument[1]);
                return (argType === __WEBPACK_IMPORTED_MODULE_1__parser_InfoLNVisitor__["a" /* CHOICE */]);
            }

        },
        {
            "template": "%1 of %2",
            "description": {
                "type": "operator_mathop",
                "args": [{
                    "type": "field_dropdown",
                    "name": "OPERATOR",
                    "options": [["abs", "abs"], ["floor", "floor"], ["ceiling", "ceiling"], ["sqrt", "sqrt"], ["sin", "sin"], ["cos", "cos"], ["tan", "tan"], ["asin", "asin"], ["acos", "acos"], ["atan", "atan"], ["ln", "ln"], ["log", "log"], ["e ^", "e ^"], ["10 ^", "10 ^"]]
                }, {"type": "input_value", "name": "NUM"}],
                "shape": "reporterblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["b" /* universalBlockConverter */]
        },
        {
            "template": "when I receive %1",
            "description": {
                "type": "event_whenbroadcastreceived",
                "args": [{
                    "type": "field_variable",
                    "name": "BROADCAST_OPTION",
                    "variabletypes": ["broadcast_msg"],
                    "variable": "message1"
                }],
                "shape": "hatblock"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["e" /* messageBlockconverter */]
        },
        {
            "template": "broadcast %1",
            "description": {
                "type": "event_broadcast",
                "args": [{"type": "input_value", "name": "BROADCAST_INPUT"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["f" /* messageShadowBlockconverter */]
        },
        {
            "template": "broadcast %1 and wait",
            "description": {
                "type": "event_broadcastandwait",
                "args": [{"type": "input_value", "name": "BROADCAST_INPUT"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["f" /* messageShadowBlockconverter */]
        },
        {
            "template": "set %1 to %2",
            "description": {
                "type": "data_setvariableto",
                "args": [{"type": "field_variable", "name": "variable"}, {"type": "input_value", "name": "VALUE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["g" /* variableBlockConverter */]
        },
        {
            "template": "change %1 by %2",
            "description": {
                "type": "data_changevariableby",
                "args": [{"type": "field_variable", "name": "variable"}, {"type": "input_value", "name": "VALUE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["g" /* variableBlockConverter */]
        },
        {
            "template": "show variable %1",
            "description": {
                "type": "data_showvariable",
                "args": [{"type": "field_variable","name": "VARIABLE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["g" /* variableBlockConverter */]
        },
        {
            "template": "hide variable %1",
            "description": {
                "type": "data_hidevariable",
                "args": [{"type": "field_variable","name": "VARIABLE"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["g" /* variableBlockConverter */]
        },
        {
            "template": "add %1 to %2",
            "description": {
                "type": "data_addtolist",
                "args": [{"type": "input_value", "name": "ITEM"}, {
                    "type": "field_variable",
                    "name": "LIST",
                    "variabletypes": ["list"]
                }],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["c" /* listBlockConverter */]
        },
        {
            "template": "delete %1 of %2",
            "description": {
                "type": "data_deleteoflist",
                "args": [{"type": "input_value", "name": "INDEX"}, {
                    "type": "field_variable",
                    "name": "LIST",
                    "variabletypes": ["list"]
                }],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["c" /* listBlockConverter */]
        },
        {
            "template": "insert %1 at %2 of %3",
            "description": {
                "type": "data_insertatlist",
                "args": [{"type": "input_value", "name": "ITEM"}, {
                    "type": "input_value",
                    "name": "INDEX"
                }, {"type": "field_variable", "name": "LIST", "variabletypes": ["list"]}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["c" /* listBlockConverter */]
        },
        {
            "template": "replace item %1 of %2 with %3",
            "description": {
                "type": "data_replaceitemoflist",
                "args": [{"type": "input_value", "name": "INDEX"}, {
                    "type": "field_variable",
                    "name": "LIST",
                    "variabletypes": ["list"]
                }, {"type": "input_value", "name": "ITEM"}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["c" /* listBlockConverter */]
        },
        {
            "template": "item %1 of %2",
            "description": {
                "type": "data_itemoflist",
                "args": [{"type": "input_value", "name": "INDEX"}, {
                    "type": "field_variable",
                    "name": "LIST",
                    "variabletypes": ["list"]
                }],
                "shape": "booleans"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["c" /* listBlockConverter */]
        },
        {
            "template": "show list %1",
            "description": {
                "type": "data_showlist",
                "args": [{"type": "field_variable", "name": "LIST", "variabletypes": ["list"]}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["c" /* listBlockConverter */]
        },
        {
            "template": "hide list %1",
            "description": {
                "type": "data_hidelist",
                "args": [{"type": "field_variable", "name": "LIST", "variabletypes": ["list"]}],
                "shape": "statement"
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["c" /* listBlockConverter */]
        },
// special case:stop
        {
            "template": "stop %1",
            "description": {
                "type": "control_stop",
                "args": [
                    {
                        "type": "field_dropdown",
                        "name": "STOP_OPTION",
                    }],
                "shape": "capblock",
            },
            "converter": __WEBPACK_IMPORTED_MODULE_0__parser_blocks__["h" /* stopConverter */]
        },

    ]
;
/* harmony export (immutable) */ __webpack_exports__["a"] = blockspecifications;




/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var version_1 = __webpack_require__(29);
function createSyntaxDiagramsCode(grammar, _a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.resourceBase, resourceBase = _c === void 0 ? "https://unpkg.com/chevrotain@" + version_1.VERSION + "/diagrams/" : _c, _d = _b.css, css = _d === void 0 ? "https://unpkg.com/chevrotain@" + version_1.VERSION + "/diagrams/diagrams.css" : _d;
    var header = "\n<!-- This is a generated file -->\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  body {\n    background-color: hsl(30, 20%, 95%)\n  }\n</style>\n\n";
    var cssHtml = "\n<link rel='stylesheet' href='" + css + "'>\n";
    var scripts = "\n<script src='" + resourceBase + "vendor/railroad-diagrams.js'></script>\n<script src='" + resourceBase + "src/diagrams_builder.js'></script>\n<script src='" + resourceBase + "src/diagrams_behavior.js'></script>\n<script src='" + resourceBase + "src/main.js'></script>\n";
    var diagramsDiv = "\n<div id=\"diagrams\" align=\"center\"></div>    \n";
    var serializedGrammar = "\n<script>\n    window.serializedGrammar = " + JSON.stringify(grammar, null, "  ") + ";\n</script>\n";
    var initLogic = "\n<script>\n    var diagramsDiv = document.getElementById(\"diagrams\");\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\n</script>\n";
    return (header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic);
}
exports.createSyntaxDiagramsCode = createSyntaxDiagramsCode;
//# sourceMappingURL=render_public.js.map

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var tokens_public_1 = __webpack_require__(3);
var gast_public_1 = __webpack_require__(1);
/**
 * Missing features
 * 1. Rule arguments
 * 2. Gates
 * 3. embedded actions
 */
var NL = "\n";
function genUmdModule(options) {
    return "\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['chevrotain'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('chevrotain'));\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory(root.b);\n    }\n}(typeof self !== 'undefined' ? self : this, function (chevrotain) {\n\n" + genClass(options) + "\n    \nreturn {\n    " + options.name + ": " + options.name + " \n}\n}));\n";
}
exports.genUmdModule = genUmdModule;
function genWrapperFunction(options) {
    return "    \n" + genClass(options) + "\nreturn new " + options.name + "(tokenVocabulary, config)    \n";
}
exports.genWrapperFunction = genWrapperFunction;
function genClass(options) {
    // TODO: how to pass the token vocabulary? Constructor? other?
    // TODO: should outputCst be enabled by default?
    var result = "\nfunction " + options.name + "(tokenVocabulary, config) {\n    // invoke super constructor\n    chevrotain.Parser.call(this, [], tokenVocabulary, config)\n\n    const $ = this\n\n    " + genAllRules(options.rules) + "\n\n    // very important to call this after all the rules have been defined.\n    // otherwise the parser may not work correctly as it will lack information\n    // derived during the self analysis phase.\n    chevrotain.Parser.performSelfAnalysis(this)\n}\n\n// inheritance as implemented in javascript in the previous decade... :(\n" + options.name + ".prototype = Object.create(chevrotain.Parser.prototype)\n" + options.name + ".prototype.constructor = " + options.name + "    \n    ";
    return result;
}
exports.genClass = genClass;
function genAllRules(rules) {
    var rulesText = utils_1.map(rules, function (currRule) {
        return genRule(currRule, 1);
    });
    return rulesText.join("\n");
}
exports.genAllRules = genAllRules;
function genRule(prod, n) {
    var result = indent(n, "$.RULE(\"" + prod.name + "\", function() {") + NL;
    result += genDefinition(prod.definition, n + 1);
    result += indent(n + 1, "})") + NL;
    return result;
}
exports.genRule = genRule;
function genTerminal(prod, n) {
    var name = tokens_public_1.tokenName(prod.terminalType);
    // TODO: potential performance optimization, avoid tokenMap Dictionary access
    return indent(n, "$.CONSUME" + prod.idx + "(this.tokensMap." + name + ")" + NL);
}
exports.genTerminal = genTerminal;
function genNonTerminal(prod, n) {
    return indent(n, "$.SUBRULE" + prod.idx + "($." + prod.nonTerminalName + ")" + NL);
}
exports.genNonTerminal = genNonTerminal;
function genAlternation(prod, n) {
    var result = indent(n, "$.OR" + prod.idx + "([") + NL;
    var alts = utils_1.map(prod.definition, function (altDef) { return genSingleAlt(altDef, n + 1); });
    result += alts.join("," + NL);
    result += NL + indent(n, "])" + NL);
    return result;
}
exports.genAlternation = genAlternation;
function genSingleAlt(prod, n) {
    var result = indent(n, "{") + NL;
    if (prod.name) {
        result += indent(n + 1, "NAME: \"" + prod.name + "\",") + NL;
    }
    result += indent(n + 1, "ALT: function() {") + NL;
    result += genDefinition(prod.definition, n + 1);
    result += indent(n + 1, "}") + NL;
    result += indent(n, "}");
    return result;
}
exports.genSingleAlt = genSingleAlt;
function genProd(prod, n) {
    /* istanbul ignore else */
    if (prod instanceof gast_public_1.NonTerminal) {
        return genNonTerminal(prod, n);
    }
    else if (prod instanceof gast_public_1.Option) {
        return genDSLRule("OPTION", prod, n);
    }
    else if (prod instanceof gast_public_1.RepetitionMandatory) {
        return genDSLRule("AT_LEAST_ONE", prod, n);
    }
    else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {
        return genDSLRule("AT_LEAST_ONE_SEP", prod, n);
    }
    else if (prod instanceof gast_public_1.RepetitionWithSeparator) {
        return genDSLRule("MANY_SEP", prod, n);
    }
    else if (prod instanceof gast_public_1.Repetition) {
        return genDSLRule("MANY", prod, n);
    }
    else if (prod instanceof gast_public_1.Alternation) {
        return genAlternation(prod, n);
    }
    else if (prod instanceof gast_public_1.Terminal) {
        return genTerminal(prod, n);
    }
    else if (prod instanceof gast_public_1.Flat) {
        return genDefinition(prod.definition, n);
    }
    else {
        throw Error("non exhaustive match");
    }
}
function genDSLRule(dslName, prod, n) {
    var result = indent(n, "$." + (dslName + prod.idx) + "(");
    if (prod.name || prod.separator) {
        result += "{" + NL;
        if (prod.name) {
            result += indent(n + 1, "NAME: \"" + prod.name + "\"") + "," + NL;
        }
        if (prod.separator) {
            result +=
                indent(n + 1, "SEP: this.tokensMap." + tokens_public_1.tokenName(prod.separator)) +
                    "," +
                    NL;
        }
        result += "DEF: " + genDefFunction(prod.definition, n + 2) + NL;
        result += indent(n, "}") + NL;
    }
    else {
        result += genDefFunction(prod.definition, n + 1);
    }
    result += indent(n, ")") + NL;
    return result;
}
function genDefFunction(definition, n) {
    var def = "function() {" + NL;
    def += genDefinition(definition, n);
    def += indent(n, "}") + NL;
    return def;
}
function genDefinition(def, n) {
    var result = "";
    utils_1.forEach(def, function (prod) {
        result += genProd(prod, n + 1);
    });
    return result;
}
function indent(howMuch, text) {
    var spaces = Array(howMuch * 4 + 1).join(" ");
    return spaces + text;
}
//# sourceMappingURL=generate.js.map

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var generate_1 = __webpack_require__(54);
function generateParserFactory(options) {
    var wrapperText = generate_1.genWrapperFunction({
        name: options.name,
        rules: options.rules
    });
    var constructorWrapper = new Function("tokenVocabulary", "config", "chevrotain", wrapperText);
    return function (config) {
        return constructorWrapper(options.tokenVocabulary, config, 
        // TODO: check how the require is transpiled/webpacked
        __webpack_require__(7));
    };
}
exports.generateParserFactory = generateParserFactory;
function generateParserModule(options) {
    return generate_1.genUmdModule({ name: options.name, rules: options.rules });
}
exports.generateParserModule = generateParserModule;
//# sourceMappingURL=generate_public.js.map

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(0);
var lang_extensions_1 = __webpack_require__(5);
var checks_1 = __webpack_require__(8);
function defaultVisit(ctx, param) {
    var childrenNames = utils_1.keys(ctx);
    var childrenNamesLength = childrenNames.length;
    for (var i = 0; i < childrenNamesLength; i++) {
        var currChildName = childrenNames[i];
        var currChildArray = ctx[currChildName];
        var currChildArrayLength = currChildArray.length;
        for (var j = 0; j < currChildArrayLength; j++) {
            var currChild = currChildArray[j];
            // distinction between Tokens Children and CstNode children
            if (currChild.tokenTypeIdx === undefined) {
                if (currChild.fullName !== undefined) {
                    this[currChild.fullName](currChild.children, param);
                }
                else {
                    this[currChild.name](currChild.children, param);
                }
            }
        }
    }
    // defaultVisit does not support generic out param
    return undefined;
}
exports.defaultVisit = defaultVisit;
function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {
    var derivedConstructor = function () { };
    // can be overwritten according to:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/
    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname
    lang_extensions_1.defineNameProp(derivedConstructor, grammarName + "BaseSemantics");
    var semanticProto = {
        visit: function (cstNode, param) {
            // enables writing more concise visitor methods when CstNode has only a single child
            if (utils_1.isArray(cstNode)) {
                // A CST Node's children dictionary can never have empty arrays as values
                // If a key is defined there will be at least one element in the corresponding value array.
                cstNode = cstNode[0];
            }
            // enables passing optional CstNodes concisely.
            if (utils_1.isUndefined(cstNode)) {
                return undefined;
            }
            if (cstNode.fullName !== undefined) {
                return this[cstNode.fullName](cstNode.children, param);
            }
            else {
                return this[cstNode.name](cstNode.children, param);
            }
        },
        validateVisitor: function () {
            var semanticDefinitionErrors = validateVisitor(this, ruleNames);
            if (!utils_1.isEmpty(semanticDefinitionErrors)) {
                var errorMessages = utils_1.map(semanticDefinitionErrors, function (currDefError) { return currDefError.msg; });
                throw Error("Errors Detected in CST Visitor <" + lang_extensions_1.functionName(this.constructor) + ">:\n\t" +
                    ("" + errorMessages.join("\n\n").replace(/\n/g, "\n\t")));
            }
        }
    };
    derivedConstructor.prototype = semanticProto;
    derivedConstructor.prototype.constructor = derivedConstructor;
    derivedConstructor._RULE_NAMES = ruleNames;
    return derivedConstructor;
}
exports.createBaseSemanticVisitorConstructor = createBaseSemanticVisitorConstructor;
function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {
    var derivedConstructor = function () { };
    // can be overwritten according to:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/
    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname
    lang_extensions_1.defineNameProp(derivedConstructor, grammarName + "BaseSemanticsWithDefaults");
    var withDefaultsProto = Object.create(baseConstructor.prototype);
    utils_1.forEach(ruleNames, function (ruleName) {
        withDefaultsProto[ruleName] = defaultVisit;
    });
    derivedConstructor.prototype = withDefaultsProto;
    derivedConstructor.prototype.constructor = derivedConstructor;
    return derivedConstructor;
}
exports.createBaseVisitorConstructorWithDefaults = createBaseVisitorConstructorWithDefaults;
var CstVisitorDefinitionError;
(function (CstVisitorDefinitionError) {
    CstVisitorDefinitionError[CstVisitorDefinitionError["REDUNDANT_METHOD"] = 0] = "REDUNDANT_METHOD";
    CstVisitorDefinitionError[CstVisitorDefinitionError["MISSING_METHOD"] = 1] = "MISSING_METHOD";
})(CstVisitorDefinitionError = exports.CstVisitorDefinitionError || (exports.CstVisitorDefinitionError = {}));
function validateVisitor(visitorInstance, ruleNames) {
    var missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);
    var redundantErrors = validateRedundantMethods(visitorInstance, ruleNames);
    return missingErrors.concat(redundantErrors);
}
exports.validateVisitor = validateVisitor;
function validateMissingCstMethods(visitorInstance, ruleNames) {
    var errors = utils_1.map(ruleNames, function (currRuleName) {
        if (!utils_1.isFunction(visitorInstance[currRuleName])) {
            return {
                msg: "Missing visitor method: <" + currRuleName + "> on " + lang_extensions_1.functionName(visitorInstance.constructor) + " CST Visitor.",
                type: CstVisitorDefinitionError.MISSING_METHOD,
                methodName: currRuleName
            };
        }
    });
    return utils_1.compact(errors);
}
exports.validateMissingCstMethods = validateMissingCstMethods;
var VALID_PROP_NAMES = ["constructor", "visit", "validateVisitor"];
function validateRedundantMethods(visitorInstance, ruleNames) {
    var errors = [];
    for (var prop in visitorInstance) {
        if (checks_1.validTermsPattern.test(prop) &&
            utils_1.isFunction(visitorInstance[prop]) &&
            !utils_1.contains(VALID_PROP_NAMES, prop) &&
            !utils_1.contains(ruleNames, prop)) {
            errors.push({
                msg: "Redundant visitor method: <" + prop + "> on " + lang_extensions_1.functionName(visitorInstance.constructor) + " CST Visitor\n" +
                    "There is no Grammar Rule corresponding to this method's name.\n" +
                    ("For utility methods on visitor classes use methods names that do not match /" + checks_1.validTermsPattern.source + "/."),
                type: CstVisitorDefinitionError.REDUNDANT_METHOD,
                methodName: prop
            });
        }
    }
    return errors;
}
exports.validateRedundantMethods = validateRedundantMethods;
//# sourceMappingURL=cst_visitor.js.map

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var range_1 = __webpack_require__(62);
var utils_1 = __webpack_require__(0);
var gast_public_1 = __webpack_require__(1);
var ProdType;
(function (ProdType) {
    ProdType[ProdType["OPTION"] = 0] = "OPTION";
    ProdType[ProdType["OR"] = 1] = "OR";
    ProdType[ProdType["MANY"] = 2] = "MANY";
    ProdType[ProdType["MANY_SEP"] = 3] = "MANY_SEP";
    ProdType[ProdType["AT_LEAST_ONE"] = 4] = "AT_LEAST_ONE";
    ProdType[ProdType["AT_LEAST_ONE_SEP"] = 5] = "AT_LEAST_ONE_SEP";
    ProdType[ProdType["REF"] = 6] = "REF";
    ProdType[ProdType["TERMINAL"] = 7] = "TERMINAL";
    ProdType[ProdType["FLAT"] = 8] = "FLAT";
})(ProdType = exports.ProdType || (exports.ProdType = {}));
var namePropRegExp = /(?:\s*{\s*NAME\s*:\s*["'`]([\w$]*)["'`])?/;
var namePropRegExpNoCurlyFirstOfTwo = new RegExp(namePropRegExp.source
    // remove opening curly brackets
    .replace("{", "")
    // add the comma between the NAME prop and the following prop
    .replace(")?", "\\s*,)?"));
var terminalRegEx = /\.\s*CONSUME(\d+)?\s*\(\s*(?:[a-zA-Z_$]\w*\s*\.\s*)*([a-zA-Z_$]\w*)/;
var terminalRegGlobal = new RegExp(terminalRegEx.source, "g");
var refRegEx = /\.\s*SUBRULE(\d+)?\s*\(\s*(?:[a-zA-Z_$]\w*\s*\.\s*)*([a-zA-Z_$]\w*)/;
var refRegExGlobal = new RegExp(refRegEx.source, "g");
var optionPrefixRegEx = /\.\s*OPTION(\d+)?\s*\(/;
var optionRegEx = new RegExp(optionPrefixRegEx.source + namePropRegExp.source);
var optionRegExGlobal = new RegExp(optionPrefixRegEx.source, "g");
var manyPrefixRegEx = /\.\s*MANY(\d+)?\s*\(/;
var manyRegEx = new RegExp(manyPrefixRegEx.source + namePropRegExp.source);
var manyRegExGlobal = new RegExp(manyPrefixRegEx.source, "g");
var sepPropRegEx = /\s*SEP\s*:\s*(?:[a-zA-Z_$]\w*\s*\.\s*)*([a-zA-Z_$]\w*)/;
var manySepPrefixRegEx = /\.\s*MANY_SEP(\d+)?\s*\(\s*{/;
var manyWithSeparatorRegEx = new RegExp(manySepPrefixRegEx.source +
    namePropRegExpNoCurlyFirstOfTwo.source +
    sepPropRegEx.source);
var manyWithSeparatorRegExGlobal = new RegExp(manyWithSeparatorRegEx.source, "g");
var atLeastOneSepPrefixRegEx = /\.\s*AT_LEAST_ONE_SEP(\d+)?\s*\(\s*{/;
var atLeastOneWithSeparatorRegEx = new RegExp(atLeastOneSepPrefixRegEx.source +
    namePropRegExpNoCurlyFirstOfTwo.source +
    sepPropRegEx.source);
var atLeastOneWithSeparatorRegExGlobal = new RegExp(atLeastOneWithSeparatorRegEx.source, "g");
var atLeastOnePrefixRegEx = /\.\s*AT_LEAST_ONE(\d+)?\s*\(/;
var atLeastOneRegEx = new RegExp(atLeastOnePrefixRegEx.source + namePropRegExp.source);
var atLeastOneRegExGlobal = new RegExp(atLeastOnePrefixRegEx.source, "g");
var orPrefixRegEx = /\.\s*OR(\d+)?\s*\(/;
var orRegEx = new RegExp(orPrefixRegEx.source + namePropRegExp.source);
var orRegExGlobal = new RegExp(orPrefixRegEx.source, "g");
var orPartSuffixRegEx = /\s*(ALT)\s*:/;
var orPartRegEx = new RegExp(namePropRegExpNoCurlyFirstOfTwo.source + orPartSuffixRegEx.source);
var orPartRegExGlobal = new RegExp(orPartRegEx.source, "g");
exports.terminalNameToConstructor = {};
function buildTopProduction(impelText, name, terminals) {
    // pseudo state. so little state does not yet mandate the complexity of wrapping in a class...
    // TODO: this is confusing, might be time to create a class..
    exports.terminalNameToConstructor = terminals;
    // the top most range must strictly contain all the other ranges
    // which is why we prefix the text with " " (curr Range impel is only for positive ranges)
    var spacedImpelText = " " + impelText;
    // TODO: why do we add whitespace twice?
    var txtWithoutComments = removeComments(" " + spacedImpelText);
    var textWithoutCommentsAndStrings = removeStringLiterals(txtWithoutComments);
    var prodRanges = createRanges(textWithoutCommentsAndStrings);
    var topRange = new range_1.Range(0, impelText.length + 2);
    var topRule = buildTopLevel(name, topRange, prodRanges, impelText);
    return topRule;
}
exports.buildTopProduction = buildTopProduction;
function buildTopLevel(name, topRange, allRanges, orgText) {
    var topLevelProd = new gast_public_1.Rule({
        name: name,
        definition: [],
        orgText: orgText
    });
    return buildAbstractProd(topLevelProd, topRange, allRanges);
}
function buildProdGast(prodRange, allRanges) {
    switch (prodRange.type) {
        case ProdType.AT_LEAST_ONE:
            return buildAtLeastOneProd(prodRange, allRanges);
        case ProdType.AT_LEAST_ONE_SEP:
            return buildAtLeastOneSepProd(prodRange, allRanges);
        case ProdType.MANY_SEP:
            return buildManySepProd(prodRange, allRanges);
        case ProdType.MANY:
            return buildManyProd(prodRange, allRanges);
        case ProdType.OPTION:
            return buildOptionProd(prodRange, allRanges);
        case ProdType.OR:
            return buildOrProd(prodRange, allRanges);
        case ProdType.FLAT:
            return buildFlatProd(prodRange, allRanges);
        case ProdType.REF:
            return buildRefProd(prodRange);
        case ProdType.TERMINAL:
            return buildTerminalProd(prodRange);
        /* istanbul ignore next */
        default:
            throw Error("non exhaustive match");
    }
}
exports.buildProdGast = buildProdGast;
function buildRefProd(prodRange) {
    var reResult = refRegEx.exec(prodRange.text);
    var isImplicitOccurrenceIdx = reResult[1] === undefined;
    var refOccurrence = isImplicitOccurrenceIdx ? 0 : parseInt(reResult[1], 10);
    var refProdName = reResult[2];
    var newRef = new gast_public_1.NonTerminal({
        nonTerminalName: refProdName,
        idx: refOccurrence
    });
    return newRef;
}
function buildTerminalProd(prodRange) {
    var reResult = terminalRegEx.exec(prodRange.text);
    var isImplicitOccurrenceIdx = reResult[1] === undefined;
    var terminalOccurrence = isImplicitOccurrenceIdx
        ? 0
        : parseInt(reResult[1], 10);
    var terminalName = reResult[2];
    var terminalType = exports.terminalNameToConstructor[terminalName];
    if (!terminalType) {
        throw Error("Terminal Token name: " +
            terminalName +
            " not found\n" +
            "\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#TERMINAL_NAME_NOT_FOUND\n" +
            "\tFor Further details.");
    }
    var newTerminal = new gast_public_1.Terminal({
        terminalType: terminalType,
        idx: terminalOccurrence
    });
    return newTerminal;
}
function buildProdWithOccurrence(regEx, prodInstance, prodRange, allRanges) {
    var reResult = regEx.exec(prodRange.text);
    var isImplicitOccurrenceIdx = reResult[1] === undefined;
    prodInstance.idx = isImplicitOccurrenceIdx ? 0 : parseInt(reResult[1], 10);
    var nestedName = reResult[2];
    if (!utils_1.isUndefined(nestedName)) {
        ;
        prodInstance.name = nestedName;
    }
    return buildAbstractProd(prodInstance, prodRange.range, allRanges);
}
function buildAtLeastOneProd(prodRange, allRanges) {
    return buildProdWithOccurrence(atLeastOneRegEx, new gast_public_1.RepetitionMandatory({ definition: [] }), prodRange, allRanges);
}
function buildAtLeastOneSepProd(prodRange, allRanges) {
    return buildRepetitionWithSep(prodRange, allRanges, gast_public_1.RepetitionMandatoryWithSeparator, atLeastOneWithSeparatorRegEx);
}
function buildManyProd(prodRange, allRanges) {
    return buildProdWithOccurrence(manyRegEx, new gast_public_1.Repetition({ definition: [] }), prodRange, allRanges);
}
function buildManySepProd(prodRange, allRanges) {
    return buildRepetitionWithSep(prodRange, allRanges, gast_public_1.RepetitionWithSeparator, manyWithSeparatorRegEx);
}
function buildRepetitionWithSep(prodRange, allRanges, repConstructor, regExp) {
    var reResult = regExp.exec(prodRange.text);
    var isImplicitOccurrenceIdx = reResult[1] === undefined;
    var occurrenceIdx = isImplicitOccurrenceIdx ? 0 : parseInt(reResult[1], 10);
    var sepName = reResult[3];
    var separatorType = exports.terminalNameToConstructor[sepName];
    if (!separatorType) {
        throw Error("Separator Terminal Token name: " + sepName + " not found");
    }
    var repetitionInstance = new repConstructor({
        definition: [],
        separator: separatorType,
        idx: occurrenceIdx
    });
    var nestedName = reResult[2];
    if (!utils_1.isUndefined(nestedName)) {
        ;
        repetitionInstance.name = nestedName;
    }
    return (buildAbstractProd(repetitionInstance, prodRange.range, allRanges));
}
function buildOptionProd(prodRange, allRanges) {
    return buildProdWithOccurrence(optionRegEx, new gast_public_1.Option({ definition: [] }), prodRange, allRanges);
}
function buildOrProd(prodRange, allRanges) {
    return buildProdWithOccurrence(orRegEx, new gast_public_1.Alternation({ definition: [] }), prodRange, allRanges);
}
function buildFlatProd(prodRange, allRanges) {
    var prodInstance = new gast_public_1.Flat({ definition: [] });
    var reResult = orPartRegEx.exec(prodRange.text);
    var nestedName = reResult[1];
    if (!utils_1.isUndefined(nestedName)) {
        ;
        prodInstance.name = nestedName;
    }
    return buildAbstractProd(prodInstance, prodRange.range, allRanges);
}
function buildAbstractProd(prod, topLevelRange, allRanges) {
    var secondLevelProds = getDirectlyContainedRanges(topLevelRange, allRanges);
    var secondLevelInOrder = utils_1.sortBy(secondLevelProds, function (prodRng) {
        return prodRng.range.start;
    });
    var definition = [];
    utils_1.forEach(secondLevelInOrder, function (prodRng) {
        definition.push(buildProdGast(prodRng, allRanges));
    });
    prod.definition = definition;
    return prod;
}
function getDirectlyContainedRanges(y, prodRanges) {
    return utils_1.filter(prodRanges, function (x) {
        var isXDescendantOfY = y.strictlyContainsRange(x.range);
        var xDoesNotHaveAnyAncestorWhichIsDecendantOfY = utils_1.every(prodRanges, function (maybeAnotherParent) {
            var isParentOfX = maybeAnotherParent.range.strictlyContainsRange(x.range);
            var isChildOfY = maybeAnotherParent.range.isStrictlyContainedInRange(y);
            return !(isParentOfX && isChildOfY);
        });
        return isXDescendantOfY && xDoesNotHaveAnyAncestorWhichIsDecendantOfY;
    });
}
exports.getDirectlyContainedRanges = getDirectlyContainedRanges;
var singleLineCommentRegEx = /\/\/.*/g;
var multiLineCommentRegEx = /\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+\//g;
var doubleQuoteStringLiteralRegEx = /(NAME\s*:\s*)?"([^\\"]|\\([bfnrtv"\\/]|u[0-9a-fA-F]{4}))*"/g;
var singleQuoteStringLiteralRegEx = /(NAME\s*:\s*)?'([^\\']|\\([bfnrtv'\\/]|u[0-9a-fA-F]{4}))*'/g;
function removeComments(text) {
    var noSingleLine = text.replace(singleLineCommentRegEx, "");
    var noComments = noSingleLine.replace(multiLineCommentRegEx, "");
    return noComments;
}
exports.removeComments = removeComments;
function replaceWithEmptyStringExceptNestedRules(match, nestedRuleGroup) {
    // do not replace with empty string if a nest rule (NAME:"bamba") was detected
    if (nestedRuleGroup !== undefined) {
        return match;
    }
    return "";
}
function removeStringLiterals(text) {
    var noDoubleQuotes = text.replace(doubleQuoteStringLiteralRegEx, replaceWithEmptyStringExceptNestedRules);
    var noSingleQuotes = noDoubleQuotes.replace(singleQuoteStringLiteralRegEx, replaceWithEmptyStringExceptNestedRules);
    return noSingleQuotes;
}
exports.removeStringLiterals = removeStringLiterals;
function createRanges(text) {
    var terminalRanges = createTerminalRanges(text);
    var refsRanges = createRefsRanges(text);
    var atLeastOneRanges = createAtLeastOneRanges(text);
    var atLeastOneSepRanges = createAtLeastOneSepRanges(text);
    var manyRanges = createManyRanges(text);
    var manySepRanges = createManySepRanges(text);
    var optionRanges = createOptionRanges(text);
    var orRanges = createOrRanges(text);
    return [].concat(terminalRanges, refsRanges, atLeastOneRanges, atLeastOneSepRanges, manyRanges, manySepRanges, optionRanges, orRanges);
}
exports.createRanges = createRanges;
function createTerminalRanges(text) {
    return createRefOrTerminalProdRangeInternal(text, ProdType.TERMINAL, terminalRegGlobal);
}
exports.createTerminalRanges = createTerminalRanges;
function createRefsRanges(text) {
    return createRefOrTerminalProdRangeInternal(text, ProdType.REF, refRegExGlobal);
}
exports.createRefsRanges = createRefsRanges;
function createAtLeastOneRanges(text) {
    return createOperatorProdRangeParenthesis(text, ProdType.AT_LEAST_ONE, atLeastOneRegExGlobal);
}
exports.createAtLeastOneRanges = createAtLeastOneRanges;
function createAtLeastOneSepRanges(text) {
    return createOperatorProdRangeParenthesis(text, ProdType.AT_LEAST_ONE_SEP, atLeastOneWithSeparatorRegExGlobal);
}
exports.createAtLeastOneSepRanges = createAtLeastOneSepRanges;
function createManyRanges(text) {
    return createOperatorProdRangeParenthesis(text, ProdType.MANY, manyRegExGlobal);
}
exports.createManyRanges = createManyRanges;
function createManySepRanges(text) {
    return createOperatorProdRangeParenthesis(text, ProdType.MANY_SEP, manyWithSeparatorRegExGlobal);
}
exports.createManySepRanges = createManySepRanges;
function createOptionRanges(text) {
    return createOperatorProdRangeParenthesis(text, ProdType.OPTION, optionRegExGlobal);
}
exports.createOptionRanges = createOptionRanges;
function createOrRanges(text) {
    var orRanges = createOperatorProdRangeParenthesis(text, ProdType.OR, orRegExGlobal);
    // have to split up the OR cases into separate FLAT productions
    // (A |BB | CDE) ==> or.def[0] --> FLAT(A) , or.def[1] --> FLAT(BB) , or.def[2] --> FLAT(CCDE)
    var orSubPartsRanges = createOrPartRanges(orRanges);
    return orRanges.concat(orSubPartsRanges);
}
exports.createOrRanges = createOrRanges;
var findClosingCurly = (utils_1.partial(findClosingOffset, "{", "}"));
var findClosingParen = (utils_1.partial(findClosingOffset, "(", ")"));
function createOrPartRanges(orRanges) {
    var orPartRanges = [];
    utils_1.forEach(orRanges, function (orRange) {
        var currOrParts = createOperatorProdRangeInternal(orRange.text, ProdType.FLAT, orPartRegExGlobal, findClosingCurly);
        var currOrRangeStart = orRange.range.start;
        // fix offsets as we are working on a subset of the text
        utils_1.forEach(currOrParts, function (orPart) {
            orPart.range.start += currOrRangeStart;
            orPart.range.end += currOrRangeStart;
        });
        orPartRanges = orPartRanges.concat(currOrParts);
    });
    var uniqueOrPartRanges = utils_1.uniq(orPartRanges, function (prodRange) {
        // using "~" as a separator for the identify function as its not a valid char in javascript
        return (prodRange.type +
            "~" +
            prodRange.range.start +
            "~" +
            prodRange.range.end +
            "~" +
            prodRange.text);
    });
    return uniqueOrPartRanges;
}
exports.createOrPartRanges = createOrPartRanges;
function createRefOrTerminalProdRangeInternal(text, prodType, pattern) {
    var prodRanges = [];
    var matched;
    while ((matched = pattern.exec(text))) {
        var start = matched.index;
        var stop_1 = pattern.lastIndex;
        var currRange = new range_1.Range(start, stop_1);
        var currText = matched[0];
        prodRanges.push({
            range: currRange,
            text: currText,
            type: prodType
        });
    }
    return prodRanges;
}
function createOperatorProdRangeParenthesis(text, prodType, pattern) {
    return createOperatorProdRangeInternal(text, prodType, pattern, findClosingParen);
}
function createOperatorProdRangeInternal(text, prodType, pattern, findTerminatorOffSet) {
    var operatorRanges = [];
    var matched;
    while ((matched = pattern.exec(text))) {
        var start = matched.index;
        // note that (start + matched[0].length) is the first character AFTER the match
        var stop_2 = findTerminatorOffSet(start + matched[0].length, text);
        var currRange = new range_1.Range(start, stop_2);
        var currText = text.substr(start, stop_2 - start + 1);
        operatorRanges.push({
            range: currRange,
            text: currText,
            type: prodType
        });
    }
    return operatorRanges;
}
function findClosingOffset(opening, closing, start, text) {
    var parenthesisStack = [1];
    var i = -1;
    while (!utils_1.isEmpty(parenthesisStack) && i + start < text.length) {
        i++;
        var nextChar = text.charAt(start + i);
        if (nextChar === opening) {
            parenthesisStack.push(1);
        }
        else if (nextChar === closing) {
            parenthesisStack.pop();
        }
    }
    // valid termination of the search loop
    if (utils_1.isEmpty(parenthesisStack)) {
        return i + start;
    }
    else {
        throw new Error("INVALID INPUT TEXT, UNTERMINATED PARENTHESIS");
    }
}
exports.findClosingOffset = findClosingOffset;
function deserializeGrammar(grammar, terminals) {
    return utils_1.map(grammar, function (production) {
        return deserializeProduction(production, terminals);
    });
}
exports.deserializeGrammar = deserializeGrammar;
function deserializeProduction(node, terminals) {
    switch (node.type) {
        case "NonTerminal":
            return new gast_public_1.NonTerminal({
                nonTerminalName: node.name,
                idx: node.idx
            });
        case "Flat":
            return new gast_public_1.Flat({
                name: node.name,
                definition: deserializeGrammar(node.definition, terminals)
            });
        case "Option":
            return new gast_public_1.Option({
                name: node.name,
                idx: node.idx,
                definition: deserializeGrammar(node.definition, terminals)
            });
        case "RepetitionMandatory":
            return new gast_public_1.RepetitionMandatory({
                name: node.name,
                idx: node.idx,
                definition: deserializeGrammar(node.definition, terminals)
            });
        case "RepetitionMandatoryWithSeparator":
            return new gast_public_1.RepetitionMandatoryWithSeparator({
                name: node.name,
                idx: node.idx,
                separator: terminals[node.separator.name],
                definition: deserializeGrammar(node.definition, terminals)
            });
        case "RepetitionWithSeparator":
            return new gast_public_1.RepetitionWithSeparator({
                name: node.name,
                idx: node.idx,
                separator: terminals[node.separator.name],
                definition: deserializeGrammar(node.definition, terminals)
            });
        case "Repetition":
            return new gast_public_1.Repetition({
                name: node.name,
                idx: node.idx,
                definition: deserializeGrammar(node.definition, terminals)
            });
        case "Alternation":
            return new gast_public_1.Alternation({
                name: node.name,
                idx: node.idx,
                definition: deserializeGrammar(node.definition, terminals)
            });
        case "Terminal":
            return new gast_public_1.Terminal({
                terminalType: terminals[node.name],
                idx: node.idx
            });
        case "Rule":
            return new gast_public_1.Rule({
                name: node.name,
                orgText: node.orgText,
                definition: deserializeGrammar(node.definition, terminals)
            });
        /* istanbul ignore next */
        default:
            var _never = node;
    }
}
exports.deserializeProduction = deserializeProduction;
//# sourceMappingURL=gast_builder.js.map

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var rest_1 = __webpack_require__(26);
var lang_extensions_1 = __webpack_require__(5);
var first_1 = __webpack_require__(37);
var utils_1 = __webpack_require__(0);
var constants_1 = __webpack_require__(34);
var tokens_public_1 = __webpack_require__(3);
var gast_public_1 = __webpack_require__(1);
// This ResyncFollowsWalker computes all of the follows required for RESYNC
// (skipping reference production).
var ResyncFollowsWalker = /** @class */ (function (_super) {
    __extends(ResyncFollowsWalker, _super);
    function ResyncFollowsWalker(topProd) {
        var _this = _super.call(this) || this;
        _this.topProd = topProd;
        _this.follows = new lang_extensions_1.HashTable();
        return _this;
    }
    ResyncFollowsWalker.prototype.startWalking = function () {
        this.walk(this.topProd);
        return this.follows;
    };
    ResyncFollowsWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {
        // do nothing! just like in the public sector after 13:00
    };
    ResyncFollowsWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {
        var followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +
            this.topProd.name;
        var fullRest = currRest.concat(prevRest);
        var restProd = new gast_public_1.Flat({ definition: fullRest });
        var t_in_topProd_follows = first_1.first(restProd);
        this.follows.put(followName, t_in_topProd_follows);
    };
    return ResyncFollowsWalker;
}(rest_1.RestWalker));
exports.ResyncFollowsWalker = ResyncFollowsWalker;
function computeAllProdsFollows(topProductions) {
    var reSyncFollows = new lang_extensions_1.HashTable();
    utils_1.forEach(topProductions, function (topProd) {
        var currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();
        reSyncFollows.putAll(currRefsFollow);
    });
    return reSyncFollows;
}
exports.computeAllProdsFollows = computeAllProdsFollows;
function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {
    return inner.name + occurenceInParent + constants_1.IN;
}
exports.buildBetweenProdsFollowPrefix = buildBetweenProdsFollowPrefix;
function buildInProdFollowPrefix(terminal) {
    var terminalName = tokens_public_1.tokenName(terminal.terminalType);
    return terminalName + terminal.idx + constants_1.IN;
}
exports.buildInProdFollowPrefix = buildInProdFollowPrefix;
//# sourceMappingURL=follow.js.map

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var parser_public_1 = __webpack_require__(27);
var utils_1 = __webpack_require__(0);
var gast_visitor_public_1 = __webpack_require__(6);
function resolveGrammar(topLevels, errMsgProvider) {
    var refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);
    refResolver.resolveRefs();
    return refResolver.errors;
}
exports.resolveGrammar = resolveGrammar;
var GastRefResolverVisitor = /** @class */ (function (_super) {
    __extends(GastRefResolverVisitor, _super);
    function GastRefResolverVisitor(nameToTopRule, errMsgProvider) {
        var _this = _super.call(this) || this;
        _this.nameToTopRule = nameToTopRule;
        _this.errMsgProvider = errMsgProvider;
        _this.errors = [];
        return _this;
    }
    GastRefResolverVisitor.prototype.resolveRefs = function () {
        var _this = this;
        utils_1.forEach(this.nameToTopRule.values(), function (prod) {
            _this.currTopLevel = prod;
            prod.accept(_this);
        });
    };
    GastRefResolverVisitor.prototype.visitNonTerminal = function (node) {
        var ref = this.nameToTopRule.get(node.nonTerminalName);
        if (!ref) {
            var msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);
            this.errors.push({
                message: msg,
                type: parser_public_1.ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,
                ruleName: this.currTopLevel.name,
                unresolvedRefName: node.nonTerminalName
            });
        }
        else {
            node.referencedRule = ref;
        }
    };
    return GastRefResolverVisitor;
}(gast_visitor_public_1.GAstVisitor));
exports.GastRefResolverVisitor = GastRefResolverVisitor;
//# sourceMappingURL=resolver.js.map

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var regexp_to_ast_1 = __webpack_require__(41);
var tokens_public_1 = __webpack_require__(3);
var lexer_public_1 = __webpack_require__(28);
var utils_1 = __webpack_require__(0);
var reg_exp_1 = __webpack_require__(61);
var regExpParser = new regexp_to_ast_1.RegExpParser();
var PATTERN = "PATTERN";
exports.DEFAULT_MODE = "defaultMode";
exports.MODES = "modes";
exports.SUPPORT_STICKY = typeof new RegExp("(?:)").sticky === "boolean";
function disableSticky() {
    exports.SUPPORT_STICKY = false;
}
exports.disableSticky = disableSticky;
function enableSticky() {
    exports.SUPPORT_STICKY = true;
}
exports.enableSticky = enableSticky;
function analyzeTokenTypes(tokenTypes, options) {
    options = utils_1.defaults(options, {
        useSticky: exports.SUPPORT_STICKY,
        debug: false,
        safeMode: false,
        positionTracking: "full",
        lineTerminatorCharacters: ["\r", "\n"]
    });
    var onlyRelevantTypes = utils_1.reject(tokenTypes, function (currType) {
        return currType[PATTERN] === lexer_public_1.Lexer.NA;
    });
    var hasCustom = false;
    var allTransformedPatterns = utils_1.map(onlyRelevantTypes, function (currType) {
        var currPattern = currType[PATTERN];
        /* istanbul ignore else */
        if (utils_1.isRegExp(currPattern)) {
            var regExpSource = currPattern.source;
            if (regExpSource.length === 1 &&
                // only these regExp meta characters which can appear in a length one regExp
                regExpSource !== "^" &&
                regExpSource !== "$" &&
                regExpSource !== ".") {
                return regExpSource;
            }
            else if (regExpSource.length === 2 &&
                regExpSource[0] === "\\" &&
                // not a meta character
                !utils_1.contains([
                    "d",
                    "D",
                    "s",
                    "S",
                    "t",
                    "r",
                    "n",
                    "t",
                    "0",
                    "c",
                    "b",
                    "B",
                    "f",
                    "v",
                    "w",
                    "W"
                ], regExpSource[1])) {
                // escaped meta Characters: /\+/ /\[/
                // or redundant escaping: /\a/
                // without the escaping "\"
                return regExpSource[1];
            }
            else {
                return options.useSticky
                    ? addStickyFlag(currPattern)
                    : addStartOfInput(currPattern);
            }
        }
        else if (utils_1.isFunction(currPattern)) {
            hasCustom = true;
            // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object
            return { exec: currPattern };
        }
        else if (utils_1.has(currPattern, "exec")) {
            hasCustom = true;
            // ICustomPattern
            return currPattern;
        }
        else if (typeof currPattern === "string") {
            // IGNORE ABOVE ELSE
            if (currPattern.length === 1) {
                return currPattern;
            }
            else {
                var escapedRegExpString = currPattern.replace(/[\\^$.*+?()[\]{}|]/g, "\\$&");
                var wrappedRegExp = new RegExp(escapedRegExpString);
                return options.useSticky
                    ? addStickyFlag(wrappedRegExp)
                    : addStartOfInput(wrappedRegExp);
            }
        }
        else {
            throw Error("non exhaustive match");
        }
    });
    var patternIdxToType = utils_1.map(onlyRelevantTypes, function (currType) { return currType.tokenTypeIdx; });
    var patternIdxToGroup = utils_1.map(onlyRelevantTypes, function (clazz) {
        var groupName = clazz.GROUP;
        /* istanbul ignore next */
        if (groupName === lexer_public_1.Lexer.SKIPPED) {
            return undefined;
        }
        else if (utils_1.isString(groupName)) {
            return groupName;
        }
        else if (utils_1.isUndefined(groupName)) {
            return false;
        }
        else {
            throw Error("non exhaustive match");
        }
    });
    var patternIdxToLongerAltIdx = utils_1.map(onlyRelevantTypes, function (clazz) {
        var longerAltType = clazz.LONGER_ALT;
        if (longerAltType) {
            var longerAltIdx = utils_1.indexOf(onlyRelevantTypes, longerAltType);
            return longerAltIdx;
        }
    });
    var patternIdxToPushMode = utils_1.map(onlyRelevantTypes, function (clazz) { return clazz.PUSH_MODE; });
    var patternIdxToPopMode = utils_1.map(onlyRelevantTypes, function (clazz) {
        return utils_1.has(clazz, "POP_MODE");
    });
    var lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);
    var patternIdxToCanLineTerminator = utils_1.map(onlyRelevantTypes, function (tokType) { return false; });
    if (options.positionTracking !== "onlyOffset") {
        patternIdxToCanLineTerminator = utils_1.map(onlyRelevantTypes, function (tokType) {
            if (utils_1.has(tokType, "LINE_BREAKS")) {
                return tokType.LINE_BREAKS;
            }
            else {
                if (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) ===
                    false) {
                    return reg_exp_1.canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);
                }
            }
        });
    }
    var patternIdxToIsCustom = utils_1.map(onlyRelevantTypes, isCustomPattern);
    var patternIdxToShort = utils_1.map(allTransformedPatterns, isShortPattern);
    var emptyGroups = utils_1.reduce(onlyRelevantTypes, function (acc, clazz) {
        var groupName = clazz.GROUP;
        if (utils_1.isString(groupName) && !(groupName === lexer_public_1.Lexer.SKIPPED)) {
            acc[groupName] = [];
        }
        return acc;
    }, {});
    var patternIdxToConfig = utils_1.map(allTransformedPatterns, function (x, idx) {
        return {
            pattern: allTransformedPatterns[idx],
            longerAlt: patternIdxToLongerAltIdx[idx],
            canLineTerminator: patternIdxToCanLineTerminator[idx],
            isCustom: patternIdxToIsCustom[idx],
            short: patternIdxToShort[idx],
            group: patternIdxToGroup[idx],
            push: patternIdxToPushMode[idx],
            pop: patternIdxToPopMode[idx],
            tokenTypeIdx: patternIdxToType[idx],
            tokenType: onlyRelevantTypes[idx]
        };
    });
    function addToMapOfArrays(map, key, value) {
        if (map[key] === undefined) {
            map[key] = [];
        }
        map[key].push(value);
    }
    var canBeOptimized = true;
    var charCodeToPatternIdxToConfig = [];
    if (!options.safeMode) {
        charCodeToPatternIdxToConfig = utils_1.reduce(onlyRelevantTypes, function (result, currTokType, idx) {
            if (typeof currTokType.PATTERN === "string") {
                var key = currTokType.PATTERN.charCodeAt(0);
                addToMapOfArrays(result, key, patternIdxToConfig[idx]);
            }
            else if (utils_1.isArray(currTokType.START_CHARS_HINT)) {
                utils_1.forEach(currTokType.START_CHARS_HINT, function (charOrInt) {
                    var key = typeof charOrInt === "string"
                        ? charOrInt.charCodeAt(0)
                        : charOrInt;
                    addToMapOfArrays(result, key, patternIdxToConfig[idx]);
                });
            }
            else if (utils_1.isRegExp(currTokType.PATTERN)) {
                if (currTokType.PATTERN.unicode) {
                    canBeOptimized = false;
                    if (options.ensureOptimizations) {
                        utils_1.PRINT_ERROR("" + reg_exp_1.failedOptimizationPrefixMsg +
                            ("\tUnable to analyze < " + currTokType.PATTERN.toString() + " > pattern.\n") +
                            "\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\n" +
                            "\tThis will disable the lexer's first char optimizations.\n" +
                            "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE");
                    }
                }
                else {
                    var startCodes = reg_exp_1.getStartCodes(currTokType.PATTERN, options.ensureOptimizations);
                    /* istanbul ignore if */
                    // start code will only be empty given an empty regExp or failure of regexp-to-ast library
                    // the first should be a different validation and the second cannot be tested.
                    if (utils_1.isEmpty(startCodes)) {
                        // we cannot understand what codes may start possible matches
                        // The optimization correctness requires knowing start codes for ALL patterns.
                        // Not actually sure this is an error, no debug message
                        canBeOptimized = false;
                    }
                    utils_1.forEach(startCodes, function (code) {
                        addToMapOfArrays(result, code, patternIdxToConfig[idx]);
                    });
                }
            }
            else {
                if (options.ensureOptimizations) {
                    utils_1.PRINT_ERROR("" + reg_exp_1.failedOptimizationPrefixMsg +
                        ("\tTokenType: <" + tokens_public_1.tokenName(currTokType) + "> is using a custom token pattern without providing <start_chars_hint> parameter.\n") +
                        "\tThis will disable the lexer's first char optimizations.\n" +
                        "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE");
                }
                canBeOptimized = false;
            }
            return result;
        }, []);
    }
    if (canBeOptimized && charCodeToPatternIdxToConfig.length < 65536) {
        charCodeToPatternIdxToConfig = utils_1.packArray(charCodeToPatternIdxToConfig);
    }
    return {
        emptyGroups: emptyGroups,
        patternIdxToConfig: patternIdxToConfig,
        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,
        hasCustom: hasCustom,
        canBeOptimized: canBeOptimized
    };
}
exports.analyzeTokenTypes = analyzeTokenTypes;
function validatePatterns(tokenTypes, validModesNames) {
    var errors = [];
    var missingResult = findMissingPatterns(tokenTypes);
    errors = errors.concat(missingResult.errors);
    var invalidResult = findInvalidPatterns(missingResult.valid);
    var validTokenTypes = invalidResult.valid;
    errors = errors.concat(invalidResult.errors);
    errors = errors.concat(validateRegExpPattern(validTokenTypes));
    errors = errors.concat(findInvalidGroupType(validTokenTypes));
    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));
    errors = errors.concat(findUnreachablePatterns(validTokenTypes));
    return errors;
}
exports.validatePatterns = validatePatterns;
function validateRegExpPattern(tokenTypes) {
    var errors = [];
    var withRegExpPatterns = utils_1.filter(tokenTypes, function (currTokType) {
        return utils_1.isRegExp(currTokType[PATTERN]);
    });
    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));
    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));
    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));
    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));
    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));
    return errors;
}
function findMissingPatterns(tokenTypes) {
    var tokenTypesWithMissingPattern = utils_1.filter(tokenTypes, function (currType) {
        return !utils_1.has(currType, PATTERN);
    });
    var errors = utils_1.map(tokenTypesWithMissingPattern, function (currType) {
        return {
            message: "Token Type: ->" +
                tokens_public_1.tokenName(currType) +
                "<- missing static 'PATTERN' property",
            type: lexer_public_1.LexerDefinitionErrorType.MISSING_PATTERN,
            tokenTypes: [currType]
        };
    });
    var valid = utils_1.difference(tokenTypes, tokenTypesWithMissingPattern);
    return { errors: errors, valid: valid };
}
exports.findMissingPatterns = findMissingPatterns;
function findInvalidPatterns(tokenTypes) {
    var tokenTypesWithInvalidPattern = utils_1.filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        return (!utils_1.isRegExp(pattern) &&
            !utils_1.isFunction(pattern) &&
            !utils_1.has(pattern, "exec") &&
            !utils_1.isString(pattern));
    });
    var errors = utils_1.map(tokenTypesWithInvalidPattern, function (currType) {
        return {
            message: "Token Type: ->" +
                tokens_public_1.tokenName(currType) +
                "<- static 'PATTERN' can only be a RegExp, a" +
                " Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.",
            type: lexer_public_1.LexerDefinitionErrorType.INVALID_PATTERN,
            tokenTypes: [currType]
        };
    });
    var valid = utils_1.difference(tokenTypes, tokenTypesWithInvalidPattern);
    return { errors: errors, valid: valid };
}
exports.findInvalidPatterns = findInvalidPatterns;
var end_of_input = /[^\\][\$]/;
function findEndOfInputAnchor(tokenTypes) {
    var EndAnchorFinder = /** @class */ (function (_super) {
        __extends(EndAnchorFinder, _super);
        function EndAnchorFinder() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.found = false;
            return _this;
        }
        EndAnchorFinder.prototype.visitEndAnchor = function (node) {
            this.found = true;
        };
        return EndAnchorFinder;
    }(regexp_to_ast_1.BaseRegExpVisitor));
    var invalidRegex = utils_1.filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        try {
            var regexpAst = regExpParser.pattern(pattern.toString());
            var endAnchorVisitor = new EndAnchorFinder();
            endAnchorVisitor.visit(regexpAst);
            return endAnchorVisitor.found;
        }
        catch (e) {
            // old behavior in case of runtime exceptions with regexp-to-ast.
            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/
            return end_of_input.test(pattern.source);
        }
    });
    var errors = utils_1.map(invalidRegex, function (currType) {
        return {
            message: "Unexpected RegExp Anchor Error:\n" +
                "\tToken Type: ->" +
                tokens_public_1.tokenName(currType) +
                "<- static 'PATTERN' cannot contain end of input anchor '$'\n" +
                "\tSee sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS" +
                "\tfor details.",
            type: lexer_public_1.LexerDefinitionErrorType.EOI_ANCHOR_FOUND,
            tokenTypes: [currType]
        };
    });
    return errors;
}
exports.findEndOfInputAnchor = findEndOfInputAnchor;
function findEmptyMatchRegExps(tokenTypes) {
    var matchesEmptyString = utils_1.filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        return pattern.test("");
    });
    var errors = utils_1.map(matchesEmptyString, function (currType) {
        return {
            message: "Token Type: ->" +
                tokens_public_1.tokenName(currType) +
                "<- static 'PATTERN' must not match an empty string",
            type: lexer_public_1.LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,
            tokenTypes: [currType]
        };
    });
    return errors;
}
exports.findEmptyMatchRegExps = findEmptyMatchRegExps;
var start_of_input = /[^\\[][\^]|^\^/;
function findStartOfInputAnchor(tokenTypes) {
    var StartAnchorFinder = /** @class */ (function (_super) {
        __extends(StartAnchorFinder, _super);
        function StartAnchorFinder() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.found = false;
            return _this;
        }
        StartAnchorFinder.prototype.visitStartAnchor = function (node) {
            this.found = true;
        };
        return StartAnchorFinder;
    }(regexp_to_ast_1.BaseRegExpVisitor));
    var invalidRegex = utils_1.filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        try {
            var regexpAst = regExpParser.pattern(pattern.toString());
            var startAnchorVisitor = new StartAnchorFinder();
            startAnchorVisitor.visit(regexpAst);
            return startAnchorVisitor.found;
        }
        catch (e) {
            // old behavior in case of runtime exceptions with regexp-to-ast.
            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/
            return start_of_input.test(pattern.source);
        }
    });
    var errors = utils_1.map(invalidRegex, function (currType) {
        return {
            message: "Unexpected RegExp Anchor Error:\n" +
                "\tToken Type: ->" +
                tokens_public_1.tokenName(currType) +
                "<- static 'PATTERN' cannot contain start of input anchor '^'\n" +
                "\tSee https://github.com/SAP/chevrotain/blob/master/docs/resolving_lexer_errors.md#ANCHORS\n" +
                "\tfor details.",
            type: lexer_public_1.LexerDefinitionErrorType.SOI_ANCHOR_FOUND,
            tokenTypes: [currType]
        };
    });
    return errors;
}
exports.findStartOfInputAnchor = findStartOfInputAnchor;
function findUnsupportedFlags(tokenTypes) {
    var invalidFlags = utils_1.filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        return (pattern instanceof RegExp && (pattern.multiline || pattern.global));
    });
    var errors = utils_1.map(invalidFlags, function (currType) {
        return {
            message: "Token Type: ->" +
                tokens_public_1.tokenName(currType) +
                "<- static 'PATTERN' may NOT contain global('g') or multiline('m')",
            type: lexer_public_1.LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,
            tokenTypes: [currType]
        };
    });
    return errors;
}
exports.findUnsupportedFlags = findUnsupportedFlags;
// This can only test for identical duplicate RegExps, not semantically equivalent ones.
function findDuplicatePatterns(tokenTypes) {
    var found = [];
    var identicalPatterns = utils_1.map(tokenTypes, function (outerType) {
        return utils_1.reduce(tokenTypes, function (result, innerType) {
            if (outerType.PATTERN.source === innerType.PATTERN.source &&
                !utils_1.contains(found, innerType) &&
                innerType.PATTERN !== lexer_public_1.Lexer.NA) {
                // this avoids duplicates in the result, each Token Type may only appear in one "set"
                // in essence we are creating Equivalence classes on equality relation.
                found.push(innerType);
                result.push(innerType);
                return result;
            }
            return result;
        }, []);
    });
    identicalPatterns = utils_1.compact(identicalPatterns);
    var duplicatePatterns = utils_1.filter(identicalPatterns, function (currIdenticalSet) {
        return currIdenticalSet.length > 1;
    });
    var errors = utils_1.map(duplicatePatterns, function (setOfIdentical) {
        var tokenTypeNames = utils_1.map(setOfIdentical, function (currType) {
            return tokens_public_1.tokenName(currType);
        });
        var dupPatternSrc = utils_1.first(setOfIdentical).PATTERN;
        return {
            message: "The same RegExp pattern ->" + dupPatternSrc + "<-" +
                ("has been used in all of the following Token Types: " + tokenTypeNames.join(", ") + " <-"),
            type: lexer_public_1.LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,
            tokenTypes: setOfIdentical
        };
    });
    return errors;
}
exports.findDuplicatePatterns = findDuplicatePatterns;
function findInvalidGroupType(tokenTypes) {
    var invalidTypes = utils_1.filter(tokenTypes, function (clazz) {
        if (!utils_1.has(clazz, "GROUP")) {
            return false;
        }
        var group = clazz.GROUP;
        return group !== lexer_public_1.Lexer.SKIPPED && group !== lexer_public_1.Lexer.NA && !utils_1.isString(group);
    });
    var errors = utils_1.map(invalidTypes, function (currType) {
        return {
            message: "Token Type: ->" +
                tokens_public_1.tokenName(currType) +
                "<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String",
            type: lexer_public_1.LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,
            tokenTypes: [currType]
        };
    });
    return errors;
}
exports.findInvalidGroupType = findInvalidGroupType;
function findModesThatDoNotExist(tokenTypes, validModes) {
    var invalidModes = utils_1.filter(tokenTypes, function (clazz) {
        return (clazz.PUSH_MODE !== undefined &&
            !utils_1.contains(validModes, clazz.PUSH_MODE));
    });
    var errors = utils_1.map(invalidModes, function (clazz) {
        var msg = "Token Type: ->" + tokens_public_1.tokenName(clazz) + "<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->" + clazz.PUSH_MODE + "<-" + "which does not exist";
        return {
            message: msg,
            type: lexer_public_1.LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,
            tokenTypes: [clazz]
        };
    });
    return errors;
}
exports.findModesThatDoNotExist = findModesThatDoNotExist;
function findUnreachablePatterns(tokenTypes) {
    var errors = [];
    var canBeTested = utils_1.reduce(tokenTypes, function (result, tokType, idx) {
        var pattern = tokType.PATTERN;
        if (pattern === lexer_public_1.Lexer.NA) {
            return result;
        }
        // a more comprehensive validation for all forms of regExps would require
        // deeper regExp analysis capabilities
        if (utils_1.isString(pattern)) {
            result.push({ str: pattern, idx: idx, tokenType: tokType });
        }
        else if (utils_1.isRegExp(pattern) && noMetaChar(pattern)) {
            result.push({ str: pattern.source, idx: idx, tokenType: tokType });
        }
        return result;
    }, []);
    utils_1.forEach(tokenTypes, function (tokType, testIdx) {
        utils_1.forEach(canBeTested, function (_a) {
            var str = _a.str, idx = _a.idx, tokenType = _a.tokenType;
            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {
                var msg = "Token: ->" + tokens_public_1.tokenName(tokenType) + "<- can never be matched.\n" +
                    ("Because it appears AFTER the Token Type ->" + tokens_public_1.tokenName(tokType) + "<-") +
                    "in the lexer's definition.\n" +
                    "See https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNREACHABLE";
                errors.push({
                    message: msg,
                    type: lexer_public_1.LexerDefinitionErrorType.UNREACHABLE_PATTERN,
                    tokenTypes: [tokType, tokenType]
                });
            }
        });
    });
    return errors;
}
exports.findUnreachablePatterns = findUnreachablePatterns;
function testTokenType(str, pattern) {
    /* istanbul ignore else */
    if (utils_1.isRegExp(pattern)) {
        var regExpArray = pattern.exec(str);
        return regExpArray !== null && regExpArray.index === 0;
    }
    else if (utils_1.isFunction(pattern)) {
        // maintain the API of custom patterns
        return pattern(str, 0, [], {});
    }
    else if (utils_1.has(pattern, "exec")) {
        // maintain the API of custom patterns
        return pattern.exec(str, 0, [], {});
    }
    else if (typeof pattern === "string") {
        return pattern === str;
    }
    else {
        throw Error("non exhaustive match");
    }
}
function noMetaChar(regExp) {
    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp
    var metaChars = [
        ".",
        "\\",
        "[",
        "]",
        "|",
        "^",
        "$",
        "(",
        ")",
        "?",
        "*",
        "+",
        "{"
    ];
    return (utils_1.find(metaChars, function (char) { return regExp.source.indexOf(char) !== -1; }) ===
        undefined);
}
function addStartOfInput(pattern) {
    var flags = pattern.ignoreCase ? "i" : "";
    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.
    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)
    return new RegExp("^(?:" + pattern.source + ")", flags);
}
exports.addStartOfInput = addStartOfInput;
function addStickyFlag(pattern) {
    var flags = pattern.ignoreCase ? "iy" : "y";
    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.
    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)
    return new RegExp("" + pattern.source, flags);
}
exports.addStickyFlag = addStickyFlag;
function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {
    var errors = [];
    // some run time checks to help the end users.
    if (!utils_1.has(lexerDefinition, exports.DEFAULT_MODE)) {
        errors.push({
            message: "A MultiMode Lexer cannot be initialized without a <" +
                exports.DEFAULT_MODE +
                "> property in its definition\n",
            type: lexer_public_1.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE
        });
    }
    if (!utils_1.has(lexerDefinition, exports.MODES)) {
        errors.push({
            message: "A MultiMode Lexer cannot be initialized without a <" +
                exports.MODES +
                "> property in its definition\n",
            type: lexer_public_1.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY
        });
    }
    if (utils_1.has(lexerDefinition, exports.MODES) &&
        utils_1.has(lexerDefinition, exports.DEFAULT_MODE) &&
        !utils_1.has(lexerDefinition.modes, lexerDefinition.defaultMode)) {
        errors.push({
            message: "A MultiMode Lexer cannot be initialized with a " + exports.DEFAULT_MODE + ": <" + lexerDefinition.defaultMode + ">" + "which does not exist\n",
            type: lexer_public_1.LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST
        });
    }
    if (utils_1.has(lexerDefinition, exports.MODES)) {
        utils_1.forEach(lexerDefinition.modes, function (currModeValue, currModeName) {
            utils_1.forEach(currModeValue, function (currTokType, currIdx) {
                if (utils_1.isUndefined(currTokType)) {
                    errors.push({
                        message: "A Lexer cannot be initialized using an undefined Token Type. Mode:" +
                            ("<" + currModeName + "> at index: <" + currIdx + ">\n"),
                        type: lexer_public_1.LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED
                    });
                }
            });
        });
    }
    return errors;
}
exports.performRuntimeChecks = performRuntimeChecks;
function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {
    var warnings = [];
    var hasAnyLineBreak = false;
    var allTokenTypes = utils_1.compact(utils_1.flatten(utils_1.mapValues(lexerDefinition.modes, function (tokTypes) { return tokTypes; })));
    var concreteTokenTypes = utils_1.reject(allTokenTypes, function (currType) { return currType[PATTERN] === lexer_public_1.Lexer.NA; });
    var terminatorCharCodes = getCharCodes(lineTerminatorCharacters);
    if (trackLines) {
        utils_1.forEach(concreteTokenTypes, function (tokType) {
            var currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);
            if (currIssue !== false) {
                var message = buildLineBreakIssueMessage(tokType, currIssue);
                var warningDescriptor = {
                    message: message,
                    type: currIssue.issue,
                    tokenType: tokType
                };
                warnings.push(warningDescriptor);
            }
            else {
                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.
                if (utils_1.has(tokType, "LINE_BREAKS")) {
                    if (tokType.LINE_BREAKS === true) {
                        hasAnyLineBreak = true;
                    }
                }
                else {
                    if (reg_exp_1.canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {
                        hasAnyLineBreak = true;
                    }
                }
            }
        });
    }
    if (trackLines && !hasAnyLineBreak) {
        warnings.push({
            message: "Warning: No LINE_BREAKS Found.\n" +
                "\tThis Lexer has been defined to track line and column information,\n" +
                "\tBut none of the Token Types can be identified as matching a line terminator.\n" +
                "\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \n" +
                "\tfor details.",
            type: lexer_public_1.LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS
        });
    }
    return warnings;
}
exports.performWarningRuntimeChecks = performWarningRuntimeChecks;
function cloneEmptyGroups(emptyGroups) {
    var clonedResult = {};
    var groupKeys = utils_1.keys(emptyGroups);
    utils_1.forEach(groupKeys, function (currKey) {
        var currGroupValue = emptyGroups[currKey];
        /* istanbul ignore else */
        if (utils_1.isArray(currGroupValue)) {
            clonedResult[currKey] = [];
        }
        else {
            throw Error("non exhaustive match");
        }
    });
    return clonedResult;
}
exports.cloneEmptyGroups = cloneEmptyGroups;
// TODO: refactor to avoid duplication
function isCustomPattern(tokenType) {
    var pattern = tokenType.PATTERN;
    /* istanbul ignore else */
    if (utils_1.isRegExp(pattern)) {
        return false;
    }
    else if (utils_1.isFunction(pattern)) {
        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object
        return true;
    }
    else if (utils_1.has(pattern, "exec")) {
        // ICustomPattern
        return true;
    }
    else if (utils_1.isString(pattern)) {
        return false;
    }
    else {
        throw Error("non exhaustive match");
    }
}
exports.isCustomPattern = isCustomPattern;
function isShortPattern(pattern) {
    if (utils_1.isString(pattern) && pattern.length === 1) {
        return pattern.charCodeAt(0);
    }
    else {
        return false;
    }
}
exports.isShortPattern = isShortPattern;
/**
 * Faster than using a RegExp for default newline detection during lexing.
 */
exports.LineTerminatorOptimizedTester = {
    // implements /\n|\r\n?/g.test
    test: function (text) {
        var len = text.length;
        for (var i = this.lastIndex; i < len; i++) {
            var c = text.charCodeAt(i);
            if (c === 10) {
                this.lastIndex = i + 1;
                return true;
            }
            else if (c === 13) {
                if (text.charCodeAt(i + 1) === 10) {
                    this.lastIndex = i + 2;
                }
                else {
                    this.lastIndex = i + 1;
                }
                return true;
            }
        }
        return false;
    },
    lastIndex: 0
};
function checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {
    if (utils_1.has(tokType, "LINE_BREAKS")) {
        // if the user explicitly declared the line_breaks option we will respect their choice
        // and assume it is correct.
        return false;
    }
    else {
        /* istanbul ignore else */
        if (utils_1.isRegExp(tokType.PATTERN)) {
            try {
                reg_exp_1.canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);
            }
            catch (e) {
                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */
                return {
                    issue: lexer_public_1.LexerDefinitionErrorType.IDENTIFY_TERMINATOR,
                    errMsg: e.message
                };
            }
            return false;
        }
        else if (utils_1.isString(tokType.PATTERN)) {
            // string literal patterns can always be analyzed to detect line terminator usage
            return false;
        }
        else if (isCustomPattern(tokType)) {
            // custom token types
            return { issue: lexer_public_1.LexerDefinitionErrorType.CUSTOM_LINE_BREAK };
        }
        else {
            throw Error("non exhaustive match");
        }
    }
}
function buildLineBreakIssueMessage(tokType, details) {
    /* istanbul ignore else */
    if (details.issue === lexer_public_1.LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {
        return ("Warning: unable to identify line terminator usage in pattern.\n" +
            ("\tThe problem is in the <" + tokType.name + "> Token Type\n") +
            ("\t Root cause: " + details.errMsg + ".\n") +
            "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR");
    }
    else if (details.issue === lexer_public_1.LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {
        return ("Warning: A Custom Token Pattern should specify the <line_breaks> option.\n" +
            ("\tThe problem is in the <" + tokType.name + "> Token Type\n") +
            "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK");
    }
    else {
        throw Error("non exhaustive match");
    }
}
exports.buildLineBreakIssueMessage = buildLineBreakIssueMessage;
function getCharCodes(charsOrCodes) {
    var charCodes = utils_1.map(charsOrCodes, function (numOrString) {
        if (utils_1.isString(numOrString) && numOrString.length > 0) {
            return numOrString.charCodeAt(0);
        }
        else {
            return numOrString;
        }
    });
    return charCodes;
}
//# sourceMappingURL=lexer.js.map

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var regexp_to_ast_1 = __webpack_require__(41);
var utils_1 = __webpack_require__(0);
var regExpParser = new regexp_to_ast_1.RegExpParser();
var complementErrorMessage = "Complement Sets are not supported for first char optimization";
exports.failedOptimizationPrefixMsg = 'Unable to use "first char" lexer optimizations:\n';
function getStartCodes(regExp, ensureOptimizations) {
    if (ensureOptimizations === void 0) { ensureOptimizations = false; }
    try {
        var ast = regExpParser.pattern(regExp.toString());
        var firstChars = firstChar(ast.value);
        if (ast.flags.ignoreCase) {
            firstChars = applyIgnoreCase(firstChars);
        }
        return firstChars;
    }
    catch (e) {
        /* istanbul ignore next */
        // Testing this relies on the regexp-to-ast library having a bug... */
        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc
        if (e.message === complementErrorMessage) {
            if (ensureOptimizations) {
                utils_1.PRINT_WARNING("" + exports.failedOptimizationPrefixMsg +
                    ("\tUnable to optimize: < " + regExp.toString() + " >\n") +
                    "\tComplement Sets cannot be automatically optimized.\n" +
                    "\tThis will disable the lexer's first char optimizations.\n" +
                    "\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.");
            }
        }
        else {
            var msgSuffix = "";
            if (ensureOptimizations) {
                msgSuffix =
                    "\n\tThis will disable the lexer's first char optimizations.\n" +
                        "\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.";
            }
            utils_1.PRINT_ERROR(exports.failedOptimizationPrefixMsg + "\n" +
                ("\tFailed parsing: < " + regExp.toString() + " >\n") +
                ("\tUsing the regexp-to-ast library version: " + regexp_to_ast_1.VERSION + "\n") +
                "\tPlease open an issue at: https://github.com/bd82/regexp-to-ast/issues" +
                msgSuffix);
        }
    }
    return [];
}
exports.getStartCodes = getStartCodes;
function firstChar(ast) {
    switch (ast.type) {
        case "Disjunction":
            return utils_1.flatten(utils_1.map(ast.value, firstChar));
        case "Alternative":
            var startChars_1 = [];
            var terms = ast.value;
            for (var i = 0; i < terms.length; i++) {
                var term = terms[i];
                if (utils_1.contains([
                    // A group back reference cannot affect potential starting char.
                    // because if a back reference is the first production than automatically
                    // the group being referenced has had to come BEFORE so its codes have already been added
                    "GroupBackReference",
                    // assertions do not affect potential starting codes
                    "Lookahead",
                    "NegativeLookahead",
                    "StartAnchor",
                    "EndAnchor",
                    "WordBoundary",
                    "NonWordBoundary"
                ], term.type)) {
                    continue;
                }
                var atom = term;
                switch (atom.type) {
                    case "Character":
                        startChars_1.push(atom.value);
                        break;
                    case "Set":
                        if (atom.complement === true) {
                            throw Error(complementErrorMessage);
                        }
                        utils_1.forEach(atom.value, function (code) { return startChars_1.push(code); });
                        break;
                    case "Group":
                        var groupCodes = firstChar(atom.value);
                        utils_1.forEach(groupCodes, function (code) { return startChars_1.push(code); });
                        break;
                    /* istanbul ignore next */
                    default:
                        throw Error("Non Exhaustive Match");
                }
                // reached a mandatory production, no more start codes can be found on this alternative
                if (
                //
                atom.quantifier === undefined ||
                    (atom.quantifier !== undefined &&
                        atom.quantifier.atLeast > 0)) {
                    break;
                }
            }
            return startChars_1;
        /* istanbul ignore next */
        default:
            throw Error("non exhaustive match!");
    }
}
exports.firstChar = firstChar;
function applyIgnoreCase(firstChars) {
    var firstCharsCase = [];
    utils_1.forEach(firstChars, function (charCode) {
        firstCharsCase.push(charCode);
        var char = String.fromCharCode(charCode);
        /* istanbul ignore else */
        if (char.toUpperCase() !== char) {
            firstCharsCase.push(char.toUpperCase().charCodeAt(0));
        }
        else if (char.toLowerCase() !== char) {
            firstCharsCase.push(char.toLowerCase().charCodeAt(0));
        }
    });
    return firstCharsCase;
}
exports.applyIgnoreCase = applyIgnoreCase;
var CharCodeFinder = /** @class */ (function (_super) {
    __extends(CharCodeFinder, _super);
    function CharCodeFinder(targetCharCodes) {
        var _this = _super.call(this) || this;
        _this.targetCharCodes = targetCharCodes;
        _this.found = false;
        return _this;
    }
    CharCodeFinder.prototype.visitChildren = function (node) {
        // switch lookaheads as they do not actually consume any characters thus
        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.
        switch (node.type) {
            case "Lookahead":
                this.visitLookahead(node);
                return;
            case "NegativeLookahead":
                this.visitNegativeLookahead(node);
                return;
        }
        _super.prototype.visitChildren.call(this, node);
    };
    CharCodeFinder.prototype.visitCharacter = function (node) {
        if (utils_1.contains(this.targetCharCodes, node.value)) {
            this.found = true;
        }
    };
    CharCodeFinder.prototype.visitSet = function (node) {
        var _this = this;
        if (node.complement) {
            if (utils_1.find(node.value, function (charCode) {
                return utils_1.contains(_this.targetCharCodes, charCode);
            }) === undefined) {
                this.found = true;
            }
        }
        else {
            if (utils_1.find(node.value, function (charCode) {
                return utils_1.contains(_this.targetCharCodes, charCode);
            }) !== undefined) {
                this.found = true;
            }
        }
    };
    return CharCodeFinder;
}(regexp_to_ast_1.BaseRegExpVisitor));
function canMatchCharCode(charCodes, pattern) {
    if (pattern instanceof RegExp) {
        var ast = regExpParser.pattern(pattern.toString());
        var charCodeFinder = new CharCodeFinder(charCodes);
        charCodeFinder.visit(ast);
        return charCodeFinder.found;
    }
    else {
        return (utils_1.find(pattern, function (char) {
            return utils_1.contains(charCodes, char.charCodeAt(0));
        }) !== undefined);
    }
}
exports.canMatchCharCode = canMatchCharCode;
//# sourceMappingURL=reg_exp.js.map

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Range = /** @class */ (function () {
    function Range(start, end) {
        this.start = start;
        this.end = end;
        if (!isValidRange(start, end)) {
            throw new Error("INVALID RANGE");
        }
    }
    Range.prototype.contains = function (num) {
        return this.start <= num && this.end >= num;
    };
    Range.prototype.containsRange = function (other) {
        return this.start <= other.start && this.end >= other.end;
    };
    Range.prototype.isContainedInRange = function (other) {
        return other.containsRange(this);
    };
    Range.prototype.strictlyContainsRange = function (other) {
        return this.start < other.start && this.end > other.end;
    };
    Range.prototype.isStrictlyContainedInRange = function (other) {
        return other.strictlyContainsRange(this);
    };
    return Range;
}());
exports.Range = Range;
function isValidRange(start, end) {
    return !(start < 0 || end < start);
}
exports.isValidRange = isValidRange;
//# sourceMappingURL=range.js.map

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

/*** IMPORTS FROM imports-loader ***/
var Blockly = __webpack_require__(71);
var goog = __webpack_require__(30);

/**
 * @license
 * Visual Blocks Language
 *
 * Copyright 2012 Google Inc.
 * https://developers.google.com/blockly/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview English strings.
 * @author ascii@media.mit.edu (Andrew Sliwinski)
 *
 * After modifying this file, run `npm run translate` from the root directory
 * to regenerate `./msg/json/en.json`.
 * IMPORTANT:
 * All message strings must use single quotes for the scripts to work properly
 */
'use strict';

goog.provide('Blockly.Msg.en');

goog.require('Blockly.Msg');

// Control blocks
Blockly.Msg.CONTROL_FOREVER = 'forever';
Blockly.Msg.CONTROL_REPEAT = 'repeat %1';
Blockly.Msg.CONTROL_IF = 'if %1 then';
Blockly.Msg.CONTROL_ELSE = 'else';
Blockly.Msg.CONTROL_STOP = 'stop';
Blockly.Msg.CONTROL_STOP_ALL = 'all';
Blockly.Msg.CONTROL_STOP_THIS = 'this script';
Blockly.Msg.CONTROL_STOP_OTHER = 'other scripts in sprite';
Blockly.Msg.CONTROL_WAIT = 'wait %1 seconds';
Blockly.Msg.CONTROL_WAITUNTIL = 'wait until %1';
Blockly.Msg.CONTROL_REPEATUNTIL = 'repeat until %1';
Blockly.Msg.CONTROL_WHILE = 'while %1';
Blockly.Msg.CONTROL_FOREACH = 'for each %1 in %2';
Blockly.Msg.CONTROL_STARTASCLONE = 'when I start as a clone';
Blockly.Msg.CONTROL_CREATECLONEOF = 'create clone of %1';
Blockly.Msg.CONTROL_CREATECLONEOF_MYSELF = 'myself';
Blockly.Msg.CONTROL_DELETETHISCLONE = 'delete this clone';
Blockly.Msg.CONTROL_COUNTER = 'counter';
Blockly.Msg.CONTROL_INCRCOUNTER = 'increment counter';
Blockly.Msg.CONTROL_CLEARCOUNTER = 'clear counter';
Blockly.Msg.CONTROL_ALLATONCE = 'all at once';

// Data blocks
Blockly.Msg.DATA_SETVARIABLETO = 'set %1 to %2';
Blockly.Msg.DATA_CHANGEVARIABLEBY = 'change %1 by %2';
Blockly.Msg.DATA_SHOWVARIABLE = 'show variable %1';
Blockly.Msg.DATA_HIDEVARIABLE = 'hide variable %1';
Blockly.Msg.DATA_ADDTOLIST = 'add %1 to %2';
Blockly.Msg.DATA_DELETEOFLIST = 'delete %1 of %2';
Blockly.Msg.DATA_INSERTATLIST = 'insert %1 at %2 of %3';
Blockly.Msg.DATA_REPLACEITEMOFLIST = 'replace item %1 of %2 with %3';
Blockly.Msg.DATA_ITEMOFLIST = 'item %1 of %2';
Blockly.Msg.DATA_LENGTHOFLIST = 'length of %1';
Blockly.Msg.DATA_LISTCONTAINSITEM = '%1 contains %2?';
Blockly.Msg.DATA_SHOWLIST = 'show list %1';
Blockly.Msg.DATA_HIDELIST = 'hide list %1';
Blockly.Msg.DATA_INDEX_ALL = 'all';
Blockly.Msg.DATA_INDEX_LAST = 'last';
Blockly.Msg.DATA_INDEX_RANDOM = 'random';

// Event blocks
Blockly.Msg.EVENT_WHENFLAGCLICKED = 'when %1 clicked';
Blockly.Msg.EVENT_WHENTHISSPRITECLICKED = 'when this sprite clicked';
Blockly.Msg.EVENT_WHENSTAGECLICKED = 'when stage clicked';
Blockly.Msg.EVENT_WHENTOUCHINGOBJECT = 'when this sprite touches %1';
Blockly.Msg.EVENT_WHENBROADCASTRECEIVED = 'when I receive %1';
Blockly.Msg.EVENT_WHENBACKDROPSWITCHESTO = 'when backdrop switches to %1';
Blockly.Msg.EVENT_WHENGREATERTHAN = 'when %1 > %2';
Blockly.Msg.EVENT_WHENGREATERTHAN_TIMER = 'timer';
Blockly.Msg.EVENT_WHENGREATERTHAN_LOUDNESS = 'loudness';
Blockly.Msg.EVENT_BROADCAST = 'broadcast %1';
Blockly.Msg.EVENT_BROADCASTANDWAIT = 'broadcast %1 and wait';
Blockly.Msg.EVENT_WHENKEYPRESSED = 'when %1 key pressed';
Blockly.Msg.EVENT_WHENKEYPRESSED_SPACE = 'space';
Blockly.Msg.EVENT_WHENKEYPRESSED_LEFT = 'left arrow';
Blockly.Msg.EVENT_WHENKEYPRESSED_RIGHT = 'right arrow';
Blockly.Msg.EVENT_WHENKEYPRESSED_DOWN = 'down arrow';
Blockly.Msg.EVENT_WHENKEYPRESSED_UP = 'up arrow';
Blockly.Msg.EVENT_WHENKEYPRESSED_ANY = 'any';

// Looks blocks
Blockly.Msg.LOOKS_SAYFORSECS = 'say %1 for %2 seconds';
Blockly.Msg.LOOKS_SAY = 'say %1';
Blockly.Msg.LOOKS_HELLO = 'Hello!';
Blockly.Msg.LOOKS_THINKFORSECS = 'think %1 for %2 seconds';
Blockly.Msg.LOOKS_THINK = 'think %1';
Blockly.Msg.LOOKS_HMM = 'Hmm...';
Blockly.Msg.LOOKS_SHOW = 'show';
Blockly.Msg.LOOKS_HIDE = 'hide';
Blockly.Msg.LOOKS_HIDEALLSPRITES = 'hide all sprites';
Blockly.Msg.LOOKS_EFFECT_COLOR = 'color';
Blockly.Msg.LOOKS_EFFECT_FISHEYE = 'fisheye';
Blockly.Msg.LOOKS_EFFECT_WHIRL = 'whirl';
Blockly.Msg.LOOKS_EFFECT_PIXELATE = 'pixelate';
Blockly.Msg.LOOKS_EFFECT_MOSAIC = 'mosaic';
Blockly.Msg.LOOKS_EFFECT_BRIGHTNESS = 'brightness';
Blockly.Msg.LOOKS_EFFECT_GHOST = 'ghost';
Blockly.Msg.LOOKS_CHANGEEFFECTBY = 'change %1 effect by %2';
Blockly.Msg.LOOKS_SETEFFECTTO = 'set %1 effect to %2';
Blockly.Msg.LOOKS_CLEARGRAPHICEFFECTS = 'clear graphic effects';
Blockly.Msg.LOOKS_CHANGESIZEBY = 'change size by %1';
Blockly.Msg.LOOKS_SETSIZETO = 'set size to %1 %';
Blockly.Msg.LOOKS_SIZE = 'size';
Blockly.Msg.LOOKS_CHANGESTRETCHBY = 'change stretch by %1';
Blockly.Msg.LOOKS_SETSTRETCHTO = 'set stretch to %1 %';
Blockly.Msg.LOOKS_SWITCHCOSTUMETO = 'switch costume to %1';
Blockly.Msg.LOOKS_NEXTCOSTUME = 'next costume';
Blockly.Msg.LOOKS_SWITCHBACKDROPTO = 'switch backdrop to %1';
Blockly.Msg.LOOKS_GOTOFRONTBACK = 'go to %1 layer';
Blockly.Msg.LOOKS_GOTOFRONTBACK_FRONT = 'front';
Blockly.Msg.LOOKS_GOTOFRONTBACK_BACK = 'back';
Blockly.Msg.LOOKS_GOFORWARDBACKWARDLAYERS = 'go %1 %2 layers';
Blockly.Msg.LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD = 'forward';
Blockly.Msg.LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD = 'backward';
Blockly.Msg.LOOKS_BACKDROPNUMBERNAME = 'backdrop %1';
Blockly.Msg.LOOKS_COSTUMENUMBERNAME = 'costume %1';
Blockly.Msg.LOOKS_NUMBERNAME_NUMBER = 'number';
Blockly.Msg.LOOKS_NUMBERNAME_NAME = 'name';
Blockly.Msg.LOOKS_SWITCHBACKDROPTOANDWAIT = 'switch backdrop to %1 and wait';
Blockly.Msg.LOOKS_NEXTBACKDROP = 'next backdrop';
Blockly.Msg.LOOKS_PREVIOUSBACKDROP = 'previous backdrop';
Blockly.Msg.LOOKS_RANDOMBACKDROP = 'random backdrop';

// Motion blocks
Blockly.Msg.MOTION_MOVESTEPS = 'move %1 steps';
Blockly.Msg.MOTION_TURNLEFT = 'turn %1 %2 degrees';
Blockly.Msg.MOTION_TURNRIGHT = 'turn %1 %2 degrees';
Blockly.Msg.MOTION_POINTINDIRECTION = 'point in direction %1';
Blockly.Msg.MOTION_POINTTOWARDS = 'point towards %1';
Blockly.Msg.MOTION_POINTTOWARDS_POINTER = 'mouse-pointer';
Blockly.Msg.MOTION_GOTO = 'go to %1';
Blockly.Msg.MOTION_GOTO_POINTER = 'mouse-pointer';
Blockly.Msg.MOTION_GOTO_RANDOM = 'random position';
Blockly.Msg.MOTION_GOTOXY = 'go to x: %1 y: %2';
Blockly.Msg.MOTION_GLIDESECSTOXY = 'glide %1 secs to x: %2 y: %3';
Blockly.Msg.MOTION_GLIDETO = 'glide %1 secs to %2';
Blockly.Msg.MOTION_GLIDETO_POINTER = 'mouse-pointer';
Blockly.Msg.MOTION_GLIDETO_RANDOM = 'random position';
Blockly.Msg.MOTION_CHANGEXBY = 'change x by %1';
Blockly.Msg.MOTION_SETX = 'set x to %1';
Blockly.Msg.MOTION_CHANGEYBY = 'change y by %1';
Blockly.Msg.MOTION_SETY = 'set y to %1';
Blockly.Msg.MOTION_IFONEDGEBOUNCE = 'if on edge, bounce';
Blockly.Msg.MOTION_SETROTATIONSTYLE = 'set rotation style %1';
Blockly.Msg.MOTION_SETROTATIONSTYLE_LEFTRIGHT = 'left-right';
Blockly.Msg.MOTION_SETROTATIONSTYLE_DONTROTATE = 'don\'t rotate';
Blockly.Msg.MOTION_SETROTATIONSTYLE_ALLAROUND = 'all around';
Blockly.Msg.MOTION_XPOSITION = 'x position';
Blockly.Msg.MOTION_YPOSITION = 'y position';
Blockly.Msg.MOTION_DIRECTION = 'direction';
Blockly.Msg.MOTION_SCROLLRIGHT = 'scroll right %1';
Blockly.Msg.MOTION_SCROLLUP = 'scroll up %1';
Blockly.Msg.MOTION_ALIGNSCENE = 'align scene %1';
Blockly.Msg.MOTION_ALIGNSCENE_BOTTOMLEFT = 'bottom-left';
Blockly.Msg.MOTION_ALIGNSCENE_BOTTOMRIGHT = 'bottom-right';
Blockly.Msg.MOTION_ALIGNSCENE_MIDDLE = 'middle';
Blockly.Msg.MOTION_ALIGNSCENE_TOPLEFT = 'top-left';
Blockly.Msg.MOTION_ALIGNSCENE_TOPRIGHT = 'top-right';
Blockly.Msg.MOTION_XSCROLL = 'x scroll';
Blockly.Msg.MOTION_YSCROLL = 'y scroll';
Blockly.Msg.MOTION_STAGE_SELECTED = 'Stage selected: no motion blocks';

// Operators blocks
Blockly.Msg.OPERATORS_ADD = '%1 + %2';
Blockly.Msg.OPERATORS_SUBTRACT = '%1 - %2';
Blockly.Msg.OPERATORS_MULTIPLY = '%1 * %2';
Blockly.Msg.OPERATORS_DIVIDE = '%1 / %2';
Blockly.Msg.OPERATORS_RANDOM = 'pick random %1 to %2';
Blockly.Msg.OPERATORS_GT = '%1 > %2';
Blockly.Msg.OPERATORS_LT = '%1 < %2';
Blockly.Msg.OPERATORS_EQUALS = '%1 = %2';
Blockly.Msg.OPERATORS_AND = '%1 and %2';
Blockly.Msg.OPERATORS_OR = '%1 or %2';
Blockly.Msg.OPERATORS_NOT = 'not %1';
Blockly.Msg.OPERATORS_JOIN = 'join %1 %2';
Blockly.Msg.OPERATORS_JOIN_APPLE = 'apple';
Blockly.Msg.OPERATORS_JOIN_BANANA = 'banana';
Blockly.Msg.OPERATORS_LETTEROF = 'letter %1 of %2';
Blockly.Msg.OPERATORS_LETTEROF_APPLE = 'a';
Blockly.Msg.OPERATORS_LENGTH = 'length of %1';
Blockly.Msg.OPERATORS_CONTAINS = '%1 contains %2?';
Blockly.Msg.OPERATORS_MOD = '%1 mod %2';
Blockly.Msg.OPERATORS_ROUND = 'round %1';
Blockly.Msg.OPERATORS_MATHOP = '%1 of %2';
Blockly.Msg.OPERATORS_MATHOP_ABS = 'abs';
Blockly.Msg.OPERATORS_MATHOP_FLOOR = 'floor';
Blockly.Msg.OPERATORS_MATHOP_CEILING = 'ceiling';
Blockly.Msg.OPERATORS_MATHOP_SQRT = 'sqrt';
Blockly.Msg.OPERATORS_MATHOP_SIN = 'sin';
Blockly.Msg.OPERATORS_MATHOP_COS = 'cos';
Blockly.Msg.OPERATORS_MATHOP_TAN = 'tan';
Blockly.Msg.OPERATORS_MATHOP_ASIN = 'asin';
Blockly.Msg.OPERATORS_MATHOP_ACOS = 'acos';
Blockly.Msg.OPERATORS_MATHOP_ATAN = 'atan';
Blockly.Msg.OPERATORS_MATHOP_LN = 'ln';
Blockly.Msg.OPERATORS_MATHOP_LOG = 'log';
Blockly.Msg.OPERATORS_MATHOP_EEXP = 'e ^';
Blockly.Msg.OPERATORS_MATHOP_10EXP = '10 ^';

// Procedures blocks
Blockly.Msg.PROCEDURES_DEFINITION = 'define %1';

// Sensing blocks
Blockly.Msg.SENSING_TOUCHINGOBJECT = 'touching %1?';
Blockly.Msg.SENSING_TOUCHINGOBJECT_POINTER = 'mouse-pointer';
Blockly.Msg.SENSING_TOUCHINGOBJECT_EDGE = 'edge';
Blockly.Msg.SENSING_TOUCHINGCOLOR = 'touching color %1?';
Blockly.Msg.SENSING_COLORISTOUCHINGCOLOR = 'color %1 is touching %2?';
Blockly.Msg.SENSING_DISTANCETO = 'distance to %1';
Blockly.Msg.SENSING_DISTANCETO_POINTER = 'mouse-pointer';
Blockly.Msg.SENSING_ASKANDWAIT = 'ask %1 and wait';
Blockly.Msg.SENSING_ASK_TEXT = 'What\'s your name?';
Blockly.Msg.SENSING_ANSWER = 'answer';
Blockly.Msg.SENSING_KEYPRESSED = 'key %1 pressed?';
Blockly.Msg.SENSING_MOUSEDOWN = 'mouse down?';
Blockly.Msg.SENSING_MOUSEX = 'mouse x';
Blockly.Msg.SENSING_MOUSEY = 'mouse y';
Blockly.Msg.SENSING_SETDRAGMODE = 'set drag mode %1';
Blockly.Msg.SENSING_SETDRAGMODE_DRAGGABLE = 'draggable';
Blockly.Msg.SENSING_SETDRAGMODE_NOTDRAGGABLE = 'not draggable';
Blockly.Msg.SENSING_LOUDNESS = 'loudness';
Blockly.Msg.SENSING_LOUD = 'loud?';
Blockly.Msg.SENSING_TIMER = 'timer';
Blockly.Msg.SENSING_RESETTIMER = 'reset timer';
Blockly.Msg.SENSING_OF = '%1 of %2';
Blockly.Msg.SENSING_OF_XPOSITION = 'x position';
Blockly.Msg.SENSING_OF_YPOSITION = 'y position';
Blockly.Msg.SENSING_OF_DIRECTION = 'direction';
Blockly.Msg.SENSING_OF_COSTUMENUMBER = 'costume #';
Blockly.Msg.SENSING_OF_COSTUMENAME = 'costume name';
Blockly.Msg.SENSING_OF_SIZE = 'size';
Blockly.Msg.SENSING_OF_VOLUME = 'volume';
Blockly.Msg.SENSING_OF_BACKDROPNUMBER = 'backdrop #';
Blockly.Msg.SENSING_OF_BACKDROPNAME = 'backdrop name';
Blockly.Msg.SENSING_OF_STAGE = 'Stage';
Blockly.Msg.SENSING_CURRENT = 'current %1';
Blockly.Msg.SENSING_CURRENT_YEAR = 'year';
Blockly.Msg.SENSING_CURRENT_MONTH = 'month';
Blockly.Msg.SENSING_CURRENT_DATE = 'date';
Blockly.Msg.SENSING_CURRENT_DAYOFWEEK = 'day of week';
Blockly.Msg.SENSING_CURRENT_HOUR = 'hour';
Blockly.Msg.SENSING_CURRENT_MINUTE = 'minute';
Blockly.Msg.SENSING_CURRENT_SECOND = 'second';
Blockly.Msg.SENSING_DAYSSINCE2000 = 'days since 2000';
Blockly.Msg.SENSING_USERNAME = 'username';
Blockly.Msg.SENSING_USERID = 'user id';

// Sound blocks
Blockly.Msg.SOUND_PLAY = 'start sound %1';
Blockly.Msg.SOUND_PLAYUNTILDONE = 'play sound %1 until done';
Blockly.Msg.SOUND_STOPALLSOUNDS = 'stop all sounds';
Blockly.Msg.SOUND_SETEFFECTO = 'set %1 effect to %2';
Blockly.Msg.SOUND_CHANGEEFFECTBY = 'change %1 effect by %2';
Blockly.Msg.SOUND_CLEAREFFECTS = 'clear sound effects';
Blockly.Msg.SOUND_EFFECTS_PITCH = 'pitch';
Blockly.Msg.SOUND_EFFECTS_PAN = 'pan left/right';
Blockly.Msg.SOUND_CHANGEVOLUMEBY = 'change volume by %1';
Blockly.Msg.SOUND_SETVOLUMETO = 'set volume to %1%';
Blockly.Msg.SOUND_VOLUME = 'volume';

// Category labels
Blockly.Msg.CATEGORY_MOTION = 'Motion';
Blockly.Msg.CATEGORY_LOOKS = 'Looks';
Blockly.Msg.CATEGORY_SOUND = 'Sound';
Blockly.Msg.CATEGORY_EVENTS = 'Events';
Blockly.Msg.CATEGORY_CONTROL = 'Control';
Blockly.Msg.CATEGORY_SENSING = 'Sensing';
Blockly.Msg.CATEGORY_OPERATORS = 'Operators';
Blockly.Msg.CATEGORY_VARIABLES = 'Variables';
Blockly.Msg.CATEGORY_MYBLOCKS = 'My Blocks';

// Context menus
Blockly.Msg.DUPLICATE = 'Duplicate';
Blockly.Msg.DELETE = 'Delete';
Blockly.Msg.ADD_COMMENT = 'Add Comment';
Blockly.Msg.REMOVE_COMMENT = 'Remove Comment';
Blockly.Msg.DELETE_BLOCK = 'Delete Block';
Blockly.Msg.DELETE_X_BLOCKS = 'Delete %1 Blocks';
Blockly.Msg.DELETE_ALL_BLOCKS = 'Delete all %1 blocks?';
Blockly.Msg.CLEAN_UP = 'Clean up Blocks';
Blockly.Msg.HELP = 'Help';
Blockly.Msg.UNDO = 'Undo';
Blockly.Msg.REDO = 'Redo';
Blockly.Msg.EDIT_PROCEDURE = 'Edit';
Blockly.Msg.SHOW_PROCEDURE_DEFINITION = 'Go to definition';
Blockly.Msg.WORKSPACE_COMMENT_DEFAULT_TEXT = 'Say something...';

// Color
Blockly.Msg.COLOUR_HUE_LABEL = 'Color';
Blockly.Msg.COLOUR_SATURATION_LABEL = 'Saturation';
Blockly.Msg.COLOUR_BRIGHTNESS_LABEL = 'Brightness';

// Variables
// @todo Remove these once fully managed by Scratch VM / Scratch GUI
Blockly.Msg.CHANGE_VALUE_TITLE = 'Change value:';
Blockly.Msg.RENAME_VARIABLE = 'Rename variable';
Blockly.Msg.RENAME_VARIABLE_TITLE = 'Rename all "%1" variables to:';
Blockly.Msg.RENAME_VARIABLE_MODAL_TITLE = 'Rename Variable';
Blockly.Msg.NEW_VARIABLE = 'Make a Variable';
Blockly.Msg.NEW_VARIABLE_TITLE = 'New variable name:';
Blockly.Msg.VARIABLE_MODAL_TITLE = 'New Variable';
Blockly.Msg.VARIABLE_ALREADY_EXISTS = 'A variable named "%1" already exists.';
Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE = 'A variable named "%1" already exists for another variable of type "%2".';
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = 'Delete %1 uses of the "%2" variable?';
Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = 'Can\'t delete the variable "%1" because it\'s part of the definition of the function "%2"';
Blockly.Msg.DELETE_VARIABLE = 'Delete the "%1" variable';

// Custom Procedures
// @todo Remove these once fully managed by Scratch VM / Scratch GUI
Blockly.Msg.NEW_PROCEDURE = 'Make a Block';
Blockly.Msg.PROCEDURE_ALREADY_EXISTS = 'A procedure named "%1" already exists.';

// Lists
// @todo Remove these once fully managed by Scratch VM / Scratch GUI
Blockly.Msg.NEW_LIST = 'Make a List';
Blockly.Msg.NEW_LIST_TITLE = 'New list name:';
Blockly.Msg.LIST_MODAL_TITLE = 'New List';
Blockly.Msg.LIST_ALREADY_EXISTS = 'A list named "%1" already exists.';
Blockly.Msg.RENAME_LIST_TITLE = 'Rename all "%1" lists to:';
Blockly.Msg.RENAME_LIST_MODAL_TITLE = 'Rename List';

// Broadcast Messages
// @todo Remove these once fully managed by Scratch VM / Scratch GUI
Blockly.Msg.NEW_BROADCAST_MESSAGE = 'New message';
Blockly.Msg.NEW_BROADCAST_MESSAGE_TITLE = 'New message name:';
Blockly.Msg.BROADCAST_MODAL_TITLE = 'New Message';
Blockly.Msg.DEFAULT_BROADCAST_MESSAGE_NAME = 'message1';


/*** EXPORTS FROM exports-loader ***/
module.exports = Blockly;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

/*** IMPORTS FROM imports-loader ***/
var Blockly = __webpack_require__(70);
var goog = __webpack_require__(30);

// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.ScratchMsgs.allLocales');

goog.require('Blockly.ScratchMsgs');


Blockly.ScratchMsgs.locales["ab"] =
{
    "CONTROL_FOREVER": "инагӡалатәуп",
    "CONTROL_REPEAT": "инагӡалатәуп %1 - нтә",
    "CONTROL_IF": "%1 акәзар",
    "CONTROL_ELSE": "акәымзар",
    "CONTROL_STOP": "иаанкылатәуп",
    "CONTROL_STOP_ALL": "зегьы",
    "CONTROL_STOP_THIS": "ари апрограмма",
    "CONTROL_STOP_OTHER": "анагӡаҩ егьырҭ ипрограммақәа",
    "CONTROL_WAIT": "иԥштәуп %1 секундк",
    "CONTROL_WAITUNTIL": "иԥштәуп %1 -нӡа",
    "CONTROL_REPEATUNTIL": "инагӡалатәуп %1 акәымзар",
    "CONTROL_WHILE": "%1 иашанаҵ",
    "CONTROL_FOREACH": "рыцԥхьаӡа %1 рзы %2 аҟны",
    "CONTROL_STARTASCLONE": "сара аклон еиԥш саналаго",
    "CONTROL_CREATECLONEOF": "иаԥҵатәуп аклон %1 аҟынтәи",
    "CONTROL_CREATECLONEOF_MYSELF": "сара схала",
    "CONTROL_DELETETHISCLONE": "ианыхтәуп ари аклон",
    "CONTROL_COUNTER": "аԥхьаӡага",
    "CONTROL_INCRCOUNTER": "аԥхьаӡага иазырҳатәуп",
    "CONTROL_CLEARCOUNTER": "ирыцқьатәуп аԥхьаӡага",
    "CONTROL_ALLATONCE": "зегьы иаразнак",
    "DATA_SETVARIABLETO": "%1 иаҭатәуп %2 ",
    "DATA_CHANGEVARIABLEBY": "иԥсахтәуп %1 %2 ала",
    "DATA_SHOWVARIABLE": "иаарԥштәуп аҽеиҭак %1",
    "DATA_HIDEVARIABLE": "иҵәахтәуп аҽеиҭак %1",
    "DATA_ADDTOLIST": "иацҵатәуп %1 %2 ахь  ",
    "DATA_DELETEOFLIST": "ианыхтәуп %1 %2 аҟынтәи ",
    "DATA_INSERTATLIST": "%3 аҟны ибжьаргылатәуп %1 %2 аҭыԥахь   ",
    "DATA_REPLACEITEMOFLIST": "%2 аҟны иԥсахтәуп аелемент %1 %3 ала  ",
    "DATA_ITEMOFLIST": "аелемент %1 %2 аҟынтәи  ",
    "DATA_LENGTHOFLIST": "%1 аура",
    "DATA_LISTCONTAINSITEM": "%1 иаҵанакуама %2?",
    "DATA_SHOWLIST": "иаарԥштәуп ахьӡынҵа %1",
    "DATA_HIDELIST": "иҵәахтәуп ахьӡынҵа %1",
    "DATA_INDEX_ALL": "зегьы",
    "DATA_INDEX_LAST": "аҵыхәтәантәи",
    "DATA_INDEX_RANDOM": "иарбанзаалакь",
    "EVENT_WHENFLAGCLICKED": "%1 ҳанақәыӷәӷәалакь",
    "EVENT_WHENTHISSPRITECLICKED": "анагӡаҩ ҳаниқәыӷәӷәалакь",
    "EVENT_WHENSTAGECLICKED": "асцена ҳанақәыӷәӷәалакь",
    "EVENT_WHENTOUCHINGOBJECT": "when this sprite touches %1",
    "EVENT_WHENBROADCASTRECEIVED": " %1 аус арура",
    "EVENT_WHENBACKDROPSWITCHESTO": "аҿаԥшыра %1 ала аҽанаԥсахуа ",
    "EVENT_WHENGREATERTHAN": "%1 > %2 акәзар",
    "EVENT_WHENGREATERTHAN_TIMER": "аамҭарбага",
    "EVENT_BROADCAST": "ишьҭтәуп %1  ",
    "EVENT_BROADCASTANDWAIT": "ишьҭтәуп %1 нас иԥштәуп",
    "EVENT_WHENKEYPRESSED": "аклавиша %1 ҳанақәыӷәӷәалакь",
    "EVENT_WHENKEYPRESSED_SPACE": "абжьажьга",
    "EVENT_WHENKEYPRESSED_LEFT": "ахыц арӷьарахь",
    "EVENT_WHENKEYPRESSED_RIGHT": "ахыц армарахь",
    "EVENT_WHENKEYPRESSED_DOWN": "ахыц алада",
    "EVENT_WHENKEYPRESSED_UP": "ахыц аҩада",
    "EVENT_WHENKEYPRESSED_ANY": "иарбанзаалакь",
    "LOOKS_SAYFORSECS": "иҳәалатәуп %1 %2 секундк  ",
    "LOOKS_SAY": "иҳәатәуп %1 ",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "ахәыцра %1 %2  секундк ",
    "LOOKS_THINK": "ахәыцра %1 ",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "ацәырҵра",
    "LOOKS_HIDE": "аҽыҵәахра",
    "LOOKS_HIDEALLSPRITES": "иҵәахтәуп анагӡаҩцәа зегьы",
    "LOOKS_EFFECT_COLOR": "аԥштәы",
    "LOOKS_EFFECT_FISHEYE": "аԥсыӡ аблақәа",
    "LOOKS_EFFECT_WHIRL": "акьаҳәхара",
    "LOOKS_EFFECT_PIXELATE": "апиксельқәа рырдура",
    "LOOKS_EFFECT_MOSAIC": "амозаика",
    "LOOKS_EFFECT_BRIGHTNESS": "ажжара",
    "LOOKS_EFFECT_GHOST": "алаԥшҵашәара",
    "LOOKS_CHANGEEFFECTBY": "иԥсахтәуп %1 аеффект %2 ала  ",
    "LOOKS_SETEFFECTTO": "иқәыргылатәуп аеффект %1 %2 аҟны  ",
    "LOOKS_CLEARGRAPHICEFFECTS": "иқәгатәуп аграфикатә еффектқәа",
    "LOOKS_CHANGESIZEBY": "иԥсахтәуп ашәагаа %1 ала",
    "LOOKS_SETSIZETO": "иқәыргылатәуп ашәагаа  %1 % ",
    "LOOKS_SIZE": "ашәагаа",
    "LOOKS_CHANGESTRETCHBY": "change stretch by %1",
    "LOOKS_SETSTRETCHTO": "set stretch to %1 %",
    "LOOKS_SWITCHCOSTUMETO": "иԥсахтәуп акостиум %1 ала",
    "LOOKS_NEXTCOSTUME": "анаҩстәи акостиум",
    "LOOKS_SWITCHBACKDROPTO": "иԥсахтәуп аҿаԥшыра %1 ала",
    "LOOKS_GOTOFRONTBACK": "ииастәуп %1 ҿыгҳарак ала ",
    "LOOKS_GOTOFRONTBACK_FRONT": "front",
    "LOOKS_GOTOFRONTBACK_BACK": "шьҭахьҟа",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "go %1 %2 layers",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "ԥхьаҟа",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "шьҭахьҟа",
    "LOOKS_BACKDROPNUMBERNAME": "аҿаԥшыра %1 ",
    "LOOKS_COSTUMENUMBERNAME": "акостиум %1",
    "LOOKS_NUMBERNAME_NUMBER": "аномер",
    "LOOKS_NUMBERNAME_NAME": "ахьӡ",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "иԥсахтәуп аҿаԥшыра %1 ала  нас иԥштәуп ",
    "LOOKS_NEXTBACKDROP": "анаҩстәи аҿаԥшыра",
    "LOOKS_PREVIOUSBACKDROP": "уаанӡатәи аҿаҧшыра",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "ицатәуп %1 шьаҿак",
    "MOTION_TURNLEFT": "иргьежьтәуп  %1 %2 градус рыла ",
    "MOTION_TURNRIGHT": "иргьежьтәуп %1 %2 градус рыла ",
    "MOTION_POINTINDIRECTION": "инарҳәтәуп %1 ",
    "MOTION_POINTTOWARDS": "%1 ахь инаҳәтәуп",
    "MOTION_POINTTOWARDS_POINTER": "аҳәынаԥ арбага",
    "MOTION_GOTO": "ииастәуп %1 ахь",
    "MOTION_GOTO_POINTER": "аҳәынаԥ арбага",
    "MOTION_GOTO_RANDOM": "иарбанзаалакь апозициа",
    "MOTION_GOTOXY": "ииастәуп x: %1 y: %2 ахь ",
    "MOTION_GLIDESECSTOXY": "иқәҵәраатәуп x: %2 y: %3 ахь %1 секундк ",
    "MOTION_GLIDETO": "иқәҵәраатәуп %2 ахь %1 секундк  ",
    "MOTION_GLIDETO_POINTER": "аҳәынаԥ арбага",
    "MOTION_GLIDETO_RANDOM": "иарбанзаалакь апозициа",
    "MOTION_CHANGEXBY": "иԥсахтәуп x %1 ала   ",
    "MOTION_SETX": "иқәыргылатәуп x %1 аҟны  ",
    "MOTION_CHANGEYBY": "иԥсахтәуп y %1 ала ",
    "MOTION_SETY": "иқәыргылатәуп y %1 аҟны ",
    "MOTION_IFONEDGEBOUNCE": "акьыԥшь акәзар, иадԥатәуп",
    "MOTION_SETROTATIONSTYLE": "аргьежьра астиль %1 ",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "армарахьтә-арӷьарахь",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "иргьежьтәӡам",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "акәша-мыкәша",
    "MOTION_XPOSITION": "x аҭыԥ",
    "MOTION_YPOSITION": "y аҭыԥ",
    "MOTION_DIRECTION": "ахырхарҭа",
    "MOTION_SCROLLRIGHT": "scroll right %1",
    "MOTION_SCROLLUP": "scroll up %1",
    "MOTION_ALIGNSCENE": "align scene %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "bottom-left",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "bottom-right",
    "MOTION_ALIGNSCENE_MIDDLE": "ибжьаратәу",
    "MOTION_ALIGNSCENE_TOPLEFT": "top-left",
    "MOTION_ALIGNSCENE_TOPRIGHT": "top-right",
    "MOTION_XSCROLL": "x scroll",
    "MOTION_YSCROLL": "y scroll",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "иарбанзаалакь %1 -и %2 -и рыбжьара  ",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 - еи  %2 - еи",
    "OPERATORS_OR": "%1 ма %2",
    "OPERATORS_NOT": "%1 акәӡам",
    "OPERATORS_JOIN": "еиԥшьтәуп %1 %2 ",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "асимвол %1 %2 аҟны",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "%1 аура",
    "OPERATORS_CONTAINS": "%1 иаҵанакуама %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "ихаргьежьтәуп %1 ",
    "OPERATORS_MATHOP": "%1 %2 аҟынтәи",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "еиҵоу еибгоу",
    "OPERATORS_MATHOP_CEILING": "еиҳау еибгоу",
    "OPERATORS_MATHOP_SQRT": "sqrt",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "define %1",
    "SENSING_TOUCHINGOBJECT": "иадкьыслома %1?  ",
    "SENSING_TOUCHINGOBJECT_POINTER": "аҳәынаԥ арбага",
    "SENSING_TOUCHINGOBJECT_EDGE": "акьыԥшь",
    "SENSING_TOUCHINGCOLOR": "иадкьыслома аԥштәы %1? ",
    "SENSING_COLORISTOUCHINGCOLOR": "аԥштәы %1 иадкьыслома %2?  ",
    "SENSING_DISTANCETO": "%1 аҟынӡа ибжьоу",
    "SENSING_DISTANCETO_POINTER": "аҳәынаԥ арбага",
    "SENSING_ASKANDWAIT": "иазҵаатәуп %1 нас иԥштәуп ",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "аҭак",
    "SENSING_KEYPRESSED": "аклавиша %1  иақәыӷәӷәома? ",
    "SENSING_MOUSEDOWN": "аҳәынаԥ иақәыӷәӷәома?",
    "SENSING_MOUSEX": "аҳәынаԥ x ала",
    "SENSING_MOUSEY": "аҳәынаԥ y ала",
    "SENSING_SETDRAGMODE": "иқәыргылатәуп аиагара арежим %1 ",
    "SENSING_SETDRAGMODE_DRAGGABLE": "ииаугар зуа",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "аиагара зымуа",
    "SENSING_LOUDNESS": "абжьы адура",
    "SENSING_LOUD": "loud?",
    "SENSING_TIMER": "аамҭарбага",
    "SENSING_RESETTIMER": "аамҭарбага ҿыц адәықәҵара",
    "SENSING_OF": "%1  %2",
    "SENSING_OF_XPOSITION": "x аҭыԥ",
    "SENSING_OF_YPOSITION": "y аҭыԥ",
    "SENSING_OF_DIRECTION": "ахырхарҭа",
    "SENSING_OF_COSTUMENUMBER": "акостиум №",
    "SENSING_OF_COSTUMENAME": "акостиум ахьӡ",
    "SENSING_OF_SIZE": "ашәагаа",
    "SENSING_OF_VOLUME": "абжьы адура",
    "SENSING_OF_BACKDROPNUMBER": "аҿаԥшыра №",
    "SENSING_OF_BACKDROPNAME": "аҿаԥшыра ахьӡ",
    "SENSING_OF_STAGE": "Асцена",
    "SENSING_CURRENT": "уажәтәи %1 ",
    "SENSING_CURRENT_YEAR": "ашықәс",
    "SENSING_CURRENT_MONTH": "амза",
    "SENSING_CURRENT_DATE": "арыцхә",
    "SENSING_CURRENT_DAYOFWEEK": "амчыбжь амш",
    "SENSING_CURRENT_HOUR": "асааҭ",
    "SENSING_CURRENT_MINUTE": "аминуҭ",
    "SENSING_CURRENT_SECOND": "асекунд",
    "SENSING_DAYSSINCE2000": "амшқәа 01.01.2000 инаркны ",
    "SENSING_USERNAME": "алахәылаҩ ихьӡ",
    "SENSING_USERID": "Ахархәаҩ ID",
    "SOUND_PLAY": "иргатәуп абжьы %1 ",
    "SOUND_PLAYUNTILDONE": "иргатәуп абжьы %1 инҵәаанӡа ",
    "SOUND_STOPALLSOUNDS": "иаанкылатәуп абжьқәа зегьы",
    "SOUND_SETEFFECTO": "иқәыргылатәуп %1 аеффект %2 аҟны  ",
    "SOUND_CHANGEEFFECTBY": "иԥсахтәуп  %1 аеффект %2 ала  ",
    "SOUND_CLEAREFFECTS": "иқәгатәуп абжьы аеффектқәа",
    "SOUND_EFFECTS_PITCH": "pitch",
    "SOUND_EFFECTS_PAN": "pan left/right",
    "SOUND_CHANGEVOLUMEBY": "иԥсахтәуп абжьы %1 ала ",
    "SOUND_SETVOLUMETO": "иқәыргылатәуп абжьы адура %1%",
    "SOUND_VOLUME": "абжьы адура",
    "CATEGORY_MOTION": "Аиҭаҵра",
    "CATEGORY_LOOKS": "Аԥшра-асахьа",
    "CATEGORY_SOUND": "Абжьы",
    "CATEGORY_EVENTS": "Ахҭысқәа",
    "CATEGORY_CONTROL": "Аконтроль",
    "CATEGORY_SENSING": "Асенсорқәа",
    "CATEGORY_OPERATORS": "Аоператорқәа",
    "CATEGORY_VARIABLES": "Аҽеиҭакқәа",
    "CATEGORY_MYBLOCKS": "Сара сблокқәа",
    "DUPLICATE": "Адубликат",
    "DELETE": "Ианыхтәуп",
    "ADD_COMMENT": "Иацҵатәуп акомментари",
    "REMOVE_COMMENT": "Ианыхтәуп акомментари",
    "DELETE_BLOCK": "Ианыхтәуп аблок",
    "DELETE_X_BLOCKS": "Ианыхтәуп %1 блокк ",
    "DELETE_ALL_BLOCKS": "Ианыхтәума аблокқәа %1 зегьы?",
    "CLEAN_UP": "Clean up Blocks",
    "HELP": "Ацхыраара",
    "UNDO": "Иаҟәыхтәуп",
    "REDO": "Ирхынҳәтәуп",
    "EDIT_PROCEDURE": "Ариашара",
    "SHOW_PROCEDURE_DEFINITION": "Go to definition",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Иҳәатәуп џьара акы...",
    "COLOUR_HUE_LABEL": "Аԥштәы",
    "COLOUR_SATURATION_LABEL": "Аԥштәылгазаара",
    "COLOUR_BRIGHTNESS_LABEL": "Ажжара",
    "CHANGE_VALUE_TITLE": "Change value:",
    "RENAME_VARIABLE": "Аҽеиҭак ахьӡ ԥсахтәуп",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Аҽеиҭак ахьӡ ԥсахтәуп",
    "NEW_VARIABLE": "Иаԥҵатәуп аҽеиҭак",
    "NEW_VARIABLE_TITLE": "Аҽеиҭак ахьӡ ҿыц:",
    "VARIABLE_MODAL_TITLE": "Аҽеиҭак ҿыц",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Иаԥҵатәуп аблок",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Ахьӡынҵа аԥҵара",
    "NEW_LIST_TITLE": "Ахьӡынҵа ахьӡ ҿыц:",
    "LIST_MODAL_TITLE": "Ахьӡынҵа ҿыц",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Ахьӡынҵа ахьӡ ԥсахтәуп",
    "NEW_BROADCAST_MESSAGE": "Ацҳамҭа ҿыц",
    "NEW_BROADCAST_MESSAGE_TITLE": "Ацҳамҭа ҿыц ахьӡ:",
    "BROADCAST_MODAL_TITLE": "Ацҳамҭа ҿыц",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "ацҳамҭа1"
};

Blockly.ScratchMsgs.locales["ca"] =
{
    "CONTROL_FOREVER": "per sempre",
    "CONTROL_REPEAT": "repeteix %1",
    "CONTROL_IF": "si %1 llavors",
    "CONTROL_ELSE": "si no",
    "CONTROL_STOP": "atura",
    "CONTROL_STOP_ALL": "tot",
    "CONTROL_STOP_THIS": "aquest programa",
    "CONTROL_STOP_OTHER": "altres programes del personatge",
    "CONTROL_WAIT": "espera %1 segons",
    "CONTROL_WAITUNTIL": "espera fins %1",
    "CONTROL_REPEATUNTIL": "repeteix fins %1",
    "CONTROL_WHILE": "mentre %1",
    "CONTROL_FOREACH": "per cada %1 a %2",
    "CONTROL_STARTASCLONE": "quan una còpia meva comenci",
    "CONTROL_CREATECLONEOF": "crea una còpia de %1",
    "CONTROL_CREATECLONEOF_MYSELF": "jo mateix",
    "CONTROL_DELETETHISCLONE": "esborra aquesta còpia",
    "CONTROL_COUNTER": "comptador",
    "CONTROL_INCRCOUNTER": "augmenta comptador",
    "CONTROL_CLEARCOUNTER": "neteja comptador",
    "CONTROL_ALLATONCE": "tot d'una vegada",
    "DATA_SETVARIABLETO": "assigna a %1 el valor %2",
    "DATA_CHANGEVARIABLEBY": "augmenta %1 en %2",
    "DATA_SHOWVARIABLE": "mostra la variable %1",
    "DATA_HIDEVARIABLE": "amaga la variable %1",
    "DATA_ADDTOLIST": "afegeix %1 a %2",
    "DATA_DELETEOFLIST": "esborra l'element %1 de %2",
    "DATA_INSERTATLIST": "afegeix %1 a la posició %2 de %3",
    "DATA_REPLACEITEMOFLIST": "canvia l'element %1 de %2 per %3",
    "DATA_ITEMOFLIST": "element %1 de %2",
    "DATA_LENGTHOFLIST": "llargada de %1",
    "DATA_LISTCONTAINSITEM": "%1 conté %2?",
    "DATA_SHOWLIST": "mostra la llista %1",
    "DATA_HIDELIST": "amaga la llista %1",
    "DATA_INDEX_ALL": "tot",
    "DATA_INDEX_LAST": "darrer",
    "DATA_INDEX_RANDOM": "aleatori",
    "EVENT_WHENFLAGCLICKED": "quan %1 es premi",
    "EVENT_WHENTHISSPRITECLICKED": "quan es cliqui aquest personatge",
    "EVENT_WHENSTAGECLICKED": "quan es cliqui l'escenari",
    "EVENT_WHENTOUCHINGOBJECT": "quan aquest objecte toqui %1",
    "EVENT_WHENBROADCASTRECEIVED": "quan rebi %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "quan l'escenari canviï al fons %1",
    "EVENT_WHENGREATERTHAN": "quan %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "cronòmetre",
    "EVENT_BROADCAST": "envia a tots %1",
    "EVENT_BROADCASTANDWAIT": "envia a tots %1 i espera",
    "EVENT_WHENKEYPRESSED": "quan la tecla %1 es premi",
    "EVENT_WHENKEYPRESSED_SPACE": "espai",
    "EVENT_WHENKEYPRESSED_LEFT": "fletxa esquerra",
    "EVENT_WHENKEYPRESSED_RIGHT": "fletxa dreta",
    "EVENT_WHENKEYPRESSED_DOWN": "fletxa avall",
    "EVENT_WHENKEYPRESSED_UP": "fletxa amunt",
    "EVENT_WHENKEYPRESSED_ANY": "qualsevol",
    "LOOKS_SAYFORSECS": "digues %1 durant %2 segons",
    "LOOKS_SAY": "digues %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "pensa %1 durant %2 segons",
    "LOOKS_THINK": "pensa %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "mostra't",
    "LOOKS_HIDE": "amaga't",
    "LOOKS_HIDEALLSPRITES": "Amagar tots els personatges",
    "LOOKS_EFFECT_COLOR": "color",
    "LOOKS_EFFECT_FISHEYE": "ull de peix",
    "LOOKS_EFFECT_WHIRL": "girar",
    "LOOKS_EFFECT_PIXELATE": "pixelar",
    "LOOKS_EFFECT_MOSAIC": "mosaic",
    "LOOKS_EFFECT_BRIGHTNESS": "brillantor",
    "LOOKS_EFFECT_GHOST": "transparència",
    "LOOKS_CHANGEEFFECTBY": "augmenta l'efecte %1 en %2",
    "LOOKS_SETEFFECTTO": "fixa l'efecte %1 a %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "treu els efectes gràfics",
    "LOOKS_CHANGESIZEBY": "augmenta %1 la mida",
    "LOOKS_SETSIZETO": "fixa la mida a %1 %",
    "LOOKS_SIZE": "mida",
    "LOOKS_CHANGESTRETCHBY": "augmenta %1 l'estirament",
    "LOOKS_SETSTRETCHTO": "fixa l'estirament a %1 %",
    "LOOKS_SWITCHCOSTUMETO": "canvia el vestit a %1",
    "LOOKS_NEXTCOSTUME": "següent vestit",
    "LOOKS_SWITCHBACKDROPTO": "canvia el fons a %1",
    "LOOKS_GOTOFRONTBACK": "vés a la capa %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "front",
    "LOOKS_GOTOFRONTBACK_BACK": "darrere",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "vés %1 %2 capes",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "endavant",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "enrere",
    "LOOKS_BACKDROPNUMBERNAME": "fons %1",
    "LOOKS_COSTUMENUMBERNAME": "vestit %1",
    "LOOKS_NUMBERNAME_NUMBER": "nombre",
    "LOOKS_NUMBERNAME_NAME": "nom",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "canvia el fons a %1 i espera",
    "LOOKS_NEXTBACKDROP": "següent fons de pantalla",
    "LOOKS_PREVIOUSBACKDROP": "fons anterior",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "mou-te %1 passos",
    "MOTION_TURNLEFT": "gira %1 %2 graus",
    "MOTION_TURNRIGHT": "gira %1 %2 graus",
    "MOTION_POINTINDIRECTION": "apunta en direcció %1",
    "MOTION_POINTTOWARDS": "apunta cap a %1",
    "MOTION_POINTTOWARDS_POINTER": "punter del ratolí",
    "MOTION_GOTO": "vés a %1",
    "MOTION_GOTO_POINTER": "punter del ratolí",
    "MOTION_GOTO_RANDOM": "posició aleatòria",
    "MOTION_GOTOXY": "vés a x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "llisca en %1 segons fins a x: %2 y: %3",
    "MOTION_GLIDETO": "llisca en %1 segons fins a %2",
    "MOTION_GLIDETO_POINTER": "punter del ratolí",
    "MOTION_GLIDETO_RANDOM": "posició aleatòria",
    "MOTION_CHANGEXBY": "suma %1 a x",
    "MOTION_SETX": "assigna el valor %1 a x",
    "MOTION_CHANGEYBY": "suma %1 a y",
    "MOTION_SETY": "assigna el valor %1 a y",
    "MOTION_IFONEDGEBOUNCE": "rebota en tocar una vora",
    "MOTION_SETROTATIONSTYLE": "fixa el tipus de rotació %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "esquerra-dreta",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "no giris",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "al voltant",
    "MOTION_XPOSITION": "posició x",
    "MOTION_YPOSITION": "posició y",
    "MOTION_DIRECTION": "direcció",
    "MOTION_SCROLLRIGHT": "desplaça a la dreta %1",
    "MOTION_SCROLLUP": "desplaça amunt %1",
    "MOTION_ALIGNSCENE": "alinea centre %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "Inferior - Esquerre",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "Inferior - Dret",
    "MOTION_ALIGNSCENE_MIDDLE": "Centre",
    "MOTION_ALIGNSCENE_TOPLEFT": "Superior - Esquerre",
    "MOTION_ALIGNSCENE_TOPRIGHT": "Superior - Dret",
    "MOTION_XSCROLL": "Coordenada X",
    "MOTION_YSCROLL": "Coordenada Y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "nombre a l'atzar entre %1 i %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 i %2",
    "OPERATORS_OR": "%1 o %2",
    "OPERATORS_NOT": "no %1",
    "OPERATORS_JOIN": "uneix %1 i %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "lletra %1 de %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "llargada de %1",
    "OPERATORS_CONTAINS": "%1 conté %2?",
    "OPERATORS_MOD": "residu de dividir %1 entre %2",
    "OPERATORS_ROUND": "arrodoneix %1",
    "OPERATORS_MATHOP": "%1 de %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "part sencera",
    "OPERATORS_MATHOP_CEILING": "sostre",
    "OPERATORS_MATHOP_SQRT": "arrel quadrada",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "defineix %1",
    "SENSING_TOUCHINGOBJECT": "tocant %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "punter del ratolí",
    "SENSING_TOUCHINGOBJECT_EDGE": "vora",
    "SENSING_TOUCHINGCOLOR": "tocant el color %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "color %1 sobre %2?",
    "SENSING_DISTANCETO": "distància a %1",
    "SENSING_DISTANCETO_POINTER": "punter del ratolí",
    "SENSING_ASKANDWAIT": "pregunta %1 i espera",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "resposta",
    "SENSING_KEYPRESSED": "tecla %1 premuda?",
    "SENSING_MOUSEDOWN": "ratolí clicat?",
    "SENSING_MOUSEX": "ratolí x",
    "SENSING_MOUSEY": "ratolí y",
    "SENSING_SETDRAGMODE": "fixa el mode arrossega %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "arrossegadís",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "no arrossegadís",
    "SENSING_LOUDNESS": "volum del so",
    "SENSING_LOUD": "so fort?",
    "SENSING_TIMER": "cronòmetre",
    "SENSING_RESETTIMER": "reinicia el cronòmetre",
    "SENSING_OF": "%1 de %2",
    "SENSING_OF_XPOSITION": "posició x",
    "SENSING_OF_YPOSITION": "posició y",
    "SENSING_OF_DIRECTION": "direcció",
    "SENSING_OF_COSTUMENUMBER": "vestit nr",
    "SENSING_OF_COSTUMENAME": "nom del vestit",
    "SENSING_OF_SIZE": "mida",
    "SENSING_OF_VOLUME": "volum",
    "SENSING_OF_BACKDROPNUMBER": "fons nr",
    "SENSING_OF_BACKDROPNAME": "nom del fons",
    "SENSING_OF_STAGE": "Escenari",
    "SENSING_CURRENT": "actual %1",
    "SENSING_CURRENT_YEAR": "any",
    "SENSING_CURRENT_MONTH": "mes",
    "SENSING_CURRENT_DATE": "data",
    "SENSING_CURRENT_DAYOFWEEK": "dia de la setmana",
    "SENSING_CURRENT_HOUR": "hora",
    "SENSING_CURRENT_MINUTE": "minut",
    "SENSING_CURRENT_SECOND": "segon",
    "SENSING_DAYSSINCE2000": "dies des del 2000",
    "SENSING_USERNAME": "nom d'usuari",
    "SENSING_USERID": "Id. usuari",
    "SOUND_PLAY": "inicia el so %1",
    "SOUND_PLAYUNTILDONE": "toca el so %1 fins que acabi",
    "SOUND_STOPALLSOUNDS": "atura tots els sons",
    "SOUND_SETEFFECTO": "fixa l'efecte %1 a %2",
    "SOUND_CHANGEEFFECTBY": "augmenta l'efecte %1 en %2",
    "SOUND_CLEAREFFECTS": "treu els efectes sonors",
    "SOUND_EFFECTS_PITCH": "altura tonal",
    "SOUND_EFFECTS_PAN": "panoramització esquerra/dreta",
    "SOUND_CHANGEVOLUMEBY": "puja %1 el volum",
    "SOUND_SETVOLUMETO": "fixa el volum a %1%",
    "SOUND_VOLUME": "volum",
    "CATEGORY_MOTION": "Moviment",
    "CATEGORY_LOOKS": "Aspecte",
    "CATEGORY_SOUND": "So",
    "CATEGORY_EVENTS": "Esdeveniments",
    "CATEGORY_CONTROL": "Control",
    "CATEGORY_SENSING": "Sensors",
    "CATEGORY_OPERATORS": "Operadors",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "Els meus blocs",
    "DUPLICATE": "Duplica",
    "DELETE": "Elimina",
    "ADD_COMMENT": "Afegir comentari",
    "REMOVE_COMMENT": "Eliminar comentari",
    "DELETE_BLOCK": "Eliminar bloc",
    "DELETE_X_BLOCKS": "Eliminar %1 blocs",
    "DELETE_ALL_BLOCKS": "Eliminar tots els blocs %1 ?",
    "CLEAN_UP": "Netejar blocs",
    "HELP": "Ajuda",
    "UNDO": "Desfer",
    "REDO": "Refer / Tornar a fer",
    "EDIT_PROCEDURE": "Edita",
    "SHOW_PROCEDURE_DEFINITION": "Anar a la definició",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Dir alguna cosa...",
    "COLOUR_HUE_LABEL": "Color",
    "COLOUR_SATURATION_LABEL": "Saturació",
    "COLOUR_BRIGHTNESS_LABEL": "Lluminositat",
    "CHANGE_VALUE_TITLE": "Canviar el valor :",
    "RENAME_VARIABLE": "Canviar el nom de la variable",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Canviar el nom de la variable",
    "NEW_VARIABLE": "Crea una variable",
    "NEW_VARIABLE_TITLE": "Nou nom de variable :",
    "VARIABLE_MODAL_TITLE": "Nova Variable",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Crea un bloc",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Crea una llista",
    "NEW_LIST_TITLE": "Nou nom per la Llista :",
    "LIST_MODAL_TITLE": "Nova Llista",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Canviar el nom de la Llista",
    "NEW_BROADCAST_MESSAGE": "Nou missatge",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nou nom pel missatge :",
    "BROADCAST_MODAL_TITLE": "Missatge nou",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "missatge1"
};

Blockly.ScratchMsgs.locales["cs"] =
{
    "CONTROL_FOREVER": "opakuj stále",
    "CONTROL_REPEAT": "opakuj %1 krát",
    "CONTROL_IF": "když %1 tak",
    "CONTROL_ELSE": "jinak",
    "CONTROL_STOP": "zastav",
    "CONTROL_STOP_ALL": "všechno",
    "CONTROL_STOP_THIS": "tento scénář",
    "CONTROL_STOP_OTHER": "jiné scénáře postavy",
    "CONTROL_WAIT": "čekej %1 sekund",
    "CONTROL_WAITUNTIL": "čekej dokud nenastane %1",
    "CONTROL_REPEATUNTIL": "opakuj dokud nenastane %1",
    "CONTROL_WHILE": "opakuj dokud platí %1",
    "CONTROL_FOREACH": "pro každé %1 z %2",
    "CONTROL_STARTASCLONE": "když startuje můj klon",
    "CONTROL_CREATECLONEOF": "klonuj %1",
    "CONTROL_CREATECLONEOF_MYSELF": "sebe",
    "CONTROL_DELETETHISCLONE": "zruš tento klon",
    "CONTROL_COUNTER": "čítač",
    "CONTROL_INCRCOUNTER": "zvyš čítač",
    "CONTROL_CLEARCOUNTER": "vynuluj čítač",
    "CONTROL_ALLATONCE": "vše najednou",
    "DATA_SETVARIABLETO": "nastav %1 na %2",
    "DATA_CHANGEVARIABLEBY": "změň %1 o %2",
    "DATA_SHOWVARIABLE": "ukaž proměnnou %1",
    "DATA_HIDEVARIABLE": "skryj proměnnou %1",
    "DATA_ADDTOLIST": "přidej %1 k %2",
    "DATA_DELETEOFLIST": "smaž %1 z %2",
    "DATA_INSERTATLIST": "vlož %1 na %2 v %3",
    "DATA_REPLACEITEMOFLIST": "nahraď %1 v %2 hodnotou %3",
    "DATA_ITEMOFLIST": "prvek %1 z %2",
    "DATA_LENGTHOFLIST": "délka %1",
    "DATA_LISTCONTAINSITEM": "%1 obsahuje %2",
    "DATA_SHOWLIST": "ukaž seznam %1",
    "DATA_HIDELIST": "skryj seznam %1",
    "DATA_INDEX_ALL": "všechno",
    "DATA_INDEX_LAST": "poslední",
    "DATA_INDEX_RANDOM": "náhodně",
    "EVENT_WHENFLAGCLICKED": "po kliknutí na %1",
    "EVENT_WHENTHISSPRITECLICKED": "po kliknutí na mě",
    "EVENT_WHENSTAGECLICKED": "po kliknutí na scénu",
    "EVENT_WHENTOUCHINGOBJECT": "po doteku %1",
    "EVENT_WHENBROADCASTRECEIVED": "po obdržení zprávy %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "po změně pozadí na %1",
    "EVENT_WHENGREATERTHAN": "když %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "stopky",
    "EVENT_BROADCAST": "vyšli zprávu %1",
    "EVENT_BROADCASTANDWAIT": "vyšli zprávu %1 a čekej",
    "EVENT_WHENKEYPRESSED": "po stisku klávesy %1",
    "EVENT_WHENKEYPRESSED_SPACE": "mezerník",
    "EVENT_WHENKEYPRESSED_LEFT": "šipka vlevo",
    "EVENT_WHENKEYPRESSED_RIGHT": "šipka vpravo",
    "EVENT_WHENKEYPRESSED_DOWN": "šipka dolů",
    "EVENT_WHENKEYPRESSED_UP": "šipka nahoru",
    "EVENT_WHENKEYPRESSED_ANY": "libovolná",
    "LOOKS_SAYFORSECS": "bublina %1 %2 sekund",
    "LOOKS_SAY": "bublina %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "myšlenka %1 %2 sekund",
    "LOOKS_THINK": "myšlenka %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "ukaž se",
    "LOOKS_HIDE": "skryj se",
    "LOOKS_HIDEALLSPRITES": "skryj všechny postavy",
    "LOOKS_EFFECT_COLOR": "barva",
    "LOOKS_EFFECT_FISHEYE": "rybí oko",
    "LOOKS_EFFECT_WHIRL": "víření",
    "LOOKS_EFFECT_PIXELATE": "kostičkování",
    "LOOKS_EFFECT_MOSAIC": "mozaika",
    "LOOKS_EFFECT_BRIGHTNESS": "jas",
    "LOOKS_EFFECT_GHOST": "průhlednost",
    "LOOKS_CHANGEEFFECTBY": "změň efekt %1 o %2",
    "LOOKS_SETEFFECTTO": "nastav efekt %1 na %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "zruš grafické efekty",
    "LOOKS_CHANGESIZEBY": "změň velikost o %1",
    "LOOKS_SETSIZETO": "nastav velikost na %1 %",
    "LOOKS_SIZE": "velikost",
    "LOOKS_CHANGESTRETCHBY": "změň roztažení o %1",
    "LOOKS_SETSTRETCHTO": "nastav roztažení na %1 %",
    "LOOKS_SWITCHCOSTUMETO": "změň kostým na %1",
    "LOOKS_NEXTCOSTUME": "další kostým",
    "LOOKS_SWITCHBACKDROPTO": "přepni pozadí na %1",
    "LOOKS_GOTOFRONTBACK": "přejdi na vrstvu %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "popředí",
    "LOOKS_GOTOFRONTBACK_BACK": "pozadí",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "jdi %1 o %2",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "dopředu",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "dozadu",
    "LOOKS_BACKDROPNUMBERNAME": "pozadí %1",
    "LOOKS_COSTUMENUMBERNAME": "kostým %1",
    "LOOKS_NUMBERNAME_NUMBER": "číslo",
    "LOOKS_NUMBERNAME_NAME": "název",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "změň pozadí na %1",
    "LOOKS_NEXTBACKDROP": "další pozadí",
    "LOOKS_PREVIOUSBACKDROP": "předchozí pozadí",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "dopředu o %1 kroků",
    "MOTION_TURNLEFT": "otoč se %1 o %2 stupňů",
    "MOTION_TURNRIGHT": "otoč se %1 o %2 stupňů",
    "MOTION_POINTINDIRECTION": "nastav směr %1",
    "MOTION_POINTTOWARDS": "nastav směr k %1",
    "MOTION_POINTTOWARDS_POINTER": "ukazateli myši",
    "MOTION_GOTO": "skoč na %1",
    "MOTION_GOTO_POINTER": "ukazatel myši",
    "MOTION_GOTO_RANDOM": "náhodná pozice",
    "MOTION_GOTOXY": "skoč na x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "klouzej %1 sekund na x: %2 y: %3",
    "MOTION_GLIDETO": "klouzej %1 sekund na %2",
    "MOTION_GLIDETO_POINTER": "ukazatel myši",
    "MOTION_GLIDETO_RANDOM": "náhodná pozice",
    "MOTION_CHANGEXBY": "změň x o %1",
    "MOTION_SETX": "nastav x na %1",
    "MOTION_CHANGEYBY": "změň y o %1",
    "MOTION_SETY": "nastav y na %1",
    "MOTION_IFONEDGEBOUNCE": "když narazíš na okraj, odraž se",
    "MOTION_SETROTATIONSTYLE": "nastav otáčení %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "vlevo-vpravo",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "neotáčet",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "dokola",
    "MOTION_XPOSITION": "x",
    "MOTION_YPOSITION": "y",
    "MOTION_DIRECTION": "směr",
    "MOTION_SCROLLRIGHT": "posuň se doprava %1",
    "MOTION_SCROLLUP": "posuň se nahoru %1",
    "MOTION_ALIGNSCENE": "zarovnej scénu %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "vlevo dole",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "vpravo dole",
    "MOTION_ALIGNSCENE_MIDDLE": "prostřední",
    "MOTION_ALIGNSCENE_TOPLEFT": "vlevo nahoře",
    "MOTION_ALIGNSCENE_TOPRIGHT": "vpravo nahoře",
    "MOTION_XSCROLL": "x přesouvání",
    "MOTION_YSCROLL": "y přesouvání",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "náhodné číslo od %1 do %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 a %2",
    "OPERATORS_OR": "%1 nebo %2",
    "OPERATORS_NOT": "ne %1",
    "OPERATORS_JOIN": "spoj %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "písmeno %1 z %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "délka %1",
    "OPERATORS_CONTAINS": "%1 obsahuje %2?",
    "OPERATORS_MOD": "zbytek %1 děleno %2",
    "OPERATORS_ROUND": "zaokrouhli %1",
    "OPERATORS_MATHOP": "%1 %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "zaokr. dolů",
    "OPERATORS_MATHOP_CEILING": "zaokr. nahoru",
    "OPERATORS_MATHOP_SQRT": "odmocnina",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tg",
    "OPERATORS_MATHOP_ASIN": "arcsin",
    "OPERATORS_MATHOP_ACOS": "arccos",
    "OPERATORS_MATHOP_ATAN": "arctg",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "scénář pro %1",
    "SENSING_TOUCHINGOBJECT": "dotýkáš se %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "ukazatele myši",
    "SENSING_TOUCHINGOBJECT_EDGE": "okraje",
    "SENSING_TOUCHINGCOLOR": "dotýkáš se barvy %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "barvou %1 se dotýkáš %2?",
    "SENSING_DISTANCETO": "vzdálenost k %1",
    "SENSING_DISTANCETO_POINTER": "ukazateli myši",
    "SENSING_ASKANDWAIT": "otázka %1",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "odpověď",
    "SENSING_KEYPRESSED": "klávesa %1 stisknuta?",
    "SENSING_MOUSEDOWN": "myš stisknuta?",
    "SENSING_MOUSEX": "x myši",
    "SENSING_MOUSEY": "y myši",
    "SENSING_SETDRAGMODE": "povoleno přesouvat %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "ano",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "ne",
    "SENSING_LOUDNESS": "hlasitost",
    "SENSING_LOUD": "hlasité?",
    "SENSING_TIMER": "stopky",
    "SENSING_RESETTIMER": "vynuluj stopky",
    "SENSING_OF": "%1 z %2",
    "SENSING_OF_XPOSITION": "x",
    "SENSING_OF_YPOSITION": "y",
    "SENSING_OF_DIRECTION": "směr",
    "SENSING_OF_COSTUMENUMBER": "číslo kostýmu",
    "SENSING_OF_COSTUMENAME": "název kostýmu",
    "SENSING_OF_SIZE": "velikost",
    "SENSING_OF_VOLUME": "hlasitost",
    "SENSING_OF_BACKDROPNUMBER": "číslo pozadí",
    "SENSING_OF_BACKDROPNAME": "název pozadí",
    "SENSING_OF_STAGE": "Scéna",
    "SENSING_CURRENT": "aktuální %1",
    "SENSING_CURRENT_YEAR": "rok",
    "SENSING_CURRENT_MONTH": "měsíc",
    "SENSING_CURRENT_DATE": "den v měsíci",
    "SENSING_CURRENT_DAYOFWEEK": "den týdne",
    "SENSING_CURRENT_HOUR": "hodina",
    "SENSING_CURRENT_MINUTE": "minuta",
    "SENSING_CURRENT_SECOND": "sekunda",
    "SENSING_DAYSSINCE2000": "dnů od r. 2000",
    "SENSING_USERNAME": "jméno uživatele",
    "SENSING_USERID": "ID uživatele",
    "SOUND_PLAY": "začni hrát zvuk %1",
    "SOUND_PLAYUNTILDONE": "přehraj zvuk %1 až do konce",
    "SOUND_STOPALLSOUNDS": "zastav všechny zvuky",
    "SOUND_SETEFFECTO": "nastav efekt %1 na %2",
    "SOUND_CHANGEEFFECTBY": "změň efekt %1 o %2",
    "SOUND_CLEAREFFECTS": "zruš zvukové efekty",
    "SOUND_EFFECTS_PITCH": "poloha",
    "SOUND_EFFECTS_PAN": "stereo vlevo/vpravo",
    "SOUND_CHANGEVOLUMEBY": "změň hlasitost o %1",
    "SOUND_SETVOLUMETO": "nastav hlasitost na %1%",
    "SOUND_VOLUME": "hlasitost",
    "CATEGORY_MOTION": "Pohyb",
    "CATEGORY_LOOKS": "Vzhled",
    "CATEGORY_SOUND": "Zvuk",
    "CATEGORY_EVENTS": "Události",
    "CATEGORY_CONTROL": "Ovládání",
    "CATEGORY_SENSING": "Vnímání",
    "CATEGORY_OPERATORS": "Operátory",
    "CATEGORY_VARIABLES": "Proměnné",
    "CATEGORY_MYBLOCKS": "Moje bloky",
    "DUPLICATE": "Kopírovat",
    "DELETE": "Odstranit",
    "ADD_COMMENT": "Přidat poznámku",
    "REMOVE_COMMENT": "Odstranit poznámku",
    "DELETE_BLOCK": "Smaž blok",
    "DELETE_X_BLOCKS": "Smazat %1 bloků",
    "DELETE_ALL_BLOCKS": "Smazat všech %1 bloků?",
    "CLEAN_UP": "Ukliď bloky",
    "HELP": "Pomoc",
    "UNDO": "Vrátit",
    "REDO": "Znovu provést",
    "EDIT_PROCEDURE": "Upravit",
    "SHOW_PROCEDURE_DEFINITION": "Jdi ke scénáři",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Řekni něco ...",
    "COLOUR_HUE_LABEL": "Barva",
    "COLOUR_SATURATION_LABEL": "Sytost",
    "COLOUR_BRIGHTNESS_LABEL": "Jas",
    "CHANGE_VALUE_TITLE": "Změň hodnotu:",
    "RENAME_VARIABLE": "Přejmenovat proměnnou",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Přejmenovat proměnnou",
    "NEW_VARIABLE": "Vytvoř proměnnou",
    "NEW_VARIABLE_TITLE": "Nové jméno proměnné:",
    "VARIABLE_MODAL_TITLE": "Nová proměnná",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Vytvořit blok",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Vytvoř seznam",
    "NEW_LIST_TITLE": "Nový název seznamu:",
    "LIST_MODAL_TITLE": "Nový seznam",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Přejmenuj seznam",
    "NEW_BROADCAST_MESSAGE": "Nová zpráva",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nový název zprávy:",
    "BROADCAST_MODAL_TITLE": "Nová zpráva",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "zpráva1"
};

Blockly.ScratchMsgs.locales["cy"] =
{
    "CONTROL_FOREVER": "am byth",
    "CONTROL_REPEAT": "ailadrodd %1",
    "CONTROL_IF": "os %1 yna",
    "CONTROL_ELSE": "fel arall",
    "CONTROL_STOP": "aros",
    "CONTROL_STOP_ALL": "y cyfan",
    "CONTROL_STOP_THIS": "y sgript hon",
    "CONTROL_STOP_OTHER": "sgriptiau eraill yn y ciplun",
    "CONTROL_WAIT": "aros %1 eiliad",
    "CONTROL_WAITUNTIL": "aros hyd at %1",
    "CONTROL_REPEATUNTIL": "ailadrodd hyd at %1",
    "CONTROL_WHILE": "tra bo %1",
    "CONTROL_FOREACH": "am bob %1 yn %2",
    "CONTROL_STARTASCLONE": "pan rwyf yn dechrau fel clôn",
    "CONTROL_CREATECLONEOF": "creu clôn o %1",
    "CONTROL_CREATECLONEOF_MYSELF": "fi fy hun",
    "CONTROL_DELETETHISCLONE": "dileu y clôn hwn",
    "CONTROL_COUNTER": "rhifydd",
    "CONTROL_INCRCOUNTER": "rhifydd cynyddiad",
    "CONTROL_CLEARCOUNTER": "clirio'r rhifydd",
    "CONTROL_ALLATONCE": "pob un ar unwaith",
    "DATA_SETVARIABLETO": "gosod %1 i %2",
    "DATA_CHANGEVARIABLEBY": "newid %1 gan %2",
    "DATA_SHOWVARIABLE": "dangos newidyn %1",
    "DATA_HIDEVARIABLE": "cuddio newidyn %1",
    "DATA_ADDTOLIST": "ychwanegu %1 i %2",
    "DATA_DELETEOFLIST": "dileu %1 o %2",
    "DATA_INSERTATLIST": "mewnosod %1 yn %2 o %3",
    "DATA_REPLACEITEMOFLIST": "amnewid eitem %1 o %2 gyda %3",
    "DATA_ITEMOFLIST": "eitem %1 o %2",
    "DATA_LENGTHOFLIST": "hyd %1",
    "DATA_LISTCONTAINSITEM": "%1 yn cynnwys %2?",
    "DATA_SHOWLIST": "dangos rhestr %1",
    "DATA_HIDELIST": "cuddio rhestr %1",
    "DATA_INDEX_ALL": "y cyfan",
    "DATA_INDEX_LAST": "olaf",
    "DATA_INDEX_RANDOM": "ar hap",
    "EVENT_WHENFLAGCLICKED": "pan fydd %1 wedi ei glicio",
    "EVENT_WHENTHISSPRITECLICKED": "pan gaiff y ciplun yma ei glicio",
    "EVENT_WHENSTAGECLICKED": "pan fydd llwyfan wedi ei glicio",
    "EVENT_WHENTOUCHINGOBJECT": "when this sprite touches %1",
    "EVENT_WHENBROADCASTRECEIVED": "pan rwy'n derbyn %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "pan fydd cefndir yn newid i %1",
    "EVENT_WHENGREATERTHAN": "pan %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "amserydd",
    "EVENT_BROADCAST": "darlledu  %1",
    "EVENT_BROADCASTANDWAIT": "darlledu %1 ac aros",
    "EVENT_WHENKEYPRESSED": "pan fo bysell %1 wedi ei wasgu",
    "EVENT_WHENKEYPRESSED_SPACE": "bwlch",
    "EVENT_WHENKEYPRESSED_LEFT": "saeth chwith",
    "EVENT_WHENKEYPRESSED_RIGHT": "saeth de",
    "EVENT_WHENKEYPRESSED_DOWN": "saeth i lawr",
    "EVENT_WHENKEYPRESSED_UP": "saeth i fyny",
    "EVENT_WHENKEYPRESSED_ANY": "unrhyw",
    "LOOKS_SAYFORSECS": "dweud %1 am %2 eiliad",
    "LOOKS_SAY": "dweud %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "meddwl %1 am %2 eiliad",
    "LOOKS_THINK": "meddwl %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "dangos",
    "LOOKS_HIDE": "cuddio",
    "LOOKS_HIDEALLSPRITES": "cuddio pob ciplun",
    "LOOKS_EFFECT_COLOR": "lliw",
    "LOOKS_EFFECT_FISHEYE": "llygaid pysgodyn",
    "LOOKS_EFFECT_WHIRL": "chwyrliad",
    "LOOKS_EFFECT_PIXELATE": "picseleiddio",
    "LOOKS_EFFECT_MOSAIC": "mosaig",
    "LOOKS_EFFECT_BRIGHTNESS": "disgleirdeb",
    "LOOKS_EFFECT_GHOST": "ysbryd",
    "LOOKS_CHANGEEFFECTBY": "newid effaith %1 gan %2",
    "LOOKS_SETEFFECTTO": "gosod effaith %1 effaith i %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "clirio effeithiau graffeg",
    "LOOKS_CHANGESIZEBY": "newid maint gan %1",
    "LOOKS_SETSIZETO": "gosod maint i %1 %",
    "LOOKS_SIZE": "maint",
    "LOOKS_CHANGESTRETCHBY": "newid yr ymestyn gan %1",
    "LOOKS_SETSTRETCHTO": "gosod ymestyniad gan %1 %",
    "LOOKS_SWITCHCOSTUMETO": "newid gwisg i %1",
    "LOOKS_NEXTCOSTUME": "gwisg nesaf",
    "LOOKS_SWITCHBACKDROPTO": "newid cefndir i %1",
    "LOOKS_GOTOFRONTBACK": "mynd i haen %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "blaen",
    "LOOKS_GOTOFRONTBACK_BACK": "cefn",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "mynd i haenau %1 %2",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "ymlaen",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "nôl",
    "LOOKS_BACKDROPNUMBERNAME": "cefnlen %1",
    "LOOKS_COSTUMENUMBERNAME": "gwisg %1",
    "LOOKS_NUMBERNAME_NUMBER": "rhif",
    "LOOKS_NUMBERNAME_NAME": "enw",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "newid cefnlen i %1 ac aros",
    "LOOKS_NEXTBACKDROP": "cefnlen nesaf",
    "LOOKS_PREVIOUSBACKDROP": "cefndir blaenorol",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "symud %1 cam",
    "MOTION_TURNLEFT": "troi %1 %2 gradd",
    "MOTION_TURNRIGHT": "troi %1 %2 gradd",
    "MOTION_POINTINDIRECTION": "pwyntio i gyfeiriad %1",
    "MOTION_POINTTOWARDS": "pwyntio tuag at %1",
    "MOTION_POINTTOWARDS_POINTER": "pwyntydd llygoden",
    "MOTION_GOTO": "mynd i %1",
    "MOTION_GOTO_POINTER": "pwyntydd llygoden",
    "MOTION_GOTO_RANDOM": "safle ar hap",
    "MOTION_GOTOXY": "mynd i x:%1 y: %2",
    "MOTION_GLIDESECSTOXY": "llithro %1 eiliad i x: %2 y: %3",
    "MOTION_GLIDETO": "llithro %1 eiliad i %2",
    "MOTION_GLIDETO_POINTER": "pwyntydd llygoden",
    "MOTION_GLIDETO_RANDOM": "safle ar hap",
    "MOTION_CHANGEXBY": "newid x gan %1",
    "MOTION_SETX": "gosod x i %1",
    "MOTION_CHANGEYBY": "newid y gan %1",
    "MOTION_SETY": "gosod y i %1",
    "MOTION_IFONEDGEBOUNCE": "os ar ymyl, bowndio",
    "MOTION_SETROTATIONSTYLE": "gosod steil cylchdroi %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "chwith-dde",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "peidio troi",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "o amgylch",
    "MOTION_XPOSITION": "safle x",
    "MOTION_YPOSITION": "safle y",
    "MOTION_DIRECTION": "cyfeiriad",
    "MOTION_SCROLLRIGHT": "sgrolio i'r dde %1",
    "MOTION_SCROLLUP": "sgrolio i fyny %1",
    "MOTION_ALIGNSCENE": "alinio golygfa %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "gwaelod chwith",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "gwaelod de",
    "MOTION_ALIGNSCENE_MIDDLE": "canol",
    "MOTION_ALIGNSCENE_TOPLEFT": "brig chwith",
    "MOTION_ALIGNSCENE_TOPRIGHT": "brig de",
    "MOTION_XSCROLL": "sgrolio x",
    "MOTION_YSCROLL": "sgrolio y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "dewis ar hap %1 i %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 a %2",
    "OPERATORS_OR": "%1 neu %2",
    "OPERATORS_NOT": "nid %1",
    "OPERATORS_JOIN": "uno %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "llythyren %1 o %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "hyd %1",
    "OPERATORS_CONTAINS": "%1 yn cynnwys %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "talgrynnu %1",
    "OPERATORS_MATHOP": "%1 o %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "llawr",
    "OPERATORS_MATHOP_CEILING": "nenfwd",
    "OPERATORS_MATHOP_SQRT": "ail isradd",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "Yn",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "diffinio %1",
    "SENSING_TOUCHINGOBJECT": "cyffwrdd %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "pwyntydd llygoden",
    "SENSING_TOUCHINGOBJECT_EDGE": "ymyl",
    "SENSING_TOUCHINGCOLOR": "cyffwrdd lliw %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "lliw %1 yn cyffwrdd %2?",
    "SENSING_DISTANCETO": "pellter i %1",
    "SENSING_DISTANCETO_POINTER": "pwyntydd llygoden",
    "SENSING_ASKANDWAIT": "gofyn %1 ac aros",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "ateb",
    "SENSING_KEYPRESSED": "bysell %1 wedi ei phwyso",
    "SENSING_MOUSEDOWN": "llygoden i lawr?",
    "SENSING_MOUSEX": "llygoden x",
    "SENSING_MOUSEY": "llygoden y",
    "SENSING_SETDRAGMODE": "gosod y modd llusgo %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "llusgadwy",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "anllusgadwy",
    "SENSING_LOUDNESS": "cryfder sain",
    "SENSING_LOUD": "sain gref?",
    "SENSING_TIMER": "amserydd",
    "SENSING_RESETTIMER": "ailosod amserydd",
    "SENSING_OF": "%1 o %2",
    "SENSING_OF_XPOSITION": "safle x",
    "SENSING_OF_YPOSITION": "safle y",
    "SENSING_OF_DIRECTION": "cyfeiriad",
    "SENSING_OF_COSTUMENUMBER": "gwisg #",
    "SENSING_OF_COSTUMENAME": "enw'r wisg",
    "SENSING_OF_SIZE": "maint",
    "SENSING_OF_VOLUME": "lefel sain",
    "SENSING_OF_BACKDROPNUMBER": "cefndir #",
    "SENSING_OF_BACKDROPNAME": "enw cefndir",
    "SENSING_OF_STAGE": "Llwyfan",
    "SENSING_CURRENT": "cyfredol %1",
    "SENSING_CURRENT_YEAR": "blwyddyn",
    "SENSING_CURRENT_MONTH": "mis",
    "SENSING_CURRENT_DATE": "dyddiad",
    "SENSING_CURRENT_DAYOFWEEK": "diwrnod o'r wythnos",
    "SENSING_CURRENT_HOUR": "awr",
    "SENSING_CURRENT_MINUTE": "munud",
    "SENSING_CURRENT_SECOND": "eiliad",
    "SENSING_DAYSSINCE2000": "dyddiau ers 2000",
    "SENSING_USERNAME": "enw defnyddiwr",
    "SENSING_USERID": "id defnyddiwr",
    "SOUND_PLAY": "cychwyn sain %1",
    "SOUND_PLAYUNTILDONE": "chwarae sain %1 tan y diwedd",
    "SOUND_STOPALLSOUNDS": "atal pob sain",
    "SOUND_SETEFFECTO": "gosod effaith %1 effaith i %2",
    "SOUND_CHANGEEFFECTBY": "newid effaith %1 gan %2",
    "SOUND_CLEAREFFECTS": "clirio effeithiau sain",
    "SOUND_EFFECTS_PITCH": "traw",
    "SOUND_EFFECTS_PAN": "troi chwith/de",
    "SOUND_CHANGEVOLUMEBY": "newid uchder sain gan %1",
    "SOUND_SETVOLUMETO": "gosod lefel sain i %1%",
    "SOUND_VOLUME": "lefel sain",
    "CATEGORY_MOTION": "Symudiad",
    "CATEGORY_LOOKS": "Edrychiad",
    "CATEGORY_SOUND": "Sain",
    "CATEGORY_EVENTS": "Digwyddiadau",
    "CATEGORY_CONTROL": "Rheoli",
    "CATEGORY_SENSING": "Synhwyro",
    "CATEGORY_OPERATORS": "Gweithredwyr",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "My Blocks",
    "DUPLICATE": "Dyblygu",
    "DELETE": "Dileu",
    "ADD_COMMENT": "Add Comment",
    "REMOVE_COMMENT": "Remove Comment",
    "DELETE_BLOCK": "Delete Block",
    "DELETE_X_BLOCKS": "Delete %1 Blocks",
    "DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
    "CLEAN_UP": "Clean up Blocks",
    "HELP": "Cymorth",
    "UNDO": "Dadwneud",
    "REDO": "Ailwneud",
    "EDIT_PROCEDURE": "Golygu",
    "SHOW_PROCEDURE_DEFINITION": "Go to definition",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Say something...",
    "COLOUR_HUE_LABEL": "Lliw",
    "COLOUR_SATURATION_LABEL": "Dirlawnder",
    "COLOUR_BRIGHTNESS_LABEL": "Disgleirdeb",
    "CHANGE_VALUE_TITLE": "Change value:",
    "RENAME_VARIABLE": "Rename variable",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Rename Variable",
    "NEW_VARIABLE": "Creu Newidyn",
    "NEW_VARIABLE_TITLE": "New variable name:",
    "VARIABLE_MODAL_TITLE": "Newidyn Newydd",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Creu Bloc",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Gwneud Rhestr",
    "NEW_LIST_TITLE": "New list name:",
    "LIST_MODAL_TITLE": "Rhestr Newydd",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Rename List",
    "NEW_BROADCAST_MESSAGE": "New message",
    "NEW_BROADCAST_MESSAGE_TITLE": "New message name:",
    "BROADCAST_MODAL_TITLE": "Neges Newydd",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "neges1"
};

Blockly.ScratchMsgs.locales["da"] =
{
    "CONTROL_FOREVER": "for evigt",
    "CONTROL_REPEAT": "gentag %1",
    "CONTROL_IF": "hvis %1 så",
    "CONTROL_ELSE": "ellers",
    "CONTROL_STOP": "stop",
    "CONTROL_STOP_ALL": "alle",
    "CONTROL_STOP_THIS": "dette script",
    "CONTROL_STOP_OTHER": "andre scripts i sprite",
    "CONTROL_WAIT": "vent %1 sekunder",
    "CONTROL_WAITUNTIL": "vent indtil %1",
    "CONTROL_REPEATUNTIL": "gentag indtil %1",
    "CONTROL_WHILE": "mens %1",
    "CONTROL_FOREACH": "for hver %1 i %2",
    "CONTROL_STARTASCLONE": "når jeg starter som klon",
    "CONTROL_CREATECLONEOF": "opret en klon af %1",
    "CONTROL_CREATECLONEOF_MYSELF": "mig selv",
    "CONTROL_DELETETHISCLONE": "slet denne klon",
    "CONTROL_COUNTER": "tæller",
    "CONTROL_INCRCOUNTER": "tæl tæller op",
    "CONTROL_CLEARCOUNTER": "nulstil tæller",
    "CONTROL_ALLATONCE": "alle på en gang",
    "DATA_SETVARIABLETO": "sæt %1 til %2",
    "DATA_CHANGEVARIABLEBY": "ændre %1 med %2",
    "DATA_SHOWVARIABLE": "vis variabel %1",
    "DATA_HIDEVARIABLE": "skjul variabel %1",
    "DATA_ADDTOLIST": "tilføj %1 til %2",
    "DATA_DELETEOFLIST": "slet %1 af %2",
    "DATA_INSERTATLIST": "indsæt %1 ved %2 af %3",
    "DATA_REPLACEITEMOFLIST": "erstat objekt %1 af %2 med %3",
    "DATA_ITEMOFLIST": "objekt %1 af %2",
    "DATA_LENGTHOFLIST": "længden af %1",
    "DATA_LISTCONTAINSITEM": "%1 indeholder %2?",
    "DATA_SHOWLIST": "vis liste %1",
    "DATA_HIDELIST": "skjul liste %1",
    "DATA_INDEX_ALL": "alle",
    "DATA_INDEX_LAST": "sidste",
    "DATA_INDEX_RANDOM": "tilfældig",
    "EVENT_WHENFLAGCLICKED": "når der klikkes på %1 ",
    "EVENT_WHENTHISSPRITECLICKED": "når denne sprite klikkes",
    "EVENT_WHENSTAGECLICKED": "når scene er valgt",
    "EVENT_WHENTOUCHINGOBJECT": "når denne sprite berører %1",
    "EVENT_WHENBROADCASTRECEIVED": "når jeg modtager %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "når baggrund skifter til %1",
    "EVENT_WHENGREATERTHAN": "når %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "stopur",
    "EVENT_BROADCAST": "send %1",
    "EVENT_BROADCASTANDWAIT": "send %1 og vent",
    "EVENT_WHENKEYPRESSED": "når du trykker på %1",
    "EVENT_WHENKEYPRESSED_SPACE": "mellemrum",
    "EVENT_WHENKEYPRESSED_LEFT": "venstre pil",
    "EVENT_WHENKEYPRESSED_RIGHT": "højre pil",
    "EVENT_WHENKEYPRESSED_DOWN": "pil nedad",
    "EVENT_WHENKEYPRESSED_UP": "pil opad",
    "EVENT_WHENKEYPRESSED_ANY": "vilkårlig",
    "LOOKS_SAYFORSECS": "sig %1 i %2 sekunder",
    "LOOKS_SAY": "sig %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "tænke %1 i %2 sekunder",
    "LOOKS_THINK": "tænk %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "vis",
    "LOOKS_HIDE": "skjul",
    "LOOKS_HIDEALLSPRITES": "skjul alle sprites",
    "LOOKS_EFFECT_COLOR": "farve",
    "LOOKS_EFFECT_FISHEYE": "fiskeøje",
    "LOOKS_EFFECT_WHIRL": "vrid",
    "LOOKS_EFFECT_PIXELATE": "pixeler",
    "LOOKS_EFFECT_MOSAIC": "mosaik",
    "LOOKS_EFFECT_BRIGHTNESS": "lysstyrke",
    "LOOKS_EFFECT_GHOST": "spøgelse",
    "LOOKS_CHANGEEFFECTBY": "ændr effekt %1 med %2",
    "LOOKS_SETEFFECTTO": "sæt effekt %1 til %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "fjern grafiske effekter",
    "LOOKS_CHANGESIZEBY": "ændre størrelse med %1",
    "LOOKS_SETSIZETO": "sæt størrelse til %1 %",
    "LOOKS_SIZE": "størrelse",
    "LOOKS_CHANGESTRETCHBY": "ændre stræk med %1",
    "LOOKS_SETSTRETCHTO": "sæt stræk til %1 %",
    "LOOKS_SWITCHCOSTUMETO": "skift kostume til %1",
    "LOOKS_NEXTCOSTUME": "næste kostume",
    "LOOKS_SWITCHBACKDROPTO": "skift baggrund til %1",
    "LOOKS_GOTOFRONTBACK": "gå til %1 lag",
    "LOOKS_GOTOFRONTBACK_FRONT": "forreste",
    "LOOKS_GOTOFRONTBACK_BACK": "bagerste",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "gå %2 lag %1",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "frem",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "tilbage",
    "LOOKS_BACKDROPNUMBERNAME": "baggrund %1",
    "LOOKS_COSTUMENUMBERNAME": "kostume %1",
    "LOOKS_NUMBERNAME_NUMBER": "nummer",
    "LOOKS_NUMBERNAME_NAME": "navn",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "skift baggrund til %1 og vent",
    "LOOKS_NEXTBACKDROP": "næste baggrund",
    "LOOKS_PREVIOUSBACKDROP": "forrige baggrund",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "gå %1 trin",
    "MOTION_TURNLEFT": "drej %1 %2 grader",
    "MOTION_TURNRIGHT": "drej %1 %2 grader",
    "MOTION_POINTINDIRECTION": "peg i retning %1",
    "MOTION_POINTTOWARDS": "peg mod %1",
    "MOTION_POINTTOWARDS_POINTER": "musepil",
    "MOTION_GOTO": "gå til %1",
    "MOTION_GOTO_POINTER": "musepil",
    "MOTION_GOTO_RANDOM": "tilfældig position",
    "MOTION_GOTOXY": "gå til x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "glid %1 sekunder til x: %2 y: %3",
    "MOTION_GLIDETO": "glid %1 sekunder til %2",
    "MOTION_GLIDETO_POINTER": "musepil",
    "MOTION_GLIDETO_RANDOM": "tilfældig position",
    "MOTION_CHANGEXBY": "ændre x med %1",
    "MOTION_SETX": "sæt x til %1",
    "MOTION_CHANGEYBY": "ændre y med %1",
    "MOTION_SETY": "sæt y til %1",
    "MOTION_IFONEDGEBOUNCE": "hop tilbage ved kanten",
    "MOTION_SETROTATIONSTYLE": "sæt rotationsstil til %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "venstre-højre",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "drej ikke",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "alle retninger",
    "MOTION_XPOSITION": "x position",
    "MOTION_YPOSITION": "y position",
    "MOTION_DIRECTION": "retning",
    "MOTION_SCROLLRIGHT": "rul mod højre %1",
    "MOTION_SCROLLUP": "rul op %1",
    "MOTION_ALIGNSCENE": "tilpas scene %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "nederst-til-venstre",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "nederst-til-højre",
    "MOTION_ALIGNSCENE_MIDDLE": "midten",
    "MOTION_ALIGNSCENE_TOPLEFT": "øverst-til-venstre",
    "MOTION_ALIGNSCENE_TOPRIGHT": "øverst-til-højre",
    "MOTION_XSCROLL": "x rul",
    "MOTION_YSCROLL": "y rul",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "vælg tilfældigt mellem %1 og %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 og %2",
    "OPERATORS_OR": "%1 eller %2",
    "OPERATORS_NOT": "ikke %1",
    "OPERATORS_JOIN": "%1 tilkobles %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "bogstav %1 af %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "længden af %1",
    "OPERATORS_CONTAINS": "%1 indeholder %2?",
    "OPERATORS_MOD": "%1 modulus %2",
    "OPERATORS_ROUND": "afrund %1",
    "OPERATORS_MATHOP": "%1 af %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "gulv",
    "OPERATORS_MATHOP_CEILING": "loft",
    "OPERATORS_MATHOP_SQRT": "kvrod",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "definer %1",
    "SENSING_TOUCHINGOBJECT": "berører %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "musepil",
    "SENSING_TOUCHINGOBJECT_EDGE": "kant",
    "SENSING_TOUCHINGCOLOR": "berører farven %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "berører %1 farven %2?",
    "SENSING_DISTANCETO": "afstand til %1",
    "SENSING_DISTANCETO_POINTER": "musepil",
    "SENSING_ASKANDWAIT": "bed om %1 og vent",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "svar",
    "SENSING_KEYPRESSED": "trykket på tasten %1?",
    "SENSING_MOUSEDOWN": "trykket på musen?",
    "SENSING_MOUSEX": "musens x-position",
    "SENSING_MOUSEY": "musens y-position",
    "SENSING_SETDRAGMODE": "sæt træk %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "kan trækkes",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "kan ikke trækkes",
    "SENSING_LOUDNESS": "lydstyrke",
    "SENSING_LOUD": "højt?",
    "SENSING_TIMER": "stopur",
    "SENSING_RESETTIMER": "nulstil stopur",
    "SENSING_OF": "%1 af %2",
    "SENSING_OF_XPOSITION": "x position",
    "SENSING_OF_YPOSITION": "y position",
    "SENSING_OF_DIRECTION": "retning",
    "SENSING_OF_COSTUMENUMBER": "kostume #",
    "SENSING_OF_COSTUMENAME": "navn på kostume",
    "SENSING_OF_SIZE": "størrelse",
    "SENSING_OF_VOLUME": "lydstyrke",
    "SENSING_OF_BACKDROPNUMBER": "baggrund #",
    "SENSING_OF_BACKDROPNAME": "navn på baggrund",
    "SENSING_OF_STAGE": "Scene",
    "SENSING_CURRENT": "nuværende %1",
    "SENSING_CURRENT_YEAR": "år",
    "SENSING_CURRENT_MONTH": "måned",
    "SENSING_CURRENT_DATE": "dato",
    "SENSING_CURRENT_DAYOFWEEK": "ugedag",
    "SENSING_CURRENT_HOUR": "time",
    "SENSING_CURRENT_MINUTE": "minut",
    "SENSING_CURRENT_SECOND": "sekund",
    "SENSING_DAYSSINCE2000": "dage siden 2000",
    "SENSING_USERNAME": "brugernavn",
    "SENSING_USERID": "bruger id",
    "SOUND_PLAY": "spil lyden %1",
    "SOUND_PLAYUNTILDONE": "spil lyden %1 indtil færdig",
    "SOUND_STOPALLSOUNDS": "stop al lyd",
    "SOUND_SETEFFECTO": "sæt effekt %1 til %2",
    "SOUND_CHANGEEFFECTBY": "ændr effekt %1 med %2",
    "SOUND_CLEAREFFECTS": "fjern lydeffekter",
    "SOUND_EFFECTS_PITCH": "tonehøjde",
    "SOUND_EFFECTS_PAN": "balance venstre/højre",
    "SOUND_CHANGEVOLUMEBY": "ændr lydstyrke med %1",
    "SOUND_SETVOLUMETO": "sæt lydstyrke til %1%",
    "SOUND_VOLUME": "lydstyrke",
    "CATEGORY_MOTION": "Bevægelse",
    "CATEGORY_LOOKS": "Udseende",
    "CATEGORY_SOUND": "Lyd",
    "CATEGORY_EVENTS": "Hændelser",
    "CATEGORY_CONTROL": "Kontrol",
    "CATEGORY_SENSING": "Registrering",
    "CATEGORY_OPERATORS": "Operatorer",
    "CATEGORY_VARIABLES": "Variabler",
    "CATEGORY_MYBLOCKS": "Mine brikker",
    "DUPLICATE": "Kopiér",
    "DELETE": "Slet",
    "ADD_COMMENT": "Tilføj kommentar",
    "REMOVE_COMMENT": "Slet kommentar",
    "DELETE_BLOCK": "Slet brik",
    "DELETE_X_BLOCKS": "Slet %1 brikker",
    "DELETE_ALL_BLOCKS": "Slet alle %1 brikker?",
    "CLEAN_UP": "Ryd brikkerne op",
    "HELP": "Hjælp",
    "UNDO": "Fortryd",
    "REDO": "Gør om",
    "EDIT_PROCEDURE": "Redigér",
    "SHOW_PROCEDURE_DEFINITION": "Gå til forklaring",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Sig noget...",
    "COLOUR_HUE_LABEL": "Farve",
    "COLOUR_SATURATION_LABEL": "Farvemætning",
    "COLOUR_BRIGHTNESS_LABEL": "Lysstyrke",
    "CHANGE_VALUE_TITLE": "Ændre værdien:",
    "RENAME_VARIABLE": "Omdøb variabel",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Omdøb variabel",
    "NEW_VARIABLE": "Lav en variabel",
    "NEW_VARIABLE_TITLE": "Navn på ny variabel:",
    "VARIABLE_MODAL_TITLE": "Ny variabel",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Lav en brik",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Lav en liste",
    "NEW_LIST_TITLE": "Navn på ny liste:",
    "LIST_MODAL_TITLE": "Ny liste",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Omdøb liste",
    "NEW_BROADCAST_MESSAGE": "Ny besked",
    "NEW_BROADCAST_MESSAGE_TITLE": "Navn på ny besked:",
    "BROADCAST_MODAL_TITLE": "Ny besked",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "besked1"
};

Blockly.ScratchMsgs.locales["de"] =
{
    "CONTROL_FOREVER": "wiederhole fortlaufend",
    "CONTROL_REPEAT": "wiederhole %1 mal",
    "CONTROL_IF": "falls %1, dann",
    "CONTROL_ELSE": "sonst",
    "CONTROL_STOP": "stoppe",
    "CONTROL_STOP_ALL": "alles",
    "CONTROL_STOP_THIS": "dieses Skript",
    "CONTROL_STOP_OTHER": "andere Skripte der Figur",
    "CONTROL_WAIT": "warte %1 Sekunden",
    "CONTROL_WAITUNTIL": "warte bis %1",
    "CONTROL_REPEATUNTIL": "wiederhole bis %1",
    "CONTROL_WHILE": "wiederhole solange %1",
    "CONTROL_FOREACH": "wiederhole für jedes %1 in %2",
    "CONTROL_STARTASCLONE": "Wenn ich als Klon entstehe",
    "CONTROL_CREATECLONEOF": "erzeuge Klon von %1",
    "CONTROL_CREATECLONEOF_MYSELF": "mir selbst",
    "CONTROL_DELETETHISCLONE": "lösche diesen Klon",
    "CONTROL_COUNTER": "Zähler",
    "CONTROL_INCRCOUNTER": "erhöhe Zähler",
    "CONTROL_CLEARCOUNTER": "lösche Zähler",
    "CONTROL_ALLATONCE": "Alle gleichzeitig",
    "DATA_SETVARIABLETO": "setze %1 auf %2",
    "DATA_CHANGEVARIABLEBY": "ändere %1 um %2",
    "DATA_SHOWVARIABLE": "zeige Variable %1",
    "DATA_HIDEVARIABLE": "verstecke Variable %1",
    "DATA_ADDTOLIST": "füge %1 zu %2 hinzu",
    "DATA_DELETEOFLIST": "lösche %1 von %2",
    "DATA_INSERTATLIST": "füge %1 an %2 von %3 ein",
    "DATA_REPLACEITEMOFLIST": "ersetze Element %1 von %2 durch %3",
    "DATA_ITEMOFLIST": "Element %1 von %2",
    "DATA_LENGTHOFLIST": "Länge von %1",
    "DATA_LISTCONTAINSITEM": "%1 enthält %2?",
    "DATA_SHOWLIST": "zeige Liste %1",
    "DATA_HIDELIST": "verstecke Liste %1",
    "DATA_INDEX_ALL": "alles",
    "DATA_INDEX_LAST": "letztes",
    "DATA_INDEX_RANDOM": "zufälliges",
    "EVENT_WHENFLAGCLICKED": "Wenn %1 angeklickt",
    "EVENT_WHENTHISSPRITECLICKED": "Wenn diese Figur angeklickt",
    "EVENT_WHENSTAGECLICKED": "Wenn Bühne angeklickt",
    "EVENT_WHENTOUCHINGOBJECT": "Wenn diese Figur %1 berührt",
    "EVENT_WHENBROADCASTRECEIVED": "Wenn ich %1 empfange",
    "EVENT_WHENBACKDROPSWITCHESTO": "Wenn das Bühnenbild zu %1 wechselt",
    "EVENT_WHENGREATERTHAN": "Wenn %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "Stoppuhr",
    "EVENT_BROADCAST": "sende %1 an alle",
    "EVENT_BROADCASTANDWAIT": "sende %1 an alle und warte",
    "EVENT_WHENKEYPRESSED": "Wenn Taste %1 gedrückt",
    "EVENT_WHENKEYPRESSED_SPACE": "Leertaste",
    "EVENT_WHENKEYPRESSED_LEFT": "Pfeil nach links",
    "EVENT_WHENKEYPRESSED_RIGHT": "Pfeil nach rechts",
    "EVENT_WHENKEYPRESSED_DOWN": "Pfeil nach unten",
    "EVENT_WHENKEYPRESSED_UP": "Pfeil nach oben",
    "EVENT_WHENKEYPRESSED_ANY": "beliebiges",
    "LOOKS_SAYFORSECS": "sage %1 für %2 Sekunden",
    "LOOKS_SAY": "sage %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "denke %1 für %2 Sekunden",
    "LOOKS_THINK": "denke %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "zeige dich",
    "LOOKS_HIDE": "verstecke dich",
    "LOOKS_HIDEALLSPRITES": "Alle Figuren verbergen",
    "LOOKS_EFFECT_COLOR": "Farbe",
    "LOOKS_EFFECT_FISHEYE": "Fischauge",
    "LOOKS_EFFECT_WHIRL": "Wirbel",
    "LOOKS_EFFECT_PIXELATE": "Pixel",
    "LOOKS_EFFECT_MOSAIC": "Mosaik",
    "LOOKS_EFFECT_BRIGHTNESS": "Helligkeit",
    "LOOKS_EFFECT_GHOST": "Durchsichtigkeit",
    "LOOKS_CHANGEEFFECTBY": "ändere Effekt %1 um %2",
    "LOOKS_SETEFFECTTO": "setze Effekt %1 auf %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "schalte Grafikeffekte aus",
    "LOOKS_CHANGESIZEBY": "ändere Größe um %1",
    "LOOKS_SETSIZETO": "setze Größe auf %1",
    "LOOKS_SIZE": "Größe",
    "LOOKS_CHANGESTRETCHBY": "ändere Dehnung um %1",
    "LOOKS_SETSTRETCHTO": "setze Dehnung auf %1 %",
    "LOOKS_SWITCHCOSTUMETO": "wechsle zu Kostüm %1",
    "LOOKS_NEXTCOSTUME": "nächstes Kostüm",
    "LOOKS_SWITCHBACKDROPTO": "wechsle zu Bühnenbild %1",
    "LOOKS_GOTOFRONTBACK": "gehe zu %1 Ebene",
    "LOOKS_GOTOFRONTBACK_FRONT": "vorderster",
    "LOOKS_GOTOFRONTBACK_BACK": "hinterster",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "gehe %2 Ebenen %1",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "nach vorne",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "nach hinten",
    "LOOKS_BACKDROPNUMBERNAME": "Bühnenbild %1",
    "LOOKS_COSTUMENUMBERNAME": "Kostüm %1",
    "LOOKS_NUMBERNAME_NUMBER": "Nummer",
    "LOOKS_NUMBERNAME_NAME": "Name",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "wechsle zu Bühnenbild %1 und warte",
    "LOOKS_NEXTBACKDROP": "nächstes Bühnenbild",
    "LOOKS_PREVIOUSBACKDROP": "vorheriges Bühnenbild",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "gehe %1 er Schritt",
    "MOTION_TURNLEFT": "drehe dich %1 um %2 Grad",
    "MOTION_TURNRIGHT": "drehe dich %1 um %2 Grad",
    "MOTION_POINTINDIRECTION": "setze Richtung auf %1 Grad",
    "MOTION_POINTTOWARDS": "drehe dich zu %1",
    "MOTION_POINTTOWARDS_POINTER": "Mauszeiger",
    "MOTION_GOTO": "gehe zu %1",
    "MOTION_GOTO_POINTER": "Mauszeiger",
    "MOTION_GOTO_RANDOM": "Zufallsposition",
    "MOTION_GOTOXY": "gehe zu x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "gleite %1 Sek. zu x: %2 y: %3",
    "MOTION_GLIDETO": "gleite %1 Sek. zu %2",
    "MOTION_GLIDETO_POINTER": "Mauszeiger",
    "MOTION_GLIDETO_RANDOM": "Zufallsposition",
    "MOTION_CHANGEXBY": "ändere x um %1",
    "MOTION_SETX": "setze x auf %1",
    "MOTION_CHANGEYBY": "ändere y um %1",
    "MOTION_SETY": "setze y auf %1",
    "MOTION_IFONEDGEBOUNCE": "pralle vom Rand ab",
    "MOTION_SETROTATIONSTYLE": "setze Drehtyp auf %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "links-rechts",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "nicht drehen",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "rundherum",
    "MOTION_XPOSITION": "x-Position",
    "MOTION_YPOSITION": "y-Position",
    "MOTION_DIRECTION": "Richtung",
    "MOTION_SCROLLRIGHT": "%1 nach rechts bewegen",
    "MOTION_SCROLLUP": "%1 nach oben bewegen",
    "MOTION_ALIGNSCENE": "Szene ausrichten %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "unten links",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "unten rechts",
    "MOTION_ALIGNSCENE_MIDDLE": "Mitte",
    "MOTION_ALIGNSCENE_TOPLEFT": "oben links",
    "MOTION_ALIGNSCENE_TOPRIGHT": "oben rechts",
    "MOTION_XSCROLL": "x-Bewegung",
    "MOTION_YSCROLL": "y-Bewegung",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "Zufallszahl von %1 bis %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 und %2",
    "OPERATORS_OR": "%1 oder %2",
    "OPERATORS_NOT": "nicht %1",
    "OPERATORS_JOIN": "verbinde %1 und %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "Zeichen %1 von %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "Länge von %1",
    "OPERATORS_CONTAINS": "%1 enthält %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "%1 gerundet",
    "OPERATORS_MATHOP": "%1 von %2",
    "OPERATORS_MATHOP_ABS": "Betrag",
    "OPERATORS_MATHOP_FLOOR": "abrunden",
    "OPERATORS_MATHOP_CEILING": "aufrunden",
    "OPERATORS_MATHOP_SQRT": "Wurzel",
    "OPERATORS_MATHOP_SIN": "Sinus",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e^",
    "OPERATORS_MATHOP_10EXP": "10^",
    "PROCEDURES_DEFINITION": "definiere %1",
    "SENSING_TOUCHINGOBJECT": "wird %1 berührt?",
    "SENSING_TOUCHINGOBJECT_POINTER": "Mauszeiger",
    "SENSING_TOUCHINGOBJECT_EDGE": "Rand",
    "SENSING_TOUCHINGCOLOR": "wird Farbe %1 berührt?",
    "SENSING_COLORISTOUCHINGCOLOR": "Farbe %1 berührt %2?",
    "SENSING_DISTANCETO": "Entfernung von %1",
    "SENSING_DISTANCETO_POINTER": "Mauszeiger",
    "SENSING_ASKANDWAIT": "frage %1 und warte",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "Antwort",
    "SENSING_KEYPRESSED": "Taste %1 gedrückt?",
    "SENSING_MOUSEDOWN": "Maustaste gedrückt?",
    "SENSING_MOUSEX": "Maus x-Position",
    "SENSING_MOUSEY": "Maus y-Position",
    "SENSING_SETDRAGMODE": "setze Ziehbarkeit auf %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "ziehbar",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "nicht ziehbar",
    "SENSING_LOUDNESS": "Lautstärke",
    "SENSING_LOUD": "laut?",
    "SENSING_TIMER": "Stoppuhr",
    "SENSING_RESETTIMER": "setze Stoppuhr zurück",
    "SENSING_OF": "%1 von %2",
    "SENSING_OF_XPOSITION": "x-Position",
    "SENSING_OF_YPOSITION": "y-Position",
    "SENSING_OF_DIRECTION": "Richtung",
    "SENSING_OF_COSTUMENUMBER": "Kostümnummer",
    "SENSING_OF_COSTUMENAME": "Kostümname",
    "SENSING_OF_SIZE": "Größe",
    "SENSING_OF_VOLUME": "Lautstärke",
    "SENSING_OF_BACKDROPNUMBER": "Bühnenbildnummer",
    "SENSING_OF_BACKDROPNAME": "Bühnenbildname",
    "SENSING_OF_STAGE": "Bühne",
    "SENSING_CURRENT": "%1 im Moment",
    "SENSING_CURRENT_YEAR": "Jahr",
    "SENSING_CURRENT_MONTH": "Monat",
    "SENSING_CURRENT_DATE": "Datum",
    "SENSING_CURRENT_DAYOFWEEK": "Wochentag",
    "SENSING_CURRENT_HOUR": "Stunde",
    "SENSING_CURRENT_MINUTE": "Minute",
    "SENSING_CURRENT_SECOND": "Sekunde",
    "SENSING_DAYSSINCE2000": "Tage seit 2000",
    "SENSING_USERNAME": "Benutzername",
    "SENSING_USERID": "Benutzer-ID",
    "SOUND_PLAY": "spiele Klang %1",
    "SOUND_PLAYUNTILDONE": "spiele Klang %1 ganz",
    "SOUND_STOPALLSOUNDS": "stoppe alle Klänge",
    "SOUND_SETEFFECTO": "setze Effekt %1 auf %2",
    "SOUND_CHANGEEFFECTBY": "ändere Effekt %1 um %2",
    "SOUND_CLEAREFFECTS": "schalte Klangeffekte aus",
    "SOUND_EFFECTS_PITCH": "Höhe",
    "SOUND_EFFECTS_PAN": "aussteuern links/rechts",
    "SOUND_CHANGEVOLUMEBY": "ändere Lautstärke um %1",
    "SOUND_SETVOLUMETO": "setze Lautstärke auf %1%",
    "SOUND_VOLUME": "Lautstärke",
    "CATEGORY_MOTION": "Bewegung",
    "CATEGORY_LOOKS": "Aussehen",
    "CATEGORY_SOUND": "Klang",
    "CATEGORY_EVENTS": "Ereignisse",
    "CATEGORY_CONTROL": "Steuerung",
    "CATEGORY_SENSING": "Fühlen",
    "CATEGORY_OPERATORS": "Operatoren",
    "CATEGORY_VARIABLES": "Variablen",
    "CATEGORY_MYBLOCKS": "Meine Blöcke",
    "DUPLICATE": "Duplizieren",
    "DELETE": "Löschen",
    "ADD_COMMENT": "Kommentar hinzufügen",
    "REMOVE_COMMENT": "Kommentar entfernen",
    "DELETE_BLOCK": "Lösche Block",
    "DELETE_X_BLOCKS": "Lösche %1 Blöcke",
    "DELETE_ALL_BLOCKS": "Alle %1 Blöcke löschen?",
    "CLEAN_UP": "Blöcke aufräumen",
    "HELP": "Hilfe",
    "UNDO": "Rückgängig",
    "REDO": "Wiederherstellen",
    "EDIT_PROCEDURE": "Bearbeiten",
    "SHOW_PROCEDURE_DEFINITION": "Gehe zur Definition",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Sag etwas...",
    "COLOUR_HUE_LABEL": "Farbe",
    "COLOUR_SATURATION_LABEL": "Sättigung",
    "COLOUR_BRIGHTNESS_LABEL": "Helligkeit",
    "CHANGE_VALUE_TITLE": "Ändere Wert",
    "RENAME_VARIABLE": "Variable umbenennen",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Variable umbenennen",
    "NEW_VARIABLE": "Neue Variable",
    "NEW_VARIABLE_TITLE": "Neue Variable Name:",
    "VARIABLE_MODAL_TITLE": "Neue Variable",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Neuer Block",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Neue Liste",
    "NEW_LIST_TITLE": "Neuer Listen Name:",
    "LIST_MODAL_TITLE": "Neue Liste",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Liste umbenennen",
    "NEW_BROADCAST_MESSAGE": "Neue Nachricht",
    "NEW_BROADCAST_MESSAGE_TITLE": "Neue Nachricht name:",
    "BROADCAST_MODAL_TITLE": "Neue Nachricht",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "Nachricht1"
};

Blockly.ScratchMsgs.locales["el"] =
{
    "CONTROL_FOREVER": "για πάντα",
    "CONTROL_REPEAT": "επανάλαβε %1",
    "CONTROL_IF": "εάν %1 τότε",
    "CONTROL_ELSE": "αλλιώς",
    "CONTROL_STOP": "σταμάτησε",
    "CONTROL_STOP_ALL": "όλα",
    "CONTROL_STOP_THIS": "αυτό το σενάριο",
    "CONTROL_STOP_OTHER": "άλλα σενάρια σε αυτό το αντικείμενο",
    "CONTROL_WAIT": "περίμενε %1 δευτερόλεπτα",
    "CONTROL_WAITUNTIL": "περίμενε ώσπου %1",
    "CONTROL_REPEATUNTIL": "επανάλαβε ώσπου %1",
    "CONTROL_WHILE": "όσο %1",
    "CONTROL_FOREACH": "για κάθε %1 στο %2",
    "CONTROL_STARTASCLONE": "όταν ξεκινήσει ο κλώνος",
    "CONTROL_CREATECLONEOF": "δημιούργησε έναν κλώνο του %1",
    "CONTROL_CREATECLONEOF_MYSELF": "εαυτού μου",
    "CONTROL_DELETETHISCLONE": "διάγραψε αυτόν τον κλώνο",
    "CONTROL_COUNTER": "μετρητής",
    "CONTROL_INCRCOUNTER": "μετρητής αύξησης",
    "CONTROL_CLEARCOUNTER": "καθαρισμός μετρητή",
    "CONTROL_ALLATONCE": "all at once",
    "DATA_SETVARIABLETO": "όρισε το %1 σε %2",
    "DATA_CHANGEVARIABLEBY": "άλλαξε το %1 κατά %2",
    "DATA_SHOWVARIABLE": "εμφάνισε τη μεταβλητή %1",
    "DATA_HIDEVARIABLE": "απόκρυψε τη μεταβλητή %1",
    "DATA_ADDTOLIST": "πρόσθεσε το %1 στη λίστα %2",
    "DATA_DELETEOFLIST": "διάγραψε το %1 από τη λίστα %2",
    "DATA_INSERTATLIST": "βάλε το %1 στη θέση %2 της λίστας %3",
    "DATA_REPLACEITEMOFLIST": "αντικατάστησε το στοιχείο %1 της λίστας %2 με %3",
    "DATA_ITEMOFLIST": "το στοιχείο %1 της λίστας %2",
    "DATA_LENGTHOFLIST": "το μήκος της λίστας %1",
    "DATA_LISTCONTAINSITEM": "η λίστα %1 περιέχει %2",
    "DATA_SHOWLIST": "εμφάνισε την λίστα %1",
    "DATA_HIDELIST": "απόκρυψε τη λίστα %1",
    "DATA_INDEX_ALL": "όλα",
    "DATA_INDEX_LAST": "τελευταίο",
    "DATA_INDEX_RANDOM": "τυχαία επιλογή",
    "EVENT_WHENFLAGCLICKED": "όταν γίνει κλικ στο αντικείμενο %1",
    "EVENT_WHENTHISSPRITECLICKED": "όταν σε αυτό το αντικείμενο γίνει κλικ",
    "EVENT_WHENSTAGECLICKED": "όταν γίνει κλικ στο Σκηνικό",
    "EVENT_WHENTOUCHINGOBJECT": "when this sprite touches %1",
    "EVENT_WHENBROADCASTRECEIVED": "όταν λάβω %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "όταν το υπόβαθρο αλλάξει σε %1",
    "EVENT_WHENGREATERTHAN": "όταν %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "χρονομέτρηση",
    "EVENT_BROADCAST": "μετάδωσε %1",
    "EVENT_BROADCASTANDWAIT": "μετάδωσε %1 και περίμενε",
    "EVENT_WHENKEYPRESSED": "όταν το πλήκτρο %1 πατηθεί",
    "EVENT_WHENKEYPRESSED_SPACE": "διάστημα",
    "EVENT_WHENKEYPRESSED_LEFT": "αριστερό βέλος",
    "EVENT_WHENKEYPRESSED_RIGHT": "δεξί βέλος",
    "EVENT_WHENKEYPRESSED_DOWN": "κάτω βέλος",
    "EVENT_WHENKEYPRESSED_UP": "πάνω βέλος",
    "EVENT_WHENKEYPRESSED_ANY": "οποιοδήποτε",
    "LOOKS_SAYFORSECS": "πες %1 για %2 δευτερόλεπτα",
    "LOOKS_SAY": "πες %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "σκέψου %1 για %2 δευτερόλεπτα",
    "LOOKS_THINK": "σκέψου %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "εμφανίσου",
    "LOOKS_HIDE": "εξαφανίσου",
    "LOOKS_HIDEALLSPRITES": "hide all sprites",
    "LOOKS_EFFECT_COLOR": "χρώματος",
    "LOOKS_EFFECT_FISHEYE": "κυρτότητας",
    "LOOKS_EFFECT_WHIRL": "δίνης",
    "LOOKS_EFFECT_PIXELATE": "εικονοστοιχειοποίησης",
    "LOOKS_EFFECT_MOSAIC": "ψηφιδωτού",
    "LOOKS_EFFECT_BRIGHTNESS": "φωτεινότητας",
    "LOOKS_EFFECT_GHOST": "εξαφάνισης",
    "LOOKS_CHANGEEFFECTBY": "άλλαξε το εφέ %1 κατά %2",
    "LOOKS_SETEFFECTTO": "όρισε το εφέ %1 σε %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "επανάφερε τα γραφικά εφέ",
    "LOOKS_CHANGESIZEBY": "άλλαξε το μέγεθος του αντικειμένου κατά %1",
    "LOOKS_SETSIZETO": "όρισε το μέγεθος σε %1 %",
    "LOOKS_SIZE": "μέγεθος",
    "LOOKS_CHANGESTRETCHBY": "change stretch by %1",
    "LOOKS_SETSTRETCHTO": "set stretch to %1 %",
    "LOOKS_SWITCHCOSTUMETO": "άλλαξε την ενδυμασία σε %1",
    "LOOKS_NEXTCOSTUME": "άλλαξε στην επόμενη ενδυμασία",
    "LOOKS_SWITCHBACKDROPTO": "άλλαξε το υπόβαθρο σε %1",
    "LOOKS_GOTOFRONTBACK": "πήγαινε στην %1 στρώση",
    "LOOKS_GOTOFRONTBACK_FRONT": "μπροστινή",
    "LOOKS_GOTOFRONTBACK_BACK": "πισινή",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "πήγαινε %1 %2 στρώσεις",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "μπροστά",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "πίσω",
    "LOOKS_BACKDROPNUMBERNAME": "υπόβαθρο %1",
    "LOOKS_COSTUMENUMBERNAME": "ενδυμασία %1",
    "LOOKS_NUMBERNAME_NUMBER": "νούμερο",
    "LOOKS_NUMBERNAME_NAME": "όνομα",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "άλλαξε το υπόβαθρο σε %1 και περίμενε",
    "LOOKS_NEXTBACKDROP": "άλλαξε στο επόμενο υπόβαθρο",
    "LOOKS_PREVIOUSBACKDROP": "προηγούμενο υπόβαθρο",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "κινήσου %1 βήματα",
    "MOTION_TURNLEFT": "στρίψε %1 %2 μοίρες",
    "MOTION_TURNRIGHT": "στρίψε %1 %2 μοίρες",
    "MOTION_POINTINDIRECTION": "στρίψε προς την κατεύθυνση %1",
    "MOTION_POINTTOWARDS": "στρίψε προς το %1",
    "MOTION_POINTTOWARDS_POINTER": "δείκτη του ποντικιού",
    "MOTION_GOTO": "πήγαινε %1",
    "MOTION_GOTO_POINTER": "στο δείκτη του ποντικιού",
    "MOTION_GOTO_RANDOM": "σε μία τυχαία θέση",
    "MOTION_GOTOXY": "πήγαινε στη θέση x: %1 και y: %2",
    "MOTION_GLIDESECSTOXY": "ολίσθησε για %1 δευτερόλεπτα προς τη θέση x: %2 και y: %3",
    "MOTION_GLIDETO": "ολίσθησε για %1 δευτερόλεπτα προς %2",
    "MOTION_GLIDETO_POINTER": "το δείκτη του ποντικιού",
    "MOTION_GLIDETO_RANDOM": "μία τυχαία θέση",
    "MOTION_CHANGEXBY": "άλλαξε το x κατά %1",
    "MOTION_SETX": "όρισε το x ίσο με %1",
    "MOTION_CHANGEYBY": "άλλαξε το y κατά %1",
    "MOTION_SETY": "όρισε το y ίσο με %1",
    "MOTION_IFONEDGEBOUNCE": "εάν βρίσκεσαι στα όρια, αναπήδησε",
    "MOTION_SETROTATIONSTYLE": "όρισε τον τρόπο περιστροφής %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "οριζόντιο",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "να μην γίνεται περιστροφή",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "ελεύθερο",
    "MOTION_XPOSITION": "θέση x",
    "MOTION_YPOSITION": "θέση y",
    "MOTION_DIRECTION": "κατεύθυνση",
    "MOTION_SCROLLRIGHT": "κύλιση δεξιά %1",
    "MOTION_SCROLLUP": "κύλιση πάνω %1",
    "MOTION_ALIGNSCENE": "align scene %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "κάτω-αριστερά",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "κάτω-δεξιά",
    "MOTION_ALIGNSCENE_MIDDLE": "μέσο",
    "MOTION_ALIGNSCENE_TOPLEFT": "πάνω-αριστερά",
    "MOTION_ALIGNSCENE_TOPRIGHT": "πάνω-δεξιά",
    "MOTION_XSCROLL": "κύλιση χ",
    "MOTION_YSCROLL": "κύλιση ψ",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "επίλεξε έναν τυχαίο αριθμό από το %1 μέχρι το %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 και %2",
    "OPERATORS_OR": "%1 ή %2",
    "OPERATORS_NOT": "δεν ισχύει ότι %1",
    "OPERATORS_JOIN": "ένωσε το %1 και το %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "το %1 ° γράμμα του %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "το μήκος του %1",
    "OPERATORS_CONTAINS": "το %1 περιλαμβάνει το %2;",
    "OPERATORS_MOD": "υπόλοιπο ακέραιας διαίρεσης %1 δια %2",
    "OPERATORS_ROUND": "στρογγυλοποίησε το %1",
    "OPERATORS_MATHOP": "%1 από %2",
    "OPERATORS_MATHOP_ABS": "απόλυτη τιμή",
    "OPERATORS_MATHOP_FLOOR": "στρογγυλοποίηση προς τα κάτω",
    "OPERATORS_MATHOP_CEILING": "στρογγυλοποίηση προς τα πάνω",
    "OPERATORS_MATHOP_SQRT": "τετραγωνική ρίζα",
    "OPERATORS_MATHOP_SIN": "ημίτονο",
    "OPERATORS_MATHOP_COS": "συνημίτονο",
    "OPERATORS_MATHOP_TAN": "εφαπτομένη",
    "OPERATORS_MATHOP_ASIN": "αντίστροφο ημίτονο",
    "OPERATORS_MATHOP_ACOS": "αντίστροφο συνημίτονο",
    "OPERATORS_MATHOP_ATAN": "αντίστροφη εφαπτομένη",
    "OPERATORS_MATHOP_LN": "φυσικός λογάριθμος",
    "OPERATORS_MATHOP_LOG": "δεκαδικός λογάριθμος",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "ορισμός του %1",
    "SENSING_TOUCHINGOBJECT": "αγγίζει %1;",
    "SENSING_TOUCHINGOBJECT_POINTER": "το δείκτη του ποντικιού",
    "SENSING_TOUCHINGOBJECT_EDGE": "τα όρια",
    "SENSING_TOUCHINGCOLOR": "αγγίζει το χρώμα %1;",
    "SENSING_COLORISTOUCHINGCOLOR": "το χρώμα %1 αγγίζει το χρώμα %2;",
    "SENSING_DISTANCETO": "η απόσταση μέχρι το %1",
    "SENSING_DISTANCETO_POINTER": "δείκτη του ποντικιού",
    "SENSING_ASKANDWAIT": "ρώτησε %1 και περίμενε",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "απάντηση",
    "SENSING_KEYPRESSED": "πατήθηκε το πλήκτρο %1",
    "SENSING_MOUSEDOWN": "πατήθηκε το ποντίκι;",
    "SENSING_MOUSEX": "θέση x του ποντικιού",
    "SENSING_MOUSEY": "θέση y του ποντικιού",
    "SENSING_SETDRAGMODE": "όρισε τον τρόπο συρσίματος σε %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "συρόμενο",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "μη συρόμενο",
    "SENSING_LOUDNESS": "ένταση",
    "SENSING_LOUD": "loud?",
    "SENSING_TIMER": "χρονομέτρηση",
    "SENSING_RESETTIMER": "μηδένησε τη χρονομέτρηση",
    "SENSING_OF": "%1 από %2",
    "SENSING_OF_XPOSITION": "θέση x",
    "SENSING_OF_YPOSITION": "θέση y",
    "SENSING_OF_DIRECTION": "κατεύθυνση",
    "SENSING_OF_COSTUMENUMBER": "ενδυμασία #",
    "SENSING_OF_COSTUMENAME": "όνομα ενδυμασίας",
    "SENSING_OF_SIZE": "μέγεθος",
    "SENSING_OF_VOLUME": "ένταση",
    "SENSING_OF_BACKDROPNUMBER": "υπόβαθρο #",
    "SENSING_OF_BACKDROPNAME": "όνομα υποβάθρου",
    "SENSING_OF_STAGE": "Σκηνικό",
    "SENSING_CURRENT": "τρέχων %1",
    "SENSING_CURRENT_YEAR": "χρόνος",
    "SENSING_CURRENT_MONTH": "μήνας",
    "SENSING_CURRENT_DATE": "ημερομηνία",
    "SENSING_CURRENT_DAYOFWEEK": "μέρα της εβδομάδας",
    "SENSING_CURRENT_HOUR": "ώρα",
    "SENSING_CURRENT_MINUTE": "λεπτό",
    "SENSING_CURRENT_SECOND": "δευτερόλεπτο",
    "SENSING_DAYSSINCE2000": "ημέρες από το 2000",
    "SENSING_USERNAME": "όνομα χρήστη",
    "SENSING_USERID": "user id",
    "SOUND_PLAY": "παίξε τον ήχο %1",
    "SOUND_PLAYUNTILDONE": "παίξε τον ήχο %1 μέχρι το τέλος",
    "SOUND_STOPALLSOUNDS": "σταμάτησε όλους τους ήχους",
    "SOUND_SETEFFECTO": "όρισε το εφέ %1 σε %2",
    "SOUND_CHANGEEFFECTBY": "άλλαξε το εφέ %1 κατά %2",
    "SOUND_CLEAREFFECTS": "επανάφερε τα ηχητικά εφέ",
    "SOUND_EFFECTS_PITCH": "τόνος",
    "SOUND_EFFECTS_PAN": "μετατόπιση αριστερά/δεξιά",
    "SOUND_CHANGEVOLUMEBY": "άλλαξε την ένταση κατά %1",
    "SOUND_SETVOLUMETO": "όρισε την ένταση σε %1%",
    "SOUND_VOLUME": "ένταση",
    "CATEGORY_MOTION": "Κινήσεις",
    "CATEGORY_LOOKS": "Όψεις",
    "CATEGORY_SOUND": "Ήχος",
    "CATEGORY_EVENTS": "Συμβάντα",
    "CATEGORY_CONTROL": "Έλεγχος",
    "CATEGORY_SENSING": "Αισθητήρες",
    "CATEGORY_OPERATORS": "Τελεστές",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "My Blocks",
    "DUPLICATE": "Διπλασιασμός ",
    "DELETE": "Διαγραφή",
    "ADD_COMMENT": "Προσθήκη σχολίου",
    "REMOVE_COMMENT": "Αφαίρεση σχολίου",
    "DELETE_BLOCK": "Delete Block",
    "DELETE_X_BLOCKS": "Delete %1 Blocks",
    "DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
    "CLEAN_UP": "Clean up Blocks",
    "HELP": "Βοήθεια",
    "UNDO": "Αναίρεση",
    "REDO": "Ακύρωση αναίρεσης",
    "EDIT_PROCEDURE": "Επεξεργασία",
    "SHOW_PROCEDURE_DEFINITION": "Μετάβαση σε όρισμό",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Πες κάτι...",
    "COLOUR_HUE_LABEL": "Χρώμα",
    "COLOUR_SATURATION_LABEL": "Κορεσμός",
    "COLOUR_BRIGHTNESS_LABEL": "Φωτεινότητα",
    "CHANGE_VALUE_TITLE": "Αλλαγή τιμής:",
    "RENAME_VARIABLE": "Μετονομασία μεταβλητής",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Μετονομασία μεταβλητής",
    "NEW_VARIABLE": "Δημιουργία Μεταβλητής",
    "NEW_VARIABLE_TITLE": "Νέο όνομα μεταβλητής:",
    "VARIABLE_MODAL_TITLE": "Νέα Μεταβλητή",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "δημιουργήστε ένα τετράγωνο εντολών",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Δημιουργία Λίστας",
    "NEW_LIST_TITLE": "Νέο όνομα λίστας:",
    "LIST_MODAL_TITLE": "Νέα Λίστα",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Μετονομασία λίστας",
    "NEW_BROADCAST_MESSAGE": "Νέο μήνυμα",
    "NEW_BROADCAST_MESSAGE_TITLE": "Νέο όνομα μηνύματος:",
    "BROADCAST_MODAL_TITLE": "Νέο μήνυμα",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "μήνυμα1"
};

Blockly.ScratchMsgs.locales["en"] =
{
    "CONTROL_FOREVER": "forever",
    "CONTROL_REPEAT": "repeat %1",
    "CONTROL_IF": "if %1 then",
    "CONTROL_ELSE": "else",
    "CONTROL_STOP": "stop",
    "CONTROL_STOP_ALL": "all",
    "CONTROL_STOP_THIS": "this script",
    "CONTROL_STOP_OTHER": "other scripts in sprite",
    "CONTROL_WAIT": "wait %1 seconds",
    "CONTROL_WAITUNTIL": "wait until %1",
    "CONTROL_REPEATUNTIL": "repeat until %1",
    "CONTROL_WHILE": "while %1",
    "CONTROL_FOREACH": "for each %1 in %2",
    "CONTROL_STARTASCLONE": "when I start as a clone",
    "CONTROL_CREATECLONEOF": "create clone of %1",
    "CONTROL_CREATECLONEOF_MYSELF": "myself",
    "CONTROL_DELETETHISCLONE": "delete this clone",
    "CONTROL_COUNTER": "counter",
    "CONTROL_INCRCOUNTER": "increment counter",
    "CONTROL_CLEARCOUNTER": "clear counter",
    "CONTROL_ALLATONCE": "all at once",
    "DATA_SETVARIABLETO": "set %1 to %2",
    "DATA_CHANGEVARIABLEBY": "change %1 by %2",
    "DATA_SHOWVARIABLE": "show variable %1",
    "DATA_HIDEVARIABLE": "hide variable %1",
    "DATA_ADDTOLIST": "add %1 to %2",
    "DATA_DELETEOFLIST": "delete %1 of %2",
    "DATA_INSERTATLIST": "insert %1 at %2 of %3",
    "DATA_REPLACEITEMOFLIST": "replace item %1 of %2 with %3",
    "DATA_ITEMOFLIST": "item %1 of %2",
    "DATA_LENGTHOFLIST": "length of %1",
    "DATA_LISTCONTAINSITEM": "%1 contains %2?",
    "DATA_SHOWLIST": "show list %1",
    "DATA_HIDELIST": "hide list %1",
    "DATA_INDEX_ALL": "all",
    "DATA_INDEX_LAST": "last",
    "DATA_INDEX_RANDOM": "random",
    "EVENT_WHENFLAGCLICKED": "when %1 clicked",
    "EVENT_WHENTHISSPRITECLICKED": "when this sprite clicked",
    "EVENT_WHENSTAGECLICKED": "when stage clicked",
    "EVENT_WHENTOUCHINGOBJECT": "when this sprite touches %1",
    "EVENT_WHENBROADCASTRECEIVED": "when I receive %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "when backdrop switches to %1",
    "EVENT_WHENGREATERTHAN": "when %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "timer",
    "EVENT_BROADCAST": "broadcast %1",
    "EVENT_BROADCASTANDWAIT": "broadcast %1 and wait",
    "EVENT_WHENKEYPRESSED": "when %1 key pressed",
    "EVENT_WHENKEYPRESSED_SPACE": "space",
    "EVENT_WHENKEYPRESSED_LEFT": "left arrow",
    "EVENT_WHENKEYPRESSED_RIGHT": "right arrow",
    "EVENT_WHENKEYPRESSED_DOWN": "down arrow",
    "EVENT_WHENKEYPRESSED_UP": "up arrow",
    "EVENT_WHENKEYPRESSED_ANY": "any",
    "LOOKS_SAYFORSECS": "say %1 for %2 seconds",
    "LOOKS_SAY": "say %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "think %1 for %2 seconds",
    "LOOKS_THINK": "think %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "show",
    "LOOKS_HIDE": "hide",
    "LOOKS_HIDEALLSPRITES": "hide all sprites",
    "LOOKS_EFFECT_COLOR": "color",
    "LOOKS_EFFECT_FISHEYE": "fisheye",
    "LOOKS_EFFECT_WHIRL": "whirl",
    "LOOKS_EFFECT_PIXELATE": "pixelate",
    "LOOKS_EFFECT_MOSAIC": "mosaic",
    "LOOKS_EFFECT_BRIGHTNESS": "brightness",
    "LOOKS_EFFECT_GHOST": "ghost",
    "LOOKS_CHANGEEFFECTBY": "change %1 effect by %2",
    "LOOKS_SETEFFECTTO": "set %1 effect to %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "clear graphic effects",
    "LOOKS_CHANGESIZEBY": "change size by %1",
    "LOOKS_SETSIZETO": "set size to %1 %",
    "LOOKS_SIZE": "size",
    "LOOKS_CHANGESTRETCHBY": "change stretch by %1",
    "LOOKS_SETSTRETCHTO": "set stretch to %1 %",
    "LOOKS_SWITCHCOSTUMETO": "switch costume to %1",
    "LOOKS_NEXTCOSTUME": "next costume",
    "LOOKS_SWITCHBACKDROPTO": "switch backdrop to %1",
    "LOOKS_GOTOFRONTBACK": "go to %1 layer",
    "LOOKS_GOTOFRONTBACK_FRONT": "front",
    "LOOKS_GOTOFRONTBACK_BACK": "back",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "go %1 %2 layers",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "forward",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "backward",
    "LOOKS_BACKDROPNUMBERNAME": "backdrop %1",
    "LOOKS_COSTUMENUMBERNAME": "costume %1",
    "LOOKS_NUMBERNAME_NUMBER": "number",
    "LOOKS_NUMBERNAME_NAME": "name",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "switch backdrop to %1 and wait",
    "LOOKS_NEXTBACKDROP": "next backdrop",
    "LOOKS_PREVIOUSBACKDROP": "previous backdrop",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "move %1 steps",
    "MOTION_TURNLEFT": "turn %1 %2 degrees",
    "MOTION_TURNRIGHT": "turn %1 %2 degrees",
    "MOTION_POINTINDIRECTION": "point in direction %1",
    "MOTION_POINTTOWARDS": "point towards %1",
    "MOTION_POINTTOWARDS_POINTER": "mouse-pointer",
    "MOTION_GOTO": "go to %1",
    "MOTION_GOTO_POINTER": "mouse-pointer",
    "MOTION_GOTO_RANDOM": "random position",
    "MOTION_GOTOXY": "go to x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "glide %1 secs to x: %2 y: %3",
    "MOTION_GLIDETO": "glide %1 secs to %2",
    "MOTION_GLIDETO_POINTER": "mouse-pointer",
    "MOTION_GLIDETO_RANDOM": "random position",
    "MOTION_CHANGEXBY": "change x by %1",
    "MOTION_SETX": "set x to %1",
    "MOTION_CHANGEYBY": "change y by %1",
    "MOTION_SETY": "set y to %1",
    "MOTION_IFONEDGEBOUNCE": "if on edge, bounce",
    "MOTION_SETROTATIONSTYLE": "set rotation style %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "left-right",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "don't rotate",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "all around",
    "MOTION_XPOSITION": "x position",
    "MOTION_YPOSITION": "y position",
    "MOTION_DIRECTION": "direction",
    "MOTION_SCROLLRIGHT": "scroll right %1",
    "MOTION_SCROLLUP": "scroll up %1",
    "MOTION_ALIGNSCENE": "align scene %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "bottom-left",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "bottom-right",
    "MOTION_ALIGNSCENE_MIDDLE": "middle",
    "MOTION_ALIGNSCENE_TOPLEFT": "top-left",
    "MOTION_ALIGNSCENE_TOPRIGHT": "top-right",
    "MOTION_XSCROLL": "x scroll",
    "MOTION_YSCROLL": "y scroll",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "pick random %1 to %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 and %2",
    "OPERATORS_OR": "%1 or %2",
    "OPERATORS_NOT": "not %1",
    "OPERATORS_JOIN": "join %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "letter %1 of %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "length of %1",
    "OPERATORS_CONTAINS": "%1 contains %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "round %1",
    "OPERATORS_MATHOP": "%1 of %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "floor",
    "OPERATORS_MATHOP_CEILING": "ceiling",
    "OPERATORS_MATHOP_SQRT": "sqrt",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "define %1",
    "SENSING_TOUCHINGOBJECT": "touching %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "mouse-pointer",
    "SENSING_TOUCHINGOBJECT_EDGE": "edge",
    "SENSING_TOUCHINGCOLOR": "touching color %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "color %1 is touching %2?",
    "SENSING_DISTANCETO": "distance to %1",
    "SENSING_DISTANCETO_POINTER": "mouse-pointer",
    "SENSING_ASKANDWAIT": "ask %1 and wait",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "answer",
    "SENSING_KEYPRESSED": "key %1 pressed?",
    "SENSING_MOUSEDOWN": "mouse down?",
    "SENSING_MOUSEX": "mouse x",
    "SENSING_MOUSEY": "mouse y",
    "SENSING_SETDRAGMODE": "set drag mode %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "draggable",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "not draggable",
    "SENSING_LOUDNESS": "loudness",
    "SENSING_LOUD": "loud?",
    "SENSING_TIMER": "timer",
    "SENSING_RESETTIMER": "reset timer",
    "SENSING_OF": "%1 of %2",
    "SENSING_OF_XPOSITION": "x position",
    "SENSING_OF_YPOSITION": "y position",
    "SENSING_OF_DIRECTION": "direction",
    "SENSING_OF_COSTUMENUMBER": "costume #",
    "SENSING_OF_COSTUMENAME": "costume name",
    "SENSING_OF_SIZE": "size",
    "SENSING_OF_VOLUME": "volume",
    "SENSING_OF_BACKDROPNUMBER": "backdrop #",
    "SENSING_OF_BACKDROPNAME": "backdrop name",
    "SENSING_OF_STAGE": "Stage",
    "SENSING_CURRENT": "current %1",
    "SENSING_CURRENT_YEAR": "year",
    "SENSING_CURRENT_MONTH": "month",
    "SENSING_CURRENT_DATE": "date",
    "SENSING_CURRENT_DAYOFWEEK": "day of week",
    "SENSING_CURRENT_HOUR": "hour",
    "SENSING_CURRENT_MINUTE": "minute",
    "SENSING_CURRENT_SECOND": "second",
    "SENSING_DAYSSINCE2000": "days since 2000",
    "SENSING_USERNAME": "username",
    "SENSING_USERID": "user id",
    "SOUND_PLAY": "start sound %1",
    "SOUND_PLAYUNTILDONE": "play sound %1 until done",
    "SOUND_STOPALLSOUNDS": "stop all sounds",
    "SOUND_SETEFFECTO": "set %1 effect to %2",
    "SOUND_CHANGEEFFECTBY": "change %1 effect by %2",
    "SOUND_CLEAREFFECTS": "clear sound effects",
    "SOUND_EFFECTS_PITCH": "pitch",
    "SOUND_EFFECTS_PAN": "pan left/right",
    "SOUND_CHANGEVOLUMEBY": "change volume by %1",
    "SOUND_SETVOLUMETO": "set volume to %1%",
    "SOUND_VOLUME": "volume",
    "CATEGORY_MOTION": "Motion",
    "CATEGORY_LOOKS": "Looks",
    "CATEGORY_SOUND": "Sound",
    "CATEGORY_EVENTS": "Events",
    "CATEGORY_CONTROL": "Control",
    "CATEGORY_SENSING": "Sensing",
    "CATEGORY_OPERATORS": "Operators",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "My Blocks",
    "DUPLICATE": "Duplicate",
    "DELETE": "Delete",
    "ADD_COMMENT": "Add Comment",
    "REMOVE_COMMENT": "Remove Comment",
    "DELETE_BLOCK": "Delete Block",
    "DELETE_X_BLOCKS": "Delete %1 Blocks",
    "DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
    "CLEAN_UP": "Clean up Blocks",
    "HELP": "Help",
    "UNDO": "Undo",
    "REDO": "Redo",
    "EDIT_PROCEDURE": "Edit",
    "SHOW_PROCEDURE_DEFINITION": "Go to definition",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Say something...",
    "COLOUR_HUE_LABEL": "Color",
    "COLOUR_SATURATION_LABEL": "Saturation",
    "COLOUR_BRIGHTNESS_LABEL": "Brightness",
    "CHANGE_VALUE_TITLE": "Change value:",
    "RENAME_VARIABLE": "Rename variable",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Rename Variable",
    "NEW_VARIABLE": "Make a Variable",
    "NEW_VARIABLE_TITLE": "New variable name:",
    "VARIABLE_MODAL_TITLE": "New Variable",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Make a Block",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Make a List",
    "NEW_LIST_TITLE": "New list name:",
    "LIST_MODAL_TITLE": "New List",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Rename List",
    "NEW_BROADCAST_MESSAGE": "New message",
    "NEW_BROADCAST_MESSAGE_TITLE": "New message name:",
    "BROADCAST_MODAL_TITLE": "New Message",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "message1"
};

Blockly.ScratchMsgs.locales["es-419"] =
{
    "CONTROL_FOREVER": "por siempre",
    "CONTROL_REPEAT": "repetir %1",
    "CONTROL_IF": "si %1 entonces",
    "CONTROL_ELSE": "si no",
    "CONTROL_STOP": "detener",
    "CONTROL_STOP_ALL": "todos",
    "CONTROL_STOP_THIS": "este programa",
    "CONTROL_STOP_OTHER": "otros programas en el objeto",
    "CONTROL_WAIT": "esperar %1 segundos",
    "CONTROL_WAITUNTIL": "esperar hasta que %1",
    "CONTROL_REPEATUNTIL": "repetir hasta que %1",
    "CONTROL_WHILE": "Mientras %1",
    "CONTROL_FOREACH": "para cada %1 en %2",
    "CONTROL_STARTASCLONE": "al comenzar como clon",
    "CONTROL_CREATECLONEOF": "crear clon de %1",
    "CONTROL_CREATECLONEOF_MYSELF": "mí mismo",
    "CONTROL_DELETETHISCLONE": "borrar este clon",
    "CONTROL_COUNTER": "contador",
    "CONTROL_INCRCOUNTER": "incrementar contador",
    "CONTROL_CLEARCOUNTER": "borrar contador",
    "CONTROL_ALLATONCE": "todos a la vez",
    "DATA_SETVARIABLETO": "establecer %1 a %2",
    "DATA_CHANGEVARIABLEBY": "Cambiar %1 por %2",
    "DATA_SHOWVARIABLE": "mostrar variable %1",
    "DATA_HIDEVARIABLE": "esconder variable %1",
    "DATA_ADDTOLIST": "añadir %1 a %2",
    "DATA_DELETEOFLIST": "borrar %1 de %2",
    "DATA_INSERTATLIST": "insertar %1 en %2 de %3",
    "DATA_REPLACEITEMOFLIST": "reemplazar elemento %1 de %2 con %3",
    "DATA_ITEMOFLIST": "elemento %1 de %2",
    "DATA_LENGTHOFLIST": "longitud de %1",
    "DATA_LISTCONTAINSITEM": "¿%1 contiene %2?",
    "DATA_SHOWLIST": "mostrar lista %1",
    "DATA_HIDELIST": "esconder lista %1",
    "DATA_INDEX_ALL": "todos",
    "DATA_INDEX_LAST": "último",
    "DATA_INDEX_RANDOM": "al azar",
    "EVENT_WHENFLAGCLICKED": "al hacer clic en %1",
    "EVENT_WHENTHISSPRITECLICKED": "al hacer clic en este objeto",
    "EVENT_WHENSTAGECLICKED": "al hacer clic en el escenario",
    "EVENT_WHENTOUCHINGOBJECT": "cuando este objeto toca %1",
    "EVENT_WHENBROADCASTRECEIVED": "al recibir %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "cuando el fondo cambie a %1",
    "EVENT_WHENGREATERTHAN": "cuando %1 sea > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "cronómetro",
    "EVENT_BROADCAST": "enviar %1",
    "EVENT_BROADCASTANDWAIT": "enviar %1 y esperar",
    "EVENT_WHENKEYPRESSED": "al presionar tecla %1",
    "EVENT_WHENKEYPRESSED_SPACE": "Espacio",
    "EVENT_WHENKEYPRESSED_LEFT": "Flecha izquierda",
    "EVENT_WHENKEYPRESSED_RIGHT": "Flecha Derecha",
    "EVENT_WHENKEYPRESSED_DOWN": "Flecha abajo",
    "EVENT_WHENKEYPRESSED_UP": "Flecha arriba",
    "EVENT_WHENKEYPRESSED_ANY": "Cualquiera",
    "LOOKS_SAYFORSECS": "decir %1 por %2 segundos",
    "LOOKS_SAY": "decir %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "pensar %1 por %2 segundos",
    "LOOKS_THINK": "pensar %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "Mostrar",
    "LOOKS_HIDE": "Ocultar",
    "LOOKS_HIDEALLSPRITES": "esconder todos los disfraces",
    "LOOKS_EFFECT_COLOR": "Color",
    "LOOKS_EFFECT_FISHEYE": "ojo de pez",
    "LOOKS_EFFECT_WHIRL": "remolino",
    "LOOKS_EFFECT_PIXELATE": "pixelar",
    "LOOKS_EFFECT_MOSAIC": "mosaico",
    "LOOKS_EFFECT_BRIGHTNESS": "brillo",
    "LOOKS_EFFECT_GHOST": "desvanecer",
    "LOOKS_CHANGEEFFECTBY": "cambiar efecto %1 por %2",
    "LOOKS_SETEFFECTTO": "establecer efecto %1 a %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "quitar efectos gráficos",
    "LOOKS_CHANGESIZEBY": "cambiar tamaño en %1",
    "LOOKS_SETSIZETO": "fijar tamaño a %1 %",
    "LOOKS_SIZE": "tamaño",
    "LOOKS_CHANGESTRETCHBY": "cambiar estiramiento por %1",
    "LOOKS_SETSTRETCHTO": "fijar estiramiento a %1 %",
    "LOOKS_SWITCHCOSTUMETO": "cambiar disfraz a %1",
    "LOOKS_NEXTCOSTUME": "siguiente disfraz",
    "LOOKS_SWITCHBACKDROPTO": "cambiar fondo a %1",
    "LOOKS_GOTOFRONTBACK": "ir a la capa %1 ",
    "LOOKS_GOTOFRONTBACK_FRONT": "del frente",
    "LOOKS_GOTOFRONTBACK_BACK": "de atrás",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "ir %1 %2 capas",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "adelante",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "atrás",
    "LOOKS_BACKDROPNUMBERNAME": "fondo %1",
    "LOOKS_COSTUMENUMBERNAME": "# de disfraz %1",
    "LOOKS_NUMBERNAME_NUMBER": "número",
    "LOOKS_NUMBERNAME_NAME": "nombre",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "cambiar fondo a %1 y esperar",
    "LOOKS_NEXTBACKDROP": "siguiente fondo",
    "LOOKS_PREVIOUSBACKDROP": "fondo anterior",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "mover %1 pasos",
    "MOTION_TURNLEFT": "girar %1 %2 grados",
    "MOTION_TURNRIGHT": "girar %1 %2 grados",
    "MOTION_POINTINDIRECTION": "apuntar en dirección %1",
    "MOTION_POINTTOWARDS": "apuntar hacia %1",
    "MOTION_POINTTOWARDS_POINTER": "puntero del ratón",
    "MOTION_GOTO": "ir a %1",
    "MOTION_GOTO_POINTER": "puntero del ratón",
    "MOTION_GOTO_RANDOM": "posición aleatoria",
    "MOTION_GOTOXY": "ir a x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "deslizar en %1 segs a x: %2 y: %3",
    "MOTION_GLIDETO": "deslizar en %1 segs a x: %2",
    "MOTION_GLIDETO_POINTER": "puntero del ratón",
    "MOTION_GLIDETO_RANDOM": "posición aleatoria",
    "MOTION_CHANGEXBY": "cambiar x en %1",
    "MOTION_SETX": "fijar x a %1",
    "MOTION_CHANGEYBY": "cambiar y en %1",
    "MOTION_SETY": "fijar y a %1",
    "MOTION_IFONEDGEBOUNCE": "rebotar si toca un borde",
    "MOTION_SETROTATIONSTYLE": "fijar estilo de rotación %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "izquierda-derecha",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "no rotar",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "en todas direcciones",
    "MOTION_XPOSITION": "posición en x",
    "MOTION_YPOSITION": "posición en y",
    "MOTION_DIRECTION": "dirección",
    "MOTION_SCROLLRIGHT": "desplazar a la derecha %1",
    "MOTION_SCROLLUP": "desplazar arriba %1",
    "MOTION_ALIGNSCENE": "alinear escena %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "abajo-izquierda",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "abajo-derecha",
    "MOTION_ALIGNSCENE_MIDDLE": "medio",
    "MOTION_ALIGNSCENE_TOPLEFT": "arriba-izquierda",
    "MOTION_ALIGNSCENE_TOPRIGHT": "arriba-derecha",
    "MOTION_XSCROLL": "desplazar x",
    "MOTION_YSCROLL": "desplazar y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "número al azar entre %1 y %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 y %2",
    "OPERATORS_OR": "%1 o %2",
    "OPERATORS_NOT": "no %1",
    "OPERATORS_JOIN": "unir %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "letra %1 de %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "longitud de %1",
    "OPERATORS_CONTAINS": "%1 contiene %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "redondear %1",
    "OPERATORS_MATHOP": "%1 de %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "piso",
    "OPERATORS_MATHOP_CEILING": "techo",
    "OPERATORS_MATHOP_SQRT": "raíz cuadrada",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "En",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "definir %1",
    "SENSING_TOUCHINGOBJECT": "tocando %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "puntero del ratón",
    "SENSING_TOUCHINGOBJECT_EDGE": "borde",
    "SENSING_TOUCHINGCOLOR": "¿tocando el color %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "¿color %1 está tocando %2?",
    "SENSING_DISTANCETO": "distancia a %1",
    "SENSING_DISTANCETO_POINTER": "puntero del ratón",
    "SENSING_ASKANDWAIT": "preguntar %1 y esperar",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "respuesta",
    "SENSING_KEYPRESSED": "¿tecla %1 presionada?",
    "SENSING_MOUSEDOWN": "¿ratón presionado?",
    "SENSING_MOUSEX": "posición x del ratón",
    "SENSING_MOUSEY": "posición y del ratón",
    "SENSING_SETDRAGMODE": "fijar modo de arrastre a %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "arrastrable",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "no arrastrable",
    "SENSING_LOUDNESS": "intensidad del sonido",
    "SENSING_LOUD": "Muy fuerte?",
    "SENSING_TIMER": "cronómetro",
    "SENSING_RESETTIMER": "reiniciar cronómetro",
    "SENSING_OF": "%1 de %2",
    "SENSING_OF_XPOSITION": "posición en x",
    "SENSING_OF_YPOSITION": "posición en y",
    "SENSING_OF_DIRECTION": "dirección",
    "SENSING_OF_COSTUMENUMBER": "# de disfraz",
    "SENSING_OF_COSTUMENAME": "nombre del disfraz",
    "SENSING_OF_SIZE": "tamaño",
    "SENSING_OF_VOLUME": "volumen",
    "SENSING_OF_BACKDROPNUMBER": "# de fondo",
    "SENSING_OF_BACKDROPNAME": "nombre de fondo",
    "SENSING_OF_STAGE": "Escenario",
    "SENSING_CURRENT": "%1 actual",
    "SENSING_CURRENT_YEAR": "año",
    "SENSING_CURRENT_MONTH": "mes",
    "SENSING_CURRENT_DATE": "fecha",
    "SENSING_CURRENT_DAYOFWEEK": "día de la semana",
    "SENSING_CURRENT_HOUR": "hora",
    "SENSING_CURRENT_MINUTE": "minuto",
    "SENSING_CURRENT_SECOND": "segundo",
    "SENSING_DAYSSINCE2000": "días desde el 2000",
    "SENSING_USERNAME": "nombre de usuario",
    "SENSING_USERID": "Identificación de usuario",
    "SOUND_PLAY": "comenzar sonido %1",
    "SOUND_PLAYUNTILDONE": "tocar sonido %1 hasta terminar",
    "SOUND_STOPALLSOUNDS": "detener todos los sonidos",
    "SOUND_SETEFFECTO": "establecer efecto %1 a %2",
    "SOUND_CHANGEEFFECTBY": "cambiar efecto %1 por %2",
    "SOUND_CLEAREFFECTS": "borrar efectos de sonido",
    "SOUND_EFFECTS_PITCH": "altura",
    "SOUND_EFFECTS_PAN": "panel izquierda/derecha",
    "SOUND_CHANGEVOLUMEBY": "cambiar volumen por %1",
    "SOUND_SETVOLUMETO": "fijar volumen a %1%",
    "SOUND_VOLUME": "volumen",
    "CATEGORY_MOTION": "Movimiento",
    "CATEGORY_LOOKS": "Apariencia",
    "CATEGORY_SOUND": "Sonido",
    "CATEGORY_EVENTS": "Eventos",
    "CATEGORY_CONTROL": "Control",
    "CATEGORY_SENSING": "Sensores",
    "CATEGORY_OPERATORS": "Operadores",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "Mis Bloques",
    "DUPLICATE": "Duplicar",
    "DELETE": "Borrar",
    "ADD_COMMENT": "Agregar comentario",
    "REMOVE_COMMENT": "Eliminar comentario",
    "DELETE_BLOCK": "Eliminar bloque",
    "DELETE_X_BLOCKS": "Eliminar bloque %1",
    "DELETE_ALL_BLOCKS": "¿Eliminar todos los bloques %1?",
    "CLEAN_UP": "Limpiar bloques",
    "HELP": "Ayuda",
    "UNDO": "Deshacer",
    "REDO": "Rehacer",
    "EDIT_PROCEDURE": "Editar",
    "SHOW_PROCEDURE_DEFINITION": "Ir a la definición",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Decir algo...",
    "COLOUR_HUE_LABEL": "Color",
    "COLOUR_SATURATION_LABEL": "Saturación",
    "COLOUR_BRIGHTNESS_LABEL": "Brillo",
    "CHANGE_VALUE_TITLE": "Cambiar valor:",
    "RENAME_VARIABLE": "Renombrar variable",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Renombrar variable",
    "NEW_VARIABLE": "Crear una variable",
    "NEW_VARIABLE_TITLE": "Nuevo nombre de variable:",
    "VARIABLE_MODAL_TITLE": "Variable nueva",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Crear un bloque",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Crear una lista",
    "NEW_LIST_TITLE": "Nombre para nueva lista:",
    "LIST_MODAL_TITLE": "Lista nueva",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Renombrar lista",
    "NEW_BROADCAST_MESSAGE": "Nuevo mensaje",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nombre para el nuevo mensaje:",
    "BROADCAST_MODAL_TITLE": "Nuevo Mensaje",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "mensaje1"
};

Blockly.ScratchMsgs.locales["es"] =
{
    "CONTROL_FOREVER": "por siempre",
    "CONTROL_REPEAT": "repetir %1",
    "CONTROL_IF": "si %1 entonces",
    "CONTROL_ELSE": "si no",
    "CONTROL_STOP": "detener",
    "CONTROL_STOP_ALL": "todos",
    "CONTROL_STOP_THIS": "este script",
    "CONTROL_STOP_OTHER": "otros scripts en el sprite",
    "CONTROL_WAIT": "esperar %1 segundos",
    "CONTROL_WAITUNTIL": "esperar hasta que %1",
    "CONTROL_REPEATUNTIL": "repetir hasta que %1",
    "CONTROL_WHILE": "mientras %1",
    "CONTROL_FOREACH": "para cada %1 de %2",
    "CONTROL_STARTASCLONE": "al comenzar como clon",
    "CONTROL_CREATECLONEOF": "crear clon de %1",
    "CONTROL_CREATECLONEOF_MYSELF": "mí mismo",
    "CONTROL_DELETETHISCLONE": "borrar este clon",
    "CONTROL_COUNTER": "contador",
    "CONTROL_INCRCOUNTER": "incrementar contador",
    "CONTROL_CLEARCOUNTER": "borrar contador",
    "CONTROL_ALLATONCE": "todo de una vez",
    "DATA_SETVARIABLETO": "dar a %1 el valor %2",
    "DATA_CHANGEVARIABLEBY": "sumar a %1 %2",
    "DATA_SHOWVARIABLE": "mostrar variable %1",
    "DATA_HIDEVARIABLE": "ocultar variable %1",
    "DATA_ADDTOLIST": "añadir %1 a %2",
    "DATA_DELETEOFLIST": "eliminar %1 de %2",
    "DATA_INSERTATLIST": "insertar %1 en %2 de %3",
    "DATA_REPLACEITEMOFLIST": "reemplazar elemento %1 de %2 con %3",
    "DATA_ITEMOFLIST": "elemento %1 de %2",
    "DATA_LENGTHOFLIST": "longitud de %1",
    "DATA_LISTCONTAINSITEM": "¿%2 está en %1?",
    "DATA_SHOWLIST": "mostrar lista %1",
    "DATA_HIDELIST": "esconder lista %1",
    "DATA_INDEX_ALL": "todos",
    "DATA_INDEX_LAST": "último",
    "DATA_INDEX_RANDOM": "al azar",
    "EVENT_WHENFLAGCLICKED": "al hacer clic en %1",
    "EVENT_WHENTHISSPRITECLICKED": "al hacer clic en este objeto",
    "EVENT_WHENSTAGECLICKED": "al hacer clic en el escenario",
    "EVENT_WHENTOUCHINGOBJECT": "cuando el objeto toque %1",
    "EVENT_WHENBROADCASTRECEIVED": "al recibir %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "cuando el fondo cambie a %1",
    "EVENT_WHENGREATERTHAN": "cuando %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "cronómetro",
    "EVENT_BROADCAST": "enviar %1",
    "EVENT_BROADCASTANDWAIT": "enviar %1 y esperar",
    "EVENT_WHENKEYPRESSED": "al presionar tecla %1",
    "EVENT_WHENKEYPRESSED_SPACE": "espacio",
    "EVENT_WHENKEYPRESSED_LEFT": "flecha izquierda",
    "EVENT_WHENKEYPRESSED_RIGHT": "flecha derecha",
    "EVENT_WHENKEYPRESSED_DOWN": "flecha abajo",
    "EVENT_WHENKEYPRESSED_UP": "flecha arriba",
    "EVENT_WHENKEYPRESSED_ANY": "cualquiera",
    "LOOKS_SAYFORSECS": "decir %1 durante %2 segundos",
    "LOOKS_SAY": "decir %1",
    "LOOKS_HELLO": "¡Hola!",
    "LOOKS_THINKFORSECS": "pensar %1 durante %2 segundos",
    "LOOKS_THINK": "pensar %1",
    "LOOKS_HMM": "Umm...",
    "LOOKS_SHOW": "mostrar",
    "LOOKS_HIDE": "esconder",
    "LOOKS_HIDEALLSPRITES": "esconder todos los objetos",
    "LOOKS_EFFECT_COLOR": "color",
    "LOOKS_EFFECT_FISHEYE": "ojo de pez",
    "LOOKS_EFFECT_WHIRL": "remolino",
    "LOOKS_EFFECT_PIXELATE": "pixelizar",
    "LOOKS_EFFECT_MOSAIC": "mosaico",
    "LOOKS_EFFECT_BRIGHTNESS": "brillo",
    "LOOKS_EFFECT_GHOST": "desvanecer",
    "LOOKS_CHANGEEFFECTBY": "sumar al efecto %1 %2",
    "LOOKS_SETEFFECTTO": "dar al efecto %1 el valor %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "quitar efectos gráficos",
    "LOOKS_CHANGESIZEBY": "cambiar tamaño por %1",
    "LOOKS_SETSIZETO": "fijar tamaño al %1 %",
    "LOOKS_SIZE": "tamaño",
    "LOOKS_CHANGESTRETCHBY": "sumar al estiramiento %1",
    "LOOKS_SETSTRETCHTO": "fijar estiramiento al %1 %",
    "LOOKS_SWITCHCOSTUMETO": "cambiar disfraz a %1",
    "LOOKS_NEXTCOSTUME": "siguiente disfraz",
    "LOOKS_SWITCHBACKDROPTO": "cambiar fondo a %1",
    "LOOKS_GOTOFRONTBACK": "ir a capa %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "delantera",
    "LOOKS_GOTOFRONTBACK_BACK": "trasera",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "ir %2 capas hacia %1",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "delante",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "atrás",
    "LOOKS_BACKDROPNUMBERNAME": "%1 del fondo",
    "LOOKS_COSTUMENUMBERNAME": "%1 de disfraz",
    "LOOKS_NUMBERNAME_NUMBER": "número",
    "LOOKS_NUMBERNAME_NAME": "nombre",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "cambiar fondo a %1 y esperar",
    "LOOKS_NEXTBACKDROP": "siguiente fondo",
    "LOOKS_PREVIOUSBACKDROP": "fondo anterior",
    "LOOKS_RANDOMBACKDROP": "telón de fondo aleatorio",
    "MOTION_MOVESTEPS": "mover %1 pasos",
    "MOTION_TURNLEFT": "girar %1 %2 grados",
    "MOTION_TURNRIGHT": "girar %1 %2 grados",
    "MOTION_POINTINDIRECTION": "apuntar en dirección %1",
    "MOTION_POINTTOWARDS": "apuntar hacia %1",
    "MOTION_POINTTOWARDS_POINTER": "puntero del ratón",
    "MOTION_GOTO": "ir a %1",
    "MOTION_GOTO_POINTER": "puntero del ratón",
    "MOTION_GOTO_RANDOM": "posición aleatoria",
    "MOTION_GOTOXY": "ir a x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "deslizar en %1 segs a x: %2 y: %3",
    "MOTION_GLIDETO": "deslizar en %1 segs a %2",
    "MOTION_GLIDETO_POINTER": "puntero del ratón",
    "MOTION_GLIDETO_RANDOM": "posición aleatoria",
    "MOTION_CHANGEXBY": "sumar a x %1",
    "MOTION_SETX": "dar a x el valor %1",
    "MOTION_CHANGEYBY": "sumar a y %1",
    "MOTION_SETY": "dar a y el valor %1",
    "MOTION_IFONEDGEBOUNCE": "si toca un borde, rebotar",
    "MOTION_SETROTATIONSTYLE": "fijar estilo de rotación a %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "izquierda-derecha",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "no rotar",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "en todas direcciones",
    "MOTION_XPOSITION": "posición en x",
    "MOTION_YPOSITION": "posición en y",
    "MOTION_DIRECTION": "dirección",
    "MOTION_SCROLLRIGHT": "desplazar a la derecha %1",
    "MOTION_SCROLLUP": "desplazar arriba %1",
    "MOTION_ALIGNSCENE": "alinear escena %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "abajo a la izquierda",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "abajo a la derecha",
    "MOTION_ALIGNSCENE_MIDDLE": "al centro",
    "MOTION_ALIGNSCENE_TOPLEFT": "arriba a la izquierda",
    "MOTION_ALIGNSCENE_TOPRIGHT": "arriba a la derecha",
    "MOTION_XSCROLL": "desplazamiento en x",
    "MOTION_YSCROLL": "desplazamiento en y",
    "MOTION_STAGE_SELECTED": "Escenario seleccionado: sin bloques de movimiento",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "número aleatorio entre %1 y %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 y %2",
    "OPERATORS_OR": "%1 o %2",
    "OPERATORS_NOT": "no %1",
    "OPERATORS_JOIN": "unir %1 %2",
    "OPERATORS_JOIN_APPLE": "manzana",
    "OPERATORS_JOIN_BANANA": "plátano",
    "OPERATORS_LETTEROF": "letra %1 de %2",
    "OPERATORS_LETTEROF_APPLE": "un",
    "OPERATORS_LENGTH": "longitud de %1",
    "OPERATORS_CONTAINS": "¿%2 está en %1?",
    "OPERATORS_MOD": "%1 módulo %2",
    "OPERATORS_ROUND": "redondear %1",
    "OPERATORS_MATHOP": "%1 de %2",
    "OPERATORS_MATHOP_ABS": "valor absoluto",
    "OPERATORS_MATHOP_FLOOR": "suelo",
    "OPERATORS_MATHOP_CEILING": "techo",
    "OPERATORS_MATHOP_SQRT": "raíz cuadrada",
    "OPERATORS_MATHOP_SIN": "sen",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "arcsen",
    "OPERATORS_MATHOP_ACOS": "arccos",
    "OPERATORS_MATHOP_ATAN": "arctan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "definir %1",
    "SENSING_TOUCHINGOBJECT": "¿tocando %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "puntero del ratón",
    "SENSING_TOUCHINGOBJECT_EDGE": "borde",
    "SENSING_TOUCHINGCOLOR": "¿tocando el color %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "¿color %1 tocando %2?",
    "SENSING_DISTANCETO": "distancia a %1",
    "SENSING_DISTANCETO_POINTER": "puntero del ratón",
    "SENSING_ASKANDWAIT": "preguntar %1 y esperar",
    "SENSING_ASK_TEXT": "¿Cuál es tu nombre?",
    "SENSING_ANSWER": "respuesta",
    "SENSING_KEYPRESSED": "¿tecla %1 presionada?",
    "SENSING_MOUSEDOWN": "¿ratón presionado?",
    "SENSING_MOUSEX": "posición x del ratón",
    "SENSING_MOUSEY": "posición y del ratón",
    "SENSING_SETDRAGMODE": "fijar modo de arrastre a %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "arrastrable",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "no arrastrable",
    "SENSING_LOUDNESS": "volumen del sonido",
    "SENSING_LOUD": "¿ruidoso?",
    "SENSING_TIMER": "cronómetro",
    "SENSING_RESETTIMER": "reiniciar cronómetro",
    "SENSING_OF": "%1 de %2",
    "SENSING_OF_XPOSITION": "posición en x",
    "SENSING_OF_YPOSITION": "posición en y",
    "SENSING_OF_DIRECTION": "dirección",
    "SENSING_OF_COSTUMENUMBER": "disfraz #",
    "SENSING_OF_COSTUMENAME": "nombre del disfraz",
    "SENSING_OF_SIZE": "tamaño",
    "SENSING_OF_VOLUME": "volumen",
    "SENSING_OF_BACKDROPNUMBER": "# del fondo",
    "SENSING_OF_BACKDROPNAME": "nombre del fondo",
    "SENSING_OF_STAGE": "Escenario",
    "SENSING_CURRENT": "%1 actual",
    "SENSING_CURRENT_YEAR": "año",
    "SENSING_CURRENT_MONTH": "mes",
    "SENSING_CURRENT_DATE": "día",
    "SENSING_CURRENT_DAYOFWEEK": "día de la semana",
    "SENSING_CURRENT_HOUR": "hora",
    "SENSING_CURRENT_MINUTE": "minuto",
    "SENSING_CURRENT_SECOND": "segundo",
    "SENSING_DAYSSINCE2000": "días desde el 2000",
    "SENSING_USERNAME": "nombre de usuario",
    "SENSING_USERID": "id de usuario",
    "SOUND_PLAY": "iniciar sonido %1",
    "SOUND_PLAYUNTILDONE": "tocar sonido %1 hasta que termine",
    "SOUND_STOPALLSOUNDS": "detener todos los sonidos",
    "SOUND_SETEFFECTO": "dar al efecto %1 el valor %2",
    "SOUND_CHANGEEFFECTBY": "sumar al efecto %1 %2",
    "SOUND_CLEAREFFECTS": "quitar efectos de sonido",
    "SOUND_EFFECTS_PITCH": "altura",
    "SOUND_EFFECTS_PAN": "balance izquierda/derecha",
    "SOUND_CHANGEVOLUMEBY": "cambiar volumen por %1",
    "SOUND_SETVOLUMETO": "fijar volumen a %1%",
    "SOUND_VOLUME": "volumen",
    "CATEGORY_MOTION": "Movimiento",
    "CATEGORY_LOOKS": "Apariencia",
    "CATEGORY_SOUND": "Sonido",
    "CATEGORY_EVENTS": "Eventos",
    "CATEGORY_CONTROL": "Control",
    "CATEGORY_SENSING": "Sensores",
    "CATEGORY_OPERATORS": "Operadores",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "Mis bloques",
    "DUPLICATE": "Duplicar",
    "DELETE": "Borrar",
    "ADD_COMMENT": "Añadir comentario",
    "REMOVE_COMMENT": "Eliminar comentario",
    "DELETE_BLOCK": "Borrar bloque",
    "DELETE_X_BLOCKS": "Borrar %1 bloques",
    "DELETE_ALL_BLOCKS": "¿Borrar los %1 bloques?",
    "CLEAN_UP": "Limpiar bloques",
    "HELP": "Ayuda",
    "UNDO": "Deshacer",
    "REDO": "Rehacer",
    "EDIT_PROCEDURE": "Editar",
    "SHOW_PROCEDURE_DEFINITION": "Ir a definición",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Decir algo...",
    "COLOUR_HUE_LABEL": "Color",
    "COLOUR_SATURATION_LABEL": "Saturación",
    "COLOUR_BRIGHTNESS_LABEL": "Brillo",
    "CHANGE_VALUE_TITLE": "Cambiar valor:",
    "RENAME_VARIABLE": "Renombrar variable",
    "RENAME_VARIABLE_TITLE": "Renombrar todas las variables '%1' por:",
    "RENAME_VARIABLE_MODAL_TITLE": "Renombrar variable",
    "NEW_VARIABLE": "Crear una variable",
    "NEW_VARIABLE_TITLE": "Nuevo nombre de variable:",
    "VARIABLE_MODAL_TITLE": "Nueva variable",
    "VARIABLE_ALREADY_EXISTS": "Una variable llamada \"%1\" ya existe.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "Una variable llamada \"%1\" ya existe para otra variable de tipo \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "¿Eliminar \"%1\" usos de la variable \"%2\"?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "No se puede borrar la variable \"%1\" porque es parte de la definición de la función \"%2\"",
    "DELETE_VARIABLE": "Borrar la variable \"%1\"",
    "NEW_PROCEDURE": "Crear un bloque",
    "PROCEDURE_ALREADY_EXISTS": "Un procedimiento llamado \"%1\" ya existe.",
    "NEW_LIST": "Crear una lista",
    "NEW_LIST_TITLE": "Nuevo nombre de lista:",
    "LIST_MODAL_TITLE": "Lista nueva",
    "LIST_ALREADY_EXISTS": "Una lista llamada \"%1\" ya existe.",
    "RENAME_LIST_TITLE": "Renombrar de todas las listas \"%1\" por:",
    "RENAME_LIST_MODAL_TITLE": "Renombrar lista",
    "NEW_BROADCAST_MESSAGE": "Nuevo mensaje",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nuevo nombre de mensaje:",
    "BROADCAST_MODAL_TITLE": "Nuevo Mensaje",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "mensaje1"
};

Blockly.ScratchMsgs.locales["fi"] =
{
    "CONTROL_FOREVER": "ikuisesti",
    "CONTROL_REPEAT": "toista %1 kertaa",
    "CONTROL_IF": "jos %1, niin",
    "CONTROL_ELSE": "tai muuten",
    "CONTROL_STOP": "pysäytä",
    "CONTROL_STOP_ALL": "kaikki",
    "CONTROL_STOP_THIS": "tämä skripti",
    "CONTROL_STOP_OTHER": "hahmon muut skriptit",
    "CONTROL_WAIT": "odota %1 sekuntia",
    "CONTROL_WAITUNTIL": "odota kunnes %1",
    "CONTROL_REPEATUNTIL": "toista kunnes %1",
    "CONTROL_WHILE": "kun %1",
    "CONTROL_FOREACH": "jokainen %1 joukossa %2",
    "CONTROL_STARTASCLONE": "kun aloitan kloonina",
    "CONTROL_CREATECLONEOF": "luo klooni hahmosta %1",
    "CONTROL_CREATECLONEOF_MYSELF": "minä itse",
    "CONTROL_DELETETHISCLONE": "poista tämä klooni",
    "CONTROL_COUNTER": "laskuri",
    "CONTROL_INCRCOUNTER": "lisäyslaskuri",
    "CONTROL_CLEARCOUNTER": "nollaa laskuri",
    "CONTROL_ALLATONCE": "kaikki kerralla",
    "DATA_SETVARIABLETO": "aseta %1 arvoon %2",
    "DATA_CHANGEVARIABLEBY": "lisää muuttujaan %1 arvo %2",
    "DATA_SHOWVARIABLE": "näytä muuttuja %1",
    "DATA_HIDEVARIABLE": "piilota muuttuja %1",
    "DATA_ADDTOLIST": "lisää %1 listaan %2",
    "DATA_DELETEOFLIST": "poista %1 listasta %2",
    "DATA_INSERTATLIST": "lisää %1 kohtaan %2 listassa %3",
    "DATA_REPLACEITEMOFLIST": "korvaa listan %2 kohdan %1 arvo arvolla %3",
    "DATA_ITEMOFLIST": "listan %2 alkio %1",
    "DATA_LENGTHOFLIST": "listan %1 pituus",
    "DATA_LISTCONTAINSITEM": "%1 sisältää %2?",
    "DATA_SHOWLIST": "näytä lista %1",
    "DATA_HIDELIST": "piilota lista %1",
    "DATA_INDEX_ALL": "kaikki",
    "DATA_INDEX_LAST": "viimeinen",
    "DATA_INDEX_RANDOM": "satunnainen",
    "EVENT_WHENFLAGCLICKED": "kun klikataan %1",
    "EVENT_WHENTHISSPRITECLICKED": "kun tätä hahmoa klikataan",
    "EVENT_WHENSTAGECLICKED": "kun esiintymislavaa klikataan",
    "EVENT_WHENTOUCHINGOBJECT": "kun tämä hahmo koskettaa %1",
    "EVENT_WHENBROADCASTRECEIVED": "kun vastaanotan %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "kun taustaksi vaihtuu %1",
    "EVENT_WHENGREATERTHAN": "kun %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "ajastin",
    "EVENT_BROADCAST": "lähetä %1",
    "EVENT_BROADCASTANDWAIT": "lähetä %1 ja odota",
    "EVENT_WHENKEYPRESSED": "kun painetaan %1",
    "EVENT_WHENKEYPRESSED_SPACE": "välilyönti",
    "EVENT_WHENKEYPRESSED_LEFT": "nuoli vasemmalle",
    "EVENT_WHENKEYPRESSED_RIGHT": "nuoli oikealle",
    "EVENT_WHENKEYPRESSED_DOWN": "nuoli alas",
    "EVENT_WHENKEYPRESSED_UP": "nuoli ylös",
    "EVENT_WHENKEYPRESSED_ANY": "mikä tahansa",
    "LOOKS_SAYFORSECS": "sano %1 %2 sekunnin ajan",
    "LOOKS_SAY": "sano %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "ajattele %1 %2 sekunnin ajan",
    "LOOKS_THINK": "ajattele %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "näytä",
    "LOOKS_HIDE": "piilota",
    "LOOKS_HIDEALLSPRITES": "piilota kaikki hahmot",
    "LOOKS_EFFECT_COLOR": "väri",
    "LOOKS_EFFECT_FISHEYE": "kalansilmä",
    "LOOKS_EFFECT_WHIRL": "pyörre",
    "LOOKS_EFFECT_PIXELATE": "pikselöi",
    "LOOKS_EFFECT_MOSAIC": "mosaiikki",
    "LOOKS_EFFECT_BRIGHTNESS": "kirkkaus",
    "LOOKS_EFFECT_GHOST": "haamu",
    "LOOKS_CHANGEEFFECTBY": " lisää tehosteeseen %1 arvo %2",
    "LOOKS_SETEFFECTTO": "aseta tehoste %1 arvoon %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "poista graafiset tehosteet",
    "LOOKS_CHANGESIZEBY": "kasvata kokoa arvolla %1",
    "LOOKS_SETSIZETO": "aseta koko arvoon %1",
    "LOOKS_SIZE": "koko",
    "LOOKS_CHANGESTRETCHBY": "lisää venytystä arvolla %1",
    "LOOKS_SETSTRETCHTO": "aseta venytys arvoon %1 %",
    "LOOKS_SWITCHCOSTUMETO": "vaihda asusteeksi %1",
    "LOOKS_NEXTCOSTUME": "seuraava asuste",
    "LOOKS_SWITCHBACKDROPTO": "vaihda taustaksi %1",
    "LOOKS_GOTOFRONTBACK": "mene %1 alalle",
    "LOOKS_GOTOFRONTBACK_FRONT": "etu",
    "LOOKS_GOTOFRONTBACK_BACK": "taka",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "mene %2 tasoa %1",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "eteenpäin",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "taaksepäin",
    "LOOKS_BACKDROPNUMBERNAME": "tausta %1",
    "LOOKS_COSTUMENUMBERNAME": "asuste %1",
    "LOOKS_NUMBERNAME_NUMBER": "luku",
    "LOOKS_NUMBERNAME_NAME": "nimi",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "vaihda taustaksi %1 ja odota",
    "LOOKS_NEXTBACKDROP": "seuraava tausta",
    "LOOKS_PREVIOUSBACKDROP": "edellinen tausta",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "liiku %1 askelta",
    "MOTION_TURNLEFT": "käänny %1 %2 astetta",
    "MOTION_TURNRIGHT": "käänny %1 %2 astetta",
    "MOTION_POINTINDIRECTION": "osoita suuntaan %1",
    "MOTION_POINTTOWARDS": "osoita kohti %1",
    "MOTION_POINTTOWARDS_POINTER": "hiiriosoitin",
    "MOTION_GOTO": "mene sijaintiin %1",
    "MOTION_GOTO_POINTER": "hiiriosoitin",
    "MOTION_GOTO_RANDOM": "satunnainen sijainti",
    "MOTION_GOTOXY": "mene sijaintiin x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "liu'u %1 sekuntia sijaintiin x: %2 y: %3",
    "MOTION_GLIDETO": "liu'u %1 sekuntia sijaintiin %2",
    "MOTION_GLIDETO_POINTER": "hiiriosoitin",
    "MOTION_GLIDETO_RANDOM": "satunnainen sijainti",
    "MOTION_CHANGEXBY": "lisää x:n arvoon arvo %1",
    "MOTION_SETX": "aseta x:n arvoksi %1",
    "MOTION_CHANGEYBY": "lisää y:n arvoon arvo %1",
    "MOTION_SETY": "aseta y:n arvoksi %1",
    "MOTION_IFONEDGEBOUNCE": "pomppaa reunasta",
    "MOTION_SETROTATIONSTYLE": "aseta kiertotyyliksi %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "vasen-oikea",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "älä kierrä",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "joka suuntaan",
    "MOTION_XPOSITION": "x-sijainti",
    "MOTION_YPOSITION": "y-sijainti",
    "MOTION_DIRECTION": "suunta",
    "MOTION_SCROLLRIGHT": "kierrä oikealle %1",
    "MOTION_SCROLLUP": "kierrä ylös %1",
    "MOTION_ALIGNSCENE": "tasaa näkymä %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "alavasen",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "alaoikea",
    "MOTION_ALIGNSCENE_MIDDLE": "keskikohta",
    "MOTION_ALIGNSCENE_TOPLEFT": "ylävasen",
    "MOTION_ALIGNSCENE_TOPRIGHT": "yläoikea",
    "MOTION_XSCROLL": "x-kierto",
    "MOTION_YSCROLL": "y-kierto",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "valitse satunnaisluku väliltä %1 - %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 ja %2",
    "OPERATORS_OR": "%1 tai %2",
    "OPERATORS_NOT": "ei %1",
    "OPERATORS_JOIN": "yhdistä %1 ja %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "%1 kirjain sanasta %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "listan %1 pituus",
    "OPERATORS_CONTAINS": "%1 sisältää %2?",
    "OPERATORS_MOD": "lukujen %1 ja %2 jakojäännös",
    "OPERATORS_ROUND": "pyöristä %1",
    "OPERATORS_MATHOP": "%1 luvusta %2",
    "OPERATORS_MATHOP_ABS": "itseisarvo",
    "OPERATORS_MATHOP_FLOOR": "pyöristä alaspäin",
    "OPERATORS_MATHOP_CEILING": "pyöristä ylöspäin",
    "OPERATORS_MATHOP_SQRT": "neliöjuuri",
    "OPERATORS_MATHOP_SIN": "sini",
    "OPERATORS_MATHOP_COS": "kosini",
    "OPERATORS_MATHOP_TAN": "tangentti",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "luonnollinen logaritmi",
    "OPERATORS_MATHOP_LOG": "10-logaritmi",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "määrittele %1",
    "SENSING_TOUCHINGOBJECT": "koskettaako %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "hiiriosoitin",
    "SENSING_TOUCHINGOBJECT_EDGE": "reuna",
    "SENSING_TOUCHINGCOLOR": "koskettaako väriä %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "koskeeko väri %1 väriä %2?",
    "SENSING_DISTANCETO": "etäisyys kohteeseen %1",
    "SENSING_DISTANCETO_POINTER": "hiiriosoitin",
    "SENSING_ASKANDWAIT": "kysy %1 ja odota",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "vastaus",
    "SENSING_KEYPRESSED": "onko näppäin %1 painettu?",
    "SENSING_MOUSEDOWN": "onko hiiren nappi painettu?",
    "SENSING_MOUSEX": "hiiren x-sijainti",
    "SENSING_MOUSEY": "hiiren y-sijainti",
    "SENSING_SETDRAGMODE": "aseta raahaustilaksi %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "raahaus sallittu",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "raahaus ei sallittu",
    "SENSING_LOUDNESS": "äänentaso",
    "SENSING_LOUD": "kova äänentaso?",
    "SENSING_TIMER": "ajastin",
    "SENSING_RESETTIMER": "nollaa ajastin",
    "SENSING_OF": "kohteen %2 %1",
    "SENSING_OF_XPOSITION": "x-sijainti",
    "SENSING_OF_YPOSITION": "y-sijainti",
    "SENSING_OF_DIRECTION": "suunta",
    "SENSING_OF_COSTUMENUMBER": "asusteen nro.",
    "SENSING_OF_COSTUMENAME": "asusteen nimi",
    "SENSING_OF_SIZE": "koko",
    "SENSING_OF_VOLUME": "äänenvoimakkuus",
    "SENSING_OF_BACKDROPNUMBER": "taustan nro.",
    "SENSING_OF_BACKDROPNAME": "taustan nimi",
    "SENSING_OF_STAGE": "Esiintymislava",
    "SENSING_CURRENT": "nykyinen %1",
    "SENSING_CURRENT_YEAR": "vuosi",
    "SENSING_CURRENT_MONTH": "kuukausi",
    "SENSING_CURRENT_DATE": "päiväys",
    "SENSING_CURRENT_DAYOFWEEK": "viikonpäivä",
    "SENSING_CURRENT_HOUR": "tunti",
    "SENSING_CURRENT_MINUTE": "minuutti",
    "SENSING_CURRENT_SECOND": "sekunti",
    "SENSING_DAYSSINCE2000": "päiviä vuoden 2000 jälkeen",
    "SENSING_USERNAME": "käyttäjänimi",
    "SENSING_USERID": "käyttäjä-id",
    "SOUND_PLAY": "soita ääni %1",
    "SOUND_PLAYUNTILDONE": "soita ääni %1 loppuun",
    "SOUND_STOPALLSOUNDS": "pysäytä kaikki äänet",
    "SOUND_SETEFFECTO": "aseta tehoste %1 arvoon %2",
    "SOUND_CHANGEEFFECTBY": " lisää tehosteeseen %1 arvo %2",
    "SOUND_CLEAREFFECTS": "poista ääniefektit",
    "SOUND_EFFECTS_PITCH": "sävelkorkeus",
    "SOUND_EFFECTS_PAN": "panoroi vasen/oikea",
    "SOUND_CHANGEVOLUMEBY": "kasvata äänenvoimakkuutta arvolla %1",
    "SOUND_SETVOLUMETO": "aseta äänenvoimakkuudeksi %1%",
    "SOUND_VOLUME": "äänenvoimakkuus",
    "CATEGORY_MOTION": "Liike",
    "CATEGORY_LOOKS": "Ulkonäkö",
    "CATEGORY_SOUND": "Ääni",
    "CATEGORY_EVENTS": "Tapahtumat",
    "CATEGORY_CONTROL": "Ohjaus",
    "CATEGORY_SENSING": "Tuntoaisti",
    "CATEGORY_OPERATORS": "Toiminnot",
    "CATEGORY_VARIABLES": "Muuttujat",
    "CATEGORY_MYBLOCKS": "Lohkoni",
    "DUPLICATE": "Kopioi",
    "DELETE": "Poista",
    "ADD_COMMENT": "Lisää kommentti",
    "REMOVE_COMMENT": "Poista kommentti",
    "DELETE_BLOCK": "Poista lohko",
    "DELETE_X_BLOCKS": "Poista %1 lohkoa",
    "DELETE_ALL_BLOCKS": "Poistetaanko kaikki %1 lohkoa?",
    "CLEAN_UP": "Siivoa lohkot",
    "HELP": "Apua",
    "UNDO": "Kumoa",
    "REDO": "Tee uudelleen",
    "EDIT_PROCEDURE": "Muokkaa",
    "SHOW_PROCEDURE_DEFINITION": "Siirry määrittelyyn",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Sano jotakin...",
    "COLOUR_HUE_LABEL": "Väri",
    "COLOUR_SATURATION_LABEL": "Värikylläisyys",
    "COLOUR_BRIGHTNESS_LABEL": "Kirkkaus",
    "CHANGE_VALUE_TITLE": "Vaihda arvo:",
    "RENAME_VARIABLE": "Nimeä uudelleen muuttuja",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Nimeä uudelleen muuttuja",
    "NEW_VARIABLE": "Tee muuttuja",
    "NEW_VARIABLE_TITLE": "Uuden muuttujan nimi:",
    "VARIABLE_MODAL_TITLE": "Uusi muuttuja",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Tee lohko",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Tee lista",
    "NEW_LIST_TITLE": "Uuden listan nimi:",
    "LIST_MODAL_TITLE": "Uusi lista",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Nimeä uudelleen lista",
    "NEW_BROADCAST_MESSAGE": "Uusi viesti",
    "NEW_BROADCAST_MESSAGE_TITLE": "Uuden viestin nimi:",
    "BROADCAST_MODAL_TITLE": "Uusi viesti",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "viesti1"
};

Blockly.ScratchMsgs.locales["fr"] =
{
    "CONTROL_FOREVER": "répéter indéfiniment",
    "CONTROL_REPEAT": "répéter %1 fois",
    "CONTROL_IF": "si %1 alors",
    "CONTROL_ELSE": "sinon",
    "CONTROL_STOP": "stop",
    "CONTROL_STOP_ALL": "tout",
    "CONTROL_STOP_THIS": "ce script",
    "CONTROL_STOP_OTHER": "autres scripts dans sprite",
    "CONTROL_WAIT": "attendre %1 secondes",
    "CONTROL_WAITUNTIL": "attendre jusqu'à %1",
    "CONTROL_REPEATUNTIL": "répéter jusqu'à %1",
    "CONTROL_WHILE": "tant que %1",
    "CONTROL_FOREACH": "pour chaque %1 dans %2",
    "CONTROL_STARTASCLONE": "quand je commence comme un clone",
    "CONTROL_CREATECLONEOF": "créer un clone de %1",
    "CONTROL_CREATECLONEOF_MYSELF": "moi-même",
    "CONTROL_DELETETHISCLONE": "supprimer ce clone",
    "CONTROL_COUNTER": "compteur",
    "CONTROL_INCRCOUNTER": "incrémenter le compteur",
    "CONTROL_CLEARCOUNTER": "effacer le compteur",
    "CONTROL_ALLATONCE": "tous en même temps",
    "DATA_SETVARIABLETO": "mettre %1 à %2",
    "DATA_CHANGEVARIABLEBY": "changer %1 par %2",
    "DATA_SHOWVARIABLE": "montrer la variable %1",
    "DATA_HIDEVARIABLE": "cacher la variable %1",
    "DATA_ADDTOLIST": "ajouter %1 à %2",
    "DATA_DELETEOFLIST": "supprimer l'élément %1 de %2",
    "DATA_INSERTATLIST": "insérer %1 en position %2 de %3",
    "DATA_REPLACEITEMOFLIST": "remplacer l'élément %1 de la liste %2 par %3",
    "DATA_ITEMOFLIST": "élément %1 de %2",
    "DATA_LENGTHOFLIST": "longueur de %1",
    "DATA_LISTCONTAINSITEM": "%1 contient %2 ?",
    "DATA_SHOWLIST": "montrer la liste %1",
    "DATA_HIDELIST": "cacher la liste %1",
    "DATA_INDEX_ALL": "tout",
    "DATA_INDEX_LAST": "dernier",
    "DATA_INDEX_RANDOM": "au hasard",
    "EVENT_WHENFLAGCLICKED": "quand %1 est cliqué",
    "EVENT_WHENTHISSPRITECLICKED": "quand ce sprite est cliqué",
    "EVENT_WHENSTAGECLICKED": "quand la scène est cliquée",
    "EVENT_WHENTOUCHINGOBJECT": "quand ce lutin touche %1",
    "EVENT_WHENBROADCASTRECEIVED": "quand je reçois %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "quand l'arrière-plan bascule sur %1",
    "EVENT_WHENGREATERTHAN": "quand %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "chronomètre",
    "EVENT_BROADCAST": "envoyer à tous %1",
    "EVENT_BROADCASTANDWAIT": "envoyer à tous %1 et attendre",
    "EVENT_WHENKEYPRESSED": "quand la touche %1 est pressée",
    "EVENT_WHENKEYPRESSED_SPACE": "espace",
    "EVENT_WHENKEYPRESSED_LEFT": "flèche gauche",
    "EVENT_WHENKEYPRESSED_RIGHT": "flèche droite",
    "EVENT_WHENKEYPRESSED_DOWN": "flèche bas",
    "EVENT_WHENKEYPRESSED_UP": "flèche haut",
    "EVENT_WHENKEYPRESSED_ANY": "n'importe laquelle",
    "LOOKS_SAYFORSECS": "dire %1 pendant %2 secondes",
    "LOOKS_SAY": "dire %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "penser à %1 pendant %2 secondes",
    "LOOKS_THINK": "penser à %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "montrer",
    "LOOKS_HIDE": "cacher",
    "LOOKS_HIDEALLSPRITES": "cacher tous les sprites",
    "LOOKS_EFFECT_COLOR": "couleur",
    "LOOKS_EFFECT_FISHEYE": "œil de poisson",
    "LOOKS_EFFECT_WHIRL": "tournoyer",
    "LOOKS_EFFECT_PIXELATE": "pixeliser",
    "LOOKS_EFFECT_MOSAIC": "mosaïque",
    "LOOKS_EFFECT_BRIGHTNESS": "luminosité",
    "LOOKS_EFFECT_GHOST": "fantôme",
    "LOOKS_CHANGEEFFECTBY": "changer l'effet %1 par %2",
    "LOOKS_SETEFFECTTO": "mettre l'effet %1 sur %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "annuler les effets graphiques",
    "LOOKS_CHANGESIZEBY": "changer la taille par %1",
    "LOOKS_SETSIZETO": "mettre la taille sur %1 % de la taille initiale",
    "LOOKS_SIZE": "taille",
    "LOOKS_CHANGESTRETCHBY": "modifier l'étirement de %1",
    "LOOKS_SETSTRETCHTO": "mettre l'étirement sur %1 %",
    "LOOKS_SWITCHCOSTUMETO": "basculer le costume sur %1",
    "LOOKS_NEXTCOSTUME": "costume suivant",
    "LOOKS_SWITCHBACKDROPTO": "basculer l'arrière-plan sur %1",
    "LOOKS_GOTOFRONTBACK": "aller au %1 plan",
    "LOOKS_GOTOFRONTBACK_FRONT": "devant",
    "LOOKS_GOTOFRONTBACK_BACK": "derrière",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "déplacer de %2 plans %1",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "avant",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "arrière",
    "LOOKS_BACKDROPNUMBERNAME": "arrière-plan %1",
    "LOOKS_COSTUMENUMBERNAME": "costume %1",
    "LOOKS_NUMBERNAME_NUMBER": "nombre",
    "LOOKS_NUMBERNAME_NAME": "nom",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "basculer sur l'arrière-plan %1 et attendre",
    "LOOKS_NEXTBACKDROP": "arrière-plan suivant",
    "LOOKS_PREVIOUSBACKDROP": "arrière-plan précédent",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "avancer de %1 pas",
    "MOTION_TURNLEFT": "tourner %1 de %2 degrés",
    "MOTION_TURNRIGHT": "tourner %1 de %2 degrés",
    "MOTION_POINTINDIRECTION": "s'orienter en direction de %1",
    "MOTION_POINTTOWARDS": "s'orienter vers %1",
    "MOTION_POINTTOWARDS_POINTER": "pointeur de souris",
    "MOTION_GOTO": "aller à %1",
    "MOTION_GOTO_POINTER": "pointeur de souris",
    "MOTION_GOTO_RANDOM": "position aléatoire",
    "MOTION_GOTOXY": "aller à x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "glisser en %1 secondes à x: %2 y: %3",
    "MOTION_GLIDETO": "glisser en %1 secondes à %2",
    "MOTION_GLIDETO_POINTER": "pointeur de souris",
    "MOTION_GLIDETO_RANDOM": "position aléatoire",
    "MOTION_CHANGEXBY": "changer x par %1",
    "MOTION_SETX": "mettre x sur %1",
    "MOTION_CHANGEYBY": "changer y par %1",
    "MOTION_SETY": "mettre y sur %1",
    "MOTION_IFONEDGEBOUNCE": "rebondir si le bord est atteint",
    "MOTION_SETROTATIONSTYLE": "fixer le sens de rotation %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "gauche-droite",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "ne tourne pas",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "à 360°",
    "MOTION_XPOSITION": "abscisse x",
    "MOTION_YPOSITION": "ordonnée y",
    "MOTION_DIRECTION": "direction",
    "MOTION_SCROLLRIGHT": "défiler à droite de %1",
    "MOTION_SCROLLUP": "défiler en haut de %1",
    "MOTION_ALIGNSCENE": "aligner la scène %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "bas-gauche",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "bas-droite",
    "MOTION_ALIGNSCENE_MIDDLE": "milieu",
    "MOTION_ALIGNSCENE_TOPLEFT": "haut-gauche",
    "MOTION_ALIGNSCENE_TOPRIGHT": "haut-droite",
    "MOTION_XSCROLL": "défilement x",
    "MOTION_YSCROLL": "défilement y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "nombre aléatoire entre %1 et %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 et %2",
    "OPERATORS_OR": "%1 ou %2",
    "OPERATORS_NOT": "non %1",
    "OPERATORS_JOIN": "regroupe %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "lettre %1 de %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "longueur de %1",
    "OPERATORS_CONTAINS": "%1 contient %2 ?",
    "OPERATORS_MOD": "%1 modulo %2",
    "OPERATORS_ROUND": "arrondi de %1",
    "OPERATORS_MATHOP": "%1 de %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "plancher",
    "OPERATORS_MATHOP_CEILING": "plafond",
    "OPERATORS_MATHOP_SQRT": "racine",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e^",
    "OPERATORS_MATHOP_10EXP": "10^",
    "PROCEDURES_DEFINITION": "définir %1",
    "SENSING_TOUCHINGOBJECT": "touche %1 ?",
    "SENSING_TOUCHINGOBJECT_POINTER": "pointeur de souris",
    "SENSING_TOUCHINGOBJECT_EDGE": "bord",
    "SENSING_TOUCHINGCOLOR": "couleur %1 touchée ?",
    "SENSING_COLORISTOUCHINGCOLOR": "couleur %1 touche %2 ?",
    "SENSING_DISTANCETO": "distance de %1",
    "SENSING_DISTANCETO_POINTER": "pointeur de souris",
    "SENSING_ASKANDWAIT": "demander %1 et attendre",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "réponse",
    "SENSING_KEYPRESSED": "touche %1 pressée ?",
    "SENSING_MOUSEDOWN": "souris pressée ?",
    "SENSING_MOUSEX": "souris x",
    "SENSING_MOUSEY": "souris y",
    "SENSING_SETDRAGMODE": "mettre mode de glissement à %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "glissable",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "non glissable",
    "SENSING_LOUDNESS": "intensité",
    "SENSING_LOUD": "fort ?",
    "SENSING_TIMER": "chronomètre",
    "SENSING_RESETTIMER": "réinitialiser le chronomètre",
    "SENSING_OF": "%1 de %2",
    "SENSING_OF_XPOSITION": "abscisse x",
    "SENSING_OF_YPOSITION": "ordonnée y",
    "SENSING_OF_DIRECTION": "direction",
    "SENSING_OF_COSTUMENUMBER": "costume #",
    "SENSING_OF_COSTUMENAME": "nom du costume",
    "SENSING_OF_SIZE": "taille",
    "SENSING_OF_VOLUME": "volume",
    "SENSING_OF_BACKDROPNUMBER": "arrière-plan #",
    "SENSING_OF_BACKDROPNAME": "nom de l'arrière-plan",
    "SENSING_OF_STAGE": "La scène",
    "SENSING_CURRENT": "%1 actuel",
    "SENSING_CURRENT_YEAR": "année",
    "SENSING_CURRENT_MONTH": "mois",
    "SENSING_CURRENT_DATE": "date",
    "SENSING_CURRENT_DAYOFWEEK": "jour de la semaine",
    "SENSING_CURRENT_HOUR": "heure",
    "SENSING_CURRENT_MINUTE": "minute",
    "SENSING_CURRENT_SECOND": "seconde",
    "SENSING_DAYSSINCE2000": "jours depuis 2000",
    "SENSING_USERNAME": "nom d'utilisateur",
    "SENSING_USERID": "id de l'utilisateur",
    "SOUND_PLAY": "jouer le son %1",
    "SOUND_PLAYUNTILDONE": "jouer le son %1 jusqu'au bout",
    "SOUND_STOPALLSOUNDS": "arrêter tous les sons",
    "SOUND_SETEFFECTO": "mettre l'effet %1 sur %2",
    "SOUND_CHANGEEFFECTBY": "changer l'effet %1 par %2",
    "SOUND_CLEAREFFECTS": "annuler tous les effets sonores",
    "SOUND_EFFECTS_PITCH": "hauteur",
    "SOUND_EFFECTS_PAN": "stéréo gauche/droite",
    "SOUND_CHANGEVOLUMEBY": "ajouter %1 au volume",
    "SOUND_SETVOLUMETO": "mettre le volume au niveau %1%",
    "SOUND_VOLUME": "volume",
    "CATEGORY_MOTION": "Mouvement",
    "CATEGORY_LOOKS": "Apparence",
    "CATEGORY_SOUND": "Son",
    "CATEGORY_EVENTS": "Événements",
    "CATEGORY_CONTROL": "Contrôle",
    "CATEGORY_SENSING": "Capteurs",
    "CATEGORY_OPERATORS": "Opérateurs",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "Mes Blocs",
    "DUPLICATE": "Dupliquer",
    "DELETE": "Supprimer",
    "ADD_COMMENT": "Ajouter un commentaire",
    "REMOVE_COMMENT": "Retirer le commentaire",
    "DELETE_BLOCK": "Supprimer le bloc",
    "DELETE_X_BLOCKS": "Supprimer %1 blocs",
    "DELETE_ALL_BLOCKS": "Supprimer tous les %1 blocs ?",
    "CLEAN_UP": "Nettoyer les blocs",
    "HELP": "Aide",
    "UNDO": "Restaurer",
    "REDO": "Refaire",
    "EDIT_PROCEDURE": "Modifier",
    "SHOW_PROCEDURE_DEFINITION": "Aller à la définition",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Dire quelque chose...",
    "COLOUR_HUE_LABEL": "Couleur",
    "COLOUR_SATURATION_LABEL": "Saturation",
    "COLOUR_BRIGHTNESS_LABEL": "Luminosité",
    "CHANGE_VALUE_TITLE": "Changer la valeur:",
    "RENAME_VARIABLE": "Renommer la variable",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Renommer la variable",
    "NEW_VARIABLE": "Créer une variable",
    "NEW_VARIABLE_TITLE": "Nouveau nom de la variable",
    "VARIABLE_MODAL_TITLE": "Nouvelle variable",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Créer un bloc",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Créer une liste",
    "NEW_LIST_TITLE": "Nom de la nouvelle liste:",
    "LIST_MODAL_TITLE": "Nouvelle liste",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Renommer la liste",
    "NEW_BROADCAST_MESSAGE": "Nouveau message",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nom du nouveau message:",
    "BROADCAST_MODAL_TITLE": "Nouveau message",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "message1"
};

Blockly.ScratchMsgs.locales["ga"] =
{
    "CONTROL_FOREVER": "go deo",
    "CONTROL_REPEAT": "déan %1 uair",
    "CONTROL_IF": "más %1 ansin",
    "CONTROL_ELSE": "seachas sin",
    "CONTROL_STOP": "stop",
    "CONTROL_STOP_ALL": "uile",
    "CONTROL_STOP_THIS": "an script seo",
    "CONTROL_STOP_OTHER": "scripteanna eile sa sprid",
    "CONTROL_WAIT": "fan %1 soicind",
    "CONTROL_WAITUNTIL": "fan go %1",
    "CONTROL_REPEATUNTIL": "athdhéan go %1",
    "CONTROL_WHILE": "chomh fada is %1",
    "CONTROL_FOREACH": "do gach %1 i %2",
    "CONTROL_STARTASCLONE": "nuair a thosaím mar chóip",
    "CONTROL_CREATECLONEOF": "cruthaigh cóip de %1",
    "CONTROL_CREATECLONEOF_MYSELF": "mise féin",
    "CONTROL_DELETETHISCLONE": "scrios an chóip seo",
    "CONTROL_COUNTER": "áiritheoir",
    "CONTROL_INCRCOUNTER": "incrimintigh an t-áiritheoir",
    "CONTROL_CLEARCOUNTER": "glan an t-áiritheoir",
    "CONTROL_ALLATONCE": "d'aon iarraidh",
    "DATA_SETVARIABLETO": "socraigh %1: %2",
    "DATA_CHANGEVARIABLEBY": "athraigh %1 de %2",
    "DATA_SHOWVARIABLE": "taispeáin athróg %1",
    "DATA_HIDEVARIABLE": "folaigh athróg %1",
    "DATA_ADDTOLIST": "cuir %1 le %2",
    "DATA_DELETEOFLIST": "scrios %1 as %2",
    "DATA_INSERTATLIST": "ionsáigh %1 ag %2 i %3",
    "DATA_REPLACEITEMOFLIST": "cuir %3 in áit mír %1 i %2",
    "DATA_ITEMOFLIST": "mír %1 as %2",
    "DATA_LENGTHOFLIST": "fad %1",
    "DATA_LISTCONTAINSITEM": "%1 agus %2 ann?",
    "DATA_SHOWLIST": "taispeáin liosta %1",
    "DATA_HIDELIST": "folaigh liosta %1",
    "DATA_INDEX_ALL": "uile",
    "DATA_INDEX_LAST": "deireanach",
    "DATA_INDEX_RANDOM": "randamach",
    "EVENT_WHENFLAGCLICKED": "nuair a chliceáiltear %1",
    "EVENT_WHENTHISSPRITECLICKED": "nuair a chliceáiltear an sprid seo",
    "EVENT_WHENSTAGECLICKED": "nuair a chliceáiltear an stáitse",
    "EVENT_WHENTOUCHINGOBJECT": "nuair a theagmhaíonn an sprid seo le %1",
    "EVENT_WHENBROADCASTRECEIVED": "nuair a fhaighim %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "nuair a chuirtear %1 suas",
    "EVENT_WHENGREATERTHAN": "nuair atá %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "amadóir",
    "EVENT_BROADCAST": "craol %1",
    "EVENT_BROADCASTANDWAIT": "craol %1 agus fan",
    "EVENT_WHENKEYPRESSED": "nuair a bhrúitear eochair %1",
    "EVENT_WHENKEYPRESSED_SPACE": "spás",
    "EVENT_WHENKEYPRESSED_LEFT": "saighead chlé",
    "EVENT_WHENKEYPRESSED_RIGHT": "saighead dheas",
    "EVENT_WHENKEYPRESSED_DOWN": "saighead síos",
    "EVENT_WHENKEYPRESSED_UP": "saighead suas",
    "EVENT_WHENKEYPRESSED_ANY": "ceann ar bith",
    "LOOKS_SAYFORSECS": "abair %1 ar feadh %2 soicind",
    "LOOKS_SAY": "abair %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "smaoinigh %1 ar feadh %2 soicind",
    "LOOKS_THINK": "smaoinigh %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "taispeáin",
    "LOOKS_HIDE": "folaigh",
    "LOOKS_HIDEALLSPRITES": "folaigh gach sprid",
    "LOOKS_EFFECT_COLOR": "dath",
    "LOOKS_EFFECT_FISHEYE": "súil an éisc",
    "LOOKS_EFFECT_WHIRL": "rothlú",
    "LOOKS_EFFECT_PIXELATE": "picteilíniú",
    "LOOKS_EFFECT_MOSAIC": "mósáic",
    "LOOKS_EFFECT_BRIGHTNESS": "gile",
    "LOOKS_EFFECT_GHOST": "taibhse",
    "LOOKS_CHANGEEFFECTBY": "athraigh maisíocht %1 de %2",
    "LOOKS_SETEFFECTTO": "socraigh maisíocht %1: %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "glan na maisíochtaí grafaice",
    "LOOKS_CHANGESIZEBY": "athraigh an méid de %1",
    "LOOKS_SETSIZETO": "socraigh an méid: %1 %",
    "LOOKS_SIZE": "méid",
    "LOOKS_CHANGESTRETCHBY": "athraigh an síneadh de %1",
    "LOOKS_SETSTRETCHTO": "socraigh an síneadh: %1 %",
    "LOOKS_SWITCHCOSTUMETO": "athraigh an chulaith go %1",
    "LOOKS_NEXTCOSTUME": "an chéad chulaith eile",
    "LOOKS_SWITCHBACKDROPTO": "athraigh an cúlra go %1",
    "LOOKS_GOTOFRONTBACK": "téigh go dtí an tsraith %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "thosaigh",
    "LOOKS_GOTOFRONTBACK_BACK": "dheiridh",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "téigh %1 %2 sraith",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "ar aghaidh",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "ar gcúl",
    "LOOKS_BACKDROPNUMBERNAME": "cúlra %1",
    "LOOKS_COSTUMENUMBERNAME": "culaith %1",
    "LOOKS_NUMBERNAME_NUMBER": "uimhir",
    "LOOKS_NUMBERNAME_NAME": "ainm",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "athraigh an cúlra go %1 agus fan",
    "LOOKS_NEXTBACKDROP": "an chéad chúlra eile",
    "LOOKS_PREVIOUSBACKDROP": "cúlra roimhe seo",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "bog %1 coiscéim",
    "MOTION_TURNLEFT": "rothlaigh %1 %2 céim",
    "MOTION_TURNRIGHT": "rothlaigh %1 %2 céim",
    "MOTION_POINTINDIRECTION": "tabhair aghaidh ar %1",
    "MOTION_POINTTOWARDS": "tabhair aghaidh i dtreo %1",
    "MOTION_POINTTOWARDS_POINTER": "pointeoir-luiche",
    "MOTION_GOTO": "téigh go %1",
    "MOTION_GOTO_POINTER": "pointeoir-luiche",
    "MOTION_GOTO_RANDOM": "ionad randamach",
    "MOTION_GOTOXY": "téigh go x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "sleamhnaigh %1 soicind go x: %2 y: %3",
    "MOTION_GLIDETO": "sleamhnaigh %1 soicind go %2",
    "MOTION_GLIDETO_POINTER": "pointeoir-luiche",
    "MOTION_GLIDETO_RANDOM": "ionad randamach",
    "MOTION_CHANGEXBY": "athraigh x de %1",
    "MOTION_SETX": "socraigh x: %1",
    "MOTION_CHANGEYBY": "athraigh y de %1",
    "MOTION_SETY": "socraigh y: %1",
    "MOTION_IFONEDGEBOUNCE": "más ar an imeall, preab",
    "MOTION_SETROTATIONSTYLE": "socraigh an stíl rothlaithe: %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "clé-deas",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "ná rothlaigh",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "timpeall ar fad",
    "MOTION_XPOSITION": "ionad x",
    "MOTION_YPOSITION": "ionad y",
    "MOTION_DIRECTION": "treo",
    "MOTION_SCROLLRIGHT": "scrollaigh ar dheis %1",
    "MOTION_SCROLLUP": "scrollaigh suas %1",
    "MOTION_ALIGNSCENE": "ailínigh radharc %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "bun ar chlé",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "bun ar dheis",
    "MOTION_ALIGNSCENE_MIDDLE": "lár",
    "MOTION_ALIGNSCENE_TOPLEFT": "barr ar chlé",
    "MOTION_ALIGNSCENE_TOPRIGHT": "barr ar dheis",
    "MOTION_XSCROLL": "scrollaigh x",
    "MOTION_YSCROLL": "scrollaigh y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "uimhir randamach idir %1 agus %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 agus %2",
    "OPERATORS_OR": "%1 nó %2",
    "OPERATORS_NOT": "séanadh %1",
    "OPERATORS_JOIN": "ceangail %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "litir %1 de %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "fad %1",
    "OPERATORS_CONTAINS": "%1 agus %2 ann?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "slánaigh %1",
    "OPERATORS_MATHOP": "%1 as %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "urlár",
    "OPERATORS_MATHOP_CEILING": "síleáil",
    "OPERATORS_MATHOP_SQRT": "sqrt",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "sainmhínigh %1",
    "SENSING_TOUCHINGOBJECT": "i dteagmháil le %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "pointeoir-luiche",
    "SENSING_TOUCHINGOBJECT_EDGE": "ciumhais",
    "SENSING_TOUCHINGCOLOR": "i dteagmháil le dath %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "dath %1 i dteagmháil le %2?",
    "SENSING_DISTANCETO": "fad go dtí %1",
    "SENSING_DISTANCETO_POINTER": "pointeoir-luiche",
    "SENSING_ASKANDWAIT": "fiafraigh %1 agus fan",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "freagra",
    "SENSING_KEYPRESSED": "eochair %1 brúite?",
    "SENSING_MOUSEDOWN": "luchóg síos?",
    "SENSING_MOUSEX": "luchóg x",
    "SENSING_MOUSEY": "luchóg y",
    "SENSING_SETDRAGMODE": "socraigh mód tarraingthe: %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "intarraingthe",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "dotharraingthe",
    "SENSING_LOUDNESS": "treise",
    "SENSING_LOUD": "os ard?",
    "SENSING_TIMER": "amadóir",
    "SENSING_RESETTIMER": "athshocraigh an t-amadóir",
    "SENSING_OF": "%1 as %2",
    "SENSING_OF_XPOSITION": "ionad x",
    "SENSING_OF_YPOSITION": "ionad y",
    "SENSING_OF_DIRECTION": "treo",
    "SENSING_OF_COSTUMENUMBER": "culaith #",
    "SENSING_OF_COSTUMENAME": "ainm na culaithe",
    "SENSING_OF_SIZE": "méid",
    "SENSING_OF_VOLUME": "airde",
    "SENSING_OF_BACKDROPNUMBER": "cúlra #",
    "SENSING_OF_BACKDROPNAME": "ainm an chúlra",
    "SENSING_OF_STAGE": "Stáitse",
    "SENSING_CURRENT": "%1 reatha",
    "SENSING_CURRENT_YEAR": "bliain",
    "SENSING_CURRENT_MONTH": "mí",
    "SENSING_CURRENT_DATE": "dáta",
    "SENSING_CURRENT_DAYOFWEEK": "lá den tseachtain",
    "SENSING_CURRENT_HOUR": "uair",
    "SENSING_CURRENT_MINUTE": "nóiméad",
    "SENSING_CURRENT_SECOND": "soicind",
    "SENSING_DAYSSINCE2000": "laethanta ó 2000",
    "SENSING_USERNAME": "ainm úsáideora",
    "SENSING_USERID": "aitheantas úsáideora",
    "SOUND_PLAY": "cas fuaim %1",
    "SOUND_PLAYUNTILDONE": "seinn fuaim %1 go dtí a deireadh",
    "SOUND_STOPALLSOUNDS": "stop gach fuaim",
    "SOUND_SETEFFECTO": "socraigh maisíocht %1: %2",
    "SOUND_CHANGEEFFECTBY": "athraigh maisíocht %1 de %2",
    "SOUND_CLEAREFFECTS": "glan na maisíochtaí fuaime",
    "SOUND_EFFECTS_PITCH": "tuinairde",
    "SOUND_EFFECTS_PAN": "peanáil ar chlé/ar dheis",
    "SOUND_CHANGEVOLUMEBY": "athraigh airde na fuaime de %1",
    "SOUND_SETVOLUMETO": "socraigh airde na fuaime: %1%",
    "SOUND_VOLUME": "airde",
    "CATEGORY_MOTION": "Gluaiseacht",
    "CATEGORY_LOOKS": "Cuma",
    "CATEGORY_SOUND": "Fuaim",
    "CATEGORY_EVENTS": "Teagmhais",
    "CATEGORY_CONTROL": "Rialú",
    "CATEGORY_SENSING": "Brath",
    "CATEGORY_OPERATORS": "Oibreoirí",
    "CATEGORY_VARIABLES": "Athróga",
    "CATEGORY_MYBLOCKS": "Mo Chuid Blocanna",
    "DUPLICATE": "Cóipeáil",
    "DELETE": "Scrios",
    "ADD_COMMENT": "Cuir Nóta Tráchta Leis",
    "REMOVE_COMMENT": "Bain an Nóta Tráchta",
    "DELETE_BLOCK": "Scrios an Bloc",
    "DELETE_X_BLOCKS": "Scrios %1 Bloc",
    "DELETE_ALL_BLOCKS": "Scrios na %1 bloc go léir?",
    "CLEAN_UP": "Glan na Blocanna",
    "HELP": "Cabhair",
    "UNDO": "Cealaigh",
    "REDO": "Athdhéan",
    "EDIT_PROCEDURE": "Eagar",
    "SHOW_PROCEDURE_DEFINITION": "Taispeáin an sainmhíniú",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Abair rud éigin...",
    "COLOUR_HUE_LABEL": "Dath",
    "COLOUR_SATURATION_LABEL": "Sáithiú",
    "COLOUR_BRIGHTNESS_LABEL": "Gile",
    "CHANGE_VALUE_TITLE": "Athraigh an luach:",
    "RENAME_VARIABLE": "Cuir ainm nua ar an athróg",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Cuir Ainm Nua ar an Athróg",
    "NEW_VARIABLE": "Cruthaigh Athróg",
    "NEW_VARIABLE_TITLE": "Ainm na hathróige nua:",
    "VARIABLE_MODAL_TITLE": "Athróg Nua",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Cruthaigh Bloc",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Cruthaigh Liosta",
    "NEW_LIST_TITLE": "Ainm an liosta nua:",
    "LIST_MODAL_TITLE": "Liosta Nua",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Cuir ainm nua ar an liosta",
    "NEW_BROADCAST_MESSAGE": "Teachtaireacht nua",
    "NEW_BROADCAST_MESSAGE_TITLE": "Ainm na teachtaireachta nua:",
    "BROADCAST_MODAL_TITLE": "Teachtaireacht Nua",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "teachtaireacht1"
};

Blockly.ScratchMsgs.locales["gd"] =
{
    "CONTROL_FOREVER": "gu buan",
    "CONTROL_REPEAT": "dèan seo %1 tursan",
    "CONTROL_IF": "ma tha %1 a-rèiste",
    "CONTROL_ELSE": "air neo",
    "CONTROL_STOP": "cuir stad air",
    "CONTROL_STOP_ALL": "na h-uile",
    "CONTROL_STOP_THIS": "an sgriobt seo",
    "CONTROL_STOP_OTHER": "sgriobtaichean eile na sprìd",
    "CONTROL_WAIT": "fan fad %1 diog",
    "CONTROL_WAITUNTIL": "fan gus am bi %1",
    "CONTROL_REPEATUNTIL": "dèan a-rithist e gus am bi %1",
    "CONTROL_WHILE": "fhad ’s a tha %1",
    "CONTROL_FOREACH": "airson gach %1 air %2",
    "CONTROL_STARTASCLONE": "nuair a thèid thu nad chlòn",
    "CONTROL_CREATECLONEOF": "cruthaich clòn %1",
    "CONTROL_CREATECLONEOF_MYSELF": "dhut fhèin",
    "CONTROL_DELETETHISCLONE": "sguab às an clòn seo",
    "CONTROL_COUNTER": "cunntair",
    "CONTROL_INCRCOUNTER": "cunntair ioncramaide",
    "CONTROL_CLEARCOUNTER": "falamhaich an cunntair",
    "CONTROL_ALLATONCE": "a h-uile gin aig an aon àm",
    "DATA_SETVARIABLETO": "suidhich %1 air %2",
    "DATA_CHANGEVARIABLEBY": "atharraich %1 le %2",
    "DATA_SHOWVARIABLE": "seall an caochladair %1",
    "DATA_HIDEVARIABLE": "falaich an caochladair %1",
    "DATA_ADDTOLIST": "cuir %1 ri %2",
    "DATA_DELETEOFLIST": "sguab às %1 de %2",
    "DATA_INSERTATLIST": "cuir %1 ris aig %2 de %3",
    "DATA_REPLACEITEMOFLIST": "cuir an àite %1 de %2 le %3",
    "DATA_ITEMOFLIST": "nì %1 de %2",
    "DATA_LENGTHOFLIST": "an fhaide aig %1",
    "DATA_LISTCONTAINSITEM": "%2 air %1",
    "DATA_SHOWLIST": "seall an liosta %1",
    "DATA_HIDELIST": "falaich an liosta %1",
    "DATA_INDEX_ALL": "na h-uile",
    "DATA_INDEX_LAST": "am fear mu dheireadh",
    "DATA_INDEX_RANDOM": "tuaireamach",
    "EVENT_WHENFLAGCLICKED": "le briogadh air %1",
    "EVENT_WHENTHISSPRITECLICKED": "le briogadh air an sprìd seo",
    "EVENT_WHENSTAGECLICKED": "le briogadh air an àrd-ùrlar",
    "EVENT_WHENTOUCHINGOBJECT": "nuair a bhios an sprìd a’ beantainn ri %1",
    "EVENT_WHENBROADCASTRECEIVED": "nuair a gheibh thu %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "nuair a thèid an cùlaibh na %1",
    "EVENT_WHENGREATERTHAN": "nuair a thèid %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "tìmear",
    "EVENT_BROADCAST": "craol %1",
    "EVENT_BROADCASTANDWAIT": "craol %1 is fan",
    "EVENT_WHENKEYPRESSED": "le brùthadh na h-iuchrach %1",
    "EVENT_WHENKEYPRESSED_SPACE": "spàs",
    "EVENT_WHENKEYPRESSED_LEFT": "saighead gu clì",
    "EVENT_WHENKEYPRESSED_RIGHT": "saighead gu deas",
    "EVENT_WHENKEYPRESSED_DOWN": "saighead sìos",
    "EVENT_WHENKEYPRESSED_UP": "saighead suas",
    "EVENT_WHENKEYPRESSED_ANY": "sam bith",
    "LOOKS_SAYFORSECS": "can %1 fad %2 diog",
    "LOOKS_SAY": "can %1",
    "LOOKS_HELLO": "Shin thu!",
    "LOOKS_THINKFORSECS": "smaoinich %1 fad %2 diog",
    "LOOKS_THINK": "smaoinich %1",
    "LOOKS_HMM": "An-dà…",
    "LOOKS_SHOW": "seall",
    "LOOKS_HIDE": "falaich",
    "LOOKS_HIDEALLSPRITES": "cuir gach sprìd am falach",
    "LOOKS_EFFECT_COLOR": "datha",
    "LOOKS_EFFECT_FISHEYE": "sùil èisg",
    "LOOKS_EFFECT_WHIRL": "cuairteige",
    "LOOKS_EFFECT_PIXELATE": "phiogsailean",
    "LOOKS_EFFECT_MOSAIC": "mosàig",
    "LOOKS_EFFECT_BRIGHTNESS": "soilleireachd",
    "LOOKS_EFFECT_GHOST": "taibhse",
    "LOOKS_CHANGEEFFECTBY": "atharraich èifeachd %1 le %2",
    "LOOKS_SETEFFECTTO": "suidhich èifeachd %1 de %2 ort",
    "LOOKS_CLEARGRAPHICEFFECTS": "falamhaich na h-èifeachdan",
    "LOOKS_CHANGESIZEBY": "atharraich do mheud le %1",
    "LOOKS_SETSIZETO": "suidhich do mheud air %1 %",
    "LOOKS_SIZE": "meud",
    "LOOKS_CHANGESTRETCHBY": "atharraich an sìneadh le %1",
    "LOOKS_SETSTRETCHTO": "suidhich an sìneadh air %1 %",
    "LOOKS_SWITCHCOSTUMETO": "cuir an t-aodach %1 ort",
    "LOOKS_NEXTCOSTUME": "an t-ath-aodach",
    "LOOKS_SWITCHBACKDROPTO": "atharraich an cùlaibh gu %1",
    "LOOKS_GOTOFRONTBACK": "rach gu breath %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "an fhìor-bheulaibh",
    "LOOKS_GOTOFRONTBACK_BACK": "an fhìor-chùlaibh",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "rach %2 breath %1",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "an comhair a’ bheòil",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "an comhair a’ chùil",
    "LOOKS_BACKDROPNUMBERNAME": "cùlaibh %1",
    "LOOKS_COSTUMENUMBERNAME": "aodach %1",
    "LOOKS_NUMBERNAME_NUMBER": "àireamh",
    "LOOKS_NUMBERNAME_NAME": "ainm",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "atharraich an cùlaibh gun %1 is fan",
    "LOOKS_NEXTBACKDROP": "an t-ath-chùlaibh",
    "LOOKS_PREVIOUSBACKDROP": "chùlaibh roimhe",
    "LOOKS_RANDOMBACKDROP": "cùlaibh air thuaiream",
    "MOTION_MOVESTEPS": "gluais %1 ceum",
    "MOTION_TURNLEFT": "cuairtich %1 le %2 ceum",
    "MOTION_TURNRIGHT": "cuairtich %1 le %2 ceum",
    "MOTION_POINTINDIRECTION": "cuir d’ aghaidh ri %1",
    "MOTION_POINTTOWARDS": "cuir d’ aghaidh an comhair %1",
    "MOTION_POINTTOWARDS_POINTER": "tomhaire na luchaige",
    "MOTION_GOTO": "rach gu %1",
    "MOTION_GOTO_POINTER": "tomhaire na luchaige",
    "MOTION_GOTO_RANDOM": "ionad air thuaiream",
    "MOTION_GOTOXY": "rach gu x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "gluais fad %1 diog gu x: %2 y: %3",
    "MOTION_GLIDETO": "gluais fad %1 diog gu %2",
    "MOTION_GLIDETO_POINTER": "tomhaire na luchaige",
    "MOTION_GLIDETO_RANDOM": "ionad air thuaiream",
    "MOTION_CHANGEXBY": "atharraich x le %1",
    "MOTION_SETX": "suidhich x air %1",
    "MOTION_CHANGEYBY": "atharraich y le %1",
    "MOTION_SETY": "suidhich y air %1",
    "MOTION_IFONEDGEBOUNCE": "ma tha thu ris an oir, boc",
    "MOTION_SETROTATIONSTYLE": "suidhich stoidhle na cuairte air %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "clì is deas",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "gun chuairteachadh",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "cuairt shlàn",
    "MOTION_XPOSITION": "ionad x",
    "MOTION_YPOSITION": "ionad y",
    "MOTION_DIRECTION": "comhair",
    "MOTION_SCROLLRIGHT": "sgrolaich gu deas le %1",
    "MOTION_SCROLLUP": "sgrolaich suas le %1",
    "MOTION_ALIGNSCENE": "co-thaobhaich an sealladh dhan %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "taobh clì aig a’ bhonn",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "taobh deas aig a’ bhonn",
    "MOTION_ALIGNSCENE_MIDDLE": "mheadhan",
    "MOTION_ALIGNSCENE_TOPLEFT": "taobh clì aig a’ bharr",
    "MOTION_ALIGNSCENE_TOPRIGHT": "taobh deas aig a’ bharr",
    "MOTION_XSCROLL": "sgroladh x",
    "MOTION_YSCROLL": "sgroladh y",
    "MOTION_STAGE_SELECTED": "Chaidh an t-àrd-ùrlar a thaghadh: chan eil bloca gluasaid ann",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 × %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "luach tuaireamach eadar %1 is %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 agus %2",
    "OPERATORS_OR": "%1 no %2",
    "OPERATORS_NOT": "e fallsa gu bheil %1",
    "OPERATORS_JOIN": "ceangail %1 ri %2",
    "OPERATORS_JOIN_APPLE": "ubhal",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "litir %1 de %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "an fhaide aig %1",
    "OPERATORS_CONTAINS": "%2 air %1",
    "OPERATORS_MOD": "%1 mòidealas %2",
    "OPERATORS_ROUND": "cuairtich %1",
    "OPERATORS_MATHOP": "%1 aig %2",
    "OPERATORS_MATHOP_ABS": "an luach absaloideach",
    "OPERATORS_MATHOP_FLOOR": "an cuairteachadh sìos",
    "OPERATORS_MATHOP_CEILING": "an cuairteachadh suas",
    "OPERATORS_MATHOP_SQRT": "am freumh ceàrnagach",
    "OPERATORS_MATHOP_SIN": "an sìneas",
    "OPERATORS_MATHOP_COS": "an co-shìneas",
    "OPERATORS_MATHOP_TAN": "am beantan",
    "OPERATORS_MATHOP_ASIN": "an t-àrc-shìneas",
    "OPERATORS_MATHOP_ACOS": "an t-àrc-cho-shìneas",
    "OPERATORS_MATHOP_ATAN": "an t-àrc-bheantan",
    "OPERATORS_MATHOP_LN": "an log-àireamh nàdarra",
    "OPERATORS_MATHOP_LOG": "an log-àireamh",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "mìnich %1",
    "SENSING_TOUCHINGOBJECT": "%1 a’ beantainn riut",
    "SENSING_TOUCHINGOBJECT_POINTER": "tomhaire na luchaige",
    "SENSING_TOUCHINGOBJECT_EDGE": "an oir",
    "SENSING_TOUCHINGCOLOR": "an dath %1 a’ beantainn riut",
    "SENSING_COLORISTOUCHINGCOLOR": "an dath %1 a’ beantainn ri %2",
    "SENSING_DISTANCETO": "an t-astar gu %1",
    "SENSING_DISTANCETO_POINTER": "tomhaire na luchaige",
    "SENSING_ASKANDWAIT": "faighnich %1 is fan",
    "SENSING_ASK_TEXT": "Dè an t-ainm a th’ort?",
    "SENSING_ANSWER": "freagairt",
    "SENSING_KEYPRESSED": "an iuchair %1 ga brùthadh",
    "SENSING_MOUSEDOWN": "an luchag ga briogadh",
    "SENSING_MOUSEX": "x na luchaige",
    "SENSING_MOUSEY": "y na luchaige",
    "SENSING_SETDRAGMODE": "suidhich %1 a shlaodadh leis an luchag",
    "SENSING_SETDRAGMODE_DRAGGABLE": "gun tèid",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "nach tèid",
    "SENSING_LOUDNESS": "àirde na fuaime",
    "SENSING_LOUD": "an fhuaim air",
    "SENSING_TIMER": "tìmear",
    "SENSING_RESETTIMER": "ath-shuidhich an tìmear",
    "SENSING_OF": "%1 aig %2",
    "SENSING_OF_XPOSITION": "ionad x",
    "SENSING_OF_YPOSITION": "ionad y",
    "SENSING_OF_DIRECTION": "comhair",
    "SENSING_OF_COSTUMENUMBER": "àireamh an aodaich",
    "SENSING_OF_COSTUMENAME": "ainm an aodaich",
    "SENSING_OF_SIZE": "meud",
    "SENSING_OF_VOLUME": "àirde na fuaime",
    "SENSING_OF_BACKDROPNUMBER": "àireamh a’ chùlaibh",
    "SENSING_OF_BACKDROPNAME": "ainm a’ chùlaibh",
    "SENSING_OF_STAGE": "Àrd-ùrlar",
    "SENSING_CURRENT": "%1 làithreach",
    "SENSING_CURRENT_YEAR": "bliadhna",
    "SENSING_CURRENT_MONTH": "mìos",
    "SENSING_CURRENT_DATE": "ceann-là",
    "SENSING_CURRENT_DAYOFWEEK": "latha na seachdaine",
    "SENSING_CURRENT_HOUR": "uair",
    "SENSING_CURRENT_MINUTE": "mionaid",
    "SENSING_CURRENT_SECOND": "diog",
    "SENSING_DAYSSINCE2000": "làithean o 2000 a-mach",
    "SENSING_USERNAME": "ainm-cleachdaiche",
    "SENSING_USERID": "ID a’ chleachdaiche",
    "SOUND_PLAY": "tòisich air fuaim %1 a chluich",
    "SOUND_PLAYUNTILDONE": "cluich fuaim %1 gu lèir",
    "SOUND_STOPALLSOUNDS": "cuir stad air a h-uile fuaim",
    "SOUND_SETEFFECTO": "suidhich èifeachd %1 de %2 ort",
    "SOUND_CHANGEEFFECTBY": "atharraich èifeachd %1 le %2",
    "SOUND_CLEAREFFECTS": "falamhaich èifeachdan na fuaime",
    "SOUND_EFFECTS_PITCH": "gleus",
    "SOUND_EFFECTS_PAN": "panachadh gu clì/deas",
    "SOUND_CHANGEVOLUMEBY": "atharraich àirde na fuaime le %1",
    "SOUND_SETVOLUMETO": "suidhich àirde na fuaime air %1%",
    "SOUND_VOLUME": "àirde na fuaime",
    "CATEGORY_MOTION": "Gluasad",
    "CATEGORY_LOOKS": "Coltas",
    "CATEGORY_SOUND": "Fuaim",
    "CATEGORY_EVENTS": "Tachartas",
    "CATEGORY_CONTROL": "Smachd",
    "CATEGORY_SENSING": "Mothachadh",
    "CATEGORY_OPERATORS": "Gnìomharaiche",
    "CATEGORY_VARIABLES": "Caochladairean",
    "CATEGORY_MYBLOCKS": "Am bloca agam",
    "DUPLICATE": "Dùblaich",
    "DELETE": "Sguab às",
    "ADD_COMMENT": "Cuir beachd ris",
    "REMOVE_COMMENT": "Thoir am beachd air falbh",
    "DELETE_BLOCK": "Sguab às am bloca",
    "DELETE_X_BLOCKS": "Sguab às %1 bloca(ichean)",
    "DELETE_ALL_BLOCKS": "A bheil thu airson na %1 bloca(ichean) uile a sguabadh às?",
    "CLEAN_UP": "Sgioblaich na blocaichean",
    "HELP": "Cobhair",
    "UNDO": "Neo-dhèan",
    "REDO": "Ath-dhèan",
    "EDIT_PROCEDURE": "Deasaich",
    "SHOW_PROCEDURE_DEFINITION": "Rach dhan mhìneachadh",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Can rudeigin…",
    "COLOUR_HUE_LABEL": "Dath",
    "COLOUR_SATURATION_LABEL": "Sàthachd",
    "COLOUR_BRIGHTNESS_LABEL": "Soilleireachd",
    "CHANGE_VALUE_TITLE": "Atharraich an luach:",
    "RENAME_VARIABLE": "Thoir ainm ùr air a’ chaochladair",
    "RENAME_VARIABLE_TITLE": "Thoir ainm ùr air gach caochladair “%1”:",
    "RENAME_VARIABLE_MODAL_TITLE": "Thoir ainm ùr air a’ chaochladair",
    "NEW_VARIABLE": "Cruthaich caochladair",
    "NEW_VARIABLE_TITLE": "Ainm ùr a’ chaochladair:",
    "VARIABLE_MODAL_TITLE": "Caochladair ùr",
    "VARIABLE_ALREADY_EXISTS": "Tha caochladair air a bheil “%1” ann mu thràth.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "Tha caochladair air a bheil “%1” ann mu thràth airson caochladair eile dhen t-seòrsa “%2”.",
    "DELETE_VARIABLE_CONFIRMATION": "A bheil thu airson a sguabadh às dha %1 chleachdadh/cleachdaidhean dhen chaochladair “%2”?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Chan urrainn dhuinn an caochladair “%1” a sguabadh às on a e am broinn mìneachadh an fhoincsein “%2”",
    "DELETE_VARIABLE": "Sguab às dhan chaochladair “%1”",
    "NEW_PROCEDURE": "Cruthaich bloca",
    "PROCEDURE_ALREADY_EXISTS": "Tha modh air a bheil “%1” ann mu thràth.",
    "NEW_LIST": "Cruthaich liosta",
    "NEW_LIST_TITLE": "Ainm na liosta ùire:",
    "LIST_MODAL_TITLE": "Liosta ùr",
    "LIST_ALREADY_EXISTS": "Tha liosta air a bheil “%1” ann mu thràth.",
    "RENAME_LIST_TITLE": "Thoir ainm ùr air gach liosta “%1”:",
    "RENAME_LIST_MODAL_TITLE": "Thoir ainm ùr air an liosta",
    "NEW_BROADCAST_MESSAGE": "Teachdaireachd ùr",
    "NEW_BROADCAST_MESSAGE_TITLE": "Ainm na teachdaireachd ùire:",
    "BROADCAST_MODAL_TITLE": "Teachdaireachd ùr",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "teachdaireachd1"
};

Blockly.ScratchMsgs.locales["gl"] =
{
    "CONTROL_FOREVER": "para sempre",
    "CONTROL_REPEAT": "repetir %1",
    "CONTROL_IF": "se %1 entón",
    "CONTROL_ELSE": "se non",
    "CONTROL_STOP": "parar",
    "CONTROL_STOP_ALL": "todos",
    "CONTROL_STOP_THIS": "este programa",
    "CONTROL_STOP_OTHER": "outros programas na figura",
    "CONTROL_WAIT": "agardar %1 segundos",
    "CONTROL_WAITUNTIL": "agardar ata %1",
    "CONTROL_REPEATUNTIL": "repetir ata %1",
    "CONTROL_WHILE": "mentres %1",
    "CONTROL_FOREACH": "para cada %1 en %2",
    "CONTROL_STARTASCLONE": "cando comece como clon",
    "CONTROL_CREATECLONEOF": "crear clon de %1",
    "CONTROL_CREATECLONEOF_MYSELF": "a min mesmo",
    "CONTROL_DELETETHISCLONE": "borrar este clon",
    "CONTROL_COUNTER": "contador",
    "CONTROL_INCRCOUNTER": "contador de incremento",
    "CONTROL_CLEARCOUNTER": "limpar contador",
    "CONTROL_ALLATONCE": "todo de vez",
    "DATA_SETVARIABLETO": "fixar %1 a %2",
    "DATA_CHANGEVARIABLEBY": "trocar %1 por %2",
    "DATA_SHOWVARIABLE": "amosar variable %1",
    "DATA_HIDEVARIABLE": "ocultar variable %1",
    "DATA_ADDTOLIST": "engadir %1 a %2",
    "DATA_DELETEOFLIST": "borrar %1 de %2",
    "DATA_INSERTATLIST": "inserir %1 en %2 de %3",
    "DATA_REPLACEITEMOFLIST": "reemplazar elemento %1 de %2 con %3",
    "DATA_ITEMOFLIST": "elemento %1 de %2",
    "DATA_LENGTHOFLIST": "lonxitude de %1",
    "DATA_LISTCONTAINSITEM": "%1 contén %2?",
    "DATA_SHOWLIST": "amosar lista %1",
    "DATA_HIDELIST": "ocultar lista %1",
    "DATA_INDEX_ALL": "todos",
    "DATA_INDEX_LAST": "último",
    "DATA_INDEX_RANDOM": "ao chou",
    "EVENT_WHENFLAGCLICKED": "cando se prema %1",
    "EVENT_WHENTHISSPRITECLICKED": "cando se prema esta figura",
    "EVENT_WHENSTAGECLICKED": "cando se prema no escenario",
    "EVENT_WHENTOUCHINGOBJECT": "cando esta figura toca %1",
    "EVENT_WHENBROADCASTRECEIVED": "cando reciba %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "cando o fondo cambie a %1",
    "EVENT_WHENGREATERTHAN": "cando %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "cronómetro",
    "EVENT_BROADCAST": "emitir %1",
    "EVENT_BROADCASTANDWAIT": "emitir %1 e agardar",
    "EVENT_WHENKEYPRESSED": "cando se prema a tecla %1",
    "EVENT_WHENKEYPRESSED_SPACE": "espazo",
    "EVENT_WHENKEYPRESSED_LEFT": "frecha esquerda",
    "EVENT_WHENKEYPRESSED_RIGHT": "frecha dereita",
    "EVENT_WHENKEYPRESSED_DOWN": "frecha abaixo",
    "EVENT_WHENKEYPRESSED_UP": "frecha arriba",
    "EVENT_WHENKEYPRESSED_ANY": "calquera",
    "LOOKS_SAYFORSECS": "dicir %1 durante %2 segundos",
    "LOOKS_SAY": "dicir %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "pensar %1 durante %2 segundos",
    "LOOKS_THINK": "pensar %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "amosar",
    "LOOKS_HIDE": "ocultar",
    "LOOKS_HIDEALLSPRITES": "agochar todas as figuras",
    "LOOKS_EFFECT_COLOR": "cor",
    "LOOKS_EFFECT_FISHEYE": "ollo de peixe",
    "LOOKS_EFFECT_WHIRL": "remuiño",
    "LOOKS_EFFECT_PIXELATE": "pixelar",
    "LOOKS_EFFECT_MOSAIC": "mosaico",
    "LOOKS_EFFECT_BRIGHTNESS": "luminosidade",
    "LOOKS_EFFECT_GHOST": "desaparecer",
    "LOOKS_CHANGEEFFECTBY": "trocar o efecto %1 por %2",
    "LOOKS_SETEFFECTTO": "fixar efecto %1 a %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "quitar efectos gráficos",
    "LOOKS_CHANGESIZEBY": "cambiar tamaño por %1",
    "LOOKS_SETSIZETO": "fixar tamaño a %1 %",
    "LOOKS_SIZE": "tamaño",
    "LOOKS_CHANGESTRETCHBY": "cambiar estiramento por %1",
    "LOOKS_SETSTRETCHTO": "fixar estiramento en %1 %",
    "LOOKS_SWITCHCOSTUMETO": "mudar vestimenta a %1",
    "LOOKS_NEXTCOSTUME": "seguinte vestimenta",
    "LOOKS_SWITCHBACKDROPTO": "cambiar fondo a %1",
    "LOOKS_GOTOFRONTBACK": "ir a capa %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "fronte",
    "LOOKS_GOTOFRONTBACK_BACK": "atrás",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "ir %1 %2 capas",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "adiante",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "atrás",
    "LOOKS_BACKDROPNUMBERNAME": "fondo %1",
    "LOOKS_COSTUMENUMBERNAME": "vestimenta %1",
    "LOOKS_NUMBERNAME_NUMBER": "número",
    "LOOKS_NUMBERNAME_NAME": "nome",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "cambiar fondo a %1 e agardar",
    "LOOKS_NEXTBACKDROP": "seguinte fondo",
    "LOOKS_PREVIOUSBACKDROP": "fondo anterior",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "mover %1 paso",
    "MOTION_TURNLEFT": "xirar %1 %2 grados",
    "MOTION_TURNRIGHT": "xirar %1 %2 grados",
    "MOTION_POINTINDIRECTION": "apuntar en dirección %1",
    "MOTION_POINTTOWARDS": "apuntar cara a %1",
    "MOTION_POINTTOWARDS_POINTER": "punteiro do rato",
    "MOTION_GOTO": "ir a %1",
    "MOTION_GOTO_POINTER": "punteiro do rato",
    "MOTION_GOTO_RANDOM": "posición aleatoria",
    "MOTION_GOTOXY": "ir a x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "esbarar %1 seg a x: %2 y: %3",
    "MOTION_GLIDETO": "esbarar %1 seg a %2",
    "MOTION_GLIDETO_POINTER": "punteiro do rato",
    "MOTION_GLIDETO_RANDOM": "posición aleatoria",
    "MOTION_CHANGEXBY": "cambiar x por %1",
    "MOTION_SETX": "fixar x a %1",
    "MOTION_CHANGEYBY": "cambiar y por %1",
    "MOTION_SETY": "fixar y a %1",
    "MOTION_IFONEDGEBOUNCE": "se toca un bordo, rebotar",
    "MOTION_SETROTATIONSTYLE": "fixar estilo de rotación %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "esquerda-dereita",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "non rotar",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "en todas as direccións",
    "MOTION_XPOSITION": "posición x",
    "MOTION_YPOSITION": "posición y",
    "MOTION_DIRECTION": "dirección",
    "MOTION_SCROLLRIGHT": "desprazamento dereita %1",
    "MOTION_SCROLLUP": "desprazamento arriba %1",
    "MOTION_ALIGNSCENE": "aliñar escena %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "abaixo esquerda",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "abaixo dereita",
    "MOTION_ALIGNSCENE_MIDDLE": "medio",
    "MOTION_ALIGNSCENE_TOPLEFT": "arriba esquerda",
    "MOTION_ALIGNSCENE_TOPRIGHT": "arriba dereita",
    "MOTION_XSCROLL": "desprazamento x",
    "MOTION_YSCROLL": "desprazamento y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "número ao choun entre %1 e %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 e %2",
    "OPERATORS_OR": "%1 ou %2",
    "OPERATORS_NOT": "non %1",
    "OPERATORS_JOIN": "unir %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "letra %1 de %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "lonxitude de %1",
    "OPERATORS_CONTAINS": "%1 contén %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "redondear %1",
    "OPERATORS_MATHOP": "%1 de %2",
    "OPERATORS_MATHOP_ABS": "valor absoluto",
    "OPERATORS_MATHOP_FLOOR": "chan",
    "OPERATORS_MATHOP_CEILING": "teito",
    "OPERATORS_MATHOP_SQRT": "raíz cadrada",
    "OPERATORS_MATHOP_SIN": "seno",
    "OPERATORS_MATHOP_COS": "coseno",
    "OPERATORS_MATHOP_TAN": "tanxente",
    "OPERATORS_MATHOP_ASIN": "arco seno",
    "OPERATORS_MATHOP_ACOS": "arco coseno",
    "OPERATORS_MATHOP_ATAN": "arco tanxente",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "definir %1",
    "SENSING_TOUCHINGOBJECT": "tocando %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "punteiro do rato",
    "SENSING_TOUCHINGOBJECT_EDGE": "bordo",
    "SENSING_TOUCHINGCOLOR": "tocando cor %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "cor %1 está tocando %2?",
    "SENSING_DISTANCETO": "distancia a %1",
    "SENSING_DISTANCETO_POINTER": "punteiro do rato",
    "SENSING_ASKANDWAIT": "preguntar %1 e agardar",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "resposta",
    "SENSING_KEYPRESSED": "tecla %1 premida?",
    "SENSING_MOUSEDOWN": "rato premido?",
    "SENSING_MOUSEX": "posición x do rato",
    "SENSING_MOUSEY": "posición y do rato",
    "SENSING_SETDRAGMODE": "fixar modo de arrastre %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "arrastrábel",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "non arrastrábel",
    "SENSING_LOUDNESS": "intensidade do son",
    "SENSING_LOUD": "alto?",
    "SENSING_TIMER": "cronómetro",
    "SENSING_RESETTIMER": "reiniciar o cronómetro",
    "SENSING_OF": "%1 de %2",
    "SENSING_OF_XPOSITION": "posición x",
    "SENSING_OF_YPOSITION": "posición y",
    "SENSING_OF_DIRECTION": "dirección",
    "SENSING_OF_COSTUMENUMBER": "vestimenta #",
    "SENSING_OF_COSTUMENAME": "nome da vestimenta",
    "SENSING_OF_SIZE": "tamaño",
    "SENSING_OF_VOLUME": "volume",
    "SENSING_OF_BACKDROPNUMBER": "fondo #",
    "SENSING_OF_BACKDROPNAME": "nome do fondo",
    "SENSING_OF_STAGE": "Escenario",
    "SENSING_CURRENT": "actual %1",
    "SENSING_CURRENT_YEAR": "ano",
    "SENSING_CURRENT_MONTH": "mes",
    "SENSING_CURRENT_DATE": "data",
    "SENSING_CURRENT_DAYOFWEEK": "día da semana",
    "SENSING_CURRENT_HOUR": "hora",
    "SENSING_CURRENT_MINUTE": "minuto",
    "SENSING_CURRENT_SECOND": "segundo",
    "SENSING_DAYSSINCE2000": "días desde o 2000",
    "SENSING_USERNAME": "nome de usuario",
    "SENSING_USERID": "identificador de usuario",
    "SOUND_PLAY": "iniciar son %1",
    "SOUND_PLAYUNTILDONE": "reproducir %1 até rematar",
    "SOUND_STOPALLSOUNDS": "deter todos os sons",
    "SOUND_SETEFFECTO": "fixar efecto %1 a %2",
    "SOUND_CHANGEEFFECTBY": "trocar o efecto %1 por %2",
    "SOUND_CLEAREFFECTS": "limpar efectos de son",
    "SOUND_EFFECTS_PITCH": "ton",
    "SOUND_EFFECTS_PAN": "desprazar esquerda/dereita",
    "SOUND_CHANGEVOLUMEBY": "cambiar volume en %1",
    "SOUND_SETVOLUMETO": "fixar volume en %1%",
    "SOUND_VOLUME": "volume",
    "CATEGORY_MOTION": "Movemento",
    "CATEGORY_LOOKS": "Aparencia",
    "CATEGORY_SOUND": "Son",
    "CATEGORY_EVENTS": "Eventos",
    "CATEGORY_CONTROL": "Control",
    "CATEGORY_SENSING": "Sensores",
    "CATEGORY_OPERATORS": "Operadores",
    "CATEGORY_VARIABLES": "Variábeis",
    "CATEGORY_MYBLOCKS": "Os meus bloques",
    "DUPLICATE": "Duplicar",
    "DELETE": "Borrar",
    "ADD_COMMENT": "Engadir comentario",
    "REMOVE_COMMENT": "Retirar comentario",
    "DELETE_BLOCK": "Eliminar bloque",
    "DELETE_X_BLOCKS": "Eliminar %1 bloques",
    "DELETE_ALL_BLOCKS": "Eliminar os %1 bloques?",
    "CLEAN_UP": "Limpar bloques",
    "HELP": "Axuda",
    "UNDO": "Desfacer",
    "REDO": "Refacer",
    "EDIT_PROCEDURE": "Editar",
    "SHOW_PROCEDURE_DEFINITION": "Ir a definición",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Dicir algo...",
    "COLOUR_HUE_LABEL": "Cor",
    "COLOUR_SATURATION_LABEL": "Saturación",
    "COLOUR_BRIGHTNESS_LABEL": "Luminosidade",
    "CHANGE_VALUE_TITLE": "Cambiar valor:",
    "RENAME_VARIABLE": "Renomear variábel",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Renomear variábel",
    "NEW_VARIABLE": "Crear unha variábel",
    "NEW_VARIABLE_TITLE": "Novo nome da variábel:",
    "VARIABLE_MODAL_TITLE": "Nova Variable",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Crear un bloque",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Crear unha lista",
    "NEW_LIST_TITLE": "Novo nome da lista:",
    "LIST_MODAL_TITLE": "Nova lista",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Renomear lista",
    "NEW_BROADCAST_MESSAGE": "Nova mensaxe",
    "NEW_BROADCAST_MESSAGE_TITLE": "Novo nome da mensaxe:",
    "BROADCAST_MODAL_TITLE": "Mensaxe nova",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "mensaxe1"
};

Blockly.ScratchMsgs.locales["he"] =
{
    "CONTROL_FOREVER": "לעולמים",
    "CONTROL_REPEAT": "חזור  %1 פעמים",
    "CONTROL_IF": "אם %1 אז",
    "CONTROL_ELSE": "אחרת",
    "CONTROL_STOP": "עצור",
    "CONTROL_STOP_ALL": "הכל",
    "CONTROL_STOP_THIS": "תסריט זה",
    "CONTROL_STOP_OTHER": "תסריטים אחרים בדמות",
    "CONTROL_WAIT": "חכה %1 שניות",
    "CONTROL_WAITUNTIL": "חכה עד ש %1",
    "CONTROL_REPEATUNTIL": "חזור עד ש %1",
    "CONTROL_WHILE": "כל עוד %1",
    "CONTROL_FOREACH": "עבור כל %1 ב %2",
    "CONTROL_STARTASCLONE": "כאשר מופעל ככפיל",
    "CONTROL_CREATECLONEOF": "צור כפיל של %1",
    "CONTROL_CREATECLONEOF_MYSELF": "עצמי",
    "CONTROL_DELETETHISCLONE": "מחק כפיל זה",
    "CONTROL_COUNTER": "מונה",
    "CONTROL_INCRCOUNTER": "הגדל מונה",
    "CONTROL_CLEARCOUNTER": "אפס מונה",
    "CONTROL_ALLATONCE": "הכל בבת אחת",
    "DATA_SETVARIABLETO": "קבע %1 ל %2",
    "DATA_CHANGEVARIABLEBY": "שנה ערך %1 ב %2",
    "DATA_SHOWVARIABLE": "הצג משתנה %1",
    "DATA_HIDEVARIABLE": "הסתר משתנה %1",
    "DATA_ADDTOLIST": "הוסף %1 ל %2",
    "DATA_DELETEOFLIST": "מחק פריט %1 מתוך %2",
    "DATA_INSERTATLIST": "הכנס %1 במקום %2 של %3",
    "DATA_REPLACEITEMOFLIST": "קבע פריט %1 של %2 ל %3",
    "DATA_ITEMOFLIST": "פריט %1 של %2",
    "DATA_LENGTHOFLIST": "אורך של %1",
    "DATA_LISTCONTAINSITEM": "%1 מכיל %2 ?",
    "DATA_SHOWLIST": "הצג רשימה %1",
    "DATA_HIDELIST": "הסתר רשימה %1",
    "DATA_INDEX_ALL": "הכל",
    "DATA_INDEX_LAST": "אחרון",
    "DATA_INDEX_RANDOM": "אקראי",
    "EVENT_WHENFLAGCLICKED": "כאשר לוחצים על %1",
    "EVENT_WHENTHISSPRITECLICKED": "כאשר לוחצים על דמות זו",
    "EVENT_WHENSTAGECLICKED": "כאשר לוחצים על הבמה",
    "EVENT_WHENTOUCHINGOBJECT": "כאשר דמות זו נוגעת ב %1",
    "EVENT_WHENBROADCASTRECEIVED": "כאשר מתקבל מסר %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "כאשר הרקע משתנה ל %1",
    "EVENT_WHENGREATERTHAN": "כאשר %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "שעון עצר",
    "EVENT_BROADCAST": "שדר מסר %1",
    "EVENT_BROADCASTANDWAIT": "שדר מסר %1 וחכה",
    "EVENT_WHENKEYPRESSED": "כאשר נלחץ מקש %1",
    "EVENT_WHENKEYPRESSED_SPACE": "רווח",
    "EVENT_WHENKEYPRESSED_LEFT": "חץ שמאלי",
    "EVENT_WHENKEYPRESSED_RIGHT": "חץ ימני",
    "EVENT_WHENKEYPRESSED_DOWN": "חץ מטה",
    "EVENT_WHENKEYPRESSED_UP": "חץ מעלה",
    "EVENT_WHENKEYPRESSED_ANY": "כל",
    "LOOKS_SAYFORSECS": "אמור %1 למשך %2 שניות",
    "LOOKS_SAY": "אמור %1",
    "LOOKS_HELLO": "שלום!",
    "LOOKS_THINKFORSECS": "חשוב %1 למשך %2 שניות",
    "LOOKS_THINK": "חשוב %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "הצג",
    "LOOKS_HIDE": "הסתר",
    "LOOKS_HIDEALLSPRITES": "הסתר את כל הדמויות",
    "LOOKS_EFFECT_COLOR": "צבע",
    "LOOKS_EFFECT_FISHEYE": "עין דג",
    "LOOKS_EFFECT_WHIRL": "סחרור",
    "LOOKS_EFFECT_PIXELATE": "פיקסלים",
    "LOOKS_EFFECT_MOSAIC": "פסיפס",
    "LOOKS_EFFECT_BRIGHTNESS": "בהירות",
    "LOOKS_EFFECT_GHOST": "רוח",
    "LOOKS_CHANGEEFFECTBY": "שנה אפקט %1 ב %2",
    "LOOKS_SETEFFECTTO": "קבע אפקט %1 ל %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "נקה אפקטים",
    "LOOKS_CHANGESIZEBY": "שנה גודל ב %1",
    "LOOKS_SETSIZETO": "קבע גודל ל %1 %",
    "LOOKS_SIZE": "גודל",
    "LOOKS_CHANGESTRETCHBY": "שנה מתיחה ב %1",
    "LOOKS_SETSTRETCHTO": "קבע מתיחה ל %1",
    "LOOKS_SWITCHCOSTUMETO": "קבע תלבושת ל %1",
    "LOOKS_NEXTCOSTUME": "התלבושת הבאה",
    "LOOKS_SWITCHBACKDROPTO": "קבע רקע ל %1",
    "LOOKS_GOTOFRONTBACK": "העבר לשכבה ה %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "קדמית",
    "LOOKS_GOTOFRONTBACK_BACK": "אחורית",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "העבר %2 שכבות %1",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "קדימה",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "אחורה",
    "LOOKS_BACKDROPNUMBERNAME": "רקע %1",
    "LOOKS_COSTUMENUMBERNAME": "תלבושת %1",
    "LOOKS_NUMBERNAME_NUMBER": "מספר",
    "LOOKS_NUMBERNAME_NAME": "שם",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "החלף רקע ל %1 וחכה",
    "LOOKS_NEXTBACKDROP": "הרקע הבא",
    "LOOKS_PREVIOUSBACKDROP": "הרקע הקודם",
    "LOOKS_RANDOMBACKDROP": "רקע אקראי",
    "MOTION_MOVESTEPS": "זוז %1 צעדים",
    "MOTION_TURNLEFT": "הסתובב %1 %2 מעלות",
    "MOTION_TURNRIGHT": "הסתובב %1 %2 מעלות",
    "MOTION_POINTINDIRECTION": "פנה לכיוון %1",
    "MOTION_POINTTOWARDS": "פנה לכיוון של %1",
    "MOTION_POINTTOWARDS_POINTER": "מצביע העכבר",
    "MOTION_GOTO": "קפוץ אל %1",
    "MOTION_GOTO_POINTER": "מצביע העכבר",
    "MOTION_GOTO_RANDOM": "מיקום אקראי",
    "MOTION_GOTOXY": "קפוץ אל x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "גלוש %1 שניות ל x: %2 y: %3",
    "MOTION_GLIDETO": "גלוש %1 שניות ל %2",
    "MOTION_GLIDETO_POINTER": "סמן העכבר",
    "MOTION_GLIDETO_RANDOM": "מיקום אקראי",
    "MOTION_CHANGEXBY": "שנה את ערך x ב %1",
    "MOTION_SETX": "קבע את x ל %1",
    "MOTION_CHANGEYBY": "שנה את ערך y ב %1",
    "MOTION_SETY": "קבע את ערך y ל %1",
    "MOTION_IFONEDGEBOUNCE": "בנגיעה במסגרת שנה כיוון",
    "MOTION_SETROTATIONSTYLE": "קבע אופן סיבוב %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "שמאל-ימין",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "בטל סיבוב",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "מסביב",
    "MOTION_XPOSITION": "מיקום על ציר x",
    "MOTION_YPOSITION": "מיקום על ציר Y",
    "MOTION_DIRECTION": "כיוון",
    "MOTION_SCROLLRIGHT": "גלול ימינה %1",
    "MOTION_SCROLLUP": "גלול למעלה %1",
    "MOTION_ALIGNSCENE": "ישר סצנה %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "למטה־משמאל",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "למטה־מימין",
    "MOTION_ALIGNSCENE_MIDDLE": "אמצעי",
    "MOTION_ALIGNSCENE_TOPLEFT": "למעלה־משמאל",
    "MOTION_ALIGNSCENE_TOPRIGHT": "למעלה־מימין",
    "MOTION_XSCROLL": "גלילה בציר x",
    "MOTION_YSCROLL": "גלילה בציר y",
    "MOTION_STAGE_SELECTED": "נבחרה במה: אין לבנים לתנועה",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "בחר מספר אקראי בין %1 ל %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 וגם %2",
    "OPERATORS_OR": "%1 או %2",
    "OPERATORS_NOT": "לא %1",
    "OPERATORS_JOIN": "חבר %1 %2",
    "OPERATORS_JOIN_APPLE": "תפוח",
    "OPERATORS_JOIN_BANANA": "בננה",
    "OPERATORS_LETTEROF": "אות %1 של %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "האורך של %1",
    "OPERATORS_CONTAINS": "%1 מכיל %2 ?",
    "OPERATORS_MOD": "%1 מודולו %2",
    "OPERATORS_ROUND": "עגל %1",
    "OPERATORS_MATHOP": "%1 של %2",
    "OPERATORS_MATHOP_ABS": "ערך מוחלט",
    "OPERATORS_MATHOP_FLOOR": "עיגול למטה",
    "OPERATORS_MATHOP_CEILING": "עיגול למעלה",
    "OPERATORS_MATHOP_SQRT": "שורש ריבועי",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": " ^e",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "הגדר %1",
    "SENSING_TOUCHINGOBJECT": "נוגע ב %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "סמן העכבר",
    "SENSING_TOUCHINGOBJECT_EDGE": "קצה",
    "SENSING_TOUCHINGCOLOR": "נוגע בצבע  %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "צבע %1 נוגע בצבע %2?",
    "SENSING_DISTANCETO": "מרחק אל %1",
    "SENSING_DISTANCETO_POINTER": "סמן העכבר",
    "SENSING_ASKANDWAIT": "שאל %1 והמתן",
    "SENSING_ASK_TEXT": "מה השם שלך?",
    "SENSING_ANSWER": "תשובה",
    "SENSING_KEYPRESSED": "מקש %1 נלחץ?",
    "SENSING_MOUSEDOWN": "עכבר נלחץ?",
    "SENSING_MOUSEX": "מיקום עכבר בציר x",
    "SENSING_MOUSEY": "מיקום עכבר בציר y",
    "SENSING_SETDRAGMODE": "קבע מצב גרירה ל %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "ניתן לגרירה",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "לא ניתן לגרירה",
    "SENSING_LOUDNESS": "עוצמת קול",
    "SENSING_LOUD": "עוצמת קול?",
    "SENSING_TIMER": "שעון עצר",
    "SENSING_RESETTIMER": "אפס מונה",
    "SENSING_OF": "%1 של %2",
    "SENSING_OF_XPOSITION": "מיקום על ציר x",
    "SENSING_OF_YPOSITION": "מיקום על ציר y",
    "SENSING_OF_DIRECTION": "כיוון",
    "SENSING_OF_COSTUMENUMBER": "תלבושת #",
    "SENSING_OF_COSTUMENAME": "שם תלבושת",
    "SENSING_OF_SIZE": "גודל",
    "SENSING_OF_VOLUME": "עוצמת קול",
    "SENSING_OF_BACKDROPNUMBER": "רקע #",
    "SENSING_OF_BACKDROPNAME": "שם רקע",
    "SENSING_OF_STAGE": "במה",
    "SENSING_CURRENT": "%1 נוכחית",
    "SENSING_CURRENT_YEAR": "שנה",
    "SENSING_CURRENT_MONTH": "חודש",
    "SENSING_CURRENT_DATE": "תאריך",
    "SENSING_CURRENT_DAYOFWEEK": "יום בשבוע",
    "SENSING_CURRENT_HOUR": "שעה",
    "SENSING_CURRENT_MINUTE": "דקה",
    "SENSING_CURRENT_SECOND": "שניה",
    "SENSING_DAYSSINCE2000": "ימים מאז 2000",
    "SENSING_USERNAME": "שם משתמש",
    "SENSING_USERID": "זהות המשתמש",
    "SOUND_PLAY": "נגן צליל %1",
    "SOUND_PLAYUNTILDONE": "נגן צליל %1 עד לסיום",
    "SOUND_STOPALLSOUNDS": "הפסק את כל הצלילים",
    "SOUND_SETEFFECTO": "קבע אפקט %1 ל %2",
    "SOUND_CHANGEEFFECTBY": "שנה אפקט %1 ב %2",
    "SOUND_CLEAREFFECTS": "נקה אפקטים קוליים",
    "SOUND_EFFECTS_PITCH": "גובה צליל",
    "SOUND_EFFECTS_PAN": "ערוץ שמע שמאלי/ימני",
    "SOUND_CHANGEVOLUMEBY": "שנה עוצמת קול ב %1",
    "SOUND_SETVOLUMETO": "קבע עוצמת קול ל %1%",
    "SOUND_VOLUME": "עוצמת קול",
    "CATEGORY_MOTION": "תנועה",
    "CATEGORY_LOOKS": "מראה",
    "CATEGORY_SOUND": "צלילים",
    "CATEGORY_EVENTS": "אירועים",
    "CATEGORY_CONTROL": "בקרה",
    "CATEGORY_SENSING": "חיישנים",
    "CATEGORY_OPERATORS": "מפעילים",
    "CATEGORY_VARIABLES": "משתנים",
    "CATEGORY_MYBLOCKS": "הלבנים שלי",
    "DUPLICATE": "שכפל",
    "DELETE": "מחק",
    "ADD_COMMENT": "הוסף תגובה",
    "REMOVE_COMMENT": "מחק תגובה",
    "DELETE_BLOCK": "מחק לבנה",
    "DELETE_X_BLOCKS": "מחק %1 לבנים ",
    "DELETE_ALL_BLOCKS": "למחוק את כל הלבנים של %1?",
    "CLEAN_UP": "נקה לבנים",
    "HELP": "עזרה",
    "UNDO": "בטל",
    "REDO": "בצע שוב",
    "EDIT_PROCEDURE": "ערוך",
    "SHOW_PROCEDURE_DEFINITION": "עבור להגדרה",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "אמור משהו...",
    "COLOUR_HUE_LABEL": "צבע",
    "COLOUR_SATURATION_LABEL": "רווי צבע",
    "COLOUR_BRIGHTNESS_LABEL": "בהירות",
    "CHANGE_VALUE_TITLE": "שנה ערך:",
    "RENAME_VARIABLE": "שנה שם משתנה",
    "RENAME_VARIABLE_TITLE": "שנה שמם של המשתנים \"%1\" ל:",
    "RENAME_VARIABLE_MODAL_TITLE": "שנה שם משתנה",
    "NEW_VARIABLE": "צור משתנה",
    "NEW_VARIABLE_TITLE": "שם המשתנה",
    "VARIABLE_MODAL_TITLE": "משתנה חדשה",
    "VARIABLE_ALREADY_EXISTS": "משתנה בשם \"%1\" כבר קיים",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "משתנה בשם  \"%1\" כבר קיים למשתנה  מסוג \"%2\"",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "צור לבנה",
    "PROCEDURE_ALREADY_EXISTS": "פרוצדורה בשם  \"%1\" כבר קיימת",
    "NEW_LIST": "צור רשימה",
    "NEW_LIST_TITLE": "שם הרשימה",
    "LIST_MODAL_TITLE": "רשימה חדשה",
    "LIST_ALREADY_EXISTS": "רשימה בשם \"%1\" כבר קיימת",
    "RENAME_LIST_TITLE": "שנה כל \"%1\" הרשימות ל:",
    "RENAME_LIST_MODAL_TITLE": "שנה שם רשימה",
    "NEW_BROADCAST_MESSAGE": "מסר חדש",
    "NEW_BROADCAST_MESSAGE_TITLE": "צור מסר חדש",
    "BROADCAST_MODAL_TITLE": "מסר חדש",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "מסר 1"
};

Blockly.ScratchMsgs.locales["hu"] =
{
    "CONTROL_FOREVER": "örökké",
    "CONTROL_REPEAT": "repeat %1",
    "CONTROL_IF": "if %1 then",
    "CONTROL_ELSE": "különben",
    "CONTROL_STOP": "állj",
    "CONTROL_STOP_ALL": "mind",
    "CONTROL_STOP_THIS": "ez a feladat",
    "CONTROL_STOP_OTHER": "szereplő többi feladata",
    "CONTROL_WAIT": "wait %1 seconds",
    "CONTROL_WAITUNTIL": "wait until %1",
    "CONTROL_REPEATUNTIL": "repeat until %1",
    "CONTROL_WHILE": "while %1",
    "CONTROL_FOREACH": "for each %1 in %2",
    "CONTROL_STARTASCLONE": "mikor indul, mint egy klón",
    "CONTROL_CREATECLONEOF": "create clone of %1",
    "CONTROL_CREATECLONEOF_MYSELF": "magadról",
    "CONTROL_DELETETHISCLONE": "klón törlése",
    "CONTROL_COUNTER": "számláló",
    "CONTROL_INCRCOUNTER": "increment counter",
    "CONTROL_CLEARCOUNTER": "clear counter",
    "CONTROL_ALLATONCE": "all at once",
    "DATA_SETVARIABLETO": "set %1 to %2",
    "DATA_CHANGEVARIABLEBY": "change %1 by %2",
    "DATA_SHOWVARIABLE": "show variable %1",
    "DATA_HIDEVARIABLE": "hide variable %1",
    "DATA_ADDTOLIST": "add %1 to %2",
    "DATA_DELETEOFLIST": "delete %1 of %2",
    "DATA_INSERTATLIST": "insert %1 at %2 of %3",
    "DATA_REPLACEITEMOFLIST": "replace item %1 of %2 with %3",
    "DATA_ITEMOFLIST": "item %1 of %2",
    "DATA_LENGTHOFLIST": "length of %1",
    "DATA_LISTCONTAINSITEM": "%1 contains %2?",
    "DATA_SHOWLIST": "show list %1",
    "DATA_HIDELIST": "hide list %1",
    "DATA_INDEX_ALL": "mind",
    "DATA_INDEX_LAST": "utolsó",
    "DATA_INDEX_RANDOM": "véletlen",
    "EVENT_WHENFLAGCLICKED": "when %1 clicked",
    "EVENT_WHENTHISSPRITECLICKED": "ha erre a szereplőre a kattint",
    "EVENT_WHENSTAGECLICKED": "when stage clicked",
    "EVENT_WHENTOUCHINGOBJECT": "when this sprite touches %1",
    "EVENT_WHENBROADCASTRECEIVED": "when I receive %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "when backdrop switches to %1",
    "EVENT_WHENGREATERTHAN": "when %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "időzítő",
    "EVENT_BROADCAST": "broadcast %1",
    "EVENT_BROADCASTANDWAIT": "broadcast %1 and wait",
    "EVENT_WHENKEYPRESSED": "when %1 key pressed",
    "EVENT_WHENKEYPRESSED_SPACE": "szóköz",
    "EVENT_WHENKEYPRESSED_LEFT": "balra nyíl",
    "EVENT_WHENKEYPRESSED_RIGHT": "jobbra nyíl",
    "EVENT_WHENKEYPRESSED_DOWN": "lefele nyíl",
    "EVENT_WHENKEYPRESSED_UP": "felfele nyíl",
    "EVENT_WHENKEYPRESSED_ANY": "egyik",
    "LOOKS_SAYFORSECS": "say %1 for %2 seconds",
    "LOOKS_SAY": "say %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "think %1 for %2 seconds",
    "LOOKS_THINK": "think %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "mutat",
    "LOOKS_HIDE": "elrejt",
    "LOOKS_HIDEALLSPRITES": "hide all sprites",
    "LOOKS_EFFECT_COLOR": "szín",
    "LOOKS_EFFECT_FISHEYE": "halszem",
    "LOOKS_EFFECT_WHIRL": "örvény",
    "LOOKS_EFFECT_PIXELATE": "képpont",
    "LOOKS_EFFECT_MOSAIC": "mozaik",
    "LOOKS_EFFECT_BRIGHTNESS": "fényerő",
    "LOOKS_EFFECT_GHOST": "szellem",
    "LOOKS_CHANGEEFFECTBY": "change %1 effect by %2",
    "LOOKS_SETEFFECTTO": "set %1 effect to %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "töröld a grafikus hatásokat",
    "LOOKS_CHANGESIZEBY": "change size by %1",
    "LOOKS_SETSIZETO": "set size to %1 %",
    "LOOKS_SIZE": "méret",
    "LOOKS_CHANGESTRETCHBY": "change stretch by %1",
    "LOOKS_SETSTRETCHTO": "set stretch to %1 %",
    "LOOKS_SWITCHCOSTUMETO": "switch costume to %1",
    "LOOKS_NEXTCOSTUME": "következő jelmez",
    "LOOKS_SWITCHBACKDROPTO": "switch backdrop to %1",
    "LOOKS_GOTOFRONTBACK": "go to %1 layer",
    "LOOKS_GOTOFRONTBACK_FRONT": "előtérbe",
    "LOOKS_GOTOFRONTBACK_BACK": "háttérbe",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "go %1 %2 layers",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "előre",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "hátra",
    "LOOKS_BACKDROPNUMBERNAME": "backdrop %1",
    "LOOKS_COSTUMENUMBERNAME": "costume %1",
    "LOOKS_NUMBERNAME_NUMBER": "szám",
    "LOOKS_NUMBERNAME_NAME": "név",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "switch backdrop to %1 and wait",
    "LOOKS_NEXTBACKDROP": "következő háttér",
    "LOOKS_PREVIOUSBACKDROP": "előző háttér",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "move %1 steps",
    "MOTION_TURNLEFT": "fordulj %1 %2 fokot",
    "MOTION_TURNRIGHT": "fordulj %1 %2 fokot",
    "MOTION_POINTINDIRECTION": "point in direction %1",
    "MOTION_POINTTOWARDS": "point towards %1",
    "MOTION_POINTTOWARDS_POINTER": "egérmutató",
    "MOTION_GOTO": "ugorj %1",
    "MOTION_GOTO_POINTER": "egérmutató",
    "MOTION_GOTO_RANDOM": "véletlen pozíció",
    "MOTION_GOTOXY": "go to x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "glide %1 secs to x: %2 y: %3",
    "MOTION_GLIDETO": "glide %1 secs to %2",
    "MOTION_GLIDETO_POINTER": "egérmutató",
    "MOTION_GLIDETO_RANDOM": "véletlen pozíció",
    "MOTION_CHANGEXBY": "change x by %1",
    "MOTION_SETX": "set x to %1",
    "MOTION_CHANGEYBY": "change y by %1",
    "MOTION_SETY": "set y to %1",
    "MOTION_IFONEDGEBOUNCE": "ha a szélén, ugrál",
    "MOTION_SETROTATIONSTYLE": "set rotation style %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "balra-jobbra",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "nem foroghat",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "foroghat",
    "MOTION_XPOSITION": "x pozíció",
    "MOTION_YPOSITION": "y pozíció",
    "MOTION_DIRECTION": "irány",
    "MOTION_SCROLLRIGHT": "scroll right %1",
    "MOTION_SCROLLUP": "scroll up %1",
    "MOTION_ALIGNSCENE": "align scene %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "bottom-left",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "bottom-right",
    "MOTION_ALIGNSCENE_MIDDLE": "middle",
    "MOTION_ALIGNSCENE_TOPLEFT": "top-left",
    "MOTION_ALIGNSCENE_TOPRIGHT": "top-right",
    "MOTION_XSCROLL": "x scroll",
    "MOTION_YSCROLL": "y scroll",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "pick random %1 to %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 és %2",
    "OPERATORS_OR": "%1 vagy %2",
    "OPERATORS_NOT": "not %1",
    "OPERATORS_JOIN": "join %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "letter %1 of %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "length of %1",
    "OPERATORS_CONTAINS": "%1 contains %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "round %1",
    "OPERATORS_MATHOP": "%1 of %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "lefelé kerekítve",
    "OPERATORS_MATHOP_CEILING": "felfelé kerekítve",
    "OPERATORS_MATHOP_SQRT": "sqrt",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "arcsin",
    "OPERATORS_MATHOP_ACOS": "arccos",
    "OPERATORS_MATHOP_ATAN": "arctan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "define %1",
    "SENSING_TOUCHINGOBJECT": "touching %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "egérmutató",
    "SENSING_TOUCHINGOBJECT_EDGE": "játéktér széle",
    "SENSING_TOUCHINGCOLOR": "touching color %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "color %1 is touching %2?",
    "SENSING_DISTANCETO": "distance to %1",
    "SENSING_DISTANCETO_POINTER": "egérmutató",
    "SENSING_ASKANDWAIT": "ask %1 and wait",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "válasz",
    "SENSING_KEYPRESSED": "key %1 pressed?",
    "SENSING_MOUSEDOWN": "egér lenyomva?",
    "SENSING_MOUSEX": "egér x",
    "SENSING_MOUSEY": "egér y",
    "SENSING_SETDRAGMODE": "set drag mode %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "draggable",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "not draggable",
    "SENSING_LOUDNESS": "hangerő",
    "SENSING_LOUD": "loud?",
    "SENSING_TIMER": "időzítő",
    "SENSING_RESETTIMER": "időzítő visszaállítása",
    "SENSING_OF": "%1 of %2",
    "SENSING_OF_XPOSITION": "x pozíció",
    "SENSING_OF_YPOSITION": "y pozíció",
    "SENSING_OF_DIRECTION": "irány",
    "SENSING_OF_COSTUMENUMBER": "lemez #",
    "SENSING_OF_COSTUMENAME": "jelmez név",
    "SENSING_OF_SIZE": "méret",
    "SENSING_OF_VOLUME": "hangerő",
    "SENSING_OF_BACKDROPNUMBER": "háttér sorszáma",
    "SENSING_OF_BACKDROPNAME": "háttér neve",
    "SENSING_OF_STAGE": "Játéktér",
    "SENSING_CURRENT": "current %1",
    "SENSING_CURRENT_YEAR": "év",
    "SENSING_CURRENT_MONTH": "hónap",
    "SENSING_CURRENT_DATE": "nap",
    "SENSING_CURRENT_DAYOFWEEK": "hét napja",
    "SENSING_CURRENT_HOUR": "óra",
    "SENSING_CURRENT_MINUTE": "perc",
    "SENSING_CURRENT_SECOND": "másodperc",
    "SENSING_DAYSSINCE2000": "napok 2000 óta",
    "SENSING_USERNAME": "felhasználónév",
    "SENSING_USERID": "user id",
    "SOUND_PLAY": "start sound %1",
    "SOUND_PLAYUNTILDONE": "play sound %1 until done",
    "SOUND_STOPALLSOUNDS": "minden hang álljon le",
    "SOUND_SETEFFECTO": "set %1 effect to %2",
    "SOUND_CHANGEEFFECTBY": "change %1 effect by %2",
    "SOUND_CLEAREFFECTS": "clear sound effects",
    "SOUND_EFFECTS_PITCH": "pitch",
    "SOUND_EFFECTS_PAN": "pan left/right",
    "SOUND_CHANGEVOLUMEBY": "change volume by %1",
    "SOUND_SETVOLUMETO": "set volume to %1%",
    "SOUND_VOLUME": "hangerő",
    "CATEGORY_MOTION": "Mozgás",
    "CATEGORY_LOOKS": "Kinézet",
    "CATEGORY_SOUND": "Hang",
    "CATEGORY_EVENTS": "Események",
    "CATEGORY_CONTROL": "Vezérlőelem",
    "CATEGORY_SENSING": "Érzékelés",
    "CATEGORY_OPERATORS": "Operátorok",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "My Blocks",
    "DUPLICATE": "Duplikálás",
    "DELETE": "Törlés",
    "ADD_COMMENT": "Add Comment",
    "REMOVE_COMMENT": "Remove Comment",
    "DELETE_BLOCK": "Delete Block",
    "DELETE_X_BLOCKS": "Delete %1 Blocks",
    "DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
    "CLEAN_UP": "Clean up Blocks",
    "HELP": "Súgó",
    "UNDO": "Visszavonás",
    "REDO": "Mégis",
    "EDIT_PROCEDURE": "Szerkesztés",
    "SHOW_PROCEDURE_DEFINITION": "Go to definition",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Say something...",
    "COLOUR_HUE_LABEL": "Szín",
    "COLOUR_SATURATION_LABEL": "Színtelítettség",
    "COLOUR_BRIGHTNESS_LABEL": "Fényerő",
    "CHANGE_VALUE_TITLE": "Change value:",
    "RENAME_VARIABLE": "Rename variable",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Rename Variable",
    "NEW_VARIABLE": "Készíts egy változót",
    "NEW_VARIABLE_TITLE": "New variable name:",
    "VARIABLE_MODAL_TITLE": "Új változó",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Készíts blokkot",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Készíts egy listát",
    "NEW_LIST_TITLE": "New list name:",
    "LIST_MODAL_TITLE": "Új lista",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Rename List",
    "NEW_BROADCAST_MESSAGE": "New message",
    "NEW_BROADCAST_MESSAGE_TITLE": "New message name:",
    "BROADCAST_MODAL_TITLE": "Új üzenet",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "üzenet1"
};

Blockly.ScratchMsgs.locales["id"] =
{
    "CONTROL_FOREVER": "selamanya",
    "CONTROL_REPEAT": "ulangi %1 kali",
    "CONTROL_IF": "jika %1 maka",
    "CONTROL_ELSE": "jika tidak",
    "CONTROL_STOP": "berhenti",
    "CONTROL_STOP_ALL": "semua",
    "CONTROL_STOP_THIS": "skrip ini",
    "CONTROL_STOP_OTHER": "skrip lain di sprite ini",
    "CONTROL_WAIT": "tunggu %1 detik",
    "CONTROL_WAITUNTIL": "tunggu sampai %1",
    "CONTROL_REPEATUNTIL": "ulangi sampai %1",
    "CONTROL_WHILE": "selama %1",
    "CONTROL_FOREACH": "untuk setiap %1 dalam %2",
    "CONTROL_STARTASCLONE": "ketika aku mulai sebagai clone",
    "CONTROL_CREATECLONEOF": "buat clone dari %1",
    "CONTROL_CREATECLONEOF_MYSELF": "diriku",
    "CONTROL_DELETETHISCLONE": "hapus clone ini",
    "CONTROL_COUNTER": "hitungan",
    "CONTROL_INCRCOUNTER": "tingkatkan hitungan",
    "CONTROL_CLEARCOUNTER": "bersihkan hitungan",
    "CONTROL_ALLATONCE": "semuanya sekaligus",
    "DATA_SETVARIABLETO": "atur %1 ke %2",
    "DATA_CHANGEVARIABLEBY": "ubah %1 sebesar %2",
    "DATA_SHOWVARIABLE": "tampilkan variabel %1",
    "DATA_HIDEVARIABLE": "sembunyikan variabel %1",
    "DATA_ADDTOLIST": "tambahkan %1 ke %2",
    "DATA_DELETEOFLIST": "hapus %1 dari %2",
    "DATA_INSERTATLIST": "sisipkan %1 pada %2 dari %3",
    "DATA_REPLACEITEMOFLIST": "ganti benda %1 dari %2 dengan %3",
    "DATA_ITEMOFLIST": "benda %1 dari %2",
    "DATA_LENGTHOFLIST": "panjang dari %1",
    "DATA_LISTCONTAINSITEM": "%1 berisi %2?",
    "DATA_SHOWLIST": "tampilkan daftar %1",
    "DATA_HIDELIST": "sembunyikan daftar %1",
    "DATA_INDEX_ALL": "semua",
    "DATA_INDEX_LAST": "terakhir",
    "DATA_INDEX_RANDOM": "random",
    "EVENT_WHENFLAGCLICKED": "ketika %1 diklik",
    "EVENT_WHENTHISSPRITECLICKED": "ketika sprite ini diklik",
    "EVENT_WHENSTAGECLICKED": "ketika panggung diklik",
    "EVENT_WHENTOUCHINGOBJECT": "ketika sprite ini menyentuk %1",
    "EVENT_WHENBROADCASTRECEIVED": "ketika aku menerima %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "ketika latar menjadi %1",
    "EVENT_WHENGREATERTHAN": "ketika %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "pengatur waktu",
    "EVENT_BROADCAST": "siarkan %1",
    "EVENT_BROADCASTANDWAIT": "siarkan %1 dan tunggu",
    "EVENT_WHENKEYPRESSED": "ketika tombol %1 ditekan",
    "EVENT_WHENKEYPRESSED_SPACE": "spasi",
    "EVENT_WHENKEYPRESSED_LEFT": "panah kiri",
    "EVENT_WHENKEYPRESSED_RIGHT": "panah kanan",
    "EVENT_WHENKEYPRESSED_DOWN": "panah bawah",
    "EVENT_WHENKEYPRESSED_UP": "panah atas",
    "EVENT_WHENKEYPRESSED_ANY": "manapun",
    "LOOKS_SAYFORSECS": "katakan %1 selama %2 detik",
    "LOOKS_SAY": "katakan %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "pikirkan %1 selama %2 detik",
    "LOOKS_THINK": "pikirkan %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "tampilkan",
    "LOOKS_HIDE": "sembunyikan",
    "LOOKS_HIDEALLSPRITES": "sembunyikan semua sprite",
    "LOOKS_EFFECT_COLOR": "warna",
    "LOOKS_EFFECT_FISHEYE": "mata ikan",
    "LOOKS_EFFECT_WHIRL": "pusaran",
    "LOOKS_EFFECT_PIXELATE": "pixelasi",
    "LOOKS_EFFECT_MOSAIC": "mosaik",
    "LOOKS_EFFECT_BRIGHTNESS": "kecerahan",
    "LOOKS_EFFECT_GHOST": "bayangan",
    "LOOKS_CHANGEEFFECTBY": "ubah efek %1 sebesar %2",
    "LOOKS_SETEFFECTTO": "atur efek %1 ke %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "hapus semua efek grafis",
    "LOOKS_CHANGESIZEBY": "ubah ukuran sebesar %1",
    "LOOKS_SETSIZETO": "atur ukuran ke %1 %",
    "LOOKS_SIZE": "ukuran",
    "LOOKS_CHANGESTRETCHBY": "ubah rentangan sebesar %1",
    "LOOKS_SETSTRETCHTO": "atur rentangan ke %1 %",
    "LOOKS_SWITCHCOSTUMETO": "ganti kostum ke %1",
    "LOOKS_NEXTCOSTUME": "kostum berikutnya",
    "LOOKS_SWITCHBACKDROPTO": "ganti latar ke %1",
    "LOOKS_GOTOFRONTBACK": "pergi ke lapisan %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "depan",
    "LOOKS_GOTOFRONTBACK_BACK": "belakang",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "pergi %1 %2 lapisan",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "maju",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "mundur",
    "LOOKS_BACKDROPNUMBERNAME": "latar %1",
    "LOOKS_COSTUMENUMBERNAME": "kostum %1",
    "LOOKS_NUMBERNAME_NUMBER": "angka",
    "LOOKS_NUMBERNAME_NAME": "nama",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "ganti latar ke %1 dan tunggu",
    "LOOKS_NEXTBACKDROP": "latar berikutnya",
    "LOOKS_PREVIOUSBACKDROP": "Latar sebelumnya",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "gerak %1 langkah",
    "MOTION_TURNLEFT": "putar %1 %2 derajat",
    "MOTION_TURNRIGHT": "putar %1 %2 derajat",
    "MOTION_POINTINDIRECTION": "mengarah ke arah %1",
    "MOTION_POINTTOWARDS": "mengarah ke %1",
    "MOTION_POINTTOWARDS_POINTER": "penunjuk tetikus",
    "MOTION_GOTO": "pergi ke %1",
    "MOTION_GOTO_POINTER": "penunjuk tetikus",
    "MOTION_GOTO_RANDOM": "posisi sembarang",
    "MOTION_GOTOXY": "pergi ke x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "meluncur %1 detik ke x: %2 y: %3",
    "MOTION_GLIDETO": "meluncur %1 detik ke %2",
    "MOTION_GLIDETO_POINTER": "penunjuk tetikus",
    "MOTION_GLIDETO_RANDOM": "posisi sembarang",
    "MOTION_CHANGEXBY": "ubah x sebesar %1",
    "MOTION_SETX": "atur x ke %1",
    "MOTION_CHANGEYBY": "ubah y sebesar %1",
    "MOTION_SETY": "atur y ke %1",
    "MOTION_IFONEDGEBOUNCE": "jika di pinggir, pantulkan",
    "MOTION_SETROTATIONSTYLE": "atur gaya rotasi %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "kiri-kanan",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "jangan berputar",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "seluruh",
    "MOTION_XPOSITION": "posisi x",
    "MOTION_YPOSITION": "posisi y",
    "MOTION_DIRECTION": "arah",
    "MOTION_SCROLLRIGHT": "gulir ke kanan %1",
    "MOTION_SCROLLUP": "gulir ke atas %1",
    "MOTION_ALIGNSCENE": "luruskan pemandangan %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "kiri-bawah",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "kanan-bawah",
    "MOTION_ALIGNSCENE_MIDDLE": "tengah",
    "MOTION_ALIGNSCENE_TOPLEFT": "kiri-atas",
    "MOTION_ALIGNSCENE_TOPRIGHT": "kanan-atas",
    "MOTION_XSCROLL": "guliran x",
    "MOTION_YSCROLL": "guliran y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "pilih acak dari %1 hingga %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 dan %2",
    "OPERATORS_OR": "%1 atau %2",
    "OPERATORS_NOT": "tidak %1",
    "OPERATORS_JOIN": "gabungkan %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "huruf %1 dari %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "panjang dari %1",
    "OPERATORS_CONTAINS": "%1 berisi %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "bulatkan %1",
    "OPERATORS_MATHOP": "%1 dari %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "floor",
    "OPERATORS_MATHOP_CEILING": "ceil",
    "OPERATORS_MATHOP_SQRT": "akar kuadrat",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "artikan %1",
    "SENSING_TOUCHINGOBJECT": "menyentuh %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "penunjuk tetikus",
    "SENSING_TOUCHINGOBJECT_EDGE": "pinggir",
    "SENSING_TOUCHINGCOLOR": "menyentuh warna %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "warna %1 menyentuh %2?",
    "SENSING_DISTANCETO": "jarak dari %1",
    "SENSING_DISTANCETO_POINTER": "penunujuk tetikus",
    "SENSING_ASKANDWAIT": "tanya %1 dan tunggu",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "jawaban",
    "SENSING_KEYPRESSED": "tombol %1 ditekan?",
    "SENSING_MOUSEDOWN": "tetikus ditekan?",
    "SENSING_MOUSEX": "x tetikus",
    "SENSING_MOUSEY": "y tetikus",
    "SENSING_SETDRAGMODE": "atur mode seret %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "dapat diseret",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "tidak dapat diseret",
    "SENSING_LOUDNESS": "kenyaringan",
    "SENSING_LOUD": "nyaring?",
    "SENSING_TIMER": "pengatur waktu",
    "SENSING_RESETTIMER": "atur ulang pengatur waktu",
    "SENSING_OF": "%1 dari %2",
    "SENSING_OF_XPOSITION": "posisi x",
    "SENSING_OF_YPOSITION": "posisi y",
    "SENSING_OF_DIRECTION": "arah",
    "SENSING_OF_COSTUMENUMBER": "kostum #",
    "SENSING_OF_COSTUMENAME": "nama kostum",
    "SENSING_OF_SIZE": "ukuran",
    "SENSING_OF_VOLUME": "volume",
    "SENSING_OF_BACKDROPNUMBER": "latar #",
    "SENSING_OF_BACKDROPNAME": "nama latar",
    "SENSING_OF_STAGE": "Stage",
    "SENSING_CURRENT": "%1 saat ini",
    "SENSING_CURRENT_YEAR": "tahun",
    "SENSING_CURRENT_MONTH": "bulan",
    "SENSING_CURRENT_DATE": "tanggal",
    "SENSING_CURRENT_DAYOFWEEK": "nama hari",
    "SENSING_CURRENT_HOUR": "jam",
    "SENSING_CURRENT_MINUTE": "menit",
    "SENSING_CURRENT_SECOND": "detik",
    "SENSING_DAYSSINCE2000": "hari-hari sejak 2000",
    "SENSING_USERNAME": "nama pengguna",
    "SENSING_USERID": "id pengguna",
    "SOUND_PLAY": "mulai suara %1",
    "SOUND_PLAYUNTILDONE": "mainkan suara %1 sampai selesai",
    "SOUND_STOPALLSOUNDS": "hentikan semua suara",
    "SOUND_SETEFFECTO": "atur efek %1 ke %2",
    "SOUND_CHANGEEFFECTBY": "ubah efek %1 sebesar %2",
    "SOUND_CLEAREFFECTS": "hapus semua efek suara",
    "SOUND_EFFECTS_PITCH": "nada",
    "SOUND_EFFECTS_PAN": "pan kiri/kanan",
    "SOUND_CHANGEVOLUMEBY": "ubah volume sebesar %1",
    "SOUND_SETVOLUMETO": "atur volume ke %1%",
    "SOUND_VOLUME": "volume",
    "CATEGORY_MOTION": "Gerakan",
    "CATEGORY_LOOKS": "Tampilan",
    "CATEGORY_SOUND": "Suara",
    "CATEGORY_EVENTS": "Kejadian",
    "CATEGORY_CONTROL": "Kontrol",
    "CATEGORY_SENSING": "Sensor",
    "CATEGORY_OPERATORS": "Operator",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "My Blocks",
    "DUPLICATE": "Gandakan",
    "DELETE": "Hapus",
    "ADD_COMMENT": "Tambahkan Komentar",
    "REMOVE_COMMENT": "Hapus Komentar",
    "DELETE_BLOCK": "Hapus Balok",
    "DELETE_X_BLOCKS": "Hapus %1 Balok-Balok",
    "DELETE_ALL_BLOCKS": "Hapus semua %1 balok?",
    "CLEAN_UP": "Bersihkan Balok-Balok",
    "HELP": "Bantuan",
    "UNDO": "Undo",
    "REDO": "Ulangi",
    "EDIT_PROCEDURE": "Edit",
    "SHOW_PROCEDURE_DEFINITION": "Pergi ke pengartian",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Katakan sesuatu...",
    "COLOUR_HUE_LABEL": "Warna",
    "COLOUR_SATURATION_LABEL": "Saturasi",
    "COLOUR_BRIGHTNESS_LABEL": "Keterangan",
    "CHANGE_VALUE_TITLE": "Ubah nilai:",
    "RENAME_VARIABLE": "Namakan ulang variabel",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Namakan Ulang Variabel",
    "NEW_VARIABLE": "Buat sebuah Variabel",
    "NEW_VARIABLE_TITLE": "Nama variabel baru:",
    "VARIABLE_MODAL_TITLE": "Variabel Baru",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Buat sebuah Balok",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Buat sebuah Daftar",
    "NEW_LIST_TITLE": "Nama daftar baru:",
    "LIST_MODAL_TITLE": "List Baru",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Namakan Ulang Daftar:",
    "NEW_BROADCAST_MESSAGE": "Pesan baru",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nama pesan baru:",
    "BROADCAST_MODAL_TITLE": "Pesan Baru",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "pesan1"
};

Blockly.ScratchMsgs.locales["it"] =
{
    "CONTROL_FOREVER": "per sempre",
    "CONTROL_REPEAT": "ripeti %1  volte",
    "CONTROL_IF": "se %1 allora",
    "CONTROL_ELSE": "altrimenti",
    "CONTROL_STOP": "ferma",
    "CONTROL_STOP_ALL": "tutto",
    "CONTROL_STOP_THIS": "questo script",
    "CONTROL_STOP_OTHER": "tutti gli altri script dello sprite",
    "CONTROL_WAIT": "attendi %1 secondi",
    "CONTROL_WAITUNTIL": "attendi fino a quando %1",
    "CONTROL_REPEATUNTIL": "ripeti fino a quando %1",
    "CONTROL_WHILE": "mentre %1",
    "CONTROL_FOREACH": "per ogni %1 in %2",
    "CONTROL_STARTASCLONE": "quando vengo clonato",
    "CONTROL_CREATECLONEOF": "crea clone di %1",
    "CONTROL_CREATECLONEOF_MYSELF": "me stesso",
    "CONTROL_DELETETHISCLONE": "elimina questo clone",
    "CONTROL_COUNTER": "contatore",
    "CONTROL_INCRCOUNTER": "incrementa contatore",
    "CONTROL_CLEARCOUNTER": "azzera contatore",
    "CONTROL_ALLATONCE": "esegui tutto insieme",
    "DATA_SETVARIABLETO": "porta %1 a %2",
    "DATA_CHANGEVARIABLEBY": "cambia %1 di %2",
    "DATA_SHOWVARIABLE": "mostra la variabile %1",
    "DATA_HIDEVARIABLE": "nascondi la variabile %1",
    "DATA_ADDTOLIST": "aggiungi %1 a %2",
    "DATA_DELETEOFLIST": "cancella %1 da %2",
    "DATA_INSERTATLIST": "inserisci %1 alla posizione %2 di %3",
    "DATA_REPLACEITEMOFLIST": "sostituisci elemento %1 di %2 con %3",
    "DATA_ITEMOFLIST": "elemento %1 di %2",
    "DATA_LENGTHOFLIST": "lunghezza di %1",
    "DATA_LISTCONTAINSITEM": "%1 contiene %2?",
    "DATA_SHOWLIST": "mostra la lista %1",
    "DATA_HIDELIST": "nascondi la lista %1",
    "DATA_INDEX_ALL": "tutto",
    "DATA_INDEX_LAST": "ultimo",
    "DATA_INDEX_RANDOM": "a caso",
    "EVENT_WHENFLAGCLICKED": "quando si clicca sullo sprite %1",
    "EVENT_WHENTHISSPRITECLICKED": "quando si clicca questo sprite",
    "EVENT_WHENSTAGECLICKED": "quando si clicca sullo Stage",
    "EVENT_WHENTOUCHINGOBJECT": "quando questo sprite tocca %1",
    "EVENT_WHENBROADCASTRECEIVED": "quando ricevo %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "quando lo sfondo passa a %1",
    "EVENT_WHENGREATERTHAN": "porta %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "cronometro",
    "EVENT_BROADCAST": "invia a tutti %1",
    "EVENT_BROADCASTANDWAIT": "invia a tutti %1 e attendi",
    "EVENT_WHENKEYPRESSED": "quando si preme il tasto %1",
    "EVENT_WHENKEYPRESSED_SPACE": "spazio",
    "EVENT_WHENKEYPRESSED_LEFT": "freccia sinistra",
    "EVENT_WHENKEYPRESSED_RIGHT": "freccia destra",
    "EVENT_WHENKEYPRESSED_DOWN": "freccia giù",
    "EVENT_WHENKEYPRESSED_UP": "freccia su",
    "EVENT_WHENKEYPRESSED_ANY": "qualunque",
    "LOOKS_SAYFORSECS": "dire %1 per %2 secondi",
    "LOOKS_SAY": "dire %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "pensa %1 per %2 secondi",
    "LOOKS_THINK": "pensa %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "mostra",
    "LOOKS_HIDE": "nascondi",
    "LOOKS_HIDEALLSPRITES": "nascondi tutti gli sprite",
    "LOOKS_EFFECT_COLOR": "colore",
    "LOOKS_EFFECT_FISHEYE": "fish-eye",
    "LOOKS_EFFECT_WHIRL": "mulinello",
    "LOOKS_EFFECT_PIXELATE": "effetto pixel",
    "LOOKS_EFFECT_MOSAIC": "mosaico",
    "LOOKS_EFFECT_BRIGHTNESS": "luminosità",
    "LOOKS_EFFECT_GHOST": "fantasma",
    "LOOKS_CHANGEEFFECTBY": "cambia effetto %1 di %2",
    "LOOKS_SETEFFECTTO": "porta effetto %1 a %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "rimuovi effetti grafici",
    "LOOKS_CHANGESIZEBY": "cambia dimensione di %1",
    "LOOKS_SETSIZETO": "porta dimensione a %1 %",
    "LOOKS_SIZE": "dimensione",
    "LOOKS_CHANGESTRETCHBY": "cambia allungamento di %1",
    "LOOKS_SETSTRETCHTO": "porta allungamento a %1 %",
    "LOOKS_SWITCHCOSTUMETO": "passa al costume %1",
    "LOOKS_NEXTCOSTUME": "costume seguente",
    "LOOKS_SWITCHBACKDROPTO": "passa allo sfondo %1",
    "LOOKS_GOTOFRONTBACK": "vai al %1 livello",
    "LOOKS_GOTOFRONTBACK_FRONT": "Primo piano",
    "LOOKS_GOTOFRONTBACK_BACK": "Secondo piano",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "vai %1 %2 livelli",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "avanti",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "indietro",
    "LOOKS_BACKDROPNUMBERNAME": "sfondo %1",
    "LOOKS_COSTUMENUMBERNAME": "costume %1",
    "LOOKS_NUMBERNAME_NUMBER": "numero",
    "LOOKS_NUMBERNAME_NAME": "nome",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "passa allo sfondo %1 e attendi",
    "LOOKS_NEXTBACKDROP": "passa allo sfondo seguente",
    "LOOKS_PREVIOUSBACKDROP": "sfondo precedente",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "fai %1 passi",
    "MOTION_TURNLEFT": "ruota %1 di %2 gradi",
    "MOTION_TURNRIGHT": "ruota %1 di %2 gradi",
    "MOTION_POINTINDIRECTION": "punta in direzione %1",
    "MOTION_POINTTOWARDS": "punta verso %1",
    "MOTION_POINTTOWARDS_POINTER": "puntatore del mouse",
    "MOTION_GOTO": "vai a %1",
    "MOTION_GOTO_POINTER": "puntatore del mouse",
    "MOTION_GOTO_RANDOM": "posizione a caso",
    "MOTION_GOTOXY": "vai a x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "scivola in %1 secondi a x: %2 y: %3",
    "MOTION_GLIDETO": "scivola in %1 secondi a %2",
    "MOTION_GLIDETO_POINTER": "puntatore del mouse",
    "MOTION_GLIDETO_RANDOM": "posizione a caso",
    "MOTION_CHANGEXBY": "cambia x di %1",
    "MOTION_SETX": "vai dove y è %1",
    "MOTION_CHANGEYBY": "cambia y di %1",
    "MOTION_SETY": "vai dove y è %1",
    "MOTION_IFONEDGEBOUNCE": "rimbalza quando tocchi il bordo",
    "MOTION_SETROTATIONSTYLE": "porta stile rotazione a %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "sinistra-destra",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "non ruotare",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "può ruotare",
    "MOTION_XPOSITION": "posizione x",
    "MOTION_YPOSITION": "posizione y",
    "MOTION_DIRECTION": "direzione",
    "MOTION_SCROLLRIGHT": "scrolla a destra di %1",
    "MOTION_SCROLLUP": "scrolla in alto di %1",
    "MOTION_ALIGNSCENE": "allinea la scena %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "in basso a sinistra",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "in basso a destra",
    "MOTION_ALIGNSCENE_MIDDLE": "in mezzo",
    "MOTION_ALIGNSCENE_TOPLEFT": "in alto a sinistra",
    "MOTION_ALIGNSCENE_TOPRIGHT": "in alto a destra",
    "MOTION_XSCROLL": "posizione x dello scroll",
    "MOTION_YSCROLL": "posizione y dello scroll",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "numero a caso tra %1 e %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 e %2",
    "OPERATORS_OR": "%1 o %2",
    "OPERATORS_NOT": "non %1",
    "OPERATORS_JOIN": "unione di %1 e %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "lettera %1 di %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "lunghezza di %1",
    "OPERATORS_CONTAINS": "%1 contiene %2?",
    "OPERATORS_MOD": "resto della divisione di %1 diviso %2",
    "OPERATORS_ROUND": "arrotonda %1",
    "OPERATORS_MATHOP": "%1 di %2",
    "OPERATORS_MATHOP_ABS": "valore assoluto",
    "OPERATORS_MATHOP_FLOOR": "intero inferiore",
    "OPERATORS_MATHOP_CEILING": "intero superiore",
    "OPERATORS_MATHOP_SQRT": "radice quadrata",
    "OPERATORS_MATHOP_SIN": "sen",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "arcsen",
    "OPERATORS_MATHOP_ACOS": "arccos",
    "OPERATORS_MATHOP_ATAN": "arctan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "definisci %1",
    "SENSING_TOUCHINGOBJECT": "sta toccando %1",
    "SENSING_TOUCHINGOBJECT_POINTER": "puntatore del mouse",
    "SENSING_TOUCHINGOBJECT_EDGE": "bordo",
    "SENSING_TOUCHINGCOLOR": "sta toccando il colore %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "il colore %1 sta toccando il colore %2?",
    "SENSING_DISTANCETO": "distanza da %1",
    "SENSING_DISTANCETO_POINTER": "puntatore del mouse",
    "SENSING_ASKANDWAIT": "chiedi %1 e attendi",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "risposta",
    "SENSING_KEYPRESSED": "tasto %1 premuto?",
    "SENSING_MOUSEDOWN": "pulsante del mouse premuto?",
    "SENSING_MOUSEX": "x del mouse",
    "SENSING_MOUSEY": "y del mouse",
    "SENSING_SETDRAGMODE": "rendi lo sprite %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "trascinabile",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "non trascinabile",
    "SENSING_LOUDNESS": "volume microfono",
    "SENSING_LOUD": "volume alto?",
    "SENSING_TIMER": "cronometro",
    "SENSING_RESETTIMER": "azzera cronometro",
    "SENSING_OF": "%1 di %2",
    "SENSING_OF_XPOSITION": "posizione x",
    "SENSING_OF_YPOSITION": "posizione y",
    "SENSING_OF_DIRECTION": "direzione",
    "SENSING_OF_COSTUMENUMBER": "numero del costume",
    "SENSING_OF_COSTUMENAME": "nome del costume",
    "SENSING_OF_SIZE": "dimensione",
    "SENSING_OF_VOLUME": "volume",
    "SENSING_OF_BACKDROPNUMBER": "numero dello sfondo",
    "SENSING_OF_BACKDROPNAME": "nome dello sfondo",
    "SENSING_OF_STAGE": "Palco",
    "SENSING_CURRENT": "%1 attuale",
    "SENSING_CURRENT_YEAR": "anno",
    "SENSING_CURRENT_MONTH": "mese",
    "SENSING_CURRENT_DATE": "data",
    "SENSING_CURRENT_DAYOFWEEK": "giorno della settimana",
    "SENSING_CURRENT_HOUR": "ora",
    "SENSING_CURRENT_MINUTE": "minuto",
    "SENSING_CURRENT_SECOND": "secondo",
    "SENSING_DAYSSINCE2000": "giorni trascorsi dal 2000",
    "SENSING_USERNAME": "username",
    "SENSING_USERID": "user id",
    "SOUND_PLAY": "avvia suono %1",
    "SOUND_PLAYUNTILDONE": "riproduci suono %1 e attendi la fine",
    "SOUND_STOPALLSOUNDS": "ferma tutti i suoni",
    "SOUND_SETEFFECTO": "porta effetto %1 a %2",
    "SOUND_CHANGEEFFECTBY": "cambia effetto %1 di %2",
    "SOUND_CLEAREFFECTS": "rimuovi effetti audio",
    "SOUND_EFFECTS_PITCH": "frequenza",
    "SOUND_EFFECTS_PAN": "panning sinistra/destra",
    "SOUND_CHANGEVOLUMEBY": "cambia volume di %1",
    "SOUND_SETVOLUMETO": "porta volume a %1%",
    "SOUND_VOLUME": "volume",
    "CATEGORY_MOTION": "Movimento",
    "CATEGORY_LOOKS": "Aspetto",
    "CATEGORY_SOUND": "Suono",
    "CATEGORY_EVENTS": "Situazioni",
    "CATEGORY_CONTROL": "Controllo",
    "CATEGORY_SENSING": "Sensori",
    "CATEGORY_OPERATORS": "Operatori",
    "CATEGORY_VARIABLES": "Variabili",
    "CATEGORY_MYBLOCKS": "I Miei Blocchi",
    "DUPLICATE": "Duplica",
    "DELETE": "Cancella",
    "ADD_COMMENT": "Aggiungi commento",
    "REMOVE_COMMENT": "Rimuovi commento",
    "DELETE_BLOCK": "Cancella questo Blocco",
    "DELETE_X_BLOCKS": "Cancella %1 Blocchi",
    "DELETE_ALL_BLOCKS": "Cancellare i %1 blocchi?",
    "CLEAN_UP": "Riordina i Blocchi",
    "HELP": "Aiuto",
    "UNDO": "Annulla",
    "REDO": "Ripristina",
    "EDIT_PROCEDURE": "Modifica",
    "SHOW_PROCEDURE_DEFINITION": "Vai alla definizione",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Dì qualcosa...",
    "COLOUR_HUE_LABEL": "Colore",
    "COLOUR_SATURATION_LABEL": "Saturazione",
    "COLOUR_BRIGHTNESS_LABEL": "Luminosità",
    "CHANGE_VALUE_TITLE": "Cambia il valore:",
    "RENAME_VARIABLE": "Rinomina la variabile",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Rinomina la Variabile",
    "NEW_VARIABLE": "Crea una Variabile",
    "NEW_VARIABLE_TITLE": "Nome della nuova variabile:",
    "VARIABLE_MODAL_TITLE": "Nuova Variabile",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Crea un Blocco",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Crea una Lista",
    "NEW_LIST_TITLE": "Nome della nuova lista:",
    "LIST_MODAL_TITLE": "Nuova Lista",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Rinomina la Lista",
    "NEW_BROADCAST_MESSAGE": "Nuovo messaggio",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nome del nuovo messaggio:",
    "BROADCAST_MODAL_TITLE": "Nuovo Messaggio",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "messaggio1"
};

Blockly.ScratchMsgs.locales["ja-Hira"] =
{
    "CONTROL_FOREVER": "ずっと",
    "CONTROL_REPEAT": "%1 かいくりかえす",
    "CONTROL_IF": "もし %1 なら",
    "CONTROL_ELSE": "でなければ",
    "CONTROL_STOP": "とめる",
    "CONTROL_STOP_ALL": "すべて",
    "CONTROL_STOP_THIS": "このスクリプト",
    "CONTROL_STOP_OTHER": "スプライトのほかのスクリプト",
    "CONTROL_WAIT": "%1 びょうまつ",
    "CONTROL_WAITUNTIL": "%1 までまつ",
    "CONTROL_REPEATUNTIL": "%1 までくりかえす",
    "CONTROL_WHILE": "%1 のあいだくりかえす",
    "CONTROL_FOREACH": "%2 のようそを %1 にいれてくりかえす",
    "CONTROL_STARTASCLONE": "クローンされたとき",
    "CONTROL_CREATECLONEOF": "%1 のクローンをつくる",
    "CONTROL_CREATECLONEOF_MYSELF": "じぶんじしん",
    "CONTROL_DELETETHISCLONE": "このクローンをさくじょする",
    "CONTROL_COUNTER": "カウンター",
    "CONTROL_INCRCOUNTER": "カウンターにたす",
    "CONTROL_CLEARCOUNTER": "カウンターをクリアする",
    "CONTROL_ALLATONCE": "all at once",
    "DATA_SETVARIABLETO": "%1 を %2 にする",
    "DATA_CHANGEVARIABLEBY": "%1 を %2 ずつかえる",
    "DATA_SHOWVARIABLE": "へんすう %1 をひょうじする",
    "DATA_HIDEVARIABLE": "へんすう %1 をかくす",
    "DATA_ADDTOLIST": "%1 を %2 についかする",
    "DATA_DELETEOFLIST": "%2 の %1 ばんめをさくじょする",
    "DATA_INSERTATLIST": "%3 の %2 ばんめに %1 をそうにゅうする",
    "DATA_REPLACEITEMOFLIST": "%2 の %1 を %3 でおきかえる",
    "DATA_ITEMOFLIST": "%2 の %1 ばんめ",
    "DATA_LENGTHOFLIST": "%1 のながさ",
    "DATA_LISTCONTAINSITEM": "%1 に %2 がふくまれる",
    "DATA_SHOWLIST": "リスト %1 をひょうじする",
    "DATA_HIDELIST": "リスト %1 をかくす",
    "DATA_INDEX_ALL": "すべて",
    "DATA_INDEX_LAST": "さいご",
    "DATA_INDEX_RANDOM": "らんすう",
    "EVENT_WHENFLAGCLICKED": "%1 がクリックされたとき",
    "EVENT_WHENTHISSPRITECLICKED": "このスプライトがクリックされたとき",
    "EVENT_WHENSTAGECLICKED": "ステージがクリックされたとき",
    "EVENT_WHENTOUCHINGOBJECT": "when this sprite touches %1",
    "EVENT_WHENBROADCASTRECEIVED": "%1 をうけとったとき",
    "EVENT_WHENBACKDROPSWITCHESTO": "はいけいが %1 になったとき",
    "EVENT_WHENGREATERTHAN": "%1 &gt; %2 のとき",
    "EVENT_WHENGREATERTHAN_TIMER": "タイマー",
    "EVENT_BROADCAST": "%1 をおくる",
    "EVENT_BROADCASTANDWAIT": "%1 をおくってまつ",
    "EVENT_WHENKEYPRESSED": "%1 キーがおされたとき",
    "EVENT_WHENKEYPRESSED_SPACE": "スペース",
    "EVENT_WHENKEYPRESSED_LEFT": "ひだりむきやじるし",
    "EVENT_WHENKEYPRESSED_RIGHT": "みぎむきやじるし",
    "EVENT_WHENKEYPRESSED_DOWN": "したむきやじるし",
    "EVENT_WHENKEYPRESSED_UP": "うわむきやじるし",
    "EVENT_WHENKEYPRESSED_ANY": "どれかの",
    "LOOKS_SAYFORSECS": "%1 と %2 びょういう",
    "LOOKS_SAY": "%1 という",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "%1 と %2 びょうかんがえる",
    "LOOKS_THINK": "%1 とかんがえる",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "ひょうじする",
    "LOOKS_HIDE": "かくす",
    "LOOKS_HIDEALLSPRITES": "hide all sprites",
    "LOOKS_EFFECT_COLOR": "いろ",
    "LOOKS_EFFECT_FISHEYE": "ぎょがんレンズ",
    "LOOKS_EFFECT_WHIRL": "うずまき",
    "LOOKS_EFFECT_PIXELATE": "ピクセルか",
    "LOOKS_EFFECT_MOSAIC": "モザイク",
    "LOOKS_EFFECT_BRIGHTNESS": "あかるさ",
    "LOOKS_EFFECT_GHOST": "ゆうれい",
    "LOOKS_CHANGEEFFECTBY": "%1 のこうかを %2 ずつかえる",
    "LOOKS_SETEFFECTTO": "%1 のこうかを %2 にする",
    "LOOKS_CLEARGRAPHICEFFECTS": "がぞうこうかをなくす",
    "LOOKS_CHANGESIZEBY": "おおきさを %1 ずつかえる",
    "LOOKS_SETSIZETO": "おおきさを %1 %にする",
    "LOOKS_SIZE": "おおきさ",
    "LOOKS_CHANGESTRETCHBY": "change stretch by %1",
    "LOOKS_SETSTRETCHTO": "set stretch to %1 %",
    "LOOKS_SWITCHCOSTUMETO": "コスチュームを %1 にする",
    "LOOKS_NEXTCOSTUME": "つぎのコスチュームにする",
    "LOOKS_SWITCHBACKDROPTO": "はいけいを %1 にする",
    "LOOKS_GOTOFRONTBACK": "%1 へいどうする ",
    "LOOKS_GOTOFRONTBACK_FRONT": "さいぜんめん",
    "LOOKS_GOTOFRONTBACK_BACK": "さいはいめん",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "%2 そう %1 ",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "てまえにだす ",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "おくにさげる ",
    "LOOKS_BACKDROPNUMBERNAME": "はいけいの %1 ",
    "LOOKS_COSTUMENUMBERNAME": "コスチュームの %1 ",
    "LOOKS_NUMBERNAME_NUMBER": "ばんごう ",
    "LOOKS_NUMBERNAME_NAME": "なまえ ",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "はいけいを %1 にしてまつ",
    "LOOKS_NEXTBACKDROP": "つぎのはいけい ",
    "LOOKS_PREVIOUSBACKDROP": "まえのはいけい",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "%1 ほうごかす",
    "MOTION_TURNLEFT": "%1 %2 たびまわす",
    "MOTION_TURNRIGHT": "%1 %2 たびまわす",
    "MOTION_POINTINDIRECTION": "%1 たびにむける",
    "MOTION_POINTTOWARDS": "%1 へむける",
    "MOTION_POINTTOWARDS_POINTER": "マウスのポインター",
    "MOTION_GOTO": "%1 へいく",
    "MOTION_GOTO_POINTER": "マウスのポインター",
    "MOTION_GOTO_RANDOM": "ランダムなばしょ",
    "MOTION_GOTOXY": "xざひょうを %1 、yざひょうを %2 にする",
    "MOTION_GLIDESECSTOXY": "%1 びょうでxざひょうを %2 に、yざひょうを %3 にかえる",
    "MOTION_GLIDETO": "%1 びょうで %2 へいく ",
    "MOTION_GLIDETO_POINTER": "マウスのポインター",
    "MOTION_GLIDETO_RANDOM": "どこかのばしょ",
    "MOTION_CHANGEXBY": "xざひょうを %1 ずつかえる",
    "MOTION_SETX": "xざひょうを %1 にする",
    "MOTION_CHANGEYBY": "yざひょうを %1 ずつかえる",
    "MOTION_SETY": "yざひょうを %1 にする",
    "MOTION_IFONEDGEBOUNCE": "もしはしについたら、はねかえる",
    "MOTION_SETROTATIONSTYLE": "かいてんほうほうを %1 にする",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "さゆうのみ",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "かいてんしない",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "じゆうにかいてん",
    "MOTION_XPOSITION": "xざひょう",
    "MOTION_YPOSITION": "yざひょう",
    "MOTION_DIRECTION": "むき",
    "MOTION_SCROLLRIGHT": "scroll right %1",
    "MOTION_SCROLLUP": "scroll up %1",
    "MOTION_ALIGNSCENE": "align scene %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "bottom-left",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "bottom-right",
    "MOTION_ALIGNSCENE_MIDDLE": "middle",
    "MOTION_ALIGNSCENE_TOPLEFT": "top-left",
    "MOTION_ALIGNSCENE_TOPRIGHT": "top-right",
    "MOTION_XSCROLL": "x scroll",
    "MOTION_YSCROLL": "y scroll",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "%1 から %2 までのらんすう",
    "OPERATORS_GT": "%1 &gt; %2",
    "OPERATORS_LT": "%1 &lt; %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 かつ %2",
    "OPERATORS_OR": "%1 または %2",
    "OPERATORS_NOT": "%1 ではない",
    "OPERATORS_JOIN": "%1 と %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "%2 の %1 ばんめのもじ ",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "%1 のながさ",
    "OPERATORS_CONTAINS": "%1 に %2 がふくまれる",
    "OPERATORS_MOD": "%1 を %2 でわったあまり",
    "OPERATORS_ROUND": "%1 をししゃごにゅう",
    "OPERATORS_MATHOP": "%2 の %1 ",
    "OPERATORS_MATHOP_ABS": "ぜったいち",
    "OPERATORS_MATHOP_FLOOR": "きりすて",
    "OPERATORS_MATHOP_CEILING": "きりあげ",
    "OPERATORS_MATHOP_SQRT": "へいほうこん",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "ていぎ %1",
    "SENSING_TOUCHINGOBJECT": "%1 にふれた",
    "SENSING_TOUCHINGOBJECT_POINTER": "マウスのポインター",
    "SENSING_TOUCHINGOBJECT_EDGE": "はし",
    "SENSING_TOUCHINGCOLOR": "%1 いろにふれた",
    "SENSING_COLORISTOUCHINGCOLOR": "%1 いろが %2 いろにふれた",
    "SENSING_DISTANCETO": "%1 までのきょり",
    "SENSING_DISTANCETO_POINTER": "マウスのポインター",
    "SENSING_ASKANDWAIT": "%1 ときいてまつ",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "こたえ",
    "SENSING_KEYPRESSED": "%1 キーがおされた",
    "SENSING_MOUSEDOWN": "マウスがおされた",
    "SENSING_MOUSEX": "マウスのxざひょう",
    "SENSING_MOUSEY": "マウスのyざひょう",
    "SENSING_SETDRAGMODE": "ドラッグ %1 ようにする ",
    "SENSING_SETDRAGMODE_DRAGGABLE": "できる",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "できない",
    "SENSING_LOUDNESS": "おんりょう",
    "SENSING_LOUD": "loud?",
    "SENSING_TIMER": "タイマー",
    "SENSING_RESETTIMER": "タイマーをリセット",
    "SENSING_OF": "%2 の %1 ",
    "SENSING_OF_XPOSITION": "xざひょう",
    "SENSING_OF_YPOSITION": "yざひょう",
    "SENSING_OF_DIRECTION": "むき",
    "SENSING_OF_COSTUMENUMBER": "コスチューム #",
    "SENSING_OF_COSTUMENAME": "コスチュームめい",
    "SENSING_OF_SIZE": "おおきさ",
    "SENSING_OF_VOLUME": "おんりょう",
    "SENSING_OF_BACKDROPNUMBER": "はいけい #",
    "SENSING_OF_BACKDROPNAME": "はいけいのなまえ",
    "SENSING_OF_STAGE": "ステージ",
    "SENSING_CURRENT": "げんざいの %1",
    "SENSING_CURRENT_YEAR": "とし",
    "SENSING_CURRENT_MONTH": "つき",
    "SENSING_CURRENT_DATE": "ひ",
    "SENSING_CURRENT_DAYOFWEEK": "ようび",
    "SENSING_CURRENT_HOUR": "とき",
    "SENSING_CURRENT_MINUTE": "ぶん",
    "SENSING_CURRENT_SECOND": "びょう",
    "SENSING_DAYSSINCE2000": "2000ねんからのにっすう",
    "SENSING_USERNAME": "ユーザーめい",
    "SENSING_USERID": "user id",
    "SOUND_PLAY": "%1 のおとをならす",
    "SOUND_PLAYUNTILDONE": "おわるまで %1 のおとをならす",
    "SOUND_STOPALLSOUNDS": "すべてのおとをとめる",
    "SOUND_SETEFFECTO": "%1 のこうかを %2 にする ",
    "SOUND_CHANGEEFFECTBY": "%1 のこうかを %2 ずつかえる",
    "SOUND_CLEAREFFECTS": "おとのこうかをなくす",
    "SOUND_EFFECTS_PITCH": "ピッチ ",
    "SOUND_EFFECTS_PAN": "さゆうのパン ",
    "SOUND_CHANGEVOLUMEBY": "おんりょうを %1 ずつかえる",
    "SOUND_SETVOLUMETO": "おんりょうを %1 %にする",
    "SOUND_VOLUME": "おんりょう",
    "CATEGORY_MOTION": "うごき",
    "CATEGORY_LOOKS": "みため",
    "CATEGORY_SOUND": "おと",
    "CATEGORY_EVENTS": "イベント",
    "CATEGORY_CONTROL": "せいぎょ",
    "CATEGORY_SENSING": "しらべる",
    "CATEGORY_OPERATORS": "えんざん",
    "CATEGORY_VARIABLES": "Variables",
    "CATEGORY_MYBLOCKS": "My Blocks",
    "DUPLICATE": "ふくせい",
    "DELETE": "さくじょ",
    "ADD_COMMENT": "Add Comment",
    "REMOVE_COMMENT": "Remove Comment",
    "DELETE_BLOCK": "Delete Block",
    "DELETE_X_BLOCKS": "Delete %1 Blocks",
    "DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
    "CLEAN_UP": "Clean up Blocks",
    "HELP": "ヘルプ",
    "UNDO": "とりけし",
    "REDO": "やりなおし",
    "EDIT_PROCEDURE": "へんしゅう",
    "SHOW_PROCEDURE_DEFINITION": "Go to definition",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Say something...",
    "COLOUR_HUE_LABEL": "いろ",
    "COLOUR_SATURATION_LABEL": "あざやかさ",
    "COLOUR_BRIGHTNESS_LABEL": "あかるさ",
    "CHANGE_VALUE_TITLE": "Change value:",
    "RENAME_VARIABLE": "Rename variable",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Rename Variable",
    "NEW_VARIABLE": "へんすうをつくる",
    "NEW_VARIABLE_TITLE": "New variable name:",
    "VARIABLE_MODAL_TITLE": "あたらしいへんすう",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "ブロックをつくる",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "リストをつくる",
    "NEW_LIST_TITLE": "New list name:",
    "LIST_MODAL_TITLE": "あたらしいリスト",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Rename List",
    "NEW_BROADCAST_MESSAGE": "New message",
    "NEW_BROADCAST_MESSAGE_TITLE": "New message name:",
    "BROADCAST_MODAL_TITLE": "あたらしいメッセージ",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "メッセージ1"
};

Blockly.ScratchMsgs.locales["ja"] =
{
    "CONTROL_FOREVER": "ずっと",
    "CONTROL_REPEAT": "%1 回繰り返す",
    "CONTROL_IF": "もし %1 なら",
    "CONTROL_ELSE": "でなければ",
    "CONTROL_STOP": "止める",
    "CONTROL_STOP_ALL": "すべて",
    "CONTROL_STOP_THIS": "このスクリプト",
    "CONTROL_STOP_OTHER": "スプライトの他のスクリプト",
    "CONTROL_WAIT": "%1 秒待つ",
    "CONTROL_WAITUNTIL": "%1 まで待つ",
    "CONTROL_REPEATUNTIL": "%1 まで繰り返す",
    "CONTROL_WHILE": "%1 の間繰り返す",
    "CONTROL_FOREACH": "%2 の要素を %1 に入れて繰り返す",
    "CONTROL_STARTASCLONE": "クローンされたとき",
    "CONTROL_CREATECLONEOF": "%1 のクローンを作る",
    "CONTROL_CREATECLONEOF_MYSELF": "自分自身",
    "CONTROL_DELETETHISCLONE": "このクローンを削除する",
    "CONTROL_COUNTER": "カウンター",
    "CONTROL_INCRCOUNTER": "カウンターに足す",
    "CONTROL_CLEARCOUNTER": "カウンターをクリアする",
    "CONTROL_ALLATONCE": "一斉に",
    "DATA_SETVARIABLETO": "%1 を %2 にする",
    "DATA_CHANGEVARIABLEBY": "%1 を %2 ずつ変える",
    "DATA_SHOWVARIABLE": "変数 %1 を表示する",
    "DATA_HIDEVARIABLE": "変数 %1 を隠す",
    "DATA_ADDTOLIST": "%1 を %2 に追加する",
    "DATA_DELETEOFLIST": "%2 の %1 番目を削除する",
    "DATA_INSERTATLIST": "%3 の %2 番目に %1 を挿入する",
    "DATA_REPLACEITEMOFLIST": "%2 の %1 を %3 で置き換える",
    "DATA_ITEMOFLIST": "%2 の %1 番目",
    "DATA_LENGTHOFLIST": "%1 の長さ",
    "DATA_LISTCONTAINSITEM": "%1 に %2 が含まれる",
    "DATA_SHOWLIST": "リスト %1 を表示する",
    "DATA_HIDELIST": "リスト %1 を隠す",
    "DATA_INDEX_ALL": "すべて",
    "DATA_INDEX_LAST": "最後",
    "DATA_INDEX_RANDOM": "乱数",
    "EVENT_WHENFLAGCLICKED": "%1 がクリックされたとき",
    "EVENT_WHENTHISSPRITECLICKED": "このスプライトがクリックされたとき",
    "EVENT_WHENSTAGECLICKED": "ステージがクリックされたとき",
    "EVENT_WHENTOUCHINGOBJECT": "このスプライトが %1 に触れたとき",
    "EVENT_WHENBROADCASTRECEIVED": "%1 を受け取ったとき",
    "EVENT_WHENBACKDROPSWITCHESTO": "背景が %1 になったとき",
    "EVENT_WHENGREATERTHAN": "%1 > %2 のとき",
    "EVENT_WHENGREATERTHAN_TIMER": "タイマー",
    "EVENT_BROADCAST": "%1 を送る",
    "EVENT_BROADCASTANDWAIT": "%1 を送って待つ",
    "EVENT_WHENKEYPRESSED": "%1 キーが押されたとき",
    "EVENT_WHENKEYPRESSED_SPACE": "スペース",
    "EVENT_WHENKEYPRESSED_LEFT": "左向き矢印",
    "EVENT_WHENKEYPRESSED_RIGHT": "右向き矢印",
    "EVENT_WHENKEYPRESSED_DOWN": "下向き矢印",
    "EVENT_WHENKEYPRESSED_UP": "上向き矢印",
    "EVENT_WHENKEYPRESSED_ANY": "どれかの",
    "LOOKS_SAYFORSECS": "%1 と %2 秒言う",
    "LOOKS_SAY": "%1 と言う",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "%1 と %2 秒考える",
    "LOOKS_THINK": "%1 と考える",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "表示する",
    "LOOKS_HIDE": "隠す",
    "LOOKS_HIDEALLSPRITES": "すべてのスプライトを隠す",
    "LOOKS_EFFECT_COLOR": "色",
    "LOOKS_EFFECT_FISHEYE": "魚眼レンズ",
    "LOOKS_EFFECT_WHIRL": "渦巻き",
    "LOOKS_EFFECT_PIXELATE": "ピクセル化",
    "LOOKS_EFFECT_MOSAIC": "モザイク",
    "LOOKS_EFFECT_BRIGHTNESS": "明るさ",
    "LOOKS_EFFECT_GHOST": "幽霊",
    "LOOKS_CHANGEEFFECTBY": "%1 の効果を %2 ずつ変える",
    "LOOKS_SETEFFECTTO": "%1 の効果を %2 にする",
    "LOOKS_CLEARGRAPHICEFFECTS": "画像効果をなくす",
    "LOOKS_CHANGESIZEBY": "大きさを %1 ずつ変える",
    "LOOKS_SETSIZETO": "大きさを %1 %にする",
    "LOOKS_SIZE": "大きさ",
    "LOOKS_CHANGESTRETCHBY": "伸びを %1 ずつ変える",
    "LOOKS_SETSTRETCHTO": "伸びを %1 %にする",
    "LOOKS_SWITCHCOSTUMETO": "コスチュームを %1 にする",
    "LOOKS_NEXTCOSTUME": "次のコスチュームにする",
    "LOOKS_SWITCHBACKDROPTO": "背景を %1 にする",
    "LOOKS_GOTOFRONTBACK": "%1 へ移動する ",
    "LOOKS_GOTOFRONTBACK_FRONT": "最前面",
    "LOOKS_GOTOFRONTBACK_BACK": "最背面",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "%2 層 %1 ",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "手前に出す ",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "奥に下げる ",
    "LOOKS_BACKDROPNUMBERNAME": "背景の %1 ",
    "LOOKS_COSTUMENUMBERNAME": "コスチュームの %1 ",
    "LOOKS_NUMBERNAME_NUMBER": "番号 ",
    "LOOKS_NUMBERNAME_NAME": "名前 ",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "背景を %1 にして待つ",
    "LOOKS_NEXTBACKDROP": "次の背景 ",
    "LOOKS_PREVIOUSBACKDROP": "前の背景",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "%1 歩動かす",
    "MOTION_TURNLEFT": "%1 %2 度回す",
    "MOTION_TURNRIGHT": "%1 %2 度回す",
    "MOTION_POINTINDIRECTION": "%1 度に向ける",
    "MOTION_POINTTOWARDS": "%1 へ向ける",
    "MOTION_POINTTOWARDS_POINTER": "マウスのポインター",
    "MOTION_GOTO": "%1 へ行く",
    "MOTION_GOTO_POINTER": "マウスのポインター",
    "MOTION_GOTO_RANDOM": "ランダムな場所",
    "MOTION_GOTOXY": "x座標を %1 、y座標を %2 にする",
    "MOTION_GLIDESECSTOXY": "%1 秒でx座標を %2 に、y座標を %3 に変える",
    "MOTION_GLIDETO": "%1 秒で %2 へ行く ",
    "MOTION_GLIDETO_POINTER": "マウスのポインター",
    "MOTION_GLIDETO_RANDOM": "どこかの場所",
    "MOTION_CHANGEXBY": "x座標を %1 ずつ変える",
    "MOTION_SETX": "x座標を %1 にする",
    "MOTION_CHANGEYBY": "y座標を %1 ずつ変える",
    "MOTION_SETY": "y座標を %1 にする",
    "MOTION_IFONEDGEBOUNCE": "もし端に着いたら、跳ね返る",
    "MOTION_SETROTATIONSTYLE": "回転方法を %1 にする",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "左右のみ",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "回転しない",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "自由に回転",
    "MOTION_XPOSITION": "x座標",
    "MOTION_YPOSITION": "y座標",
    "MOTION_DIRECTION": "向き",
    "MOTION_SCROLLRIGHT": "右に %1 スクロールする",
    "MOTION_SCROLLUP": "上に %1 スクロールする",
    "MOTION_ALIGNSCENE": "スクロール位置を %1 にする",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "左下",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "右下",
    "MOTION_ALIGNSCENE_MIDDLE": "中央",
    "MOTION_ALIGNSCENE_TOPLEFT": "左上",
    "MOTION_ALIGNSCENE_TOPRIGHT": "右上",
    "MOTION_XSCROLL": "x方向のスクロール量",
    "MOTION_YSCROLL": "y方向のスクロール方向",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "%1 から %2 までの乱数",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 かつ %2",
    "OPERATORS_OR": "%1 または %2",
    "OPERATORS_NOT": "%1 ではない",
    "OPERATORS_JOIN": "%1 と %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "%2 の %1 番目の文字 ",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "%1 の長さ",
    "OPERATORS_CONTAINS": "%1 に %2 が含まれる",
    "OPERATORS_MOD": "%1 を %2 で割った余り",
    "OPERATORS_ROUND": "%1 を四捨五入",
    "OPERATORS_MATHOP": "%2 の %1 ",
    "OPERATORS_MATHOP_ABS": "絶対値",
    "OPERATORS_MATHOP_FLOOR": "切り下げ",
    "OPERATORS_MATHOP_CEILING": "切り上げ",
    "OPERATORS_MATHOP_SQRT": "平方根",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "定義 %1",
    "SENSING_TOUCHINGOBJECT": "%1 に触れた",
    "SENSING_TOUCHINGOBJECT_POINTER": "マウスのポインター",
    "SENSING_TOUCHINGOBJECT_EDGE": "端",
    "SENSING_TOUCHINGCOLOR": "%1 色に触れた",
    "SENSING_COLORISTOUCHINGCOLOR": "%1 色が %2 色に触れた",
    "SENSING_DISTANCETO": "%1 までの距離",
    "SENSING_DISTANCETO_POINTER": "マウスのポインター",
    "SENSING_ASKANDWAIT": "%1 と聞いて待つ",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "答え",
    "SENSING_KEYPRESSED": "%1 キーが押された",
    "SENSING_MOUSEDOWN": "マウスが押された",
    "SENSING_MOUSEX": "マウスのx座標",
    "SENSING_MOUSEY": "マウスのy座標",
    "SENSING_SETDRAGMODE": "ドラッグ %1 ようにする ",
    "SENSING_SETDRAGMODE_DRAGGABLE": "できる",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "できない",
    "SENSING_LOUDNESS": "音量",
    "SENSING_LOUD": "うるさい",
    "SENSING_TIMER": "タイマー",
    "SENSING_RESETTIMER": "タイマーをリセット",
    "SENSING_OF": "%2 の %1 ",
    "SENSING_OF_XPOSITION": "x座標",
    "SENSING_OF_YPOSITION": "y座標",
    "SENSING_OF_DIRECTION": "向き",
    "SENSING_OF_COSTUMENUMBER": "コスチューム #",
    "SENSING_OF_COSTUMENAME": "コスチューム名",
    "SENSING_OF_SIZE": "大きさ",
    "SENSING_OF_VOLUME": "音量",
    "SENSING_OF_BACKDROPNUMBER": "背景 #",
    "SENSING_OF_BACKDROPNAME": "背景の名前",
    "SENSING_OF_STAGE": "ステージ",
    "SENSING_CURRENT": "現在の %1",
    "SENSING_CURRENT_YEAR": "年",
    "SENSING_CURRENT_MONTH": "月",
    "SENSING_CURRENT_DATE": "日",
    "SENSING_CURRENT_DAYOFWEEK": "曜日",
    "SENSING_CURRENT_HOUR": "時",
    "SENSING_CURRENT_MINUTE": "分",
    "SENSING_CURRENT_SECOND": "秒",
    "SENSING_DAYSSINCE2000": "2000年からの日数",
    "SENSING_USERNAME": "ユーザー名",
    "SENSING_USERID": "ユーザーID",
    "SOUND_PLAY": "%1 の音を鳴らす",
    "SOUND_PLAYUNTILDONE": "終わるまで %1 の音を鳴らす",
    "SOUND_STOPALLSOUNDS": "すべての音を止める",
    "SOUND_SETEFFECTO": "%1 の効果を %2 にする ",
    "SOUND_CHANGEEFFECTBY": "%1 の効果を %2 ずつ変える",
    "SOUND_CLEAREFFECTS": "音の効果をなくす",
    "SOUND_EFFECTS_PITCH": "ピッチ ",
    "SOUND_EFFECTS_PAN": "左右のパン ",
    "SOUND_CHANGEVOLUMEBY": "音量を %1 ずつ変える",
    "SOUND_SETVOLUMETO": "音量を %1 %にする",
    "SOUND_VOLUME": "音量",
    "CATEGORY_MOTION": "動き",
    "CATEGORY_LOOKS": "見た目",
    "CATEGORY_SOUND": "音",
    "CATEGORY_EVENTS": "イベント",
    "CATEGORY_CONTROL": "制御",
    "CATEGORY_SENSING": "調べる",
    "CATEGORY_OPERATORS": "演算",
    "CATEGORY_VARIABLES": "変数",
    "CATEGORY_MYBLOCKS": "自分のブロック",
    "DUPLICATE": "複製",
    "DELETE": "削除",
    "ADD_COMMENT": "コメントを追加",
    "REMOVE_COMMENT": "コメントを削除",
    "DELETE_BLOCK": "ブロックを削除",
    "DELETE_X_BLOCKS": "%1 ブロックを削除",
    "DELETE_ALL_BLOCKS": "%1 個のブロックをすべて削除しますか?",
    "CLEAN_UP": "きれいにする",
    "HELP": "ヘルプ",
    "UNDO": "取り消し",
    "REDO": "やり直し",
    "EDIT_PROCEDURE": "編集",
    "SHOW_PROCEDURE_DEFINITION": "定義へ行く",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "何かを言う...",
    "COLOUR_HUE_LABEL": "色",
    "COLOUR_SATURATION_LABEL": "鮮やかさ",
    "COLOUR_BRIGHTNESS_LABEL": "明るさ",
    "CHANGE_VALUE_TITLE": "値を変える:",
    "RENAME_VARIABLE": "変数の名前を変更",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "変数の名前を変更",
    "NEW_VARIABLE": "変数を作る",
    "NEW_VARIABLE_TITLE": "新しい変数の名前:",
    "VARIABLE_MODAL_TITLE": "新しい変数",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "ブロックを作る",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "リストを作る",
    "NEW_LIST_TITLE": "新しいリスト名:",
    "LIST_MODAL_TITLE": "新しいリスト",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "リストの名前を変更",
    "NEW_BROADCAST_MESSAGE": "新しいメッセージ",
    "NEW_BROADCAST_MESSAGE_TITLE": "新しいメッセージ名:",
    "BROADCAST_MODAL_TITLE": "新しいメッセージ",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "メッセージ1"
};

Blockly.ScratchMsgs.locales["ko"] =
{
    "CONTROL_FOREVER": "무한 반복하기",
    "CONTROL_REPEAT": "%1 번 반복하기",
    "CONTROL_IF": "만약 %1 (이)라면",
    "CONTROL_ELSE": "아니면",
    "CONTROL_STOP": "멈추기",
    "CONTROL_STOP_ALL": "모두",
    "CONTROL_STOP_THIS": "이 스크립트",
    "CONTROL_STOP_OTHER": "이 스프라이트에 있는 다른 스크립트",
    "CONTROL_WAIT": "%1 초 기다리기",
    "CONTROL_WAITUNTIL": "%1 까지 기다리기",
    "CONTROL_REPEATUNTIL": "%1 까지 반복하기",
    "CONTROL_WHILE": "%1 동안 반복하기",
    "CONTROL_FOREACH": "%1 변수로 %2 번 반복하기",
    "CONTROL_STARTASCLONE": "복제되었을 때",
    "CONTROL_CREATECLONEOF": "%1 복제하기",
    "CONTROL_CREATECLONEOF_MYSELF": "나 자신",
    "CONTROL_DELETETHISCLONE": "이 복제본 삭제하기",
    "CONTROL_COUNTER": "카운터",
    "CONTROL_INCRCOUNTER": "카운터 증가하기",
    "CONTROL_CLEARCOUNTER": "카운터 초기화",
    "CONTROL_ALLATONCE": "한 번에 실행하기",
    "DATA_SETVARIABLETO": "%1 을(를) %2 로 정하기",
    "DATA_CHANGEVARIABLEBY": "%1 을(를) %2 만큼 바꾸기",
    "DATA_SHOWVARIABLE": "%1 변수 보이기",
    "DATA_HIDEVARIABLE": "%1 변수 숨기기",
    "DATA_ADDTOLIST": "%1 을(를) %2 에 추가하기",
    "DATA_DELETEOFLIST": "%1 번째 항목을 %2 에서 삭제하기",
    "DATA_INSERTATLIST": "%1 을(를) %3 리스트의 %2 번째에 넣기",
    "DATA_REPLACEITEMOFLIST": "%2 리스트의 %1 번째 항목을 %3 으로 바꾸기",
    "DATA_ITEMOFLIST": "%2 리스트의 %1 번째 항목",
    "DATA_LENGTHOFLIST": "%1 의 길이",
    "DATA_LISTCONTAINSITEM": "%1 이(가) %2 을(를) 포함하는가?",
    "DATA_SHOWLIST": "%1 리스트 보이기",
    "DATA_HIDELIST": "%1 리스트 숨기기",
    "DATA_INDEX_ALL": "모두",
    "DATA_INDEX_LAST": "마지막",
    "DATA_INDEX_RANDOM": "랜덤",
    "EVENT_WHENFLAGCLICKED": "%1 을(를) 클릭했을 때",
    "EVENT_WHENTHISSPRITECLICKED": "이 스프라이트를 클릭했을 때",
    "EVENT_WHENSTAGECLICKED": "무대를 클릭했을 때",
    "EVENT_WHENTOUCHINGOBJECT": "이 스프라이트가 %1 에 닿을 때",
    "EVENT_WHENBROADCASTRECEIVED": "%1 받았을 때",
    "EVENT_WHENBACKDROPSWITCHESTO": "배경이 %1 (으)로 바뀌었을 때",
    "EVENT_WHENGREATERTHAN": "%1 > %2 일 때",
    "EVENT_WHENGREATERTHAN_TIMER": "타이머",
    "EVENT_BROADCAST": "%1 방송하기",
    "EVENT_BROADCASTANDWAIT": "%1 방송하고 기다리기",
    "EVENT_WHENKEYPRESSED": "%1 키를 눌렀을 때",
    "EVENT_WHENKEYPRESSED_SPACE": "스페이스",
    "EVENT_WHENKEYPRESSED_LEFT": "왼쪽 화살표",
    "EVENT_WHENKEYPRESSED_RIGHT": "오른쪽 화살표",
    "EVENT_WHENKEYPRESSED_DOWN": "아래쪽 화살표",
    "EVENT_WHENKEYPRESSED_UP": "위쪽 화살표",
    "EVENT_WHENKEYPRESSED_ANY": "아무",
    "LOOKS_SAYFORSECS": "%1 을(를) %2 초 동안 말하기",
    "LOOKS_SAY": "%1 말하기",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "%1 을(를) %2 초 동안 생각하기",
    "LOOKS_THINK": "%1 생각하기",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "보이기",
    "LOOKS_HIDE": "숨기기",
    "LOOKS_HIDEALLSPRITES": "모든 스프라이트 숨기기",
    "LOOKS_EFFECT_COLOR": "색깔",
    "LOOKS_EFFECT_FISHEYE": "어안 렌즈",
    "LOOKS_EFFECT_WHIRL": "소용돌이",
    "LOOKS_EFFECT_PIXELATE": "픽셀화",
    "LOOKS_EFFECT_MOSAIC": "모자이크",
    "LOOKS_EFFECT_BRIGHTNESS": "밝기",
    "LOOKS_EFFECT_GHOST": "투명도",
    "LOOKS_CHANGEEFFECTBY": "%1 효과를 %2 만큼 바꾸기",
    "LOOKS_SETEFFECTTO": "%1 효과를 %2 (으)로 정하기",
    "LOOKS_CLEARGRAPHICEFFECTS": "그래픽 효과 지우기",
    "LOOKS_CHANGESIZEBY": "크기를 %1 만큼 바꾸기",
    "LOOKS_SETSIZETO": "크기를 %1 %로 정하기",
    "LOOKS_SIZE": "크기",
    "LOOKS_CHANGESTRETCHBY": "너비를 %1 만큼 바꾸기",
    "LOOKS_SETSTRETCHTO": "너비를 %1 %로 정하기",
    "LOOKS_SWITCHCOSTUMETO": "모양을 %1 (으)로 바꾸기",
    "LOOKS_NEXTCOSTUME": "다음 모양으로 바꾸기",
    "LOOKS_SWITCHBACKDROPTO": "배경을 %1 (으)로 바꾸기",
    "LOOKS_GOTOFRONTBACK": "%1 으로 순서 바꾸기",
    "LOOKS_GOTOFRONTBACK_FRONT": "맨 앞쪽",
    "LOOKS_GOTOFRONTBACK_BACK": "맨 뒤쪽",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "%1 %2 단계 보내기",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "앞으로",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "뒤로",
    "LOOKS_BACKDROPNUMBERNAME": "배경 %1",
    "LOOKS_COSTUMENUMBERNAME": "모양 %1",
    "LOOKS_NUMBERNAME_NUMBER": "번호",
    "LOOKS_NUMBERNAME_NAME": "이름",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "배경을 %1 (으)로 바꾸고 기다리기",
    "LOOKS_NEXTBACKDROP": "다음 배경으로 바꾸기",
    "LOOKS_PREVIOUSBACKDROP": "이전 배경으로 바꾸기",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "%1 만큼 움직이기",
    "MOTION_TURNLEFT": "%1 방향으로 %2 도 돌기",
    "MOTION_TURNRIGHT": "%1 방향으로 %2 도 돌기",
    "MOTION_POINTINDIRECTION": "%1 도 방향 보기",
    "MOTION_POINTTOWARDS": "%1 쪽 보기",
    "MOTION_POINTTOWARDS_POINTER": "마우스 포인터",
    "MOTION_GOTO": "%1 (으)로 이동하기",
    "MOTION_GOTO_POINTER": "마우스 포인터",
    "MOTION_GOTO_RANDOM": "랜덤 위치",
    "MOTION_GOTOXY": "x: %1 y: %2 (으)로 이동하기",
    "MOTION_GLIDESECSTOXY": "%1 초 동안 x: %2 y: %3 (으)로 이동하기",
    "MOTION_GLIDETO": "%1 초 동안 %2 (으)로 이동하기",
    "MOTION_GLIDETO_POINTER": "마우스 포인터",
    "MOTION_GLIDETO_RANDOM": "랜덤 위치",
    "MOTION_CHANGEXBY": "x 좌표를 %1 만큼 바꾸기",
    "MOTION_SETX": "x 좌표를 %1 (으)로 정하기",
    "MOTION_CHANGEYBY": "y 좌표를 %1 만큼 바꾸기",
    "MOTION_SETY": "y 좌표를 %1 (으)로 정하기",
    "MOTION_IFONEDGEBOUNCE": "벽에 닿으면 튕기기",
    "MOTION_SETROTATIONSTYLE": "회전 방식을 %1 (으)로 정하기",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "왼쪽-오른쪽",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "회전하지 않기",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "회전하기",
    "MOTION_XPOSITION": "x좌표",
    "MOTION_YPOSITION": "y좌표",
    "MOTION_DIRECTION": "방향",
    "MOTION_SCROLLRIGHT": "오른쪽으로 %1 만큼 스크롤하기",
    "MOTION_SCROLLUP": "위쪽으로 %1 만큼 스크롤하기",
    "MOTION_ALIGNSCENE": "화면을 %1 로 정렬하기",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "왼쪽 아래",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "오른쪽 아래",
    "MOTION_ALIGNSCENE_MIDDLE": "가운데",
    "MOTION_ALIGNSCENE_TOPLEFT": "왼쪽 위",
    "MOTION_ALIGNSCENE_TOPRIGHT": "오른쪽 위",
    "MOTION_XSCROLL": "x 스크롤",
    "MOTION_YSCROLL": "y 스크롤",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 × %2",
    "OPERATORS_DIVIDE": "%1 ÷ %2",
    "OPERATORS_RANDOM": "%1 부터 %2 사이의 난수",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 그리고 %2",
    "OPERATORS_OR": "%1 또는 %2",
    "OPERATORS_NOT": "%1 이(가) 아니다",
    "OPERATORS_JOIN": "%1 와(과) %2 결합하기",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "%2 의 %1 번째 글자",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "%1 의 길이",
    "OPERATORS_CONTAINS": "%1 이(가) %2 을(를) 포함하는가?",
    "OPERATORS_MOD": "%1 나누기 %2 의 나머지",
    "OPERATORS_ROUND": "%1 의 반올림",
    "OPERATORS_MATHOP": "%1 ( %2 )",
    "OPERATORS_MATHOP_ABS": "절댓값",
    "OPERATORS_MATHOP_FLOOR": "버림",
    "OPERATORS_MATHOP_CEILING": "올림",
    "OPERATORS_MATHOP_SQRT": "제곱근",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "%1 정의하기",
    "SENSING_TOUCHINGOBJECT": "%1 에 닿았는가?",
    "SENSING_TOUCHINGOBJECT_POINTER": "마우스 포인터",
    "SENSING_TOUCHINGOBJECT_EDGE": "벽",
    "SENSING_TOUCHINGCOLOR": "%1 색에 닿았는가?",
    "SENSING_COLORISTOUCHINGCOLOR": "%1 색이 %2 색에 닿았는가?",
    "SENSING_DISTANCETO": "%1 까지의 거리",
    "SENSING_DISTANCETO_POINTER": "마우스 포인터",
    "SENSING_ASKANDWAIT": "%1 라고 묻고 기다리기",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "대답",
    "SENSING_KEYPRESSED": "%1 키를 눌렸는가?",
    "SENSING_MOUSEDOWN": "마우스를 클릭했는가?",
    "SENSING_MOUSEX": "마우스의 x좌표",
    "SENSING_MOUSEY": "마우스의 y좌표",
    "SENSING_SETDRAGMODE": "드래그 모드를 %1 상태로 정하기",
    "SENSING_SETDRAGMODE_DRAGGABLE": "드래그 할 수 있는",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "드래그 할 수 없는",
    "SENSING_LOUDNESS": "음량",
    "SENSING_LOUD": "소리가 큰가?",
    "SENSING_TIMER": "타이머",
    "SENSING_RESETTIMER": "타이머 초기화",
    "SENSING_OF": "%2 의 %1",
    "SENSING_OF_XPOSITION": "x좌표",
    "SENSING_OF_YPOSITION": "y좌표",
    "SENSING_OF_DIRECTION": "방향",
    "SENSING_OF_COSTUMENUMBER": "모양 번호",
    "SENSING_OF_COSTUMENAME": "모양 이름",
    "SENSING_OF_SIZE": "크기",
    "SENSING_OF_VOLUME": "음량",
    "SENSING_OF_BACKDROPNUMBER": "배경 번호",
    "SENSING_OF_BACKDROPNAME": "배경 이름",
    "SENSING_OF_STAGE": "무대",
    "SENSING_CURRENT": "현재 %1",
    "SENSING_CURRENT_YEAR": "년",
    "SENSING_CURRENT_MONTH": "월",
    "SENSING_CURRENT_DATE": "일",
    "SENSING_CURRENT_DAYOFWEEK": "요일",
    "SENSING_CURRENT_HOUR": "시",
    "SENSING_CURRENT_MINUTE": "분",
    "SENSING_CURRENT_SECOND": "초",
    "SENSING_DAYSSINCE2000": "2000년 이후 현재까지 날짜 수",
    "SENSING_USERNAME": "사용자 이름",
    "SENSING_USERID": "사용자 번호",
    "SOUND_PLAY": "%1 재생하기",
    "SOUND_PLAYUNTILDONE": "%1 끝까지 재생하기",
    "SOUND_STOPALLSOUNDS": "모든 소리 끄기",
    "SOUND_SETEFFECTO": "%1 효과를 %2 로 정하기",
    "SOUND_CHANGEEFFECTBY": "%1 효과를 %2 만큼 바꾸기",
    "SOUND_CLEAREFFECTS": "소리 효과 지우기",
    "SOUND_EFFECTS_PITCH": "음 높이",
    "SOUND_EFFECTS_PAN": "음향 위치 왼쪽/오른쪽",
    "SOUND_CHANGEVOLUMEBY": "음량을 %1 만큼 바꾸기",
    "SOUND_SETVOLUMETO": "음량을 %1% 로 정하기",
    "SOUND_VOLUME": "음량",
    "CATEGORY_MOTION": "동작",
    "CATEGORY_LOOKS": "형태",
    "CATEGORY_SOUND": "소리",
    "CATEGORY_EVENTS": "이벤트",
    "CATEGORY_CONTROL": "제어",
    "CATEGORY_SENSING": "감지",
    "CATEGORY_OPERATORS": "연산",
    "CATEGORY_VARIABLES": "변수",
    "CATEGORY_MYBLOCKS": "나만의 블록",
    "DUPLICATE": "복사하기",
    "DELETE": "삭제하기",
    "ADD_COMMENT": "주석 넣기",
    "REMOVE_COMMENT": "주석 지우기",
    "DELETE_BLOCK": "블록 삭제하기",
    "DELETE_X_BLOCKS": "블록 %1개 삭제하기",
    "DELETE_ALL_BLOCKS": " %1개의 블록을 모두 삭제할까요?",
    "CLEAN_UP": "블록 정리하기",
    "HELP": "도움말",
    "UNDO": "되돌리기",
    "REDO": "재시도",
    "EDIT_PROCEDURE": "편집",
    "SHOW_PROCEDURE_DEFINITION": "정의로 이동하기",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Say something...",
    "COLOUR_HUE_LABEL": "색상",
    "COLOUR_SATURATION_LABEL": "채도",
    "COLOUR_BRIGHTNESS_LABEL": "명도",
    "CHANGE_VALUE_TITLE": "값 바꾸기:",
    "RENAME_VARIABLE": "변수 이름 수정하기",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "변수 이름 수정하기",
    "NEW_VARIABLE": "변수 만들기",
    "NEW_VARIABLE_TITLE": "새로운 변수 이름:",
    "VARIABLE_MODAL_TITLE": "새로운 변수",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "블록 만들기",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "리스트 만들기",
    "NEW_LIST_TITLE": "새로운 리스트 이름:",
    "LIST_MODAL_TITLE": "새로운 리스트",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "리스트 이름 수정하기",
    "NEW_BROADCAST_MESSAGE": "새로운 메시지",
    "NEW_BROADCAST_MESSAGE_TITLE": "새로운 메시지 이름:",
    "BROADCAST_MODAL_TITLE": "새로운 메시지",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "메시지1"
};

Blockly.ScratchMsgs.locales["mi"] =
{
    "CONTROL_FOREVER": "mō ake, ake mahia",
    "CONTROL_REPEAT": "tōaitia %1",
    "CONTROL_IF": "mēnā %1 mahia",
    "CONTROL_ELSE": "kē atu",
    "CONTROL_STOP": "katia",
    "CONTROL_STOP_ALL": "katoa",
    "CONTROL_STOP_THIS": "tēnei hōtuhi",
    "CONTROL_STOP_OTHER": "hōtuhi kē i roto i te parehe",
    "CONTROL_WAIT": "tatari kia %1 hēkona",
    "CONTROL_WAITUNTIL": "tatari kia %1",
    "CONTROL_REPEATUNTIL": "tōaitia tonutia kia %1",
    "CONTROL_WHILE": "tōaitia tonutia mēnā %1",
    "CONTROL_FOREACH": "mō ia %1 o roto i te %2",
    "CONTROL_STARTASCLONE": "ina ka tīmata mai ahau hei tārua",
    "CONTROL_CREATECLONEOF": "whakapūruatia %1",
    "CONTROL_CREATECLONEOF_MYSELF": "ahau anō",
    "CONTROL_DELETETHISCLONE": "mukua tēnei tāruarua",
    "CONTROL_COUNTER": "pūtatau",
    "CONTROL_INCRCOUNTER": "tāpiri tahi ki te pūtatau",
    "CONTROL_CLEARCOUNTER": "ūkui pūtatau",
    "CONTROL_ALLATONCE": "te katoa i te wā kotahi",
    "DATA_SETVARIABLETO": "tautuhia %1 ki te %2",
    "DATA_CHANGEVARIABLEBY": "panonitia %1 mā te %2",
    "DATA_SHOWVARIABLE": "whakaaturia te taurangi %1",
    "DATA_HIDEVARIABLE": "hunaia te taurangi %1",
    "DATA_ADDTOLIST": "tāpiritia te %1 ki te %2",
    "DATA_DELETEOFLIST": "mukua %1 i a %2",
    "DATA_INSERTATLIST": "whakaurua te %1 hei %2 o %3",
    "DATA_REPLACEITEMOFLIST": "whakakapia te tūemi %1 o %2, ki %3",
    "DATA_ITEMOFLIST": "te tūemi %1 o %2",
    "DATA_LENGTHOFLIST": "te roanga o te %1",
    "DATA_LISTCONTAINSITEM": "kei roto i %1 te %2?",
    "DATA_SHOWLIST": "whakaaturia te rārangi %1",
    "DATA_HIDELIST": "hunāia te rārangi %1",
    "DATA_INDEX_ALL": "katoa",
    "DATA_INDEX_LAST": "whakamutunga",
    "DATA_INDEX_RANDOM": "matapōkere",
    "EVENT_WHENFLAGCLICKED": "ina pāwhiria te %1",
    "EVENT_WHENTHISSPRITECLICKED": "ina pāwhiria tēnei parehe",
    "EVENT_WHENSTAGECLICKED": "ina pāwhiria te Atamira",
    "EVENT_WHENTOUCHINGOBJECT": "ka pā tēnei parehe i te %1",
    "EVENT_WHENBROADCASTRECEIVED": "ina ka riro mai te %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "ina hurihia te ārai tuarongo kia %1",
    "EVENT_WHENGREATERTHAN": "mēnā %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "taima",
    "EVENT_BROADCAST": "whakapaoho %1",
    "EVENT_BROADCASTANDWAIT": "whakapaoho %1, kātahi tatari",
    "EVENT_WHENKEYPRESSED": "ina pēhia te pātuhi %1",
    "EVENT_WHENKEYPRESSED_SPACE": "mokowā",
    "EVENT_WHENKEYPRESSED_LEFT": "pere mauī",
    "EVENT_WHENKEYPRESSED_RIGHT": "pere katau",
    "EVENT_WHENKEYPRESSED_DOWN": "pere whakararo",
    "EVENT_WHENKEYPRESSED_UP": "pere whakarunga",
    "EVENT_WHENKEYPRESSED_ANY": "noa",
    "LOOKS_SAYFORSECS": "kīia %1 mō ngā hēkona %2",
    "LOOKS_SAY": "kīia %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "whakaarohia te %1 mō ngā hēkona %2",
    "LOOKS_THINK": "whakaarohia te %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "whakaatu",
    "LOOKS_HIDE": "huna",
    "LOOKS_HIDEALLSPRITES": "hunaia ngā parehe katoa",
    "LOOKS_EFFECT_COLOR": "tae",
    "LOOKS_EFFECT_FISHEYE": "karu ika",
    "LOOKS_EFFECT_WHIRL": "kōriporipo",
    "LOOKS_EFFECT_PIXELATE": "whakatongitongi",
    "LOOKS_EFFECT_MOSAIC": "toi rōpinepine",
    "LOOKS_EFFECT_BRIGHTNESS": "pīataata",
    "LOOKS_EFFECT_GHOST": "kēhua",
    "LOOKS_CHANGEEFFECTBY": "panonitia te rākeitanga %1 mā te %2",
    "LOOKS_SETEFFECTTO": "panonitia te rākeitanga %1 ki te %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "ūkui rākeitanga whakairoiro",
    "LOOKS_CHANGESIZEBY": "panonitia te nui mā te %1",
    "LOOKS_SETSIZETO": "tautuhia te rahi kia %1 %",
    "LOOKS_SIZE": "rahi",
    "LOOKS_CHANGESTRETCHBY": "panonitia te toronga mā te %1",
    "LOOKS_SETSTRETCHTO": "tautuhia te toronga kia %1 %",
    "LOOKS_SWITCHCOSTUMETO": "panonitia te kākahu kia %1",
    "LOOKS_NEXTCOSTUME": "kākahu panuku",
    "LOOKS_SWITCHBACKDROPTO": "panonitia te ārai tuarongo kia %1",
    "LOOKS_GOTOFRONTBACK": "haere ki te apa %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "mua",
    "LOOKS_GOTOFRONTBACK_BACK": "muri",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "nekehia %1, kia %2 ngā apaapa",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "ki mua",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "ki muri",
    "LOOKS_BACKDROPNUMBERNAME": "ārai tuarongo %1",
    "LOOKS_COSTUMENUMBERNAME": "kākahu %1",
    "LOOKS_NUMBERNAME_NUMBER": "nama",
    "LOOKS_NUMBERNAME_NAME": "ingoa",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "panonitia te ārai tuarongo kia %1, kātahi, tatari",
    "LOOKS_NEXTBACKDROP": "ārai tuarongo panuku",
    "LOOKS_PREVIOUSBACKDROP": "ārai tuarongo o mua",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "nekehia kia %1 ngā takahanga",
    "MOTION_TURNLEFT": "hurihia %1, kia %2 putu",
    "MOTION_TURNRIGHT": "hurihia %1, kia %2 putu",
    "MOTION_POINTINDIRECTION": "atatohua ki %1",
    "MOTION_POINTTOWARDS": "atatohua ki %1",
    "MOTION_POINTTOWARDS_POINTER": "atatohu-kiore",
    "MOTION_GOTO": "neke ki %1",
    "MOTION_GOTO_POINTER": "atatohu-kiore",
    "MOTION_GOTO_RANDOM": "tūnga matapōkere",
    "MOTION_GOTOXY": "neke ki x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "wania kia %1 hēkona ki x: %2 y: %3",
    "MOTION_GLIDETO": "wania kia %1 hēkona ki %2",
    "MOTION_GLIDETO_POINTER": "atatohu-kiore",
    "MOTION_GLIDETO_RANDOM": "tūnga matapōkere",
    "MOTION_CHANGEXBY": "panonitia x mā te %1",
    "MOTION_SETX": "tāutuhia te x kia %1",
    "MOTION_CHANGEYBY": "panonitia y mā te %1",
    "MOTION_SETY": "tāutuhia te y kia %1",
    "MOTION_IFONEDGEBOUNCE": "mēnā kei te taitapa, tupanatia",
    "MOTION_SETROTATIONSTYLE": "tautuhia te momo huringa kia %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "mauī-ki-katau",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "kaua e takahuri",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "huri noa",
    "MOTION_XPOSITION": "tūnga x",
    "MOTION_YPOSITION": "tūnga y",
    "MOTION_DIRECTION": "ahunga",
    "MOTION_SCROLLRIGHT": "panuku whakatekatau %1",
    "MOTION_SCROLLUP": "panuku whakarunga %1",
    "MOTION_ALIGNSCENE": "tīaro kāpeka %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "taha mauī o raro",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "taha katau o raro",
    "MOTION_ALIGNSCENE_MIDDLE": "waenga",
    "MOTION_ALIGNSCENE_TOPLEFT": "taha mauī o runga",
    "MOTION_ALIGNSCENE_TOPRIGHT": "taha katau o runga",
    "MOTION_XSCROLL": "panuku x",
    "MOTION_YSCROLL": "panuku y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "kōwhiria matapōkere %1 ki te %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 me %2",
    "OPERATORS_OR": "%1, %2 rānei",
    "OPERATORS_NOT": "ehara ko te %1",
    "OPERATORS_JOIN": "tāpiritia te %1, %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "te pū %1 o te %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "te roanga o te %1",
    "OPERATORS_CONTAINS": "kei roto i a %1 : %2?",
    "OPERATORS_MOD": "%1 % %2",
    "OPERATORS_ROUND": "whakaawhiwhi %1",
    "OPERATORS_MATHOP": "%1 o te %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "papa",
    "OPERATORS_MATHOP_CEILING": "tuanui",
    "OPERATORS_MATHOP_SQRT": "sqrt",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "tāutu %1",
    "SENSING_TOUCHINGOBJECT": "kei te pā ki te %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "atatohu-kiore",
    "SENSING_TOUCHINGOBJECT_EDGE": "taitapa",
    "SENSING_TOUCHINGCOLOR": "kei te pā ki te tae %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "ka pā te tae %1 i te %2?",
    "SENSING_DISTANCETO": "tawhiti ki %1",
    "SENSING_DISTANCETO_POINTER": "atatohu-kiore",
    "SENSING_ASKANDWAIT": "pātai %1, kātahi, tatari",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "whakautu",
    "SENSING_KEYPRESSED": "kua pēhia te pātuhi %1?",
    "SENSING_MOUSEDOWN": "pāwhiri kiore?",
    "SENSING_MOUSEX": "x kiore",
    "SENSING_MOUSEY": "y kiore",
    "SENSING_SETDRAGMODE": "tautuhia te aratau tō kia %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "ka taea te tō",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "kāore e taea te tō",
    "SENSING_LOUDNESS": "hoihoi",
    "SENSING_LOUD": "hoihoi?",
    "SENSING_TIMER": "taima",
    "SENSING_RESETTIMER": "tautuhia anōtia te taima",
    "SENSING_OF": "%1 o %2",
    "SENSING_OF_XPOSITION": "tūnga x",
    "SENSING_OF_YPOSITION": "tūnga y",
    "SENSING_OF_DIRECTION": "ahunga",
    "SENSING_OF_COSTUMENUMBER": "kākahu #",
    "SENSING_OF_COSTUMENAME": "ingoa kākahu",
    "SENSING_OF_SIZE": "rahi",
    "SENSING_OF_VOLUME": "kahaoro",
    "SENSING_OF_BACKDROPNUMBER": "ārai tuarongo #",
    "SENSING_OF_BACKDROPNAME": "ingoa ārai tuarongo",
    "SENSING_OF_STAGE": "Atamira",
    "SENSING_CURRENT": "%1 o nāianei",
    "SENSING_CURRENT_YEAR": "tau",
    "SENSING_CURRENT_MONTH": "marama",
    "SENSING_CURRENT_DATE": "te rā",
    "SENSING_CURRENT_DAYOFWEEK": "te rangi o te wiki",
    "SENSING_CURRENT_HOUR": "haora",
    "SENSING_CURRENT_MINUTE": "miniti",
    "SENSING_CURRENT_SECOND": "hēkona",
    "SENSING_DAYSSINCE2000": "ngā rā mai i 2000",
    "SENSING_USERNAME": "ingoa kaiwhakamahi",
    "SENSING_USERID": "tohu tuakiri",
    "SOUND_PLAY": "tīmatahia te whakatangi i te oro %1",
    "SOUND_PLAYUNTILDONE": "whakatangihia te oro %1 kia mutu rawa",
    "SOUND_STOPALLSOUNDS": "katia ngā oro katoa",
    "SOUND_SETEFFECTO": "tautuhia te rākeitanga %1 kia %2",
    "SOUND_CHANGEEFFECTBY": "panonitia te rākeitanga %1 mā te %2",
    "SOUND_CLEAREFFECTS": "ūkui rākeitanga orotaunaki",
    "SOUND_EFFECTS_PITCH": "hauoro",
    "SOUND_EFFECTS_PAN": "huri whakatemauī/whakatekatau",
    "SOUND_CHANGEVOLUMEBY": "panonitia te kahaoro mā te %1",
    "SOUND_SETVOLUMETO": "tautuhia te kahaoro kia %1%",
    "SOUND_VOLUME": "kahaoro",
    "CATEGORY_MOTION": "Nekehanga",
    "CATEGORY_LOOKS": "Āhua",
    "CATEGORY_SOUND": "Oro",
    "CATEGORY_EVENTS": "Takahanga",
    "CATEGORY_CONTROL": "Whakatina",
    "CATEGORY_SENSING": "Paerongo",
    "CATEGORY_OPERATORS": "Tohutūmahi",
    "CATEGORY_VARIABLES": "Ngā Taurangi",
    "CATEGORY_MYBLOCKS": "Aku Paraka",
    "DUPLICATE": "Tāruatia",
    "DELETE": "Mukua",
    "ADD_COMMENT": "Tāpiri Tākupu",
    "REMOVE_COMMENT": "Mukua te Tākupu",
    "DELETE_BLOCK": "Mukua te Paraka",
    "DELETE_X_BLOCKS": "Mukua %1 Paraka",
    "DELETE_ALL_BLOCKS": "Mukua te katoa o ngā paraka e %1 ?",
    "CLEAN_UP": "Whakatikatika i ngā Paraka",
    "HELP": "Āwhina",
    "UNDO": "Wetekia",
    "REDO": "Mahia anōtia",
    "EDIT_PROCEDURE": "Whakatikaina",
    "SHOW_PROCEDURE_DEFINITION": "Haere ki te tautuhinga",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Kīia tētahi mea...",
    "COLOUR_HUE_LABEL": "Tae",
    "COLOUR_SATURATION_LABEL": "Waiwai",
    "COLOUR_BRIGHTNESS_LABEL": "Pīataata",
    "CHANGE_VALUE_TITLE": "Panonitia te uara:",
    "RENAME_VARIABLE": "Tapaina anōtia te taurangi",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Tapaina anōtia te Taurangi",
    "NEW_VARIABLE": "Hangaia tētahi taurangi",
    "NEW_VARIABLE_TITLE": "Ingoa taurangi hou:",
    "VARIABLE_MODAL_TITLE": "Taurangi Hou",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Hangaia tētahi Paraka",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Hangaia tētahi Rārangi",
    "NEW_LIST_TITLE": "Ingoa rārangi hou:",
    "LIST_MODAL_TITLE": "Rārangi Hou",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Tapaina te Rārangi",
    "NEW_BROADCAST_MESSAGE": "Karere hou",
    "NEW_BROADCAST_MESSAGE_TITLE": "Ingoa karere hou:",
    "BROADCAST_MODAL_TITLE": "Karere Hou",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "karere1"
};

Blockly.ScratchMsgs.locales["nb"] =
{
    "CONTROL_FOREVER": "gjenta for alltid",
    "CONTROL_REPEAT": "gjenta %1 ganger",
    "CONTROL_IF": "hvis %1",
    "CONTROL_ELSE": "ellers",
    "CONTROL_STOP": "stopp",
    "CONTROL_STOP_ALL": "alle",
    "CONTROL_STOP_THIS": "dette skriptet",
    "CONTROL_STOP_OTHER": "andre skript i figuren",
    "CONTROL_WAIT": "vent %1 sekunder",
    "CONTROL_WAITUNTIL": "vent til %1",
    "CONTROL_REPEATUNTIL": "gjenta til %1",
    "CONTROL_WHILE": "gjenta hvis %1",
    "CONTROL_FOREACH": "for hver %1 i %2",
    "CONTROL_STARTASCLONE": "når jeg starter som klon",
    "CONTROL_CREATECLONEOF": "lag klon av %1",
    "CONTROL_CREATECLONEOF_MYSELF": "meg",
    "CONTROL_DELETETHISCLONE": "slett denne klonen",
    "CONTROL_COUNTER": "teller",
    "CONTROL_INCRCOUNTER": "tell opp med 1",
    "CONTROL_CLEARCOUNTER": "nullstill telleren",
    "CONTROL_ALLATONCE": "kjør fort",
    "DATA_SETVARIABLETO": "sett %1 til %2",
    "DATA_CHANGEVARIABLEBY": "endre %1 med %2",
    "DATA_SHOWVARIABLE": "vis variabel %1",
    "DATA_HIDEVARIABLE": "skjul variabel %1",
    "DATA_ADDTOLIST": "legg til %1 i %2",
    "DATA_DELETEOFLIST": "slett element %1 i %2",
    "DATA_INSERTATLIST": "sett inn %1 på plass %2 i %3",
    "DATA_REPLACEITEMOFLIST": "erstatt element %1 i %2 med %3",
    "DATA_ITEMOFLIST": "element %1 i %2",
    "DATA_LENGTHOFLIST": "lengden av %1",
    "DATA_LISTCONTAINSITEM": "%1 inneholder %2?",
    "DATA_SHOWLIST": "vis liste %1",
    "DATA_HIDELIST": "skjul liste %1",
    "DATA_INDEX_ALL": "alle",
    "DATA_INDEX_LAST": "siste",
    "DATA_INDEX_RANDOM": "tilfeldig",
    "EVENT_WHENFLAGCLICKED": "når %1 klikkes",
    "EVENT_WHENTHISSPRITECLICKED": "når denne figuren klikkes",
    "EVENT_WHENSTAGECLICKED": "når scenen klikkes",
    "EVENT_WHENTOUCHINGOBJECT": "når denne figuren berører %1",
    "EVENT_WHENBROADCASTRECEIVED": "når jeg mottar %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "når bakgrunn bytter til %1",
    "EVENT_WHENGREATERTHAN": "når %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "sekundklokke",
    "EVENT_BROADCAST": "send melding %1",
    "EVENT_BROADCASTANDWAIT": "send melding %1 og vent",
    "EVENT_WHENKEYPRESSED": "når %1 trykkes",
    "EVENT_WHENKEYPRESSED_SPACE": "mellomrom",
    "EVENT_WHENKEYPRESSED_LEFT": "pil venstre",
    "EVENT_WHENKEYPRESSED_RIGHT": "pil høyre",
    "EVENT_WHENKEYPRESSED_DOWN": "pil ned",
    "EVENT_WHENKEYPRESSED_UP": "pil opp",
    "EVENT_WHENKEYPRESSED_ANY": "hvilken som helst",
    "LOOKS_SAYFORSECS": "si %1 i %2 sekunder",
    "LOOKS_SAY": "si %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "tenk %1 i %2 sekunder",
    "LOOKS_THINK": "tenk %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "vis",
    "LOOKS_HIDE": "skjul",
    "LOOKS_HIDEALLSPRITES": "skjul alle figurer",
    "LOOKS_EFFECT_COLOR": "farge",
    "LOOKS_EFFECT_FISHEYE": "fiskeøye",
    "LOOKS_EFFECT_WHIRL": "virvel",
    "LOOKS_EFFECT_PIXELATE": "piksel",
    "LOOKS_EFFECT_MOSAIC": "mosaikk",
    "LOOKS_EFFECT_BRIGHTNESS": "lysstyrke",
    "LOOKS_EFFECT_GHOST": "gjennomsiktig",
    "LOOKS_CHANGEEFFECTBY": "endre %1 effekt med %2",
    "LOOKS_SETEFFECTTO": "sett %1 effekt til %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "fjern grafiske effekter",
    "LOOKS_CHANGESIZEBY": "endre størrelse med %1",
    "LOOKS_SETSIZETO": "sett størrelse til %1 %",
    "LOOKS_SIZE": "størrelse",
    "LOOKS_CHANGESTRETCHBY": "endre strekk med %1",
    "LOOKS_SETSTRETCHTO": "sett strekk til %1 %",
    "LOOKS_SWITCHCOSTUMETO": "bytt drakt til %1",
    "LOOKS_NEXTCOSTUME": "neste drakt",
    "LOOKS_SWITCHBACKDROPTO": "bytt bakgrunn til %1",
    "LOOKS_GOTOFRONTBACK": "legg %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "foran alt",
    "LOOKS_GOTOFRONTBACK_BACK": "bakerst",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "gå %1 %2 lag",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "forover",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "bakover",
    "LOOKS_BACKDROPNUMBERNAME": "bakgrunn %1",
    "LOOKS_COSTUMENUMBERNAME": "drakt %1",
    "LOOKS_NUMBERNAME_NUMBER": "nummer",
    "LOOKS_NUMBERNAME_NAME": "navn",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "bytt bakgrunn til %1 og vent",
    "LOOKS_NEXTBACKDROP": "neste bakgrunn",
    "LOOKS_PREVIOUSBACKDROP": "forrige bakgrunn",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "gå %1 steg",
    "MOTION_TURNLEFT": "snu %1 %2 grader",
    "MOTION_TURNRIGHT": "snu %1 %2 grader",
    "MOTION_POINTINDIRECTION": "pek i retning %1",
    "MOTION_POINTTOWARDS": "pek mot %1",
    "MOTION_POINTTOWARDS_POINTER": "musepeker",
    "MOTION_GOTO": "gå til %1",
    "MOTION_GOTO_POINTER": "musepeker",
    "MOTION_GOTO_RANDOM": "tilfeldig sted",
    "MOTION_GOTOXY": "gå til x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "gli %1 sekunder til x: %2 y: %3",
    "MOTION_GLIDETO": "gli %1 sekunder til %2",
    "MOTION_GLIDETO_POINTER": "musepeker",
    "MOTION_GLIDETO_RANDOM": "tilfeldig sted",
    "MOTION_CHANGEXBY": "endre x med %1",
    "MOTION_SETX": "sett x til %1",
    "MOTION_CHANGEYBY": "endre y med %1",
    "MOTION_SETY": "sett y til %1",
    "MOTION_IFONEDGEBOUNCE": "sprett tilbake ved kanten",
    "MOTION_SETROTATIONSTYLE": "begrens rotasjon %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "vend sideveis",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "ikke roter",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "fri rotasjon",
    "MOTION_XPOSITION": "x-posisjon",
    "MOTION_YPOSITION": "y-posisjon",
    "MOTION_DIRECTION": "retning",
    "MOTION_SCROLLRIGHT": "rull høyre %1",
    "MOTION_SCROLLUP": "rull opp %1",
    "MOTION_ALIGNSCENE": "flytt bakgrunn %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "nederst til venstre",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "nederst til høyre",
    "MOTION_ALIGNSCENE_MIDDLE": "i midten",
    "MOTION_ALIGNSCENE_TOPLEFT": "øverst til venstre",
    "MOTION_ALIGNSCENE_TOPRIGHT": "øverst til høyre",
    "MOTION_XSCROLL": "rull x",
    "MOTION_YSCROLL": "rull y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "tilfeldig tall fra %1 til %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 og %2",
    "OPERATORS_OR": "%1 eller %2",
    "OPERATORS_NOT": "ikke %1",
    "OPERATORS_JOIN": "sett sammen %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "bokstav %1 i %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "lengden av %1",
    "OPERATORS_CONTAINS": "%1 inneholder %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "avrund %1",
    "OPERATORS_MATHOP": "%1 av %2",
    "OPERATORS_MATHOP_ABS": "absoluttverdi",
    "OPERATORS_MATHOP_FLOOR": "avrund ned",
    "OPERATORS_MATHOP_CEILING": "avrund opp",
    "OPERATORS_MATHOP_SQRT": "kvadratrot",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "arcsin",
    "OPERATORS_MATHOP_ACOS": "arccos",
    "OPERATORS_MATHOP_ATAN": "arctan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "definer %1",
    "SENSING_TOUCHINGOBJECT": "berører %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "musepeker",
    "SENSING_TOUCHINGOBJECT_EDGE": "kant",
    "SENSING_TOUCHINGCOLOR": "berører fargen %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "farge %1 berører %2?",
    "SENSING_DISTANCETO": "avstand til %1",
    "SENSING_DISTANCETO_POINTER": "musepeker",
    "SENSING_ASKANDWAIT": "spør %1 og vent",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "svar",
    "SENSING_KEYPRESSED": "tast %1 trykket?",
    "SENSING_MOUSEDOWN": "museknappen er trykket?",
    "SENSING_MOUSEX": "mus x",
    "SENSING_MOUSEY": "mus y",
    "SENSING_SETDRAGMODE": "%1 å dra med musen",
    "SENSING_SETDRAGMODE_DRAGGABLE": "tillat",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "ikke tillat",
    "SENSING_LOUDNESS": "lydnivå",
    "SENSING_LOUD": "høy lyd?",
    "SENSING_TIMER": "sekundklokke",
    "SENSING_RESETTIMER": "nullstill klokken",
    "SENSING_OF": "%1 av %2",
    "SENSING_OF_XPOSITION": "x-posisjon",
    "SENSING_OF_YPOSITION": "y-posisjon",
    "SENSING_OF_DIRECTION": "retning",
    "SENSING_OF_COSTUMENUMBER": "drakt nr.",
    "SENSING_OF_COSTUMENAME": "draktnavn",
    "SENSING_OF_SIZE": "størrelse",
    "SENSING_OF_VOLUME": "volum",
    "SENSING_OF_BACKDROPNUMBER": "bakgrunn nr.",
    "SENSING_OF_BACKDROPNAME": "navn på bakgrunn",
    "SENSING_OF_STAGE": "Scene",
    "SENSING_CURRENT": "%1 nå",
    "SENSING_CURRENT_YEAR": "år",
    "SENSING_CURRENT_MONTH": "måned",
    "SENSING_CURRENT_DATE": "dato",
    "SENSING_CURRENT_DAYOFWEEK": "ukedag",
    "SENSING_CURRENT_HOUR": "time",
    "SENSING_CURRENT_MINUTE": "minutt",
    "SENSING_CURRENT_SECOND": "sekund",
    "SENSING_DAYSSINCE2000": "dager siden 2000",
    "SENSING_USERNAME": "brukernavn",
    "SENSING_USERID": "brukernavn",
    "SOUND_PLAY": "start lyden %1",
    "SOUND_PLAYUNTILDONE": "spill lyden %1 til den er ferdig",
    "SOUND_STOPALLSOUNDS": "stopp alle lyder",
    "SOUND_SETEFFECTO": "sett %1 effekt til %2",
    "SOUND_CHANGEEFFECTBY": "endre %1 effekt med %2",
    "SOUND_CLEAREFFECTS": "fjern lydeffekter",
    "SOUND_EFFECTS_PITCH": "tonehøyde",
    "SOUND_EFFECTS_PAN": "retning",
    "SOUND_CHANGEVOLUMEBY": "endre volum med %1",
    "SOUND_SETVOLUMETO": "sett volum %1%",
    "SOUND_VOLUME": "volum",
    "CATEGORY_MOTION": "Bevegelse",
    "CATEGORY_LOOKS": "Utseende",
    "CATEGORY_SOUND": "Lyd",
    "CATEGORY_EVENTS": "Hendelser",
    "CATEGORY_CONTROL": "Styring",
    "CATEGORY_SENSING": "Sansing",
    "CATEGORY_OPERATORS": "Operatorer",
    "CATEGORY_VARIABLES": "Variabler",
    "CATEGORY_MYBLOCKS": "Mine klosser",
    "DUPLICATE": "Lag en kopi",
    "DELETE": "Slett",
    "ADD_COMMENT": "Skriv en kommentar",
    "REMOVE_COMMENT": "Fjern kommentar",
    "DELETE_BLOCK": "Slett kloss",
    "DELETE_X_BLOCKS": "Slett %1 klosser",
    "DELETE_ALL_BLOCKS": "Slette disse %1  klossene?",
    "CLEAN_UP": "Rydd opp klossene",
    "HELP": "Hjelp",
    "UNDO": "Angre",
    "REDO": "Gjør igjen",
    "EDIT_PROCEDURE": "Rediger",
    "SHOW_PROCEDURE_DEFINITION": "Gå til definisjonen",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Si noe...",
    "COLOUR_HUE_LABEL": "Farge",
    "COLOUR_SATURATION_LABEL": "Fargemetning",
    "COLOUR_BRIGHTNESS_LABEL": "Lysstyrke",
    "CHANGE_VALUE_TITLE": "Endre verdi:",
    "RENAME_VARIABLE": "Endre navn på variabel",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Endre navn på variabel",
    "NEW_VARIABLE": "Lag en variabel",
    "NEW_VARIABLE_TITLE": "Nytt variabelnavn:",
    "VARIABLE_MODAL_TITLE": "Ny variabel",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Lag en kloss",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Lag en Liste",
    "NEW_LIST_TITLE": "Nytt navn på listen:",
    "LIST_MODAL_TITLE": "Ny liste",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Gi listen et annet navn",
    "NEW_BROADCAST_MESSAGE": "Ny melding",
    "NEW_BROADCAST_MESSAGE_TITLE": "Skriv ny  melding:",
    "BROADCAST_MODAL_TITLE": "Ny melding",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "melding1"
};

Blockly.ScratchMsgs.locales["nl"] =
{
    "CONTROL_FOREVER": "herhaal",
    "CONTROL_REPEAT": "herhaal %1",
    "CONTROL_IF": "als %1 dan",
    "CONTROL_ELSE": "anders",
    "CONTROL_STOP": "stop",
    "CONTROL_STOP_ALL": "alle",
    "CONTROL_STOP_THIS": "dit script",
    "CONTROL_STOP_OTHER": "andere scripts in sprite",
    "CONTROL_WAIT": "wacht %1 sec.",
    "CONTROL_WAITUNTIL": "wacht tot %1",
    "CONTROL_REPEATUNTIL": "herhaal tot %1",
    "CONTROL_WHILE": "zolang %1",
    "CONTROL_FOREACH": "voor elke %1 in %2",
    "CONTROL_STARTASCLONE": "wanneer ik als kloon start",
    "CONTROL_CREATECLONEOF": "maak een kloon van %1",
    "CONTROL_CREATECLONEOF_MYSELF": "mijzelf",
    "CONTROL_DELETETHISCLONE": "verwijder deze kloon",
    "CONTROL_COUNTER": "teller",
    "CONTROL_INCRCOUNTER": "verhoog teller",
    "CONTROL_CLEARCOUNTER": "zet teller op 0",
    "CONTROL_ALLATONCE": "alles in een keer",
    "DATA_SETVARIABLETO": "maak %1 %2",
    "DATA_CHANGEVARIABLEBY": "verander %1 met %2",
    "DATA_SHOWVARIABLE": "toon variabele %1",
    "DATA_HIDEVARIABLE": "verberg variabele %1",
    "DATA_ADDTOLIST": "voeg %1 toe aan %2",
    "DATA_DELETEOFLIST": "verwijder %1 van %2",
    "DATA_INSERTATLIST": "voeg %1 toe op %2 van %3",
    "DATA_REPLACEITEMOFLIST": "vervang item %1 van %2 door %3",
    "DATA_ITEMOFLIST": "item %1 van %2",
    "DATA_LENGTHOFLIST": "lengte van %1",
    "DATA_LISTCONTAINSITEM": "%1 bevat %2?",
    "DATA_SHOWLIST": "toon lijst %1",
    "DATA_HIDELIST": "verberg lijst %1",
    "DATA_INDEX_ALL": "alle",
    "DATA_INDEX_LAST": "laatste",
    "DATA_INDEX_RANDOM": "willekeurig",
    "EVENT_WHENFLAGCLICKED": "wanneer op %1 wordt geklikt",
    "EVENT_WHENTHISSPRITECLICKED": "wanneer op deze sprite wordt geklikt",
    "EVENT_WHENSTAGECLICKED": "wanneer op het speelveld wordt geklikt",
    "EVENT_WHENTOUCHINGOBJECT": "wanneer deze sprite %1 raakt",
    "EVENT_WHENBROADCASTRECEIVED": "wanneer ik signaal %1 ontvang",
    "EVENT_WHENBACKDROPSWITCHESTO": "wanneer achtergrond verandert naar %1",
    "EVENT_WHENGREATERTHAN": "wanneer %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "klok",
    "EVENT_BROADCAST": "zend signaal %1",
    "EVENT_BROADCASTANDWAIT": "zend signaal %1 en wacht",
    "EVENT_WHENKEYPRESSED": "wanneer %1 is ingedrukt",
    "EVENT_WHENKEYPRESSED_SPACE": "spatiebalk",
    "EVENT_WHENKEYPRESSED_LEFT": "pijltje links",
    "EVENT_WHENKEYPRESSED_RIGHT": "pijltje rechts",
    "EVENT_WHENKEYPRESSED_DOWN": "pijltje omlaag",
    "EVENT_WHENKEYPRESSED_UP": "pijltje omhoog",
    "EVENT_WHENKEYPRESSED_ANY": "willekeurig",
    "LOOKS_SAYFORSECS": "zeg %1 %2 sec.",
    "LOOKS_SAY": "zeg %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "denk %1 %2 sec.",
    "LOOKS_THINK": "denk %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "verschijn",
    "LOOKS_HIDE": "verdwijn",
    "LOOKS_HIDEALLSPRITES": "verberg alle sprites",
    "LOOKS_EFFECT_COLOR": "kleur",
    "LOOKS_EFFECT_FISHEYE": "vissenoog",
    "LOOKS_EFFECT_WHIRL": "draaikolk",
    "LOOKS_EFFECT_PIXELATE": "pixeleren",
    "LOOKS_EFFECT_MOSAIC": "mozaïek",
    "LOOKS_EFFECT_BRIGHTNESS": "helderheid",
    "LOOKS_EFFECT_GHOST": "geest",
    "LOOKS_CHANGEEFFECTBY": "verander %1 effect met %2",
    "LOOKS_SETEFFECTTO": "zet %1 effect op %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "zet alle effecten uit",
    "LOOKS_CHANGESIZEBY": "verander grootte met %1",
    "LOOKS_SETSIZETO": "maak grootte %1 %",
    "LOOKS_SIZE": "grootte",
    "LOOKS_CHANGESTRETCHBY": "verander stretch met %1",
    "LOOKS_SETSTRETCHTO": "maak stretch %1 %",
    "LOOKS_SWITCHCOSTUMETO": "verander uiterlijk naar %1",
    "LOOKS_NEXTCOSTUME": "volgend uiterlijk",
    "LOOKS_SWITCHBACKDROPTO": "verander achtergrond naar %1",
    "LOOKS_GOTOFRONTBACK": "ga naar laag %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "voorgrond",
    "LOOKS_GOTOFRONTBACK_BACK": "achtergrond",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "ga %1 %2 lagen",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "naar voren",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "naar achteren",
    "LOOKS_BACKDROPNUMBERNAME": "achtergrond %1",
    "LOOKS_COSTUMENUMBERNAME": "uiterlijk %1",
    "LOOKS_NUMBERNAME_NUMBER": "nummer",
    "LOOKS_NUMBERNAME_NAME": "naam",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "verander achtergrond naar %1 en wacht",
    "LOOKS_NEXTBACKDROP": "volgende achtergrond",
    "LOOKS_PREVIOUSBACKDROP": "vorige achtergrond",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "neem %1 stappen",
    "MOTION_TURNLEFT": "draai %1 %2 graden",
    "MOTION_TURNRIGHT": "draai %1 %2 graden",
    "MOTION_POINTINDIRECTION": "richt naar %1 graden",
    "MOTION_POINTTOWARDS": "richt naar %1",
    "MOTION_POINTTOWARDS_POINTER": "muisaanwijzer",
    "MOTION_GOTO": "ga naar %1",
    "MOTION_GOTO_POINTER": "muisaanwijzer",
    "MOTION_GOTO_RANDOM": "willekeurige positie",
    "MOTION_GOTOXY": "ga naar x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "schuif in %1 sec. naar x: %2 y: %3",
    "MOTION_GLIDETO": "schuif in %1 sec. naar %2",
    "MOTION_GLIDETO_POINTER": "muisaanwijzer",
    "MOTION_GLIDETO_RANDOM": "willekeurige positie",
    "MOTION_CHANGEXBY": "verander x met %1",
    "MOTION_SETX": "maak x %1",
    "MOTION_CHANGEYBY": "verander y met %1",
    "MOTION_SETY": "maak y %1",
    "MOTION_IFONEDGEBOUNCE": "keer om aan de rand",
    "MOTION_SETROTATIONSTYLE": "maak draaistijl %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "links-rechts",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "niet draaien",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "helemaal rond",
    "MOTION_XPOSITION": "x-positie",
    "MOTION_YPOSITION": "y-positie",
    "MOTION_DIRECTION": "richting",
    "MOTION_SCROLLRIGHT": "rechts scrollen %1",
    "MOTION_SCROLLUP": "omhoog scrollen %1",
    "MOTION_ALIGNSCENE": "scène uitlijnen %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "linksonder",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "rechtsonder",
    "MOTION_ALIGNSCENE_MIDDLE": "midden",
    "MOTION_ALIGNSCENE_TOPLEFT": "linksboven",
    "MOTION_ALIGNSCENE_TOPRIGHT": "rechtsboven",
    "MOTION_XSCROLL": "x scroll",
    "MOTION_YSCROLL": "y scroll",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "willekeurig getal tussen %1 en %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 en %2",
    "OPERATORS_OR": "%1 of %2",
    "OPERATORS_NOT": "niet %1",
    "OPERATORS_JOIN": "voeg %1 en %2 samen",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "letter %1 van %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "lengte van %1",
    "OPERATORS_CONTAINS": "%1 bevat %2?",
    "OPERATORS_MOD": "%1 modulo %2",
    "OPERATORS_ROUND": "afgerond %1",
    "OPERATORS_MATHOP": "%1 van %2",
    "OPERATORS_MATHOP_ABS": "absoluut",
    "OPERATORS_MATHOP_FLOOR": "beneden",
    "OPERATORS_MATHOP_CEILING": "boven",
    "OPERATORS_MATHOP_SQRT": "wortel",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "arcsin",
    "OPERATORS_MATHOP_ACOS": "arccos",
    "OPERATORS_MATHOP_ATAN": "arctan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "definieer %1",
    "SENSING_TOUCHINGOBJECT": "raak ik %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "muisaanwijzer",
    "SENSING_TOUCHINGOBJECT_EDGE": "rand",
    "SENSING_TOUCHINGCOLOR": "raak ik kleur %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "raakt kleur %1 kleur %2?",
    "SENSING_DISTANCETO": "afstand tot %1",
    "SENSING_DISTANCETO_POINTER": "muisaanwijzer",
    "SENSING_ASKANDWAIT": "vraag %1 en wacht",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "antwoord",
    "SENSING_KEYPRESSED": "toets %1 ingedrukt?",
    "SENSING_MOUSEDOWN": "muis ingedrukt?",
    "SENSING_MOUSEX": "muis x",
    "SENSING_MOUSEY": "muis y",
    "SENSING_SETDRAGMODE": "zet sleepbaar op %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "sleepbaar",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "niet sleepbaar",
    "SENSING_LOUDNESS": "volume",
    "SENSING_LOUD": "luid?",
    "SENSING_TIMER": "klok",
    "SENSING_RESETTIMER": "zet klok op 0",
    "SENSING_OF": "%1 van %2",
    "SENSING_OF_XPOSITION": "x-positie",
    "SENSING_OF_YPOSITION": "y-positie",
    "SENSING_OF_DIRECTION": "richting",
    "SENSING_OF_COSTUMENUMBER": "uiterlijk #",
    "SENSING_OF_COSTUMENAME": "naam uiterlijk",
    "SENSING_OF_SIZE": "grootte",
    "SENSING_OF_VOLUME": "volume",
    "SENSING_OF_BACKDROPNUMBER": "achtergrond #",
    "SENSING_OF_BACKDROPNAME": "achtergrond naam",
    "SENSING_OF_STAGE": "Speelveld",
    "SENSING_CURRENT": "huidige %1",
    "SENSING_CURRENT_YEAR": "jaar",
    "SENSING_CURRENT_MONTH": "maand",
    "SENSING_CURRENT_DATE": "datum",
    "SENSING_CURRENT_DAYOFWEEK": "dag van de week",
    "SENSING_CURRENT_HOUR": "uur",
    "SENSING_CURRENT_MINUTE": "minuut",
    "SENSING_CURRENT_SECOND": "seconde",
    "SENSING_DAYSSINCE2000": "dagen sinds 2000",
    "SENSING_USERNAME": "gebruikersnaam",
    "SENSING_USERID": "gebruiker id",
    "SOUND_PLAY": "start geluid %1",
    "SOUND_PLAYUNTILDONE": "start geluid %1 en wacht",
    "SOUND_STOPALLSOUNDS": "stop alle geluiden",
    "SOUND_SETEFFECTO": "zet effect %1 op %2",
    "SOUND_CHANGEEFFECTBY": "verander %1-effect met %2",
    "SOUND_CLEAREFFECTS": "zet alle effecten uit",
    "SOUND_EFFECTS_PITCH": "toonhoogte",
    "SOUND_EFFECTS_PAN": "kanaal links/rechts",
    "SOUND_CHANGEVOLUMEBY": "verander volume met %1",
    "SOUND_SETVOLUMETO": "zet volume op %1%",
    "SOUND_VOLUME": "volume",
    "CATEGORY_MOTION": "Beweging",
    "CATEGORY_LOOKS": "Uiterlijken",
    "CATEGORY_SOUND": "Geluid",
    "CATEGORY_EVENTS": "Gebeurtenissen",
    "CATEGORY_CONTROL": "Besturen",
    "CATEGORY_SENSING": "Waarnemen",
    "CATEGORY_OPERATORS": "Functies",
    "CATEGORY_VARIABLES": "Variabelen",
    "CATEGORY_MYBLOCKS": "Mijn blokken",
    "DUPLICATE": "Kopie maken",
    "DELETE": "Verwijderen",
    "ADD_COMMENT": "Commentaar toevoegen",
    "REMOVE_COMMENT": "Commentaar verwijderen",
    "DELETE_BLOCK": "Blok verwijderen",
    "DELETE_X_BLOCKS": "Verwijder %1 blokken",
    "DELETE_ALL_BLOCKS": "Verwijder alle %1 blokken?",
    "CLEAN_UP": "Blokken opruimen",
    "HELP": "Help",
    "UNDO": "Ongedaan maken",
    "REDO": "Opnieuw",
    "EDIT_PROCEDURE": "Bewerk",
    "SHOW_PROCEDURE_DEFINITION": "Ga naar definitie",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Zeg iets...",
    "COLOUR_HUE_LABEL": "Kleur",
    "COLOUR_SATURATION_LABEL": "Verzadiging",
    "COLOUR_BRIGHTNESS_LABEL": "Helderheid",
    "CHANGE_VALUE_TITLE": "Verander waarde:",
    "RENAME_VARIABLE": "Variabele hernoemen",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Variabele hernoemen",
    "NEW_VARIABLE": "Maak een variabele",
    "NEW_VARIABLE_TITLE": "Nieuwe variabelenaam:",
    "VARIABLE_MODAL_TITLE": "Nieuwe variabele",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Maak een blok",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Maak een lijst",
    "NEW_LIST_TITLE": "Nieuwe lijstnaam:",
    "LIST_MODAL_TITLE": "Nieuwe lijst",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Lijst hernoemen",
    "NEW_BROADCAST_MESSAGE": "Nieuw bericht",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nieuwe berichtnaam:",
    "BROADCAST_MODAL_TITLE": "Nieuw bericht",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "bericht1"
};

Blockly.ScratchMsgs.locales["pt-br"] =
{
    "CONTROL_FOREVER": "sempre",
    "CONTROL_REPEAT": "repita %1",
    "CONTROL_IF": "se %1 então",
    "CONTROL_ELSE": "senão",
    "CONTROL_STOP": "pare",
    "CONTROL_STOP_ALL": "todos",
    "CONTROL_STOP_THIS": "este script",
    "CONTROL_STOP_OTHER": "outros scripts no ator",
    "CONTROL_WAIT": "aguarde %1 segundos",
    "CONTROL_WAITUNTIL": "aguarde até %1",
    "CONTROL_REPEATUNTIL": "repita até %1",
    "CONTROL_WHILE": "enquanto %1",
    "CONTROL_FOREACH": "para cada %1 em %2",
    "CONTROL_STARTASCLONE": "quando eu iniciar como um clone",
    "CONTROL_CREATECLONEOF": "criar clone de %1",
    "CONTROL_CREATECLONEOF_MYSELF": "este ator",
    "CONTROL_DELETETHISCLONE": "apagar este clone",
    "CONTROL_COUNTER": "contador",
    "CONTROL_INCRCOUNTER": "incremente contador",
    "CONTROL_CLEARCOUNTER": "limpar contador",
    "CONTROL_ALLATONCE": "todos de uma vez",
    "DATA_SETVARIABLETO": "ponha %1 para %2",
    "DATA_CHANGEVARIABLEBY": "mude %1 por %2",
    "DATA_SHOWVARIABLE": "mostre variável %1",
    "DATA_HIDEVARIABLE": "esconda variável %1",
    "DATA_ADDTOLIST": "adicione %1 a %2",
    "DATA_DELETEOFLIST": "apague %1 de %2",
    "DATA_INSERTATLIST": "insira %1 a %2 de %3",
    "DATA_REPLACEITEMOFLIST": "substituir item %1 de %2 com %3",
    "DATA_ITEMOFLIST": "item %1 de %2",
    "DATA_LENGTHOFLIST": "comprimento de %1",
    "DATA_LISTCONTAINSITEM": "%1 contém %2",
    "DATA_SHOWLIST": "mostre lista %1",
    "DATA_HIDELIST": "esconda lista %1",
    "DATA_INDEX_ALL": "todos",
    "DATA_INDEX_LAST": "último",
    "DATA_INDEX_RANDOM": "aleatório",
    "EVENT_WHENFLAGCLICKED": "quando %1 clicado",
    "EVENT_WHENTHISSPRITECLICKED": "quando este ator clicado",
    "EVENT_WHENSTAGECLICKED": "quando palco clicado",
    "EVENT_WHENTOUCHINGOBJECT": "quando este ator tocar %1",
    "EVENT_WHENBROADCASTRECEIVED": "quando eu receber %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "quando pano de fundo mudar para %1",
    "EVENT_WHENGREATERTHAN": "quando %1 >%2",
    "EVENT_WHENGREATERTHAN_TIMER": "cronômetro",
    "EVENT_BROADCAST": "transmita %1",
    "EVENT_BROADCASTANDWAIT": "transmita %1 e espere",
    "EVENT_WHENKEYPRESSED": "quando tecla %1 pressionada",
    "EVENT_WHENKEYPRESSED_SPACE": "espaço",
    "EVENT_WHENKEYPRESSED_LEFT": "seta esquerda",
    "EVENT_WHENKEYPRESSED_RIGHT": "seta direita",
    "EVENT_WHENKEYPRESSED_DOWN": "seta para baixo",
    "EVENT_WHENKEYPRESSED_UP": "seta para cima",
    "EVENT_WHENKEYPRESSED_ANY": "qualquer",
    "LOOKS_SAYFORSECS": "diga %1 por %2 segundos",
    "LOOKS_SAY": "diga %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "pense %1 por %2 segundos",
    "LOOKS_THINK": "pense %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "mostre",
    "LOOKS_HIDE": "esconda",
    "LOOKS_HIDEALLSPRITES": "ocultar todos",
    "LOOKS_EFFECT_COLOR": "cor",
    "LOOKS_EFFECT_FISHEYE": "olho de peixe",
    "LOOKS_EFFECT_WHIRL": "turbilhão",
    "LOOKS_EFFECT_PIXELATE": "pixelizada",
    "LOOKS_EFFECT_MOSAIC": "mosaico",
    "LOOKS_EFFECT_BRIGHTNESS": "brilho",
    "LOOKS_EFFECT_GHOST": "fantasma",
    "LOOKS_CHANGEEFFECTBY": "mude efeito %1 para %2",
    "LOOKS_SETEFFECTTO": "defina efeito %1 para %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "limpe efeitos gráficos",
    "LOOKS_CHANGESIZEBY": "mude tamanho por %1",
    "LOOKS_SETSIZETO": "fixe tamanho para %1 %",
    "LOOKS_SIZE": "tamanho",
    "LOOKS_CHANGESTRETCHBY": "mude trajeto por %1",
    "LOOKS_SETSTRETCHTO": "ajuste curso para %1 %",
    "LOOKS_SWITCHCOSTUMETO": "mude traje para %1",
    "LOOKS_NEXTCOSTUME": "próximo traje",
    "LOOKS_SWITCHBACKDROPTO": "mude pano de fundo para %1",
    "LOOKS_GOTOFRONTBACK": "vá para %1 camada",
    "LOOKS_GOTOFRONTBACK_FRONT": "frente",
    "LOOKS_GOTOFRONTBACK_BACK": "trás",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "vá para %1 %2 camadas",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "para frente",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "para trás",
    "LOOKS_BACKDROPNUMBERNAME": "pano de fundo %1",
    "LOOKS_COSTUMENUMBERNAME": "traje %1",
    "LOOKS_NUMBERNAME_NUMBER": "número",
    "LOOKS_NUMBERNAME_NAME": "nome",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "mudo pano de fundo para %1 e espere",
    "LOOKS_NEXTBACKDROP": "próximo pano de fundo",
    "LOOKS_PREVIOUSBACKDROP": "cenário anterior",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "mova %1 passos",
    "MOTION_TURNLEFT": "gire %1 %2 graus",
    "MOTION_TURNRIGHT": "gire %1 %2 graus",
    "MOTION_POINTINDIRECTION": "aponte na direção %1",
    "MOTION_POINTTOWARDS": "aponte para a direção %1",
    "MOTION_POINTTOWARDS_POINTER": "ponteiro do mouse",
    "MOTION_GOTO": "vá para %1",
    "MOTION_GOTO_POINTER": "ponteiro do mouse",
    "MOTION_GOTO_RANDOM": "posição aleatória",
    "MOTION_GOTOXY": "vá para x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "deslizar %1 segs para x: %2 y: %3",
    "MOTION_GLIDETO": "deslizar %1 segs para %2",
    "MOTION_GLIDETO_POINTER": "ponteiro do mouse",
    "MOTION_GLIDETO_RANDOM": "posição aleatória",
    "MOTION_CHANGEXBY": "mude x por %1",
    "MOTION_SETX": "fixe x para %1",
    "MOTION_CHANGEYBY": "mude y por %1",
    "MOTION_SETY": "fixe y para %1",
    "MOTION_IFONEDGEBOUNCE": "se tocar na borda, volte",
    "MOTION_SETROTATIONSTYLE": "ajuste rotação para estilo %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "esquerda-direita",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "não rotacionar",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "tudo a volta",
    "MOTION_XPOSITION": "posição x",
    "MOTION_YPOSITION": "posição y",
    "MOTION_DIRECTION": "direção",
    "MOTION_SCROLLRIGHT": "rolar para direita %1 %",
    "MOTION_SCROLLUP": "rolar para cima %1",
    "MOTION_ALIGNSCENE": "alinhar cena %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "inferior esquerda",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "inferior direita",
    "MOTION_ALIGNSCENE_MIDDLE": "meio",
    "MOTION_ALIGNSCENE_TOPLEFT": "superior esquerdo",
    "MOTION_ALIGNSCENE_TOPRIGHT": "superior direita",
    "MOTION_XSCROLL": "rolagem eixo x",
    "MOTION_YSCROLL": "rolagem eixo y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "número aleatório entre %1 e %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 e %2",
    "OPERATORS_OR": "%1 ou %2",
    "OPERATORS_NOT": "não %1",
    "OPERATORS_JOIN": "junte %1 com %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "letra %1 de %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "tamanho de %1",
    "OPERATORS_CONTAINS": "%1 contém %2",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "arredonde %1",
    "OPERATORS_MATHOP": "%1 de %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "piso",
    "OPERATORS_MATHOP_CEILING": "teto",
    "OPERATORS_MATHOP_SQRT": "raiz",
    "OPERATORS_MATHOP_SIN": "seno",
    "OPERATORS_MATHOP_COS": "cosseno",
    "OPERATORS_MATHOP_TAN": "tangente",
    "OPERATORS_MATHOP_ASIN": "arcoseno",
    "OPERATORS_MATHOP_ACOS": "arcocosseno",
    "OPERATORS_MATHOP_ATAN": "arcotangente",
    "OPERATORS_MATHOP_LN": "Em",
    "OPERATORS_MATHOP_LOG": "logaritmo",
    "OPERATORS_MATHOP_EEXP": "base elevada à potência",
    "OPERATORS_MATHOP_10EXP": "10 elevado à potência",
    "PROCEDURES_DEFINITION": "defina %1",
    "SENSING_TOUCHINGOBJECT": "tocando %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "Ponteiro do mouse",
    "SENSING_TOUCHINGOBJECT_EDGE": "borda",
    "SENSING_TOUCHINGCOLOR": "Tocando na cor %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "cor %1 está tocando %2?",
    "SENSING_DISTANCETO": "distância %1",
    "SENSING_DISTANCETO_POINTER": "ponteiro do mouse",
    "SENSING_ASKANDWAIT": "pergunte %1 e espere",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "resposta",
    "SENSING_KEYPRESSED": "quando a tecla %1 for pressionada",
    "SENSING_MOUSEDOWN": "mouse pressionado?",
    "SENSING_MOUSEX": "mouse x",
    "SENSING_MOUSEY": "mouse y",
    "SENSING_SETDRAGMODE": "arraste para %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "arrastável",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "não arrastável",
    "SENSING_LOUDNESS": "ruído",
    "SENSING_LOUD": "alto?",
    "SENSING_TIMER": "cronômetro",
    "SENSING_RESETTIMER": "reiniciar o tempo",
    "SENSING_OF": "%1 de %2",
    "SENSING_OF_XPOSITION": "posição x",
    "SENSING_OF_YPOSITION": "posição y",
    "SENSING_OF_DIRECTION": "direção",
    "SENSING_OF_COSTUMENUMBER": "traje%1",
    "SENSING_OF_COSTUMENAME": "nome do traje/ nome da fantasia",
    "SENSING_OF_SIZE": "tamanho",
    "SENSING_OF_VOLUME": "volume",
    "SENSING_OF_BACKDROPNUMBER": "pano de fundo#",
    "SENSING_OF_BACKDROPNAME": "nome do pano de fundo",
    "SENSING_OF_STAGE": "Palco",
    "SENSING_CURRENT": "atual %1",
    "SENSING_CURRENT_YEAR": "ano",
    "SENSING_CURRENT_MONTH": "mês",
    "SENSING_CURRENT_DATE": "data",
    "SENSING_CURRENT_DAYOFWEEK": "dia da semana",
    "SENSING_CURRENT_HOUR": "hora",
    "SENSING_CURRENT_MINUTE": "minuto",
    "SENSING_CURRENT_SECOND": "segundo",
    "SENSING_DAYSSINCE2000": "dias desde 2000",
    "SENSING_USERNAME": "nome de usuário",
    "SENSING_USERID": "id do usuário",
    "SOUND_PLAY": "iniciar o som%1",
    "SOUND_PLAYUNTILDONE": "tocar o som %1 até que esteja completo/pronto",
    "SOUND_STOPALLSOUNDS": "parar todos os sons",
    "SOUND_SETEFFECTO": "definir %1 efeito para %2",
    "SOUND_CHANGEEFFECTBY": "mudar efeito %1 por %2",
    "SOUND_CLEAREFFECTS": "limpar os efeitos de som ",
    "SOUND_EFFECTS_PITCH": "passo",
    "SOUND_EFFECTS_PAN": "balanço esquerda/direita",
    "SOUND_CHANGEVOLUMEBY": "mudar o volume por %1",
    "SOUND_SETVOLUMETO": "fixar o volume para %1%",
    "SOUND_VOLUME": "volume",
    "CATEGORY_MOTION": "Movimento",
    "CATEGORY_LOOKS": "Aparência",
    "CATEGORY_SOUND": "Som",
    "CATEGORY_EVENTS": "Eventos",
    "CATEGORY_CONTROL": "Controle",
    "CATEGORY_SENSING": "Sensores",
    "CATEGORY_OPERATORS": "Operadores",
    "CATEGORY_VARIABLES": "Variáveis",
    "CATEGORY_MYBLOCKS": "Meus Blocos",
    "DUPLICATE": "Duplicar",
    "DELETE": "Apagar",
    "ADD_COMMENT": "Comentar",
    "REMOVE_COMMENT": "Remover Comentário",
    "DELETE_BLOCK": "Deletar Bloco",
    "DELETE_X_BLOCKS": "Deletar %1 Blocos",
    "DELETE_ALL_BLOCKS": "Deletar todos %1 blocos?",
    "CLEAN_UP": "Limpar Blocos",
    "HELP": "Ajuda",
    "UNDO": "Desfazer",
    "REDO": "Refazer",
    "EDIT_PROCEDURE": "Editar",
    "SHOW_PROCEDURE_DEFINITION": "Vá para definição",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Diga algo...",
    "COLOUR_HUE_LABEL": "cor",
    "COLOUR_SATURATION_LABEL": "saturação",
    "COLOUR_BRIGHTNESS_LABEL": "Brilho",
    "CHANGE_VALUE_TITLE": "Mudar valor:",
    "RENAME_VARIABLE": "Renomear variável",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Renomear variável",
    "NEW_VARIABLE": "Criar uma Variável",
    "NEW_VARIABLE_TITLE": "Novo nome para variável:",
    "VARIABLE_MODAL_TITLE": "Nova Variável",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Criar um bloco",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Criar uma lista",
    "NEW_LIST_TITLE": "Novo nome de lista:",
    "LIST_MODAL_TITLE": "Nova Lista",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Renomear Lista",
    "NEW_BROADCAST_MESSAGE": "Nova mensagem",
    "NEW_BROADCAST_MESSAGE_TITLE": "Novo nome de mensagem:",
    "BROADCAST_MODAL_TITLE": "Nova Mensagem",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "mensagem 1"
};

Blockly.ScratchMsgs.locales["pt"] =
{
    "CONTROL_FOREVER": "repete para sempre",
    "CONTROL_REPEAT": "repete %1 vezes",
    "CONTROL_IF": "se %1 , então",
    "CONTROL_ELSE": "senão,",
    "CONTROL_STOP": "pára",
    "CONTROL_STOP_ALL": "tudo",
    "CONTROL_STOP_THIS": "este guião",
    "CONTROL_STOP_OTHER": "os teus outros guiões",
    "CONTROL_WAIT": "espera %1 s",
    "CONTROL_WAITUNTIL": "espera até que %1",
    "CONTROL_REPEATUNTIL": "até que %1 , repete",
    "CONTROL_WHILE": "enquanto %1",
    "CONTROL_FOREACH": "para cada %1 em %2",
    "CONTROL_STARTASCLONE": "Quando fores criado como um clone",
    "CONTROL_CREATECLONEOF": "cria um clone de %1",
    "CONTROL_CREATECLONEOF_MYSELF": "ti mesmo",
    "CONTROL_DELETETHISCLONE": "remove-te como clone",
    "CONTROL_COUNTER": "contador",
    "CONTROL_INCRCOUNTER": "incrementa o contador",
    "CONTROL_CLEARCOUNTER": "põe o contador a zero",
    "CONTROL_ALLATONCE": "executa tudo de uma vez",
    "DATA_SETVARIABLETO": "altera %1 para %2",
    "DATA_CHANGEVARIABLEBY": "adiciona a %1 o valor %2",
    "DATA_SHOWVARIABLE": "mostra a variável %1",
    "DATA_HIDEVARIABLE": "esconde a variável %1",
    "DATA_ADDTOLIST": "acrescenta %1 a %2",
    "DATA_DELETEOFLIST": "remove %1 de %2",
    "DATA_INSERTATLIST": "insere %1 como %2 de %3",
    "DATA_REPLACEITEMOFLIST": "substitui %1 de %2 por %3",
    "DATA_ITEMOFLIST": "%1 de %2",
    "DATA_LENGTHOFLIST": "o comprimento de %1",
    "DATA_LISTCONTAINSITEM": "%1 contém %2",
    "DATA_SHOWLIST": "mostra a lista %1",
    "DATA_HIDELIST": "esconde a lista %1",
    "DATA_INDEX_ALL": "tudo",
    "DATA_INDEX_LAST": "o último item",
    "DATA_INDEX_RANDOM": "um item ao acaso",
    "EVENT_WHENFLAGCLICKED": "Quando alguém clicar em %1",
    "EVENT_WHENTHISSPRITECLICKED": "Quando alguém clicar em ti",
    "EVENT_WHENSTAGECLICKED": "Quando alguém clicar no palco",
    "EVENT_WHENTOUCHINGOBJECT": "Quando tocares em %1",
    "EVENT_WHENBROADCASTRECEIVED": "Quando receberes a mensagem %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "Quando o cenário mudar para %1",
    "EVENT_WHENGREATERTHAN": "Quando o valor do sensor %1 exceder %2",
    "EVENT_WHENGREATERTHAN_TIMER": "o valor do cronómetro",
    "EVENT_BROADCAST": "difunde a mensagem %1",
    "EVENT_BROADCASTANDWAIT": "difunde a mensagem %1 e espera",
    "EVENT_WHENKEYPRESSED": "Quando alguém pressionar a tecla %1",
    "EVENT_WHENKEYPRESSED_SPACE": "espaço",
    "EVENT_WHENKEYPRESSED_LEFT": "seta para a esquerda",
    "EVENT_WHENKEYPRESSED_RIGHT": "seta para a direita",
    "EVENT_WHENKEYPRESSED_DOWN": "seta para baixo",
    "EVENT_WHENKEYPRESSED_UP": "seta para cima",
    "EVENT_WHENKEYPRESSED_ANY": "qualquer",
    "LOOKS_SAYFORSECS": "diz %1 durante %2 s",
    "LOOKS_SAY": "diz %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "pensa %1 durante %2 s",
    "LOOKS_THINK": "pensa %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "mostra-te",
    "LOOKS_HIDE": "esconde-te",
    "LOOKS_HIDEALLSPRITES": "esconde todos os actores",
    "LOOKS_EFFECT_COLOR": "cor",
    "LOOKS_EFFECT_FISHEYE": "olho de peixe",
    "LOOKS_EFFECT_WHIRL": "remoinho",
    "LOOKS_EFFECT_PIXELATE": "pixelização",
    "LOOKS_EFFECT_MOSAIC": "mosaico",
    "LOOKS_EFFECT_BRIGHTNESS": "brilho",
    "LOOKS_EFFECT_GHOST": "fantasma",
    "LOOKS_CHANGEEFFECTBY": "adiciona ao teu efeito %1 o valor %2",
    "LOOKS_SETEFFECTTO": "altera o teu efeito %1 para %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "cancela os teus efeitos gráficos",
    "LOOKS_CHANGESIZEBY": "adiciona %1 ao teu tamanho",
    "LOOKS_SETSIZETO": "altera o teu tamanho para %1 %",
    "LOOKS_SIZE": "o tamanho",
    "LOOKS_CHANGESTRETCHBY": "adiciona %1 % ao esticamento",
    "LOOKS_SETSTRETCHTO": "altera o esticamento para %1 %",
    "LOOKS_SWITCHCOSTUMETO": "muda o teu traje para %1",
    "LOOKS_NEXTCOSTUME": "passa para o teu próximo traje",
    "LOOKS_SWITCHBACKDROPTO": "muda o cenário para %1",
    "LOOKS_GOTOFRONTBACK": "vai para a camada %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "frontal",
    "LOOKS_GOTOFRONTBACK_BACK": "traseira",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "%1 %2 camadas",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "avança",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "recua",
    "LOOKS_BACKDROPNUMBERNAME": "%1 do cenário",
    "LOOKS_COSTUMENUMBERNAME": "%1 to traje",
    "LOOKS_NUMBERNAME_NUMBER": "o número",
    "LOOKS_NUMBERNAME_NAME": "o nome",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "muda o cenário para %1 e espera",
    "LOOKS_NEXTBACKDROP": "passa para o teu próximo cenário",
    "LOOKS_PREVIOUSBACKDROP": "o cenário anterior",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "anda %1 passos",
    "MOTION_TURNLEFT": "gira %1 %2 °",
    "MOTION_TURNRIGHT": "gira %1 %2 °",
    "MOTION_POINTINDIRECTION": "altera a tua direcção para %1 °",
    "MOTION_POINTTOWARDS": "aponta em direcção a %1",
    "MOTION_POINTTOWARDS_POINTER": "ponteiro do rato",
    "MOTION_GOTO": "vai para %1",
    "MOTION_GOTO_POINTER": "o ponteiro do rato",
    "MOTION_GOTO_RANDOM": "uma posição ao acaso",
    "MOTION_GOTOXY": "vai para as coordenadas (x:%1 , y:%2 )",
    "MOTION_GLIDESECSTOXY": "desliza em %1 s para as coordenadas (x:%2 , y:%3 )",
    "MOTION_GLIDETO": "desliza em %1 s em direcção a%2",
    "MOTION_GLIDETO_POINTER": "o ponteiro do rato",
    "MOTION_GLIDETO_RANDOM": "uma posição ao acaso",
    "MOTION_CHANGEXBY": "adiciona %1 à tua coordenada x",
    "MOTION_SETX": "altera a tua coordenada x para %1",
    "MOTION_CHANGEYBY": "adiciona %1 à tua coordenada y",
    "MOTION_SETY": "altera a tua coordenada y para %1",
    "MOTION_IFONEDGEBOUNCE": "se estiveres a bater na borda, ressalta",
    "MOTION_SETROTATIONSTYLE": "altera o teu estilo de rotação para %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "olha apenas para a esquerda e para a direita",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "não gires",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "gira a toda a volta",
    "MOTION_XPOSITION": "a coordenada x da posição",
    "MOTION_YPOSITION": "a coordenada y da posição",
    "MOTION_DIRECTION": "a direcção",
    "MOTION_SCROLLRIGHT": "rola %1 para a direita",
    "MOTION_SCROLLUP": "rola %1 para cima",
    "MOTION_ALIGNSCENE": "alinha a cena %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "ao fundo e à esquerda",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "ao fundo e à direita",
    "MOTION_ALIGNSCENE_MIDDLE": "a meio",
    "MOTION_ALIGNSCENE_TOPLEFT": "no topo e à esquerda",
    "MOTION_ALIGNSCENE_TOPRIGHT": "no topo e à direita",
    "MOTION_XSCROLL": "o rolamento em x",
    "MOTION_YSCROLL": "o rolamento em y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 − %2",
    "OPERATORS_MULTIPLY": "%1 × %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "um valor ao acaso entre %1 e %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 e %2",
    "OPERATORS_OR": "%1 ou %2",
    "OPERATORS_NOT": "é falso que %1",
    "OPERATORS_JOIN": "a junção de %1 com %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "o caractere %1 de %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "o comprimento de %1",
    "OPERATORS_CONTAINS": "%1 contém %2",
    "OPERATORS_MOD": "o resto de %1 a dividir por %2",
    "OPERATORS_ROUND": "o arredondamento de %1",
    "OPERATORS_MATHOP": "%1 de %2",
    "OPERATORS_MATHOP_ABS": "o valor absoluto",
    "OPERATORS_MATHOP_FLOOR": "o chão (o maior inteiro não superior)",
    "OPERATORS_MATHOP_CEILING": "o tecto (menor inteiro não inferior)",
    "OPERATORS_MATHOP_SQRT": "a raiz quadrada",
    "OPERATORS_MATHOP_SIN": "o seno",
    "OPERATORS_MATHOP_COS": "o cosseno",
    "OPERATORS_MATHOP_TAN": "a tangente",
    "OPERATORS_MATHOP_ASIN": "o arco-seno",
    "OPERATORS_MATHOP_ACOS": "o arco-cosseno",
    "OPERATORS_MATHOP_ATAN": "o arco-tangente",
    "OPERATORS_MATHOP_LN": "o logaritmo natural",
    "OPERATORS_MATHOP_LOG": "o logaritmo",
    "OPERATORS_MATHOP_EEXP": "a exponencial",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "define %1",
    "SENSING_TOUCHINGOBJECT": "estás a tocar em %1",
    "SENSING_TOUCHINGOBJECT_POINTER": "o ponteiro do rato",
    "SENSING_TOUCHINGOBJECT_EDGE": "a borda",
    "SENSING_TOUCHINGCOLOR": "estás a tocar na cor %1",
    "SENSING_COLORISTOUCHINGCOLOR": "a cor %1 está a tocar na cor %2",
    "SENSING_DISTANCETO": "a distância até %1",
    "SENSING_DISTANCETO_POINTER": "o ponteiro do rato",
    "SENSING_ASKANDWAIT": "pergunta %1 e espera pela resposta",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "a resposta",
    "SENSING_KEYPRESSED": "a tecla %1 está a ser pressionada",
    "SENSING_MOUSEDOWN": "o botão do rato está pressionado",
    "SENSING_MOUSEX": "a coordenada x do rato",
    "SENSING_MOUSEY": "a coordenada y do rato",
    "SENSING_SETDRAGMODE": "altera o modo de arrasto para %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "arrastável",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "não arrastável",
    "SENSING_LOUDNESS": "o volume",
    "SENSING_LOUD": "o som é forte",
    "SENSING_TIMER": "o valor do cronómetro",
    "SENSING_RESETTIMER": "reinicia o cronómetro",
    "SENSING_OF": "%1 de %2",
    "SENSING_OF_XPOSITION": "a coordenada x da posição",
    "SENSING_OF_YPOSITION": "a coordenada y da posição",
    "SENSING_OF_DIRECTION": "a direcção",
    "SENSING_OF_COSTUMENUMBER": "o número do traje",
    "SENSING_OF_COSTUMENAME": "o nome do traje",
    "SENSING_OF_SIZE": "o tamanho",
    "SENSING_OF_VOLUME": "o volume",
    "SENSING_OF_BACKDROPNUMBER": "o número do cenário",
    "SENSING_OF_BACKDROPNAME": "o nome do cenário",
    "SENSING_OF_STAGE": "Palco",
    "SENSING_CURRENT": "%1 actual",
    "SENSING_CURRENT_YEAR": "o ano",
    "SENSING_CURRENT_MONTH": "o mês",
    "SENSING_CURRENT_DATE": "a data",
    "SENSING_CURRENT_DAYOFWEEK": "o dia da semana",
    "SENSING_CURRENT_HOUR": "a hora",
    "SENSING_CURRENT_MINUTE": "o minuto",
    "SENSING_CURRENT_SECOND": "o segundo",
    "SENSING_DAYSSINCE2000": "o número de dias desde 2000",
    "SENSING_USERNAME": "o nome de utilizador",
    "SENSING_USERID": "o ID de utilizador",
    "SOUND_PLAY": "toca o som %1",
    "SOUND_PLAYUNTILDONE": "toca o som %1 até terminar",
    "SOUND_STOPALLSOUNDS": "pára todos os sons",
    "SOUND_SETEFFECTO": "altera o teu efeito %1 para %2",
    "SOUND_CHANGEEFFECTBY": "adiciona ao teu efeito %1 o valor %2",
    "SOUND_CLEAREFFECTS": "cancela todos os teus efeitos sonoros",
    "SOUND_EFFECTS_PITCH": "tom",
    "SOUND_EFFECTS_PAN": "canal esquerdo/direito",
    "SOUND_CHANGEVOLUMEBY": "adiciona %1 % ao teu volume",
    "SOUND_SETVOLUMETO": "altera o teu volume para %1%",
    "SOUND_VOLUME": "o volume",
    "CATEGORY_MOTION": "Movimento",
    "CATEGORY_LOOKS": "Aparência",
    "CATEGORY_SOUND": "Som",
    "CATEGORY_EVENTS": "Eventos",
    "CATEGORY_CONTROL": "Controlo",
    "CATEGORY_SENSING": "Sensores",
    "CATEGORY_OPERATORS": "Operadores",
    "CATEGORY_VARIABLES": "Variáveis",
    "CATEGORY_MYBLOCKS": "Os Meus Blocos",
    "DUPLICATE": "Duplicar",
    "DELETE": "Remover",
    "ADD_COMMENT": "Adicionar Comentário",
    "REMOVE_COMMENT": "Remover Comentário",
    "DELETE_BLOCK": "Remover Bloco",
    "DELETE_X_BLOCKS": "Remover %1 Blocos",
    "DELETE_ALL_BLOCKS": "Remover todos os %1 blocos?",
    "CLEAN_UP": "Arrumar Blocos",
    "HELP": "Ajuda",
    "UNDO": "Desfazer",
    "REDO": "Refazer",
    "EDIT_PROCEDURE": "Editar",
    "SHOW_PROCEDURE_DEFINITION": "Ir para a definição",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Diga qualquer coisa…",
    "COLOUR_HUE_LABEL": "Matiz",
    "COLOUR_SATURATION_LABEL": "Saturação",
    "COLOUR_BRIGHTNESS_LABEL": "Brilho",
    "CHANGE_VALUE_TITLE": "Alterar o valor:",
    "RENAME_VARIABLE": "Renomear variável",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Renomear Variável",
    "NEW_VARIABLE": "Criar uma Variável",
    "NEW_VARIABLE_TITLE": "Novo nome da variável:",
    "VARIABLE_MODAL_TITLE": "Nova Variável",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Criar um Bloco",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Criar uma Lista",
    "NEW_LIST_TITLE": "Nome da nova lista:",
    "LIST_MODAL_TITLE": "Nova Lista",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Renomear Lista",
    "NEW_BROADCAST_MESSAGE": "Nova mensagem",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nome da nova mensagem:",
    "BROADCAST_MODAL_TITLE": "Nova Mensagem",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "a mensagem 1"
};

Blockly.ScratchMsgs.locales["sl"] =
{
    "CONTROL_FOREVER": "ponavljaj",
    "CONTROL_REPEAT": "ponovi %1",
    "CONTROL_IF": "če %1 potem",
    "CONTROL_ELSE": "sicer",
    "CONTROL_STOP": "ustavi",
    "CONTROL_STOP_ALL": "vse",
    "CONTROL_STOP_THIS": "te ukaze",
    "CONTROL_STOP_OTHER": "ostale ukaze za to figuro",
    "CONTROL_WAIT": "počakaj %1 sekund",
    "CONTROL_WAITUNTIL": "počakaj dokler %1",
    "CONTROL_REPEATUNTIL": "ponavljaj, dokler ne bo %1",
    "CONTROL_WHILE": "dokler %1",
    "CONTROL_FOREACH": "za vsak %1 v %2",
    "CONTROL_STARTASCLONE": "ko začnem kot klon",
    "CONTROL_CREATECLONEOF": "ustvari klon %1",
    "CONTROL_CREATECLONEOF_MYSELF": "sebe",
    "CONTROL_DELETETHISCLONE": "zbriši ta klon",
    "CONTROL_COUNTER": "števec",
    "CONTROL_INCRCOUNTER": "povečaj števec",
    "CONTROL_CLEARCOUNTER": "počisti števec",
    "CONTROL_ALLATONCE": "vse hkrati",
    "DATA_SETVARIABLETO": "nastavi %1 na %2",
    "DATA_CHANGEVARIABLEBY": "spremeni %1 za %2",
    "DATA_SHOWVARIABLE": "pokaži spremenljivko %1",
    "DATA_HIDEVARIABLE": "skrij spremenljivko %1",
    "DATA_ADDTOLIST": "dodaj %1 k %2",
    "DATA_DELETEOFLIST": "zbriši %1 v %2",
    "DATA_INSERTATLIST": "vstavi %1 na %2 v %3",
    "DATA_REPLACEITEMOFLIST": "zamenjaj %1 v %2 z %3",
    "DATA_ITEMOFLIST": "element %1 v %2",
    "DATA_LENGTHOFLIST": "dolžina %1",
    "DATA_LISTCONTAINSITEM": "Ali %1 vsebuje %2?",
    "DATA_SHOWLIST": "pokaži seznam %1",
    "DATA_HIDELIST": "skrij seznam %1",
    "DATA_INDEX_ALL": "vse",
    "DATA_INDEX_LAST": "zadnji",
    "DATA_INDEX_RANDOM": "naključno",
    "EVENT_WHENFLAGCLICKED": "ko kliknemo na %1",
    "EVENT_WHENTHISSPRITECLICKED": "ko kliknemo to figuro",
    "EVENT_WHENSTAGECLICKED": "ko kliknemo na oder",
    "EVENT_WHENTOUCHINGOBJECT": "ko se ta figura dotika %1",
    "EVENT_WHENBROADCASTRECEIVED": "ko prejmem %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "ko se ozadje zamenja na %1",
    "EVENT_WHENGREATERTHAN": "ko je %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "štoparica",
    "EVENT_BROADCAST": "objavi %1",
    "EVENT_BROADCASTANDWAIT": "objavi %1 in čakaj",
    "EVENT_WHENKEYPRESSED": "ko je pritisnjena tipka %1 ",
    "EVENT_WHENKEYPRESSED_SPACE": "presledek",
    "EVENT_WHENKEYPRESSED_LEFT": "puščica levo",
    "EVENT_WHENKEYPRESSED_RIGHT": "puščica desno",
    "EVENT_WHENKEYPRESSED_DOWN": "puščica dol",
    "EVENT_WHENKEYPRESSED_UP": "puščica gor",
    "EVENT_WHENKEYPRESSED_ANY": "poljubna",
    "LOOKS_SAYFORSECS": "reci %1 za %2 sekund",
    "LOOKS_SAY": "reci %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "pomisli %1 za %2 sekund",
    "LOOKS_THINK": "pomisli %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "pokaži",
    "LOOKS_HIDE": "skrij",
    "LOOKS_HIDEALLSPRITES": "skrij vse figure",
    "LOOKS_EFFECT_COLOR": "barva",
    "LOOKS_EFFECT_FISHEYE": "ribje oko",
    "LOOKS_EFFECT_WHIRL": "vrtinec",
    "LOOKS_EFFECT_PIXELATE": "pikčasto",
    "LOOKS_EFFECT_MOSAIC": "mozaik",
    "LOOKS_EFFECT_BRIGHTNESS": "svetlost",
    "LOOKS_EFFECT_GHOST": "duh",
    "LOOKS_CHANGEEFFECTBY": "spremeni učinek %1 za %2",
    "LOOKS_SETEFFECTTO": "nastavi učinek %1 na %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "odstrani slikovne učinke",
    "LOOKS_CHANGESIZEBY": "spremeni velikost za %1",
    "LOOKS_SETSIZETO": "nastavi velikost na %1 %",
    "LOOKS_SIZE": "velikost",
    "LOOKS_CHANGESTRETCHBY": "spremeni razteg za %1",
    "LOOKS_SETSTRETCHTO": "nastavi razteg na %1 %",
    "LOOKS_SWITCHCOSTUMETO": "zamenjaj videz na %1",
    "LOOKS_NEXTCOSTUME": "naslednji videz",
    "LOOKS_SWITCHBACKDROPTO": "zamenjaj ozadje na %1",
    "LOOKS_GOTOFRONTBACK": "pojdi na %1 plast",
    "LOOKS_GOTOFRONTBACK_FRONT": "spredaj",
    "LOOKS_GOTOFRONTBACK_BACK": "zadaj",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "pojdi %1 %2 plasti",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "naprej",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "nazaj",
    "LOOKS_BACKDROPNUMBERNAME": "ozadje %1",
    "LOOKS_COSTUMENUMBERNAME": "videz %1",
    "LOOKS_NUMBERNAME_NUMBER": "število",
    "LOOKS_NUMBERNAME_NAME": "ime",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "zamenjaj ozadje na %1 in počakaj",
    "LOOKS_NEXTBACKDROP": "naslednje ozadje",
    "LOOKS_PREVIOUSBACKDROP": "prejšnje ozadje",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "pojdi %1 korakov",
    "MOTION_TURNLEFT": "obrni se za %1 %2 stopinj",
    "MOTION_TURNRIGHT": "obrni se za %1 %2 stopinj",
    "MOTION_POINTINDIRECTION": "obrni se v smer %1",
    "MOTION_POINTTOWARDS": "obrni se proti %1",
    "MOTION_POINTTOWARDS_POINTER": "kazalcu miške",
    "MOTION_GOTO": "pojdi na %1",
    "MOTION_GOTO_POINTER": "kazalcu miške",
    "MOTION_GOTO_RANDOM": "naključnemu mestu",
    "MOTION_GOTOXY": "pojdi na x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "drsi %1 sekund do x: %2 y: %3",
    "MOTION_GLIDETO": "drsi %1 sekund do %2",
    "MOTION_GLIDETO_POINTER": "kazalca miške",
    "MOTION_GLIDETO_RANDOM": "naključnega mesta",
    "MOTION_CHANGEXBY": "spremeni x za %1",
    "MOTION_SETX": "nastavi x na %1",
    "MOTION_CHANGEYBY": "spremeni y za %1",
    "MOTION_SETY": "nastavi y na %1",
    "MOTION_IFONEDGEBOUNCE": "odbij se, če si na robu",
    "MOTION_SETROTATIONSTYLE": "nastavi način vrtenja %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "levo-desno",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "ne zasukaj",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "na vse strani",
    "MOTION_XPOSITION": "položaj x",
    "MOTION_YPOSITION": "položaj y",
    "MOTION_DIRECTION": "smer",
    "MOTION_SCROLLRIGHT": "premik desno %1",
    "MOTION_SCROLLUP": "premik gor%1",
    "MOTION_ALIGNSCENE": "poravnaj sceno %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "levo spodaj",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "desno spodaj",
    "MOTION_ALIGNSCENE_MIDDLE": "sredina",
    "MOTION_ALIGNSCENE_TOPLEFT": "levo zgoraj",
    "MOTION_ALIGNSCENE_TOPRIGHT": "desno zgoraj",
    "MOTION_XSCROLL": "premik v smeri x",
    "MOTION_YSCROLL": "premik v smeri y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "naključno število med %1 in %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 in %2",
    "OPERATORS_OR": "%1 ali %2",
    "OPERATORS_NOT": "ne %1",
    "OPERATORS_JOIN": "združi %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "%1 črka v %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "dolžina %1",
    "OPERATORS_CONTAINS": "ali %1 vsebuje %2?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "zaokroži %1",
    "OPERATORS_MATHOP": "%1 od %2",
    "OPERATORS_MATHOP_ABS": "absolutna vrednost",
    "OPERATORS_MATHOP_FLOOR": "zaokroži navzdol",
    "OPERATORS_MATHOP_CEILING": "zaokroži navzgor",
    "OPERATORS_MATHOP_SQRT": "kvadratni koren ",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tg",
    "OPERATORS_MATHOP_ASIN": "arcsin",
    "OPERATORS_MATHOP_ACOS": "arccos",
    "OPERATORS_MATHOP_ATAN": "arctg",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "definiraj %1",
    "SENSING_TOUCHINGOBJECT": "se dotika %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "kazalca miške",
    "SENSING_TOUCHINGOBJECT_EDGE": "roba",
    "SENSING_TOUCHINGCOLOR": "se dotika barve %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "se barva %1 dotika %2?",
    "SENSING_DISTANCETO": "razdalja do %1",
    "SENSING_DISTANCETO_POINTER": "kazalca miške",
    "SENSING_ASKANDWAIT": "vprašaj %1 in počakaj",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "odgovor",
    "SENSING_KEYPRESSED": "je pritisnjena tipka %1?",
    "SENSING_MOUSEDOWN": "je miška kliknjena?",
    "SENSING_MOUSEX": "miška x",
    "SENSING_MOUSEY": "miška y",
    "SENSING_SETDRAGMODE": "nastavi način drsenja %1 ",
    "SENSING_SETDRAGMODE_DRAGGABLE": "drseče",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "ne drseče",
    "SENSING_LOUDNESS": "glasnost",
    "SENSING_LOUD": "glasno?",
    "SENSING_TIMER": "štoparica",
    "SENSING_RESETTIMER": "ponastavi štoparico",
    "SENSING_OF": "%1 od %2",
    "SENSING_OF_XPOSITION": "položaj x",
    "SENSING_OF_YPOSITION": "položaj y",
    "SENSING_OF_DIRECTION": "smer",
    "SENSING_OF_COSTUMENUMBER": "videz #",
    "SENSING_OF_COSTUMENAME": "ime videza",
    "SENSING_OF_SIZE": "velikost",
    "SENSING_OF_VOLUME": "glasnost",
    "SENSING_OF_BACKDROPNUMBER": "ozadje #",
    "SENSING_OF_BACKDROPNAME": "ime ozadja",
    "SENSING_OF_STAGE": "Oder",
    "SENSING_CURRENT": "trenutni %1",
    "SENSING_CURRENT_YEAR": "leto",
    "SENSING_CURRENT_MONTH": "mesec",
    "SENSING_CURRENT_DATE": "datum",
    "SENSING_CURRENT_DAYOFWEEK": "dan v tednu",
    "SENSING_CURRENT_HOUR": "ura",
    "SENSING_CURRENT_MINUTE": "minuta",
    "SENSING_CURRENT_SECOND": "sekunda",
    "SENSING_DAYSSINCE2000": "dni od leta 2000",
    "SENSING_USERNAME": "uporabniško ime",
    "SENSING_USERID": "uporabnikova številka",
    "SOUND_PLAY": "predvajaj zvok %1",
    "SOUND_PLAYUNTILDONE": "predvajaj zvok %1 do konca",
    "SOUND_STOPALLSOUNDS": "ustavi vse zvoke",
    "SOUND_SETEFFECTO": "nastavi učinek %1 na %2",
    "SOUND_CHANGEEFFECTBY": "spremeni učinek %1 za %2",
    "SOUND_CLEAREFFECTS": "izbriši zvočne učinke",
    "SOUND_EFFECTS_PITCH": "višina tona",
    "SOUND_EFFECTS_PAN": "premik levo/desno",
    "SOUND_CHANGEVOLUMEBY": "spremeni glasnost za %1",
    "SOUND_SETVOLUMETO": "nastavi glasnost na %1",
    "SOUND_VOLUME": "glasnost",
    "CATEGORY_MOTION": "Gibanje",
    "CATEGORY_LOOKS": "Videzi",
    "CATEGORY_SOUND": "Zvok",
    "CATEGORY_EVENTS": "Dogodki",
    "CATEGORY_CONTROL": "Krmiljenje",
    "CATEGORY_SENSING": "Zaznavanje",
    "CATEGORY_OPERATORS": "Operatorji",
    "CATEGORY_VARIABLES": "Spremenljivke",
    "CATEGORY_MYBLOCKS": "Moji bloki",
    "DUPLICATE": "Podvoji",
    "DELETE": "Izbriši",
    "ADD_COMMENT": "Dodaj komentar",
    "REMOVE_COMMENT": "Odstrani komentar",
    "DELETE_BLOCK": "Izbriši blok",
    "DELETE_X_BLOCKS": "Izbriši %1 blokov",
    "DELETE_ALL_BLOCKS": "Izbrisati vseh %1 blokov?",
    "CLEAN_UP": "Počisti bloke",
    "HELP": "Pomoč",
    "UNDO": "Razveljavi",
    "REDO": "Uveljavi",
    "EDIT_PROCEDURE": "Uredi",
    "SHOW_PROCEDURE_DEFINITION": "Pojdi na definicijo",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Reci kaj ...",
    "COLOUR_HUE_LABEL": "Barva",
    "COLOUR_SATURATION_LABEL": "Nasičenost",
    "COLOUR_BRIGHTNESS_LABEL": "Svetlost",
    "CHANGE_VALUE_TITLE": "Spremeni vrednost: ",
    "RENAME_VARIABLE": "Preimenuj spremenljivko",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Preimenuj spremenljivko",
    "NEW_VARIABLE": "Ustvari spremenljivko",
    "NEW_VARIABLE_TITLE": "Novo ime spremenljivke:",
    "VARIABLE_MODAL_TITLE": "Nova spremenljivka",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Ustvari blok",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Ustvari seznam",
    "NEW_LIST_TITLE": "Novi ime seznama:",
    "LIST_MODAL_TITLE": "Nov seznam",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Preimenuj seznam",
    "NEW_BROADCAST_MESSAGE": "Novo sporočilo",
    "NEW_BROADCAST_MESSAGE_TITLE": "Ime novega sporočila:",
    "BROADCAST_MODAL_TITLE": "Novo sporočilo",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "sporočilo1"
};

Blockly.ScratchMsgs.locales["sr"] =
{
    "CONTROL_FOREVER": "понављај заувек",
    "CONTROL_REPEAT": "понови %1",
    "CONTROL_IF": "ако је %1 онда",
    "CONTROL_ELSE": "у супротном",
    "CONTROL_STOP": "заустави",
    "CONTROL_STOP_ALL": "све",
    "CONTROL_STOP_THIS": "овај програм",
    "CONTROL_STOP_OTHER": "друге програме лика",
    "CONTROL_WAIT": "чекај %1 секунду",
    "CONTROL_WAITUNTIL": "чекај док не %1",
    "CONTROL_REPEATUNTIL": "понављај док не %1",
    "CONTROL_WHILE": "док је %1",
    "CONTROL_FOREACH": "за сваки %1 у %2",
    "CONTROL_STARTASCLONE": "када се појавим као умножак",
    "CONTROL_CREATECLONEOF": "направи умножак од %1",
    "CONTROL_CREATECLONEOF_MYSELF": "мене",
    "CONTROL_DELETETHISCLONE": "обриши овај умножак",
    "CONTROL_COUNTER": "бројач",
    "CONTROL_INCRCOUNTER": "увећај бројач",
    "CONTROL_CLEARCOUNTER": "обриши бројач",
    "CONTROL_ALLATONCE": "све одједном",
    "DATA_SETVARIABLETO": "нека %1 буде %2",
    "DATA_CHANGEVARIABLEBY": "промени %1 за %2",
    "DATA_SHOWVARIABLE": "прикажи променљиву %1",
    "DATA_HIDEVARIABLE": "сакриј променљиву %1",
    "DATA_ADDTOLIST": "додај %1 у %2",
    "DATA_DELETEOFLIST": "обриши %1 из %2",
    "DATA_INSERTATLIST": "убаци %1 на %2 у %3",
    "DATA_REPLACEITEMOFLIST": "замени елемент %1 у %2 са %3",
    "DATA_ITEMOFLIST": "елемент %1 из %2",
    "DATA_LENGTHOFLIST": "дужина %1",
    "DATA_LISTCONTAINSITEM": "да ли %1 садржи %2?",
    "DATA_SHOWLIST": "прикажи листу %1",
    "DATA_HIDELIST": "сакриј листу %1",
    "DATA_INDEX_ALL": "све",
    "DATA_INDEX_LAST": "последњи",
    "DATA_INDEX_RANDOM": "насумичан",
    "EVENT_WHENFLAGCLICKED": "када је кликнуто на %1",
    "EVENT_WHENTHISSPRITECLICKED": "када је кликнуто на овај лик",
    "EVENT_WHENSTAGECLICKED": "када је кликнуто на позорницу",
    "EVENT_WHENTOUCHINGOBJECT": "када овај лик додирне %1",
    "EVENT_WHENBROADCASTRECEIVED": "када примим %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "када се позадина промени у %1",
    "EVENT_WHENGREATERTHAN": "када је %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "тајмер",
    "EVENT_BROADCAST": "разгласи %1",
    "EVENT_BROADCASTANDWAIT": "разгласи %1 и чекај",
    "EVENT_WHENKEYPRESSED": "када је дирка %1 притиснута",
    "EVENT_WHENKEYPRESSED_SPACE": "размак",
    "EVENT_WHENKEYPRESSED_LEFT": "стрелица лево",
    "EVENT_WHENKEYPRESSED_RIGHT": "стрелица десно",
    "EVENT_WHENKEYPRESSED_DOWN": "стрелица доле",
    "EVENT_WHENKEYPRESSED_UP": "стрелица горе",
    "EVENT_WHENKEYPRESSED_ANY": "било који",
    "LOOKS_SAYFORSECS": "изговори %1 током %2 секунде",
    "LOOKS_SAY": "изговори %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "замисли %1 током %2 секунде",
    "LOOKS_THINK": "замисли %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "прикажи",
    "LOOKS_HIDE": "сакриј",
    "LOOKS_HIDEALLSPRITES": "сакриј све ликове",
    "LOOKS_EFFECT_COLOR": "боја",
    "LOOKS_EFFECT_FISHEYE": "рибље око",
    "LOOKS_EFFECT_WHIRL": "вртлог",
    "LOOKS_EFFECT_PIXELATE": "позрнати",
    "LOOKS_EFFECT_MOSAIC": "мозаик",
    "LOOKS_EFFECT_BRIGHTNESS": "осветљеност",
    "LOOKS_EFFECT_GHOST": "дух",
    "LOOKS_CHANGEEFFECTBY": "промени ефекат %1 за %2",
    "LOOKS_SETEFFECTTO": "нека ефекат %1 буде %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "уклони графичке ефекте",
    "LOOKS_CHANGESIZEBY": "промени величину за %1",
    "LOOKS_SETSIZETO": "нека величина буде %1 %",
    "LOOKS_SIZE": "величина",
    "LOOKS_CHANGESTRETCHBY": "промени увећање за %1",
    "LOOKS_SETSTRETCHTO": "нека увећање буде  %1 %",
    "LOOKS_SWITCHCOSTUMETO": "замени костим са %1",
    "LOOKS_NEXTCOSTUME": "следећи костим",
    "LOOKS_SWITCHBACKDROPTO": "промени позадину у %1",
    "LOOKS_GOTOFRONTBACK": "иди на %1 слој",
    "LOOKS_GOTOFRONTBACK_FRONT": "напред",
    "LOOKS_GOTOFRONTBACK_BACK": "назад",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "иди %1 %2 слоја",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "проследи",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "уназад",
    "LOOKS_BACKDROPNUMBERNAME": "позадина %1",
    "LOOKS_COSTUMENUMBERNAME": "костим %1",
    "LOOKS_NUMBERNAME_NUMBER": "број",
    "LOOKS_NUMBERNAME_NAME": "име",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "промени позадину у %1 и чекај",
    "LOOKS_NEXTBACKDROP": "следећа позадина",
    "LOOKS_PREVIOUSBACKDROP": "претходна позадина",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "иди %1 корака",
    "MOTION_TURNLEFT": "окрет %1 за %2 степени",
    "MOTION_TURNRIGHT": "окрет %1 за %2 степени",
    "MOTION_POINTINDIRECTION": "усмери се ка %1",
    "MOTION_POINTTOWARDS": "усмери се ка %1",
    "MOTION_POINTTOWARDS_POINTER": "показивач миша",
    "MOTION_GOTO": "иди до %1",
    "MOTION_GOTO_POINTER": "показивач миша",
    "MOTION_GOTO_RANDOM": "случајан положај",
    "MOTION_GOTOXY": "иди до x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "клизи %1 секунди до x: %2 y: %3",
    "MOTION_GLIDETO": "клизи %1 секунди до %2",
    "MOTION_GLIDETO_POINTER": "показивач миша",
    "MOTION_GLIDETO_RANDOM": "случајан положај",
    "MOTION_CHANGEXBY": "промени x за %1",
    "MOTION_SETX": "нека x буде %1",
    "MOTION_CHANGEYBY": "промени y за %1",
    "MOTION_SETY": "нека y буде %1",
    "MOTION_IFONEDGEBOUNCE": "ако си на рубу, окрени се",
    "MOTION_SETROTATIONSTYLE": "подеси начин окретања %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "лево-десно",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "без окретања",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "на све стране",
    "MOTION_XPOSITION": "место х",
    "MOTION_YPOSITION": "место у",
    "MOTION_DIRECTION": "смер",
    "MOTION_SCROLLRIGHT": "клизи у десно %1",
    "MOTION_SCROLLUP": "клизи горе  %1",
    "MOTION_ALIGNSCENE": "поравнај сцену %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "доле-лево",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "доле-десно",
    "MOTION_ALIGNSCENE_MIDDLE": "средина",
    "MOTION_ALIGNSCENE_TOPLEFT": "горе-лево",
    "MOTION_ALIGNSCENE_TOPRIGHT": "горе-десно",
    "MOTION_XSCROLL": "x клизање",
    "MOTION_YSCROLL": "y клизање",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "случајан број од %1 до %2 ",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 и %2",
    "OPERATORS_OR": "%1 или %2",
    "OPERATORS_NOT": "није %1",
    "OPERATORS_JOIN": "споји %1 и %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "%1 слово од %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "дужина %1",
    "OPERATORS_CONTAINS": "%1 садржи %2",
    "OPERATORS_MOD": "%1 мод %2",
    "OPERATORS_ROUND": "заокружи %1",
    "OPERATORS_MATHOP": "%1 од %2",
    "OPERATORS_MATHOP_ABS": "абс",
    "OPERATORS_MATHOP_FLOOR": "цео део",
    "OPERATORS_MATHOP_CEILING": "цео+1",
    "OPERATORS_MATHOP_SQRT": "корен",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tg",
    "OPERATORS_MATHOP_ASIN": "arcsin",
    "OPERATORS_MATHOP_ACOS": "arccos",
    "OPERATORS_MATHOP_ATAN": "arctan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "дефиниши %1",
    "SENSING_TOUCHINGOBJECT": "додирује ли %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "показивач миша",
    "SENSING_TOUCHINGOBJECT_EDGE": "ивица",
    "SENSING_TOUCHINGCOLOR": "додирује ли боју %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "боја %1 додирује %2?",
    "SENSING_DISTANCETO": "удаљеност од %1",
    "SENSING_DISTANCETO_POINTER": "показивач миша",
    "SENSING_ASKANDWAIT": "питај %1 и чекај",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "одговор",
    "SENSING_KEYPRESSED": "дугме %1 је притиснуто?",
    "SENSING_MOUSEDOWN": "миш притиснут?",
    "SENSING_MOUSEX": "миш x",
    "SENSING_MOUSEY": "миш y",
    "SENSING_SETDRAGMODE": "нека начин превлачења буде %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "превлачиво",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "није превлачиво",
    "SENSING_LOUDNESS": "јачина звука",
    "SENSING_LOUD": "гласно?",
    "SENSING_TIMER": "тајмер",
    "SENSING_RESETTIMER": "постави тајмер на 0",
    "SENSING_OF": "%1 од %2",
    "SENSING_OF_XPOSITION": "x положај",
    "SENSING_OF_YPOSITION": "y положај",
    "SENSING_OF_DIRECTION": "смер",
    "SENSING_OF_COSTUMENUMBER": "број костима",
    "SENSING_OF_COSTUMENAME": "име костима",
    "SENSING_OF_SIZE": "величина",
    "SENSING_OF_VOLUME": "јачина звука",
    "SENSING_OF_BACKDROPNUMBER": "број позадине",
    "SENSING_OF_BACKDROPNAME": "име позадине",
    "SENSING_OF_STAGE": "Позорница",
    "SENSING_CURRENT": "тренутно %1",
    "SENSING_CURRENT_YEAR": "година",
    "SENSING_CURRENT_MONTH": "месец",
    "SENSING_CURRENT_DATE": "датум",
    "SENSING_CURRENT_DAYOFWEEK": "дан у недељи",
    "SENSING_CURRENT_HOUR": "сат",
    "SENSING_CURRENT_MINUTE": "минут",
    "SENSING_CURRENT_SECOND": "секунда",
    "SENSING_DAYSSINCE2000": "дана после 2000",
    "SENSING_USERNAME": "корисничко име",
    "SENSING_USERID": "Корисников ид",
    "SOUND_PLAY": "покрени звук %1",
    "SOUND_PLAYUNTILDONE": "репродукуј звук %1 до краја",
    "SOUND_STOPALLSOUNDS": "заустави све звукове",
    "SOUND_SETEFFECTO": "нека ефекат %1 буде %2",
    "SOUND_CHANGEEFFECTBY": "промени ефекат %1 за %2",
    "SOUND_CLEAREFFECTS": "уклони звучне ефекте",
    "SOUND_EFFECTS_PITCH": "висина тона",
    "SOUND_EFFECTS_PAN": "кретање лево/десно",
    "SOUND_CHANGEVOLUMEBY": "промени јачину звука за %1",
    "SOUND_SETVOLUMETO": "нека јачина звука буде %1%",
    "SOUND_VOLUME": "јачина звука",
    "CATEGORY_MOTION": "Кретање",
    "CATEGORY_LOOKS": "Изглед",
    "CATEGORY_SOUND": "Звук",
    "CATEGORY_EVENTS": "Догађаји",
    "CATEGORY_CONTROL": "Управљање",
    "CATEGORY_SENSING": "Осећаји",
    "CATEGORY_OPERATORS": "Операције",
    "CATEGORY_VARIABLES": "Променљиве",
    "CATEGORY_MYBLOCKS": "Моји блокови",
    "DUPLICATE": "Умножи",
    "DELETE": "Обриши",
    "ADD_COMMENT": "Додај коментар",
    "REMOVE_COMMENT": "Уклони коментар",
    "DELETE_BLOCK": "Обриши блок",
    "DELETE_X_BLOCKS": "Обриши %1 блокова",
    "DELETE_ALL_BLOCKS": "Обрисати свих %1 блокова?",
    "CLEAN_UP": "Поспреми блокове",
    "HELP": "Помоћ",
    "UNDO": "Опозови",
    "REDO": "Понови",
    "EDIT_PROCEDURE": "Уреди",
    "SHOW_PROCEDURE_DEFINITION": "Иди до дефиниције",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Кажи нешто...",
    "COLOUR_HUE_LABEL": "Боја",
    "COLOUR_SATURATION_LABEL": "Засићење",
    "COLOUR_BRIGHTNESS_LABEL": "Осветљеност",
    "CHANGE_VALUE_TITLE": "Промени вредност:",
    "RENAME_VARIABLE": "Преименуј променљиву",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Преименуј променљиву",
    "NEW_VARIABLE": "Направи променљиву",
    "NEW_VARIABLE_TITLE": "Ново име променљиве:",
    "VARIABLE_MODAL_TITLE": "Нова променљива",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Направи блок",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Направи листу",
    "NEW_LIST_TITLE": "Ново име листе:",
    "LIST_MODAL_TITLE": "Нова листа",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Преименуј листу",
    "NEW_BROADCAST_MESSAGE": "Нова порука",
    "NEW_BROADCAST_MESSAGE_TITLE": "Име нове поруке:",
    "BROADCAST_MODAL_TITLE": "Нова порука",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "порука1"
};

Blockly.ScratchMsgs.locales["sv"] =
{
    "CONTROL_FOREVER": "för alltid",
    "CONTROL_REPEAT": "repetera %1",
    "CONTROL_IF": "om %1 då",
    "CONTROL_ELSE": "annars",
    "CONTROL_STOP": "stoppa",
    "CONTROL_STOP_ALL": "alla",
    "CONTROL_STOP_THIS": "detta skript",
    "CONTROL_STOP_OTHER": "andra skript i sprajten",
    "CONTROL_WAIT": "vänta %1 sekunder",
    "CONTROL_WAITUNTIL": "vänta tills %1",
    "CONTROL_REPEATUNTIL": "repetera tills %1",
    "CONTROL_WHILE": "medan %1",
    "CONTROL_FOREACH": "för varje %1 i %2",
    "CONTROL_STARTASCLONE": "när jag startar som klon",
    "CONTROL_CREATECLONEOF": "skapa klon av %1",
    "CONTROL_CREATECLONEOF_MYSELF": "mig själv",
    "CONTROL_DELETETHISCLONE": "radera klonen",
    "CONTROL_COUNTER": "räknare",
    "CONTROL_INCRCOUNTER": "öka räknare",
    "CONTROL_CLEARCOUNTER": "nollställ räknare",
    "CONTROL_ALLATONCE": "alla samtidig",
    "DATA_SETVARIABLETO": "sätt %1 till %2",
    "DATA_CHANGEVARIABLEBY": "ändra %1 med %2",
    "DATA_SHOWVARIABLE": "visa variabel %1",
    "DATA_HIDEVARIABLE": "göm variabel %1",
    "DATA_ADDTOLIST": "lägg till %1 i %2",
    "DATA_DELETEOFLIST": "ta bort %1 från %2",
    "DATA_INSERTATLIST": "infoga %1 vid %2 i %3",
    "DATA_REPLACEITEMOFLIST": "ersätt posten %1 i %2 med %3",
    "DATA_ITEMOFLIST": "post %1 i %2",
    "DATA_LENGTHOFLIST": "längden av %1",
    "DATA_LISTCONTAINSITEM": "%1 innehåller %2",
    "DATA_SHOWLIST": "visa listan %1",
    "DATA_HIDELIST": "göm listan %1",
    "DATA_INDEX_ALL": "alla",
    "DATA_INDEX_LAST": "sista",
    "DATA_INDEX_RANDOM": "slumpmässig",
    "EVENT_WHENFLAGCLICKED": "när %1 klickas på",
    "EVENT_WHENTHISSPRITECLICKED": "när denna sprite klickas på",
    "EVENT_WHENSTAGECLICKED": "när scenen klickas på",
    "EVENT_WHENTOUCHINGOBJECT": "när denna sprajt rör %1",
    "EVENT_WHENBROADCASTRECEIVED": "när jag tar emot %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "när bakgrunden växlar till %1",
    "EVENT_WHENGREATERTHAN": "när %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "timer",
    "EVENT_BROADCAST": "skicka %1",
    "EVENT_BROADCASTANDWAIT": "skicka %1 och vänta",
    "EVENT_WHENKEYPRESSED": "när %1 tangenten trycks ned",
    "EVENT_WHENKEYPRESSED_SPACE": "mellanslag",
    "EVENT_WHENKEYPRESSED_LEFT": "vänsterpil",
    "EVENT_WHENKEYPRESSED_RIGHT": "högerpil",
    "EVENT_WHENKEYPRESSED_DOWN": "nedåtpil",
    "EVENT_WHENKEYPRESSED_UP": "uppåtpil",
    "EVENT_WHENKEYPRESSED_ANY": "någon",
    "LOOKS_SAYFORSECS": "säg %1 i %2 sekunder",
    "LOOKS_SAY": "säg %1",
    "LOOKS_HELLO": "Hej!",
    "LOOKS_THINKFORSECS": "tänk %1 i %2 sekunder",
    "LOOKS_THINK": "tänk %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "visa",
    "LOOKS_HIDE": "göm",
    "LOOKS_HIDEALLSPRITES": "göm alla sprajtar",
    "LOOKS_EFFECT_COLOR": "färg ",
    "LOOKS_EFFECT_FISHEYE": "fisheye",
    "LOOKS_EFFECT_WHIRL": "virvel",
    "LOOKS_EFFECT_PIXELATE": "pixla",
    "LOOKS_EFFECT_MOSAIC": "mosaik",
    "LOOKS_EFFECT_BRIGHTNESS": "ljusstyrka",
    "LOOKS_EFFECT_GHOST": "genomskinlighet",
    "LOOKS_CHANGEEFFECTBY": "ändra %1 effekten med %2",
    "LOOKS_SETEFFECTTO": "sätt %1 effekten till %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "ta bort grafisk effekt",
    "LOOKS_CHANGESIZEBY": "ändra storlek med %1",
    "LOOKS_SETSIZETO": "sätt storleken till %1 %",
    "LOOKS_SIZE": "Storlek",
    "LOOKS_CHANGESTRETCHBY": "ändra töjning med %1",
    "LOOKS_SETSTRETCHTO": "sätt töjning till %1 %",
    "LOOKS_SWITCHCOSTUMETO": "ändra klädsel till %1",
    "LOOKS_NEXTCOSTUME": "nästa klädsel",
    "LOOKS_SWITCHBACKDROPTO": "växla bakgrund till %1",
    "LOOKS_GOTOFRONTBACK": "gå till %1 lagret",
    "LOOKS_GOTOFRONTBACK_FRONT": "placera längst fram",
    "LOOKS_GOTOFRONTBACK_BACK": "tillbaka",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "gå %1 %2 lager",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "framåt ",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "bakåt ",
    "LOOKS_BACKDROPNUMBERNAME": "bakgrund %1",
    "LOOKS_COSTUMENUMBERNAME": "klädsel %1",
    "LOOKS_NUMBERNAME_NUMBER": "nummer",
    "LOOKS_NUMBERNAME_NAME": "namn ",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "byt bakgrund till %1 och vänta",
    "LOOKS_NEXTBACKDROP": "nästa bakgrund",
    "LOOKS_PREVIOUSBACKDROP": "föregående bakgrund",
    "LOOKS_RANDOMBACKDROP": "slumpvis bakgrund",
    "MOTION_MOVESTEPS": "gå %1 steg",
    "MOTION_TURNLEFT": "rotera %1 %2 grader",
    "MOTION_TURNRIGHT": "rotera %1 %2 grader",
    "MOTION_POINTINDIRECTION": "peka i riktning %1",
    "MOTION_POINTTOWARDS": "peka mot %1",
    "MOTION_POINTTOWARDS_POINTER": "muspekare ",
    "MOTION_GOTO": "gå till %1",
    "MOTION_GOTO_POINTER": "muspekare ",
    "MOTION_GOTO_RANDOM": "slumpmässig position",
    "MOTION_GOTOXY": "gå till x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "glid %1 sek till x: %2 y: %3",
    "MOTION_GLIDETO": "glid %1 sekunder till %2",
    "MOTION_GLIDETO_POINTER": "muspekare ",
    "MOTION_GLIDETO_RANDOM": "slumpmässig position",
    "MOTION_CHANGEXBY": "ändra x med %1",
    "MOTION_SETX": "sätt x till %1",
    "MOTION_CHANGEYBY": "ändra y med %1",
    "MOTION_SETY": "sätt y till %1",
    "MOTION_IFONEDGEBOUNCE": "om vid kanten, studsa",
    "MOTION_SETROTATIONSTYLE": "sätt rotationsstil %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "vänster-höger",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "rotera inte",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "rotera",
    "MOTION_XPOSITION": "x position",
    "MOTION_YPOSITION": "y position",
    "MOTION_DIRECTION": "riktning",
    "MOTION_SCROLLRIGHT": "skrolla höger %1",
    "MOTION_SCROLLUP": "skrolla upp %1",
    "MOTION_ALIGNSCENE": "arrangera scen %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "nedre-vänster",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "nedre-höger",
    "MOTION_ALIGNSCENE_MIDDLE": "mitten",
    "MOTION_ALIGNSCENE_TOPLEFT": "övre-vänster",
    "MOTION_ALIGNSCENE_TOPRIGHT": "övre-höger",
    "MOTION_XSCROLL": "x scroll",
    "MOTION_YSCROLL": "y scroll",
    "MOTION_STAGE_SELECTED": "Scen vald: inga rörelseblock",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "välj slumptal %1 till %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 och %2",
    "OPERATORS_OR": "%1 eller %2",
    "OPERATORS_NOT": "inte %1",
    "OPERATORS_JOIN": "sammanfoga %1 %2",
    "OPERATORS_JOIN_APPLE": "äpple",
    "OPERATORS_JOIN_BANANA": "banan",
    "OPERATORS_LETTEROF": "bokstav %1 av %2",
    "OPERATORS_LETTEROF_APPLE": "ä",
    "OPERATORS_LENGTH": "längden av %1",
    "OPERATORS_CONTAINS": "%1 innehåller %2",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "avrunda %1",
    "OPERATORS_MATHOP": "%1 av %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "Golv",
    "OPERATORS_MATHOP_CEILING": "Tak",
    "OPERATORS_MATHOP_SQRT": "sqrt",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "definiera %1",
    "SENSING_TOUCHINGOBJECT": "rör vid %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "muspekare ",
    "SENSING_TOUCHINGOBJECT_EDGE": "kant",
    "SENSING_TOUCHINGCOLOR": "rör vid färgen %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "rör färgen %1 vid %2?",
    "SENSING_DISTANCETO": "avstånd till %1",
    "SENSING_DISTANCETO_POINTER": "muspekare ",
    "SENSING_ASKANDWAIT": "fråga %1 och vänta",
    "SENSING_ASK_TEXT": "Vad heter du?",
    "SENSING_ANSWER": "svar",
    "SENSING_KEYPRESSED": "tangent %1 nedtryckt?",
    "SENSING_MOUSEDOWN": "musknappen?",
    "SENSING_MOUSEX": "mus x",
    "SENSING_MOUSEY": "mus y",
    "SENSING_SETDRAGMODE": "sätt dragläge %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "dragbar",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "inte dragbar",
    "SENSING_LOUDNESS": "ljudstyrka",
    "SENSING_LOUD": "högt ljud?",
    "SENSING_TIMER": "timer",
    "SENSING_RESETTIMER": "nollställ timer",
    "SENSING_OF": "%1 av %2",
    "SENSING_OF_XPOSITION": "x position",
    "SENSING_OF_YPOSITION": "y position",
    "SENSING_OF_DIRECTION": "riktning",
    "SENSING_OF_COSTUMENUMBER": "klädselnummer",
    "SENSING_OF_COSTUMENAME": "klädselnamn",
    "SENSING_OF_SIZE": "Storlek",
    "SENSING_OF_VOLUME": "volym ",
    "SENSING_OF_BACKDROPNUMBER": "bakgrundsnummer",
    "SENSING_OF_BACKDROPNAME": "bakgrundsnamn",
    "SENSING_OF_STAGE": "Scen",
    "SENSING_CURRENT": "aktuell %1",
    "SENSING_CURRENT_YEAR": "år ",
    "SENSING_CURRENT_MONTH": "månad ",
    "SENSING_CURRENT_DATE": "dag ",
    "SENSING_CURRENT_DAYOFWEEK": "veckodag ",
    "SENSING_CURRENT_HOUR": "timmar ",
    "SENSING_CURRENT_MINUTE": "minuter ",
    "SENSING_CURRENT_SECOND": "sekunder ",
    "SENSING_DAYSSINCE2000": "dagar sedan år 2000",
    "SENSING_USERNAME": "användarnamn ",
    "SENSING_USERID": "användarnamn",
    "SOUND_PLAY": "starta ljud %1",
    "SOUND_PLAYUNTILDONE": "spela ljudet %1 tills färdigt",
    "SOUND_STOPALLSOUNDS": "stoppa alla ljud",
    "SOUND_SETEFFECTO": "sätt %1 effekten till %2",
    "SOUND_CHANGEEFFECTBY": "ändra %1 effekten med %2",
    "SOUND_CLEAREFFECTS": "ta bort ljudeffekter",
    "SOUND_EFFECTS_PITCH": "tonhöjd",
    "SOUND_EFFECTS_PAN": "panorera vänster/höger",
    "SOUND_CHANGEVOLUMEBY": "ändra volymen med %1",
    "SOUND_SETVOLUMETO": "sätt volymen till %1%",
    "SOUND_VOLUME": "volym ",
    "CATEGORY_MOTION": "Rörelse",
    "CATEGORY_LOOKS": "Utseende",
    "CATEGORY_SOUND": "Ljud",
    "CATEGORY_EVENTS": "Händelser",
    "CATEGORY_CONTROL": "Kontroll",
    "CATEGORY_SENSING": "Känna av",
    "CATEGORY_OPERATORS": "Operatorer",
    "CATEGORY_VARIABLES": "Variabler",
    "CATEGORY_MYBLOCKS": "Mina block",
    "DUPLICATE": "Kopiera",
    "DELETE": "Radera",
    "ADD_COMMENT": "Lägg till kommentar",
    "REMOVE_COMMENT": "Ta bort kommentar",
    "DELETE_BLOCK": "Ta bort block",
    "DELETE_X_BLOCKS": "Ta bort %1 block",
    "DELETE_ALL_BLOCKS": "Ta bort alla %1 block?",
    "CLEAN_UP": "Rensa block",
    "HELP": "Hjälp",
    "UNDO": "Ångra",
    "REDO": "Gör om",
    "EDIT_PROCEDURE": "Redigera",
    "SHOW_PROCEDURE_DEFINITION": "Gå till definition",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Säg något...",
    "COLOUR_HUE_LABEL": "Färg",
    "COLOUR_SATURATION_LABEL": "Mättnad",
    "COLOUR_BRIGHTNESS_LABEL": "Ljusstyrka",
    "CHANGE_VALUE_TITLE": "Ändra värde:",
    "RENAME_VARIABLE": "Döp om variabeln",
    "RENAME_VARIABLE_TITLE": "Döp om alla \"%1\" variabler till:",
    "RENAME_VARIABLE_MODAL_TITLE": "Döp om variabel",
    "NEW_VARIABLE": "Gör en variabel",
    "NEW_VARIABLE_TITLE": "Nytt variabelnamn:",
    "VARIABLE_MODAL_TITLE": "Ny variabel",
    "VARIABLE_ALREADY_EXISTS": "En variabel \"%1\" finns redan.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "En variabel \"%1\" finns redan för en annan variabel av typ \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Ta bort %1 användningar av variabeln \"%2\"?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Kan inte ta bort variabel \"%1\" för att den är en del av definitionen av funktionen \"%2\"",
    "DELETE_VARIABLE": "Ta bort \"%1\" variabeln",
    "NEW_PROCEDURE": "Skapa ett Block",
    "PROCEDURE_ALREADY_EXISTS": "En funktion \"%1\" finns redan.",
    "NEW_LIST": "Gör en lista",
    "NEW_LIST_TITLE": "Nytt listnamn:",
    "LIST_MODAL_TITLE": "Ny lista",
    "LIST_ALREADY_EXISTS": "En lista \"%1\" finns redan.",
    "RENAME_LIST_TITLE": "Döp om alla \"%1\" listor till:",
    "RENAME_LIST_MODAL_TITLE": "Döp om lista",
    "NEW_BROADCAST_MESSAGE": "Nytt meddelande",
    "NEW_BROADCAST_MESSAGE_TITLE": "Nytt namn på meddelande:",
    "BROADCAST_MODAL_TITLE": "Nytt meddelande",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "meddelande1"
};

Blockly.ScratchMsgs.locales["th"] =
{
    "CONTROL_FOREVER": "วนซ้ำตลอด",
    "CONTROL_REPEAT": "ทำซ้ำ %1",
    "CONTROL_IF": "ถ้า %1 แล้ว",
    "CONTROL_ELSE": "มิฉะนั้น",
    "CONTROL_STOP": "หยุด",
    "CONTROL_STOP_ALL": "ทั้งหมด",
    "CONTROL_STOP_THIS": "สคริปต์นี้",
    "CONTROL_STOP_OTHER": "สริปต์อื่นในตัวละคร",
    "CONTROL_WAIT": "รอ %1 วินาที",
    "CONTROL_WAITUNTIL": "รอจนกระทั่ง %1",
    "CONTROL_REPEATUNTIL": "ทำซ้ำจน %1",
    "CONTROL_WHILE": "ขณะที่ %1",
    "CONTROL_FOREACH": "สำหรับแต่ละ %1 ใน %2",
    "CONTROL_STARTASCLONE": "เมื่อฉันเริ่มในฐานะโคลน",
    "CONTROL_CREATECLONEOF": "สร้าง โคลน ของ %1",
    "CONTROL_CREATECLONEOF_MYSELF": "ตัวฉันเอง",
    "CONTROL_DELETETHISCLONE": "ลบโคลนตัวนี้",
    "CONTROL_COUNTER": "ตัวนับ",
    "CONTROL_INCRCOUNTER": "ตัวนับเพิ่ม",
    "CONTROL_CLEARCOUNTER": "ล้างตัวนับ",
    "CONTROL_ALLATONCE": "ทั้งหมดในครั้งเดียว",
    "DATA_SETVARIABLETO": "ตั้งค่า %1 เป็น %2",
    "DATA_CHANGEVARIABLEBY": "เปลี่ยน %1 ทีละ %2",
    "DATA_SHOWVARIABLE": "แสดงตัวแปร %1",
    "DATA_HIDEVARIABLE": "ซ่อนตัวแปร %1",
    "DATA_ADDTOLIST": "เพิ่ม %1 ไปยัง %2",
    "DATA_DELETEOFLIST": "ลบ %1 ออกจาก %2",
    "DATA_INSERTATLIST": "แทรก %1 ที่ %2 ของ %3",
    "DATA_REPLACEITEMOFLIST": "แทนที่รายการ %1 ของ %2 ด้วย %3",
    "DATA_ITEMOFLIST": "รายการ %1 ของ %2",
    "DATA_LENGTHOFLIST": "จำนวนของ %1",
    "DATA_LISTCONTAINSITEM": "%1 มี %2?",
    "DATA_SHOWLIST": "แสดงรายการ %1",
    "DATA_HIDELIST": "ซ่อนรายการ %1",
    "DATA_INDEX_ALL": "ทั้งหมด",
    "DATA_INDEX_LAST": "สุดท้าย",
    "DATA_INDEX_RANDOM": "สุ่ม",
    "EVENT_WHENFLAGCLICKED": "เมื่อคลิก %1",
    "EVENT_WHENTHISSPRITECLICKED": "เมื่อตัวละครนี้ถูกคลิก",
    "EVENT_WHENSTAGECLICKED": "เมื่อคลิกเวที",
    "EVENT_WHENTOUCHINGOBJECT": "เมื่อสไปรต์นี้แตะ %1",
    "EVENT_WHENBROADCASTRECEIVED": "เมื่อฉันได้รับ %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "เมื่อฉากหลังเปลี่ยนเป็น %1",
    "EVENT_WHENGREATERTHAN": "เมื่อ %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "ตัวจับเวลา",
    "EVENT_BROADCAST": "กระจาย %1",
    "EVENT_BROADCASTANDWAIT": "กระจาย %1 และรอ",
    "EVENT_WHENKEYPRESSED": "เมื่อกดปุ่ม %1",
    "EVENT_WHENKEYPRESSED_SPACE": "สเปซบาร์",
    "EVENT_WHENKEYPRESSED_LEFT": "ลูกศรชี้ทางซ้าย",
    "EVENT_WHENKEYPRESSED_RIGHT": "ลูกศรชี้ขวา",
    "EVENT_WHENKEYPRESSED_DOWN": "ลูกศรชี้ลง",
    "EVENT_WHENKEYPRESSED_UP": "ลูกศรขึ้น",
    "EVENT_WHENKEYPRESSED_ANY": "อะไรก็ได้",
    "LOOKS_SAYFORSECS": "พูด %1   %2 วินาที",
    "LOOKS_SAY": "พูด %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "คิด %1   %2 วินาที",
    "LOOKS_THINK": "คิด %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "แสดง",
    "LOOKS_HIDE": "ซ่อน",
    "LOOKS_HIDEALLSPRITES": "ซ่อนสไปรต์ทั้งหมด",
    "LOOKS_EFFECT_COLOR": "สี",
    "LOOKS_EFFECT_FISHEYE": "ตาปลา",
    "LOOKS_EFFECT_WHIRL": "หมุนวน",
    "LOOKS_EFFECT_PIXELATE": "แยกพิกเซล",
    "LOOKS_EFFECT_MOSAIC": "โมเสก",
    "LOOKS_EFFECT_BRIGHTNESS": "ความสว่าง",
    "LOOKS_EFFECT_GHOST": "ล่องหน",
    "LOOKS_CHANGEEFFECTBY": "เปลี่ยนเอฟเฟกต์ %1 ทีละ %2",
    "LOOKS_SETEFFECTTO": "ตั้งค่าเอฟเฟกต์ %1 เป็น %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "ล้างเอฟเฟคภาพ",
    "LOOKS_CHANGESIZEBY": "เปลี่ยนขนาดทีละ %1",
    "LOOKS_SETSIZETO": "กำหนดขนาดเป็น %1 %",
    "LOOKS_SIZE": "ขนาด",
    "LOOKS_CHANGESTRETCHBY": "เปลี่ยนความยืดทีละ %1",
    "LOOKS_SETSTRETCHTO": "ตั้งค่าความยืดเป็น %1 %",
    "LOOKS_SWITCHCOSTUMETO": "เปลี่ยนคอสตูมเป็น %1",
    "LOOKS_NEXTCOSTUME": "ชุดถัดไป",
    "LOOKS_SWITCHBACKDROPTO": "เปลี่ยนฉากหลังเป็น %1",
    "LOOKS_GOTOFRONTBACK": "ไปที่ระดับ %1 ",
    "LOOKS_GOTOFRONTBACK_FRONT": "หน้าสุด",
    "LOOKS_GOTOFRONTBACK_BACK": "หลังสุด",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "ไป %1 %2 ระดับ",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "ด้านหน้า",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "ด้านหลัง",
    "LOOKS_BACKDROPNUMBERNAME": "ฉากหลัง %1",
    "LOOKS_COSTUMENUMBERNAME": "คอสตูม %1",
    "LOOKS_NUMBERNAME_NUMBER": "หมายเลข",
    "LOOKS_NUMBERNAME_NAME": "ชื่อ",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "เปลี่ยนฉากหลังเป็น %1 และรอ",
    "LOOKS_NEXTBACKDROP": "ฉากหลังต่อไป",
    "LOOKS_PREVIOUSBACKDROP": "ฉากหลังก่อนหน้า",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "เคลื่อนที่ %1 ก้าว",
    "MOTION_TURNLEFT": "หมุน %1 %2 องศา",
    "MOTION_TURNRIGHT": "หมุน %1 %2 องศา",
    "MOTION_POINTINDIRECTION": "หันในแนว %1",
    "MOTION_POINTTOWARDS": "หันไปทาง %1",
    "MOTION_POINTTOWARDS_POINTER": "ตัวชี้เมาส์",
    "MOTION_GOTO": "ไปที่ %1",
    "MOTION_GOTO_POINTER": "ตัวชี้เมาส์",
    "MOTION_GOTO_RANDOM": "ตำแหน่งสุ่ม",
    "MOTION_GOTOXY": "ไปที่ x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "เหิน %1 วินาที ไปยัง x: %2 y: %3",
    "MOTION_GLIDETO": "เหิน %1 วินาที ไปยัง %2",
    "MOTION_GLIDETO_POINTER": "ตัวชี้เมาส์",
    "MOTION_GLIDETO_RANDOM": "ตำแหน่งสุ่ม",
    "MOTION_CHANGEXBY": "เปลี่ยน x ทีละ %1",
    "MOTION_SETX": "ตั้งค่า x เป็น %1",
    "MOTION_CHANGEYBY": "เปลี่ยน y ทีละ %1",
    "MOTION_SETY": "ตั้งค่า y เป็น %1",
    "MOTION_IFONEDGEBOUNCE": "ถ้าชนขอบให้สะท้อนกลับ",
    "MOTION_SETROTATIONSTYLE": "ตั้งรูปแบบการหมุนเป็น %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "ซ้าย-ขวา",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "ห้ามหมุน",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "รอบด้าน",
    "MOTION_XPOSITION": "ตำแหน่ง x ",
    "MOTION_YPOSITION": "ตำแหน่ง y",
    "MOTION_DIRECTION": "ทิศทาง",
    "MOTION_SCROLLRIGHT": "เลื่อนขวา %1",
    "MOTION_SCROLLUP": "เลื่อนขึ้น %1",
    "MOTION_ALIGNSCENE": "แนวฉาก %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "ล่างซ้าย",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "ล่างขวา",
    "MOTION_ALIGNSCENE_MIDDLE": "กึ่งกลาง",
    "MOTION_ALIGNSCENE_TOPLEFT": "บนซ้าย",
    "MOTION_ALIGNSCENE_TOPRIGHT": "บนขวา",
    "MOTION_XSCROLL": "x เลื่อน",
    "MOTION_YSCROLL": "y เลื่อน",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "เลือกสุ่มจาก %1 ถึง %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 และ %2",
    "OPERATORS_OR": "%1 หรือ %2",
    "OPERATORS_NOT": "ไม่ %1",
    "OPERATORS_JOIN": "ต่อ %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "อักษรที่ %1 ของ %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "ความยาวของ %1",
    "OPERATORS_CONTAINS": "%1 มี %2?",
    "OPERATORS_MOD": "%1 หารเอาเศษ %2",
    "OPERATORS_ROUND": "ปัดเศษ %1",
    "OPERATORS_MATHOP": "%1 ของ %2",
    "OPERATORS_MATHOP_ABS": "ค่าสัมบูรณ์",
    "OPERATORS_MATHOP_FLOOR": "พื้น",
    "OPERATORS_MATHOP_CEILING": "เพดาน",
    "OPERATORS_MATHOP_SQRT": "รากที่สอง",
    "OPERATORS_MATHOP_SIN": "ไซน์",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ใน",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "กำหนด %1",
    "SENSING_TOUCHINGOBJECT": "แตะ %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "ตัวชี้เมาส์",
    "SENSING_TOUCHINGOBJECT_EDGE": "ขอบ",
    "SENSING_TOUCHINGCOLOR": "แตะสี %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "สี %1 แตะกับสี %2?",
    "SENSING_DISTANCETO": "ระยะห่างไปยัง %1",
    "SENSING_DISTANCETO_POINTER": "ตัวชี้เมาส์",
    "SENSING_ASKANDWAIT": "ถาม %1 และรอ",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "คำตอบ",
    "SENSING_KEYPRESSED": "ปุ่ม %1 ถูกกด?",
    "SENSING_MOUSEDOWN": "เมาส์ถูกกด?",
    "SENSING_MOUSEX": "ตำแหน่ง x ของเมาส์",
    "SENSING_MOUSEY": "ตำแหน่ง y ของเมาส์",
    "SENSING_SETDRAGMODE": "ตั้งค่าโหมดลาก %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "ลากได้",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "ลากไม่ได้",
    "SENSING_LOUDNESS": "ระดับความดัง",
    "SENSING_LOUD": "เสียงดัง?",
    "SENSING_TIMER": "จับเวลา",
    "SENSING_RESETTIMER": "จับเวลาใหม่",
    "SENSING_OF": "%1 ของ %2",
    "SENSING_OF_XPOSITION": "ตำแหน่ง x ",
    "SENSING_OF_YPOSITION": "ตำแหน่ง y",
    "SENSING_OF_DIRECTION": "ทิศทาง",
    "SENSING_OF_COSTUMENUMBER": "คอสตูม #",
    "SENSING_OF_COSTUMENAME": "ชื่อคอสตูม",
    "SENSING_OF_SIZE": "ขนาด",
    "SENSING_OF_VOLUME": "ระดับเสียง",
    "SENSING_OF_BACKDROPNUMBER": "ฉากหลัง #",
    "SENSING_OF_BACKDROPNAME": "ชื่อฉากหลัง",
    "SENSING_OF_STAGE": "เวที",
    "SENSING_CURRENT": "%1 ปัจจุบัน",
    "SENSING_CURRENT_YEAR": "ปี",
    "SENSING_CURRENT_MONTH": "เดือน",
    "SENSING_CURRENT_DATE": "วันที่",
    "SENSING_CURRENT_DAYOFWEEK": "วันของสัปดาห์",
    "SENSING_CURRENT_HOUR": "ชั่วโมง",
    "SENSING_CURRENT_MINUTE": "นาที",
    "SENSING_CURRENT_SECOND": "วินาที",
    "SENSING_DAYSSINCE2000": "จำนวนวันตั้งแต่ปี ค.ศ 2000",
    "SENSING_USERNAME": "ชื่อผู้ใช้",
    "SENSING_USERID": "รหัสผู้ใช้",
    "SOUND_PLAY": "เริ่มเสียง %1",
    "SOUND_PLAYUNTILDONE": "เล่นเสียง %1 จนจบ",
    "SOUND_STOPALLSOUNDS": "หยุดเสียงทั้งหมด",
    "SOUND_SETEFFECTO": "ตั้งค่าเอฟเฟกต์ %1 เป็น %2",
    "SOUND_CHANGEEFFECTBY": "เปลี่ยนเอฟเฟกต์ %1 ทีละ %2",
    "SOUND_CLEAREFFECTS": "ล้างเอฟเฟกต์เสียง",
    "SOUND_EFFECTS_PITCH": "เสียงสูงต่ำ",
    "SOUND_EFFECTS_PAN": "แพนเสียงซ้าย/ขวา",
    "SOUND_CHANGEVOLUMEBY": "เปลี่ยนระดับเสียงทีละ %1",
    "SOUND_SETVOLUMETO": "ตั้งระดับเสียงเป็น %1%",
    "SOUND_VOLUME": "ระดับเสียง",
    "CATEGORY_MOTION": "เคลื่อนที่",
    "CATEGORY_LOOKS": "รูปร่าง",
    "CATEGORY_SOUND": "เสียง",
    "CATEGORY_EVENTS": "เหตุการณ์",
    "CATEGORY_CONTROL": "ควบคุม",
    "CATEGORY_SENSING": "ตรวจจับ",
    "CATEGORY_OPERATORS": "ตัวดำเนินการ",
    "CATEGORY_VARIABLES": "ตัวแปร",
    "CATEGORY_MYBLOCKS": "บล็อกของฉัน",
    "DUPLICATE": "ทำซ้ำ",
    "DELETE": "ลบ",
    "ADD_COMMENT": "เพิ่มคำอธิบาย",
    "REMOVE_COMMENT": "ลบคำอธิบาย",
    "DELETE_BLOCK": "ลบบล็อก",
    "DELETE_X_BLOCKS": "ลบ %1 บล็อก",
    "DELETE_ALL_BLOCKS": "ลบทั้งหมด %1 บล็อก?",
    "CLEAN_UP": "จัดระเบียบบล็อก",
    "HELP": "ช่วยเหลือ",
    "UNDO": "ย้อนกลับ",
    "REDO": "ทำซ้ำ",
    "EDIT_PROCEDURE": "แก้ไข",
    "SHOW_PROCEDURE_DEFINITION": "ไปยังตัวกำหนด",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "พูดอะไรสักอย่าง...",
    "COLOUR_HUE_LABEL": "สี",
    "COLOUR_SATURATION_LABEL": "ความอิ่มตัว",
    "COLOUR_BRIGHTNESS_LABEL": "ความสว่าง",
    "CHANGE_VALUE_TITLE": "เปลี่ยนค่า:",
    "RENAME_VARIABLE": "เปลี่ยนชื่อตัวแปร",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "เปลี่ยนชื่อตัวแปร",
    "NEW_VARIABLE": "สร้างตัวแปร",
    "NEW_VARIABLE_TITLE": "ชื่อตัวแปรใหม่:",
    "VARIABLE_MODAL_TITLE": "ตัวแปรใหม่",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "สร้างบล็อกใหม่",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "สร้างรายการ",
    "NEW_LIST_TITLE": "ชื่อรายการ:",
    "LIST_MODAL_TITLE": "รายการใหม่",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "เปลี่ยนชื่อรายการ",
    "NEW_BROADCAST_MESSAGE": "ข้อความใหม่",
    "NEW_BROADCAST_MESSAGE_TITLE": "ชื่อข้อความใหม่:",
    "BROADCAST_MODAL_TITLE": "ข้อความใหม่",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "ข้อความ1"
};

Blockly.ScratchMsgs.locales["tr"] =
{
    "CONTROL_FOREVER": "sürekli tekrarla",
    "CONTROL_REPEAT": "%1 defa tekrarla",
    "CONTROL_IF": "eğer %1 ise",
    "CONTROL_ELSE": "değilse",
    "CONTROL_STOP": "durdur",
    "CONTROL_STOP_ALL": "tümü",
    "CONTROL_STOP_THIS": "bu diziyi",
    "CONTROL_STOP_OTHER": "kuklanın diğer dizilerini",
    "CONTROL_WAIT": "%1 saniye bekle",
    "CONTROL_WAITUNTIL": "%1 olana kadar bekle",
    "CONTROL_REPEATUNTIL": "%1 olana kadar tekrarla",
    "CONTROL_WHILE": "%1 olana kadar tekrarla",
    "CONTROL_FOREACH": "%2 deki her %1 için",
    "CONTROL_STARTASCLONE": "ikiz olarak başladığımda",
    "CONTROL_CREATECLONEOF": "%1'in ikizini yarat",
    "CONTROL_CREATECLONEOF_MYSELF": "kendim",
    "CONTROL_DELETETHISCLONE": "bu ikizi sil",
    "CONTROL_COUNTER": "sayaç",
    "CONTROL_INCRCOUNTER": "sayacı artır",
    "CONTROL_CLEARCOUNTER": "sayacı sıfırla",
    "CONTROL_ALLATONCE": "tümü tek seferde",
    "DATA_SETVARIABLETO": "%1 i %2 ye ayarla",
    "DATA_CHANGEVARIABLEBY": "%1 i %2 kadar değiştir",
    "DATA_SHOWVARIABLE": "%1 değişkenini göster",
    "DATA_HIDEVARIABLE": "%1 değişkenini gizle",
    "DATA_ADDTOLIST": "%1 i %2 ye ekle",
    "DATA_DELETEOFLIST": "%2 nin %1 ini sil",
    "DATA_INSERTATLIST": "%1 i %3 ün %2 pozisyonuna ekle",
    "DATA_REPLACEITEMOFLIST": "%2 öğesinin %1 öğe yerine %3 koy",
    "DATA_ITEMOFLIST": "%2 nin %1 öğesi",
    "DATA_LENGTHOFLIST": "%1'in uzunluğu",
    "DATA_LISTCONTAINSITEM": "%1'de %2 içeriyor mu? ",
    "DATA_SHOWLIST": "%1 listesini göster",
    "DATA_HIDELIST": "%1 listesini gizle",
    "DATA_INDEX_ALL": "tümü",
    "DATA_INDEX_LAST": "son",
    "DATA_INDEX_RANDOM": "rastgele",
    "EVENT_WHENFLAGCLICKED": "%1 tıklandığında",
    "EVENT_WHENTHISSPRITECLICKED": "bu kukla tıklandığında",
    "EVENT_WHENSTAGECLICKED": "sahne tıklandığında",
    "EVENT_WHENTOUCHINGOBJECT": "bu kukla %1 e dokunduğunda",
    "EVENT_WHENBROADCASTRECEIVED": "%1 haberi gelince",
    "EVENT_WHENBACKDROPSWITCHESTO": "dekor %1 olduğunda",
    "EVENT_WHENGREATERTHAN": "%1 > %2 olduğunda",
    "EVENT_WHENGREATERTHAN_TIMER": "kronometre",
    "EVENT_BROADCAST": "%1 haberini sal",
    "EVENT_BROADCASTANDWAIT": "%1 haberini sal ve bekle",
    "EVENT_WHENKEYPRESSED": "%1 tuşuna basılınca",
    "EVENT_WHENKEYPRESSED_SPACE": "boşluk",
    "EVENT_WHENKEYPRESSED_LEFT": "sol ok",
    "EVENT_WHENKEYPRESSED_RIGHT": "sağ ok",
    "EVENT_WHENKEYPRESSED_DOWN": "aşağı ok",
    "EVENT_WHENKEYPRESSED_UP": "yukarı ok",
    "EVENT_WHENKEYPRESSED_ANY": "herhangi",
    "LOOKS_SAYFORSECS": "%2 saniye boyunca %1 de ",
    "LOOKS_SAY": "%1 de",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "%2 saniye boyunca %1 diye düşün",
    "LOOKS_THINK": "%1 diye düşün",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "göster",
    "LOOKS_HIDE": "gizle",
    "LOOKS_HIDEALLSPRITES": "tüm kuklaları gizle",
    "LOOKS_EFFECT_COLOR": "renk",
    "LOOKS_EFFECT_FISHEYE": "balık gözü",
    "LOOKS_EFFECT_WHIRL": "fırılda",
    "LOOKS_EFFECT_PIXELATE": "benekleştir",
    "LOOKS_EFFECT_MOSAIC": "mozaik",
    "LOOKS_EFFECT_BRIGHTNESS": "parlaklık",
    "LOOKS_EFFECT_GHOST": "hayalet",
    "LOOKS_CHANGEEFFECTBY": "%1 etkisini %2 değiştir",
    "LOOKS_SETEFFECTTO": "%1 etkisi %2 olsun",
    "LOOKS_CLEARGRAPHICEFFECTS": "görsel etkileri temizle",
    "LOOKS_CHANGESIZEBY": "boyutu %1 birim büyüt",
    "LOOKS_SETSIZETO": "boyutu %1 % e ayarla",
    "LOOKS_SIZE": "büyüklük",
    "LOOKS_CHANGESTRETCHBY": "esnekliği %1 kadar değiştir",
    "LOOKS_SETSTRETCHTO": "esnekliği %1 e ayarla",
    "LOOKS_SWITCHCOSTUMETO": "%1 kılığına geç",
    "LOOKS_NEXTCOSTUME": "sonraki kostüm",
    "LOOKS_SWITCHBACKDROPTO": "%1 dekoruna geç",
    "LOOKS_GOTOFRONTBACK": "%1 katmanına git",
    "LOOKS_GOTOFRONTBACK_FRONT": "ön",
    "LOOKS_GOTOFRONTBACK_BACK": "arka",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "%1 %2 katmanına git",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "ileri",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "geri",
    "LOOKS_BACKDROPNUMBERNAME": "dekor %1",
    "LOOKS_COSTUMENUMBERNAME": "kostüm %1",
    "LOOKS_NUMBERNAME_NUMBER": "sayı",
    "LOOKS_NUMBERNAME_NAME": "isim",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "%1 dekoruna geç ve bekle",
    "LOOKS_NEXTBACKDROP": "sonraki dekor",
    "LOOKS_PREVIOUSBACKDROP": "önceki dekor",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "%1 adım git",
    "MOTION_TURNLEFT": "%1 %2 derece dön",
    "MOTION_TURNRIGHT": "%1 %2 derece dön",
    "MOTION_POINTINDIRECTION": "%1 yönüne dön",
    "MOTION_POINTTOWARDS": "%1'na doğru dön",
    "MOTION_POINTTOWARDS_POINTER": "fare oku",
    "MOTION_GOTO": "%1'na git",
    "MOTION_GOTO_POINTER": "fare oku",
    "MOTION_GOTO_RANDOM": "rastgele pozisyon",
    "MOTION_GOTOXY": "x: %1 y: %2 konumuna git",
    "MOTION_GLIDESECSTOXY": "%1 sn.de x: %2 y: %3'a süzül",
    "MOTION_GLIDETO": "%1 saniyede %2 noktasına süzül",
    "MOTION_GLIDETO_POINTER": "fare oku",
    "MOTION_GLIDETO_RANDOM": "rastgele konum",
    "MOTION_CHANGEXBY": "x konumunu %1 artır",
    "MOTION_SETX": "x konumunu %1 yap",
    "MOTION_CHANGEYBY": "y konumunu %1 artır",
    "MOTION_SETY": "y konumunu %1 yap",
    "MOTION_IFONEDGEBOUNCE": "kenara geldiyse sektir",
    "MOTION_SETROTATIONSTYLE": "dönüş stilini %1 yap",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "sol-sağ",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "döndürme",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "tüm yönlere",
    "MOTION_XPOSITION": "x konumu",
    "MOTION_YPOSITION": "y konumu",
    "MOTION_DIRECTION": "yön",
    "MOTION_SCROLLRIGHT": "sağa %1 kaydır",
    "MOTION_SCROLLUP": "yukarı %1 kaydır",
    "MOTION_ALIGNSCENE": "%1 görüntüsünü hizala",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "alt-sol",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "alt-sağ",
    "MOTION_ALIGNSCENE_MIDDLE": "orta",
    "MOTION_ALIGNSCENE_TOPLEFT": "sol üst",
    "MOTION_ALIGNSCENE_TOPRIGHT": "sağ üst",
    "MOTION_XSCROLL": "x ekseninde kaydır",
    "MOTION_YSCROLL": "y ekseninde kaydır",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "%1 ile %2 arasında rastgele sayı tut",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 ve %2",
    "OPERATORS_OR": "%1 veya %2",
    "OPERATORS_NOT": "%1 değil",
    "OPERATORS_JOIN": "birleştir %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "%2 in %1. harfi",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "%1'in uzunluğu",
    "OPERATORS_CONTAINS": "%1'de %2 içeriyor mu?",
    "OPERATORS_MOD": "%1 mod %2",
    "OPERATORS_ROUND": "%1'i yuvarla",
    "OPERATORS_MATHOP": "%2 nin %1 i",
    "OPERATORS_MATHOP_ABS": "mutlak değer",
    "OPERATORS_MATHOP_FLOOR": "aşağı yuvarla",
    "OPERATORS_MATHOP_CEILING": "yukarı yuvarla",
    "OPERATORS_MATHOP_SQRT": "karekök",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "%1 tanımla",
    "SENSING_TOUCHINGOBJECT": "%1'a değdi mi?",
    "SENSING_TOUCHINGOBJECT_POINTER": "fare oku",
    "SENSING_TOUCHINGOBJECT_EDGE": "kenar",
    "SENSING_TOUCHINGCOLOR": "%1 rengine dokundu mu?",
    "SENSING_COLORISTOUCHINGCOLOR": "%1 rengi %2 rengine değdi mi?",
    "SENSING_DISTANCETO": "%1'e mesafe",
    "SENSING_DISTANCETO_POINTER": "fare oku",
    "SENSING_ASKANDWAIT": "%1 diye sor ve bekle",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "cevap",
    "SENSING_KEYPRESSED": "%1 tuşuna basıldı mı?",
    "SENSING_MOUSEDOWN": "fareye basılı mı?",
    "SENSING_MOUSEX": "farenin x'i",
    "SENSING_MOUSEY": "farenin y'si",
    "SENSING_SETDRAGMODE": "sürükleme modunu %1 yap",
    "SENSING_SETDRAGMODE_DRAGGABLE": "sürüklenebilir",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "sürüklenemez",
    "SENSING_LOUDNESS": "ses şiddeti",
    "SENSING_LOUD": "yükses ses?",
    "SENSING_TIMER": "kronometre",
    "SENSING_RESETTIMER": "kronometreyi sıfırla",
    "SENSING_OF": "%2 nin %1 i",
    "SENSING_OF_XPOSITION": "x konumu",
    "SENSING_OF_YPOSITION": "y konumu",
    "SENSING_OF_DIRECTION": "yönü",
    "SENSING_OF_COSTUMENUMBER": "kostüm #",
    "SENSING_OF_COSTUMENAME": "kostüm ismi",
    "SENSING_OF_SIZE": "büyüklük",
    "SENSING_OF_VOLUME": "ses düzeyi",
    "SENSING_OF_BACKDROPNUMBER": "dekor #",
    "SENSING_OF_BACKDROPNAME": "dekorun adı",
    "SENSING_OF_STAGE": "Sahne",
    "SENSING_CURRENT": "şimdiki %1",
    "SENSING_CURRENT_YEAR": "yıl",
    "SENSING_CURRENT_MONTH": "ay",
    "SENSING_CURRENT_DATE": "tarih",
    "SENSING_CURRENT_DAYOFWEEK": "haftanın günü",
    "SENSING_CURRENT_HOUR": "saat",
    "SENSING_CURRENT_MINUTE": "dakika",
    "SENSING_CURRENT_SECOND": "saniye",
    "SENSING_DAYSSINCE2000": "2000'den beri geçen gün",
    "SENSING_USERNAME": "kullanıcı adı",
    "SENSING_USERID": "kullanıcı kimliği",
    "SOUND_PLAY": "%1 sesini çal",
    "SOUND_PLAYUNTILDONE": "%1 sesini bitene kadar çal",
    "SOUND_STOPALLSOUNDS": "tüm sesleri durdur",
    "SOUND_SETEFFECTO": "%1 etkisi %2 olsun",
    "SOUND_CHANGEEFFECTBY": "%1 etkisini %2 artır",
    "SOUND_CLEAREFFECTS": "ses etkilerini temizle",
    "SOUND_EFFECTS_PITCH": "ses perdesi",
    "SOUND_EFFECTS_PAN": "sağa-sola dönebilsin",
    "SOUND_CHANGEVOLUMEBY": "ses şiddetini %1 artır",
    "SOUND_SETVOLUMETO": "ses şiddetini %1% yap",
    "SOUND_VOLUME": "ses düzeyi",
    "CATEGORY_MOTION": "Hareket",
    "CATEGORY_LOOKS": "Görünüm",
    "CATEGORY_SOUND": "Ses",
    "CATEGORY_EVENTS": "Olaylar",
    "CATEGORY_CONTROL": "Kontrol",
    "CATEGORY_SENSING": "Algılama",
    "CATEGORY_OPERATORS": "İşlemler",
    "CATEGORY_VARIABLES": "Değişkenler",
    "CATEGORY_MYBLOCKS": "Bloklarım",
    "DUPLICATE": "Kopyasını çıkart",
    "DELETE": "Sil",
    "ADD_COMMENT": "Yorum Ekle",
    "REMOVE_COMMENT": "Yorumu Sil",
    "DELETE_BLOCK": "Bloğu Sil",
    "DELETE_X_BLOCKS": "%1 bloğu sil",
    "DELETE_ALL_BLOCKS": "Tüm %1 blokları sil",
    "CLEAN_UP": "Blokları düzenle",
    "HELP": "Yardım",
    "UNDO": "Geri Al",
    "REDO": "İleri Al",
    "EDIT_PROCEDURE": "Düzenle",
    "SHOW_PROCEDURE_DEFINITION": "Tanımlamaya git",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Birşey söyle",
    "COLOUR_HUE_LABEL": "Renk",
    "COLOUR_SATURATION_LABEL": "Doygunluk",
    "COLOUR_BRIGHTNESS_LABEL": "Parlaklık",
    "CHANGE_VALUE_TITLE": "Değeri değiştir",
    "RENAME_VARIABLE": "Değişkeni adlandır",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Değişkeni Yeniden Adlandır",
    "NEW_VARIABLE": "Bir Değişken Oluştur",
    "NEW_VARIABLE_TITLE": "Yeni değişken ismi:",
    "VARIABLE_MODAL_TITLE": "Yeni Değişken",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Bir Blok Oluştur",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Bir Liste Oluştur",
    "NEW_LIST_TITLE": "Yeni liste ismi:",
    "LIST_MODAL_TITLE": "Yeni Liste",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Listeyi Adlandır",
    "NEW_BROADCAST_MESSAGE": "Yeni haber",
    "NEW_BROADCAST_MESSAGE_TITLE": "Yeni haber ismi:",
    "BROADCAST_MODAL_TITLE": "Yeni Haber",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "haber1"
};

Blockly.ScratchMsgs.locales["uk"] =
{
    "CONTROL_FOREVER": "завжди",
    "CONTROL_REPEAT": "повторити %1",
    "CONTROL_IF": "якщо %1 то",
    "CONTROL_ELSE": "інакше",
    "CONTROL_STOP": "зупинити",
    "CONTROL_STOP_ALL": "все",
    "CONTROL_STOP_THIS": "цей скрипт",
    "CONTROL_STOP_OTHER": "інші скрипти цього спрайту",
    "CONTROL_WAIT": "чекати %1 секунд",
    "CONTROL_WAITUNTIL": "чекати поки %1",
    "CONTROL_REPEATUNTIL": "повторити поки не %1",
    "CONTROL_WHILE": "поки %1",
    "CONTROL_FOREACH": "для кожного %1 в %2",
    "CONTROL_STARTASCLONE": "коли я починаю як клон",
    "CONTROL_CREATECLONEOF": "створити клон з %1",
    "CONTROL_CREATECLONEOF_MYSELF": "сам",
    "CONTROL_DELETETHISCLONE": "вилучити цей клон",
    "CONTROL_COUNTER": "лічильник",
    "CONTROL_INCRCOUNTER": "збільшити лічильник",
    "CONTROL_CLEARCOUNTER": "очистити лічильник",
    "CONTROL_ALLATONCE": "всі одночасно",
    "DATA_SETVARIABLETO": "задати значення %1 для %2",
    "DATA_CHANGEVARIABLEBY": "змінити %1 на %2",
    "DATA_SHOWVARIABLE": "показати змінну %1",
    "DATA_HIDEVARIABLE": "сховати змінну %1",
    "DATA_ADDTOLIST": "додати %1 до %2",
    "DATA_DELETEOFLIST": "вилучити %1 з %2",
    "DATA_INSERTATLIST": "вставити %1 в %2 з %3",
    "DATA_REPLACEITEMOFLIST": "замінити елемент %1 в %2 на %3",
    "DATA_ITEMOFLIST": "елемент %1 з %2",
    "DATA_LENGTHOFLIST": "довжина %1",
    "DATA_LISTCONTAINSITEM": "%1 містить %2?",
    "DATA_SHOWLIST": "показати список %1",
    "DATA_HIDELIST": "сховати список %1",
    "DATA_INDEX_ALL": "все",
    "DATA_INDEX_LAST": "останні",
    "DATA_INDEX_RANDOM": "випадково",
    "EVENT_WHENFLAGCLICKED": "коли %1 натиснуто",
    "EVENT_WHENTHISSPRITECLICKED": "коли спрайт натиснуто",
    "EVENT_WHENSTAGECLICKED": "коли сцену натиснуто",
    "EVENT_WHENTOUCHINGOBJECT": "коли цей спрай доторкнеться %1",
    "EVENT_WHENBROADCASTRECEIVED": "коли я отримую %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "коли тло змінится на %1",
    "EVENT_WHENGREATERTHAN": "доки %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "таймер",
    "EVENT_BROADCAST": "оповістити %1",
    "EVENT_BROADCASTANDWAIT": "оповістити %1 і чекати",
    "EVENT_WHENKEYPRESSED": "доки клавішу %1 натиснуто ",
    "EVENT_WHENKEYPRESSED_SPACE": "пропуск",
    "EVENT_WHENKEYPRESSED_LEFT": "стрілка ліворуч",
    "EVENT_WHENKEYPRESSED_RIGHT": "стрілка праворуч",
    "EVENT_WHENKEYPRESSED_DOWN": "стрілка вниз",
    "EVENT_WHENKEYPRESSED_UP": "стрілка вгору",
    "EVENT_WHENKEYPRESSED_ANY": "будь-яка",
    "LOOKS_SAYFORSECS": "говорити %1 %2 сек",
    "LOOKS_SAY": "говорити %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "подумати %1 %2 сек",
    "LOOKS_THINK": "подумати %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "показати",
    "LOOKS_HIDE": "сховати",
    "LOOKS_HIDEALLSPRITES": "сховати усі спрайти",
    "LOOKS_EFFECT_COLOR": "колір",
    "LOOKS_EFFECT_FISHEYE": "роздуття",
    "LOOKS_EFFECT_WHIRL": "закручування",
    "LOOKS_EFFECT_PIXELATE": "пікселями",
    "LOOKS_EFFECT_MOSAIC": "мозаїка",
    "LOOKS_EFFECT_BRIGHTNESS": "яскравість",
    "LOOKS_EFFECT_GHOST": "привид",
    "LOOKS_CHANGEEFFECTBY": "змінити ефект %1 на %2",
    "LOOKS_SETEFFECTTO": "встановити ефект %1 в %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "очистити графічні ефекти",
    "LOOKS_CHANGESIZEBY": "змінити розмір на %1",
    "LOOKS_SETSIZETO": "задати розмір %1",
    "LOOKS_SIZE": "розмір",
    "LOOKS_CHANGESTRETCHBY": "змінити розтяг на %1",
    "LOOKS_SETSTRETCHTO": "задати розтяг %1 %",
    "LOOKS_SWITCHCOSTUMETO": "змінити образ на %1",
    "LOOKS_NEXTCOSTUME": "наступний образ",
    "LOOKS_SWITCHBACKDROPTO": "змінити тло на %1",
    "LOOKS_GOTOFRONTBACK": "помістити на %1 план",
    "LOOKS_GOTOFRONTBACK_FRONT": "передній",
    "LOOKS_GOTOFRONTBACK_BACK": "задній",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "перемістити %1 на %2 шар",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "вперед",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "назад",
    "LOOKS_BACKDROPNUMBERNAME": "тло %1",
    "LOOKS_COSTUMENUMBERNAME": "образ %1",
    "LOOKS_NUMBERNAME_NUMBER": "номер",
    "LOOKS_NUMBERNAME_NAME": "назва",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "змінити тло на %1 та чекати",
    "LOOKS_NEXTBACKDROP": "наступне тло",
    "LOOKS_PREVIOUSBACKDROP": "попереднє тло",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "перемістити на %1 кроків",
    "MOTION_TURNLEFT": "поворот %1 на %2 градусів",
    "MOTION_TURNRIGHT": "поворот %1 на %2 градусів",
    "MOTION_POINTINDIRECTION": "повернути в напрямку %1",
    "MOTION_POINTTOWARDS": "слідувати за %1",
    "MOTION_POINTTOWARDS_POINTER": "вказівник",
    "MOTION_GOTO": "перейти до %1",
    "MOTION_GOTO_POINTER": "вказівник",
    "MOTION_GOTO_RANDOM": "випадкова позиція",
    "MOTION_GOTOXY": "перемістити в x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "ковзати %1 сек до x: %2 y: %3",
    "MOTION_GLIDETO": "ковзати %1 сек до %2",
    "MOTION_GLIDETO_POINTER": "вказівник",
    "MOTION_GLIDETO_RANDOM": "випадкова позиція",
    "MOTION_CHANGEXBY": "змінити x на %1",
    "MOTION_SETX": "задати x %1",
    "MOTION_CHANGEYBY": "змінити y на %1",
    "MOTION_SETY": "задати y %1",
    "MOTION_IFONEDGEBOUNCE": "якщо на межі, відбити",
    "MOTION_SETROTATIONSTYLE": "стиль обертання %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "зліва-направо",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "не обертати",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "навколо",
    "MOTION_XPOSITION": "значення x",
    "MOTION_YPOSITION": "значення y",
    "MOTION_DIRECTION": "напрям",
    "MOTION_SCROLLRIGHT": "прокрутити праворуч %1",
    "MOTION_SCROLLUP": "прокрутити вгору %1",
    "MOTION_ALIGNSCENE": "вирівняти сцену %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "внизу-ліворуч",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "вниз-праворуч",
    "MOTION_ALIGNSCENE_MIDDLE": "посередині",
    "MOTION_ALIGNSCENE_TOPLEFT": "зверху-ліворуч",
    "MOTION_ALIGNSCENE_TOPRIGHT": "зверху-праворуч",
    "MOTION_XSCROLL": "x прокрутка",
    "MOTION_YSCROLL": "y прокрутка",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "випадкове від %1 до %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 і %2",
    "OPERATORS_OR": "%1 або %2",
    "OPERATORS_NOT": "не %1",
    "OPERATORS_JOIN": "з'єднати %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "символ %1 у %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "довжина %1",
    "OPERATORS_CONTAINS": "%1 містить %2?",
    "OPERATORS_MOD": "остача %1 на %2",
    "OPERATORS_ROUND": "округлити %1",
    "OPERATORS_MATHOP": "%1 з %2",
    "OPERATORS_MATHOP_ABS": "abs",
    "OPERATORS_MATHOP_FLOOR": "менше ціле",
    "OPERATORS_MATHOP_CEILING": "більше ціле",
    "OPERATORS_MATHOP_SQRT": "sqrt",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "визначити %1",
    "SENSING_TOUCHINGOBJECT": "доторкається %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "вказівник",
    "SENSING_TOUCHINGOBJECT_EDGE": "межа",
    "SENSING_TOUCHINGCOLOR": "доторкається кольору %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "колір %1 торкається %2?",
    "SENSING_DISTANCETO": "відстань до %1",
    "SENSING_DISTANCETO_POINTER": "вказівник",
    "SENSING_ASKANDWAIT": "запитати %1 і чекати",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "відповідь",
    "SENSING_KEYPRESSED": "клавішу %1 натиснуто?",
    "SENSING_MOUSEDOWN": "мишку натиснуто?",
    "SENSING_MOUSEX": "мишка x",
    "SENSING_MOUSEY": "мишка y",
    "SENSING_SETDRAGMODE": "перетягувати %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "дозволено",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "не дозволено",
    "SENSING_LOUDNESS": "гучність",
    "SENSING_LOUD": "гучно?",
    "SENSING_TIMER": "таймер",
    "SENSING_RESETTIMER": "перезапустити таймер",
    "SENSING_OF": "%1 з %2",
    "SENSING_OF_XPOSITION": "значення x",
    "SENSING_OF_YPOSITION": "значення y",
    "SENSING_OF_DIRECTION": "напрям",
    "SENSING_OF_COSTUMENUMBER": "образ #",
    "SENSING_OF_COSTUMENAME": "ім’я образу",
    "SENSING_OF_SIZE": "розмір",
    "SENSING_OF_VOLUME": "гучність",
    "SENSING_OF_BACKDROPNUMBER": "тло #",
    "SENSING_OF_BACKDROPNAME": "ім’я тла",
    "SENSING_OF_STAGE": "Сцена",
    "SENSING_CURRENT": "сьогодні %1",
    "SENSING_CURRENT_YEAR": "рік",
    "SENSING_CURRENT_MONTH": "місяць",
    "SENSING_CURRENT_DATE": "дата",
    "SENSING_CURRENT_DAYOFWEEK": "день тижня",
    "SENSING_CURRENT_HOUR": "година",
    "SENSING_CURRENT_MINUTE": "хвилина ",
    "SENSING_CURRENT_SECOND": "секунда",
    "SENSING_DAYSSINCE2000": "днів після 2000",
    "SENSING_USERNAME": "користувач",
    "SENSING_USERID": "користувач ID",
    "SOUND_PLAY": "відтворити звук %1",
    "SOUND_PLAYUNTILDONE": "відтворити звук %1 до кінця",
    "SOUND_STOPALLSOUNDS": "зупини всі звуки",
    "SOUND_SETEFFECTO": "встановити ефект %1 в %2",
    "SOUND_CHANGEEFFECTBY": "змінити ефект %1 на %2",
    "SOUND_CLEAREFFECTS": "очистити звукові ефекти",
    "SOUND_EFFECTS_PITCH": "висота",
    "SOUND_EFFECTS_PAN": "панорама",
    "SOUND_CHANGEVOLUMEBY": "змінити гучність на %1",
    "SOUND_SETVOLUMETO": "встановити гучність %1%",
    "SOUND_VOLUME": "гучність",
    "CATEGORY_MOTION": "Рух",
    "CATEGORY_LOOKS": "Вигляд",
    "CATEGORY_SOUND": "Звук",
    "CATEGORY_EVENTS": "Події",
    "CATEGORY_CONTROL": "Керувати",
    "CATEGORY_SENSING": "Датчики",
    "CATEGORY_OPERATORS": "Оператори",
    "CATEGORY_VARIABLES": "Змінні",
    "CATEGORY_MYBLOCKS": "Мої блоки",
    "DUPLICATE": "Дублювати",
    "DELETE": "Вилучити",
    "ADD_COMMENT": "Додати коментар",
    "REMOVE_COMMENT": "Вилучити коментар",
    "DELETE_BLOCK": "Вилучити блок",
    "DELETE_X_BLOCKS": "Вилучити %1 блоки",
    "DELETE_ALL_BLOCKS": "Вилучити всі %1 блоки?",
    "CLEAN_UP": "Впорядкувати блоки",
    "HELP": "Допомога",
    "UNDO": "Скасувати",
    "REDO": "Повернути",
    "EDIT_PROCEDURE": "Правка",
    "SHOW_PROCEDURE_DEFINITION": "Перейти до визначення",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Скажіть щось...",
    "COLOUR_HUE_LABEL": "Колір",
    "COLOUR_SATURATION_LABEL": "Насиченість",
    "COLOUR_BRIGHTNESS_LABEL": "Яскравість",
    "CHANGE_VALUE_TITLE": "Змінити значення:",
    "RENAME_VARIABLE": "Перейменувати змінну",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Перейменувати змінну",
    "NEW_VARIABLE": "Створити змінну",
    "NEW_VARIABLE_TITLE": "Нове ім'я змінної:",
    "VARIABLE_MODAL_TITLE": "Нова змінна",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Створити блок",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Створити список",
    "NEW_LIST_TITLE": "Нове ім’я списку:",
    "LIST_MODAL_TITLE": "Новий список",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Перейменувати список",
    "NEW_BROADCAST_MESSAGE": "Нове повідомлення",
    "NEW_BROADCAST_MESSAGE_TITLE": "Нове ім’я повідомлення:",
    "BROADCAST_MODAL_TITLE": "Нове повідомлення",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "повідомлення1"
};

Blockly.ScratchMsgs.locales["vi"] =
{
    "CONTROL_FOREVER": "mãi mãi",
    "CONTROL_REPEAT": "lặp lại %1",
    "CONTROL_IF": "nếu %1 thì",
    "CONTROL_ELSE": "nếu không thì ",
    "CONTROL_STOP": "dừng lại",
    "CONTROL_STOP_ALL": "tất cả",
    "CONTROL_STOP_THIS": "kịch bản này",
    "CONTROL_STOP_OTHER": "các kịch bản khác cho đối tượng ",
    "CONTROL_WAIT": "đợi %1 giây",
    "CONTROL_WAITUNTIL": "đợi đến khi %1",
    "CONTROL_REPEATUNTIL": "lặp lại cho đến khi %1",
    "CONTROL_WHILE": "trong khi %1",
    "CONTROL_FOREACH": "với mỗi %1 trong %2",
    "CONTROL_STARTASCLONE": "khi tôi bắt đầu là một bản sao",
    "CONTROL_CREATECLONEOF": "tạo bản sao của %1",
    "CONTROL_CREATECLONEOF_MYSELF": "bản thân tôi",
    "CONTROL_DELETETHISCLONE": "xóa bản sao này",
    "CONTROL_COUNTER": "bộ đếm",
    "CONTROL_INCRCOUNTER": "bộ đếm tăng dần",
    "CONTROL_CLEARCOUNTER": "xóa bộ đếm",
    "CONTROL_ALLATONCE": "tất cả cùng một lúc",
    "DATA_SETVARIABLETO": "đặt %1 thành %2",
    "DATA_CHANGEVARIABLEBY": "đổi %1 thành %2",
    "DATA_SHOWVARIABLE": "hiện biến số %1",
    "DATA_HIDEVARIABLE": "ẩn biến số %1",
    "DATA_ADDTOLIST": "thêm %1 vào %2",
    "DATA_DELETEOFLIST": "xóa %1 từ %2",
    "DATA_INSERTATLIST": "chèn %1 tại %2 của %3",
    "DATA_REPLACEITEMOFLIST": "thay phần tử %1 của %2 bằng %3",
    "DATA_ITEMOFLIST": "phần tử %1 của %2",
    "DATA_LENGTHOFLIST": "độ dày của %1",
    "DATA_LISTCONTAINSITEM": "%1 chứa %2?",
    "DATA_SHOWLIST": "hiện danh sách %1",
    "DATA_HIDELIST": "ăn danh sách %1",
    "DATA_INDEX_ALL": "tất cả",
    "DATA_INDEX_LAST": "cuối cùng",
    "DATA_INDEX_RANDOM": "ngẫu nhiên",
    "EVENT_WHENFLAGCLICKED": "Khi bấm vào %1",
    "EVENT_WHENTHISSPRITECLICKED": "Khi bấm vào đối tượng này",
    "EVENT_WHENSTAGECLICKED": "khi bấm vào phông nền",
    "EVENT_WHENTOUCHINGOBJECT": "Khi đối tượng này chạm vào %1",
    "EVENT_WHENBROADCASTRECEIVED": "khi tôi nhận %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "khi phông nền chuyển thành %1",
    "EVENT_WHENGREATERTHAN": "khi %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "đồng hồ bấm giờ",
    "EVENT_BROADCAST": "phát tin %1",
    "EVENT_BROADCASTANDWAIT": "phát tin %1 và đợi",
    "EVENT_WHENKEYPRESSED": "khi bấm phím %1",
    "EVENT_WHENKEYPRESSED_SPACE": "khoảng cách",
    "EVENT_WHENKEYPRESSED_LEFT": "mũi tên bên trái",
    "EVENT_WHENKEYPRESSED_RIGHT": "mũi tên sang phải",
    "EVENT_WHENKEYPRESSED_DOWN": "mũi tên xuống",
    "EVENT_WHENKEYPRESSED_UP": "mũi tên lên",
    "EVENT_WHENKEYPRESSED_ANY": "bất kỳ",
    "LOOKS_SAYFORSECS": "nói %1 trong %2 giây",
    "LOOKS_SAY": "nói %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "nghĩ %1 trong %2 giây",
    "LOOKS_THINK": "nghĩ %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "hiển thị",
    "LOOKS_HIDE": "ẩn",
    "LOOKS_HIDEALLSPRITES": "ẩn tất cả đối tượng",
    "LOOKS_EFFECT_COLOR": "màu",
    "LOOKS_EFFECT_FISHEYE": "gương cầu",
    "LOOKS_EFFECT_WHIRL": "xoay",
    "LOOKS_EFFECT_PIXELATE": "nhòe",
    "LOOKS_EFFECT_MOSAIC": "khảm",
    "LOOKS_EFFECT_BRIGHTNESS": "độ sáng",
    "LOOKS_EFFECT_GHOST": "bóng ma",
    "LOOKS_CHANGEEFFECTBY": "đổi hiệu ứng %1 thành %2",
    "LOOKS_SETEFFECTTO": "đặt hiệu ứng %1 thành %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "bỏ các hiệu ứng đồ họa",
    "LOOKS_CHANGESIZEBY": "đổi kích thước thành %1",
    "LOOKS_SETSIZETO": "đặt kích thước bằng %1 %",
    "LOOKS_SIZE": "kích thước",
    "LOOKS_CHANGESTRETCHBY": "đổi kéo căng bằng %1",
    "LOOKS_SETSTRETCHTO": "đặt kéo căng thành %1 %",
    "LOOKS_SWITCHCOSTUMETO": "đổi trang phục thành %1",
    "LOOKS_NEXTCOSTUME": "trang phục kế tiếp",
    "LOOKS_SWITCHBACKDROPTO": "đổi phông nền thành %1",
    "LOOKS_GOTOFRONTBACK": "đi tới layer %1",
    "LOOKS_GOTOFRONTBACK_FRONT": "mặt trước",
    "LOOKS_GOTOFRONTBACK_BACK": "mặt sau",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "đi %1 %2 lớp",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "tới",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "lùi",
    "LOOKS_BACKDROPNUMBERNAME": "phông nền %1",
    "LOOKS_COSTUMENUMBERNAME": "trang phục %1",
    "LOOKS_NUMBERNAME_NUMBER": "số",
    "LOOKS_NUMBERNAME_NAME": "tên",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "đổi phông nền thành %1 và đợi",
    "LOOKS_NEXTBACKDROP": "phông nền tiếp theo",
    "LOOKS_PREVIOUSBACKDROP": "phông nền trước",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "di chuyển %1 bước",
    "MOTION_TURNLEFT": "xoay %1 %2 độ",
    "MOTION_TURNRIGHT": "xoay %1 %2 độ",
    "MOTION_POINTINDIRECTION": "hướng về phía %1",
    "MOTION_POINTTOWARDS": "hướng về %1",
    "MOTION_POINTTOWARDS_POINTER": "con trỏ chuột",
    "MOTION_GOTO": "đi tới %1",
    "MOTION_GOTO_POINTER": "con trỏ chuột",
    "MOTION_GOTO_RANDOM": "vị trí ngẫu nhiên",
    "MOTION_GOTOXY": "đi tới điểm x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "lướt trong %1 giây tới điểm x: %2 y: %3",
    "MOTION_GLIDETO": "lướt trong %1 giây tới %2",
    "MOTION_GLIDETO_POINTER": "con trỏ chuột",
    "MOTION_GLIDETO_RANDOM": "vị trí ngẫu nhiên",
    "MOTION_CHANGEXBY": "đổi x bằng %1",
    "MOTION_SETX": "đặt x bằng %1",
    "MOTION_CHANGEYBY": "đổi y bằng %1",
    "MOTION_SETY": "đặt y bằng %1",
    "MOTION_IFONEDGEBOUNCE": "nếu tiếp xúc với cạnh, bật lại",
    "MOTION_SETROTATIONSTYLE": "đặt kiểu xoay %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "trái - phải",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "không xoay",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "tất cả xung quanh",
    "MOTION_XPOSITION": "hoành độ",
    "MOTION_YPOSITION": "tung độ",
    "MOTION_DIRECTION": "hướng",
    "MOTION_SCROLLRIGHT": "cuộn phải %1",
    "MOTION_SCROLLUP": "cuộn lên %1",
    "MOTION_ALIGNSCENE": "căn chỉnh phân cảnh %1",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "góc trái dưới",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "góc phải dưới",
    "MOTION_ALIGNSCENE_MIDDLE": "giữa",
    "MOTION_ALIGNSCENE_TOPLEFT": "góc trái trên",
    "MOTION_ALIGNSCENE_TOPRIGHT": "góc phải trên",
    "MOTION_XSCROLL": "cuộn x",
    "MOTION_YSCROLL": "cuộn y",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "lấy ngẫu nhiên từ %1 đến %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 và %2",
    "OPERATORS_OR": "%1 hoặc %2",
    "OPERATORS_NOT": "không phải %1",
    "OPERATORS_JOIN": "kết hợp %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "ký tự %1 của %2",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "độ dài của %1",
    "OPERATORS_CONTAINS": "%1 chứa %2?",
    "OPERATORS_MOD": "%1 chia lấy dư %2",
    "OPERATORS_ROUND": "làm tròn %1",
    "OPERATORS_MATHOP": "%1 của %2",
    "OPERATORS_MATHOP_ABS": "giá trị tuyệt đối",
    "OPERATORS_MATHOP_FLOOR": "làm tròn xuống",
    "OPERATORS_MATHOP_CEILING": "trần",
    "OPERATORS_MATHOP_SQRT": "căn bậc hai",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "trong",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "định nghĩa %1",
    "SENSING_TOUCHINGOBJECT": "đang chạm %1?",
    "SENSING_TOUCHINGOBJECT_POINTER": "con trỏ chuột",
    "SENSING_TOUCHINGOBJECT_EDGE": "cạnh",
    "SENSING_TOUCHINGCOLOR": "đang chạm màu %1?",
    "SENSING_COLORISTOUCHINGCOLOR": "màu %1 đang chạm %2?",
    "SENSING_DISTANCETO": "khoảng cách đến %1",
    "SENSING_DISTANCETO_POINTER": "con trỏ chuột",
    "SENSING_ASKANDWAIT": "hỏi %1 và đợi",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "trả lời",
    "SENSING_KEYPRESSED": "phím %1 được bấm?",
    "SENSING_MOUSEDOWN": "chuột được nhấn?",
    "SENSING_MOUSEX": "hoành độ con trỏ chuột",
    "SENSING_MOUSEY": "tung độ con trỏ chuột",
    "SENSING_SETDRAGMODE": "đặt chế độ kéo %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "kéo thả được",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "không kéo thả được",
    "SENSING_LOUDNESS": "độ ồn",
    "SENSING_LOUD": "tiếng to?",
    "SENSING_TIMER": "đồng hồ bấm giờ",
    "SENSING_RESETTIMER": "đặt lại đống hồ bấm giờ",
    "SENSING_OF": "%1 của %2",
    "SENSING_OF_XPOSITION": "hoành độ",
    "SENSING_OF_YPOSITION": "tung độ",
    "SENSING_OF_DIRECTION": "hướng",
    "SENSING_OF_COSTUMENUMBER": "trang phục #",
    "SENSING_OF_COSTUMENAME": "tên trang phục",
    "SENSING_OF_SIZE": "kích thước",
    "SENSING_OF_VOLUME": "âm lượng",
    "SENSING_OF_BACKDROPNUMBER": "phông nền #",
    "SENSING_OF_BACKDROPNAME": "tên phông nền",
    "SENSING_OF_STAGE": "Sân khấu",
    "SENSING_CURRENT": "dòng %1",
    "SENSING_CURRENT_YEAR": "năm",
    "SENSING_CURRENT_MONTH": "tháng",
    "SENSING_CURRENT_DATE": "ngày",
    "SENSING_CURRENT_DAYOFWEEK": "ngày trong tuần",
    "SENSING_CURRENT_HOUR": "giờ",
    "SENSING_CURRENT_MINUTE": "phút",
    "SENSING_CURRENT_SECOND": "giây",
    "SENSING_DAYSSINCE2000": "ngày từ năm 2000",
    "SENSING_USERNAME": "tên đăng nhập",
    "SENSING_USERID": "id người dùng",
    "SOUND_PLAY": "bắt đầu âm thanh %1",
    "SOUND_PLAYUNTILDONE": "phát âm thanh %1 đến hết",
    "SOUND_STOPALLSOUNDS": "ngừng mọi âm thanh",
    "SOUND_SETEFFECTO": "đặt hiệu ứng %1 là %2",
    "SOUND_CHANGEEFFECTBY": "đổi hiệu ứng %1 bằng %2",
    "SOUND_CLEAREFFECTS": "xóa hiệu ứng âm thanh",
    "SOUND_EFFECTS_PITCH": "cao độ",
    "SOUND_EFFECTS_PAN": "pan trái/phải",
    "SOUND_CHANGEVOLUMEBY": "đổi âm lượng %1",
    "SOUND_SETVOLUMETO": "đặt âm lượng %1%",
    "SOUND_VOLUME": "âm lượng",
    "CATEGORY_MOTION": "Chuyển động",
    "CATEGORY_LOOKS": "Hiển thị",
    "CATEGORY_SOUND": "Âm thanh",
    "CATEGORY_EVENTS": "Sự kiện",
    "CATEGORY_CONTROL": "Điều khiển",
    "CATEGORY_SENSING": "Cảm biến",
    "CATEGORY_OPERATORS": "Các phép toán",
    "CATEGORY_VARIABLES": "Các biến số",
    "CATEGORY_MYBLOCKS": "My Blocks",
    "DUPLICATE": "Nhân bản",
    "DELETE": "Xóa",
    "ADD_COMMENT": "Thêm chú thích",
    "REMOVE_COMMENT": "Xóa chú thích",
    "DELETE_BLOCK": "Xóa khối",
    "DELETE_X_BLOCKS": "Xóa %1 khối",
    "DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
    "CLEAN_UP": "Clean up Blocks",
    "HELP": "Trợ giúp",
    "UNDO": "Hoàn tác",
    "REDO": "Làm lại ",
    "EDIT_PROCEDURE": "Chỉnh sửa",
    "SHOW_PROCEDURE_DEFINITION": "Go to definition",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "Nói gì đó...",
    "COLOUR_HUE_LABEL": "Màu sắc",
    "COLOUR_SATURATION_LABEL": "Độ bão hòa",
    "COLOUR_BRIGHTNESS_LABEL": "Độ sáng",
    "CHANGE_VALUE_TITLE": "Thay đổi giá trị:",
    "RENAME_VARIABLE": "Đặt tên cho biến",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "Đặt tên biến",
    "NEW_VARIABLE": "Tạo một biến",
    "NEW_VARIABLE_TITLE": "Tên biến mới:",
    "VARIABLE_MODAL_TITLE": "Biến số mới",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "Tạo một mảnh ghép",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "Tạo một Danh sách",
    "NEW_LIST_TITLE": "Tên danh sách mới:",
    "LIST_MODAL_TITLE": "Danh sách mới",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "Đặt tên danh sách",
    "NEW_BROADCAST_MESSAGE": "Thông báo mới",
    "NEW_BROADCAST_MESSAGE_TITLE": "Tên thông báo mới:",
    "BROADCAST_MODAL_TITLE": "Tin nhắn mới",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "tin nhắn 1"
};

Blockly.ScratchMsgs.locales["zh-cn"] =
{
    "CONTROL_FOREVER": "重复执行",
    "CONTROL_REPEAT": "重复执行 %1 次",
    "CONTROL_IF": "如果 %1 那么",
    "CONTROL_ELSE": "否则",
    "CONTROL_STOP": "停止",
    "CONTROL_STOP_ALL": "全部脚本",
    "CONTROL_STOP_THIS": "这个脚本",
    "CONTROL_STOP_OTHER": "该角色的其他脚本",
    "CONTROL_WAIT": "等待 %1 秒",
    "CONTROL_WAITUNTIL": "等待 %1",
    "CONTROL_REPEATUNTIL": "重复执行直到 %1",
    "CONTROL_WHILE": "当 %1 重复执行",
    "CONTROL_FOREACH": "对于 %2 中的每个 %1",
    "CONTROL_STARTASCLONE": "当作为克隆体启动时",
    "CONTROL_CREATECLONEOF": "克隆 %1",
    "CONTROL_CREATECLONEOF_MYSELF": "自己",
    "CONTROL_DELETETHISCLONE": "删除此克隆体",
    "CONTROL_COUNTER": "计数器",
    "CONTROL_INCRCOUNTER": "计数器加一",
    "CONTROL_CLEARCOUNTER": "计数器归零",
    "CONTROL_ALLATONCE": "所有脚本",
    "DATA_SETVARIABLETO": "将 %1 设为 %2",
    "DATA_CHANGEVARIABLEBY": "将 %1 增加 %2",
    "DATA_SHOWVARIABLE": "显示变量 %1",
    "DATA_HIDEVARIABLE": "隐藏变量 %1",
    "DATA_ADDTOLIST": "将 %1 加入 %2",
    "DATA_DELETEOFLIST": "删除 %2 的第 %1 项",
    "DATA_INSERTATLIST": "在 %3 的第 %2 项插入 %1",
    "DATA_REPLACEITEMOFLIST": "将 %2 的第 %1 项替换为 %3",
    "DATA_ITEMOFLIST": "%2 的第 %1 项",
    "DATA_LENGTHOFLIST": "%1 的项目数",
    "DATA_LISTCONTAINSITEM": "%1 包含 %2 ?",
    "DATA_SHOWLIST": "显示列表 %1",
    "DATA_HIDELIST": "隐藏列表 %1",
    "DATA_INDEX_ALL": "全部",
    "DATA_INDEX_LAST": "末尾",
    "DATA_INDEX_RANDOM": "随机",
    "EVENT_WHENFLAGCLICKED": "当 %1 被点击",
    "EVENT_WHENTHISSPRITECLICKED": "当角色被点击",
    "EVENT_WHENSTAGECLICKED": "当舞台被点击",
    "EVENT_WHENTOUCHINGOBJECT": "当该角色碰到 %1",
    "EVENT_WHENBROADCASTRECEIVED": "当接收到 %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "当背景换成 %1",
    "EVENT_WHENGREATERTHAN": "当 %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "计时器",
    "EVENT_BROADCAST": "广播 %1",
    "EVENT_BROADCASTANDWAIT": "广播 %1 并等待",
    "EVENT_WHENKEYPRESSED": "当按下 %1 键",
    "EVENT_WHENKEYPRESSED_SPACE": "空格",
    "EVENT_WHENKEYPRESSED_LEFT": "←",
    "EVENT_WHENKEYPRESSED_RIGHT": "→",
    "EVENT_WHENKEYPRESSED_DOWN": "↓",
    "EVENT_WHENKEYPRESSED_UP": "↑",
    "EVENT_WHENKEYPRESSED_ANY": "任意",
    "LOOKS_SAYFORSECS": "说 %1 %2 秒",
    "LOOKS_SAY": "说 %1",
    "LOOKS_HELLO": "你好！",
    "LOOKS_THINKFORSECS": "思考 %1 %2 秒",
    "LOOKS_THINK": "思考 %1",
    "LOOKS_HMM": "嗯……",
    "LOOKS_SHOW": "显示",
    "LOOKS_HIDE": "隐藏",
    "LOOKS_HIDEALLSPRITES": "隐藏所有角色",
    "LOOKS_EFFECT_COLOR": "颜色",
    "LOOKS_EFFECT_FISHEYE": "鱼眼",
    "LOOKS_EFFECT_WHIRL": "漩涡",
    "LOOKS_EFFECT_PIXELATE": "像素化",
    "LOOKS_EFFECT_MOSAIC": "马赛克",
    "LOOKS_EFFECT_BRIGHTNESS": "亮度",
    "LOOKS_EFFECT_GHOST": "虚像",
    "LOOKS_CHANGEEFFECTBY": "将 %1 特效增加 %2",
    "LOOKS_SETEFFECTTO": "将 %1 特效设定为 %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "清除图形特效",
    "LOOKS_CHANGESIZEBY": "将大小增加 %1",
    "LOOKS_SETSIZETO": "将大小设为 %1",
    "LOOKS_SIZE": "大小",
    "LOOKS_CHANGESTRETCHBY": "伸缩%1",
    "LOOKS_SETSTRETCHTO": "设置伸缩为%1 %",
    "LOOKS_SWITCHCOSTUMETO": "换成 %1 造型",
    "LOOKS_NEXTCOSTUME": "下一个造型",
    "LOOKS_SWITCHBACKDROPTO": "换成 %1 背景",
    "LOOKS_GOTOFRONTBACK": "移到最 %1 ",
    "LOOKS_GOTOFRONTBACK_FRONT": "前面",
    "LOOKS_GOTOFRONTBACK_BACK": "后面",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "%1 %2 层",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "前移",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "后移",
    "LOOKS_BACKDROPNUMBERNAME": "背景 %1",
    "LOOKS_COSTUMENUMBERNAME": "造型 %1",
    "LOOKS_NUMBERNAME_NUMBER": "编号",
    "LOOKS_NUMBERNAME_NAME": "名称",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "换成 %1 背景并等待",
    "LOOKS_NEXTBACKDROP": "下一个背景",
    "LOOKS_PREVIOUSBACKDROP": "上一个背景",
    "LOOKS_RANDOMBACKDROP": "随机背景",
    "MOTION_MOVESTEPS": "移动 %1 步",
    "MOTION_TURNLEFT": "左转 %1 %2 度",
    "MOTION_TURNRIGHT": "右转 %1 %2 度",
    "MOTION_POINTINDIRECTION": "面向 %1 方向",
    "MOTION_POINTTOWARDS": "面向 %1",
    "MOTION_POINTTOWARDS_POINTER": "鼠标指针",
    "MOTION_GOTO": "移到 %1",
    "MOTION_GOTO_POINTER": "鼠标指针",
    "MOTION_GOTO_RANDOM": "随机位置",
    "MOTION_GOTOXY": "移到x: %1 y: %2",
    "MOTION_GLIDESECSTOXY": "在 %1 秒内滑行到x: %2 y: %3",
    "MOTION_GLIDETO": "在 %1 秒内滑行到 %2",
    "MOTION_GLIDETO_POINTER": "鼠标指针",
    "MOTION_GLIDETO_RANDOM": "随机位置",
    "MOTION_CHANGEXBY": "将x坐标增加 %1",
    "MOTION_SETX": "将x坐标设为 %1",
    "MOTION_CHANGEYBY": "将y坐标增加 %1",
    "MOTION_SETY": "将y坐标设为 %1",
    "MOTION_IFONEDGEBOUNCE": "碰到边缘就反弹",
    "MOTION_SETROTATIONSTYLE": "将旋转方式设为 %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "左右翻转",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "不可旋转",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "任意旋转",
    "MOTION_XPOSITION": "x 坐标",
    "MOTION_YPOSITION": "y 坐标",
    "MOTION_DIRECTION": "方向",
    "MOTION_SCROLLRIGHT": "向右滚动到 %1 的位置",
    "MOTION_SCROLLUP": "向上滚动到 %1 的位置",
    "MOTION_ALIGNSCENE": "和场景 %1 对齐",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "左下角",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "右下角",
    "MOTION_ALIGNSCENE_MIDDLE": "中间",
    "MOTION_ALIGNSCENE_TOPLEFT": "左上角",
    "MOTION_ALIGNSCENE_TOPRIGHT": "右上角",
    "MOTION_XSCROLL": "x滚动位置",
    "MOTION_YSCROLL": "y滚动位置",
    "MOTION_STAGE_SELECTED": "选中了舞台：不可使用运动类积木",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "在 %1 和 %2 之间取随机数",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 和 %2",
    "OPERATORS_OR": "%1 或 %2",
    "OPERATORS_NOT": "%1 不成立",
    "OPERATORS_JOIN": "连接 %1 和 %2",
    "OPERATORS_JOIN_APPLE": "苹果",
    "OPERATORS_JOIN_BANANA": "香蕉",
    "OPERATORS_LETTEROF": "%2 的第 %1 个字符",
    "OPERATORS_LETTEROF_APPLE": "果",
    "OPERATORS_LENGTH": "%1 的字符数",
    "OPERATORS_CONTAINS": "%1 包含 %2 ?",
    "OPERATORS_MOD": "%1 除以 %2 的余数",
    "OPERATORS_ROUND": "四舍五入 %1",
    "OPERATORS_MATHOP": "%1 %2",
    "OPERATORS_MATHOP_ABS": "绝对值",
    "OPERATORS_MATHOP_FLOOR": "向下取整",
    "OPERATORS_MATHOP_CEILING": "向上取整",
    "OPERATORS_MATHOP_SQRT": "平方根",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "定义 %1",
    "SENSING_TOUCHINGOBJECT": "碰到 %1 ?",
    "SENSING_TOUCHINGOBJECT_POINTER": "鼠标指针",
    "SENSING_TOUCHINGOBJECT_EDGE": "舞台边缘",
    "SENSING_TOUCHINGCOLOR": "碰到颜色 %1 ?",
    "SENSING_COLORISTOUCHINGCOLOR": "颜色 %1 碰到 %2 ?",
    "SENSING_DISTANCETO": "到 %1 的距离",
    "SENSING_DISTANCETO_POINTER": "鼠标指针",
    "SENSING_ASKANDWAIT": "询问 %1 并等待",
    "SENSING_ASK_TEXT": "你叫什么名字？",
    "SENSING_ANSWER": "回答",
    "SENSING_KEYPRESSED": "按下 %1 键?",
    "SENSING_MOUSEDOWN": "按下鼠标?",
    "SENSING_MOUSEX": "鼠标的x坐标",
    "SENSING_MOUSEY": "鼠标的y坐标",
    "SENSING_SETDRAGMODE": "将拖动模式设为 %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "可拖动",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "不可拖动",
    "SENSING_LOUDNESS": "响度",
    "SENSING_LOUD": "响声？",
    "SENSING_TIMER": "计时器",
    "SENSING_RESETTIMER": "计时器归零",
    "SENSING_OF": "%2 的 %1",
    "SENSING_OF_XPOSITION": "x 坐标",
    "SENSING_OF_YPOSITION": "y 坐标",
    "SENSING_OF_DIRECTION": "方向",
    "SENSING_OF_COSTUMENUMBER": "造型编号",
    "SENSING_OF_COSTUMENAME": "造型名称",
    "SENSING_OF_SIZE": "大小",
    "SENSING_OF_VOLUME": "音量",
    "SENSING_OF_BACKDROPNUMBER": "背景编号",
    "SENSING_OF_BACKDROPNAME": "背景名称",
    "SENSING_OF_STAGE": "舞台",
    "SENSING_CURRENT": "当前时间的 %1",
    "SENSING_CURRENT_YEAR": "年",
    "SENSING_CURRENT_MONTH": "月",
    "SENSING_CURRENT_DATE": "日",
    "SENSING_CURRENT_DAYOFWEEK": "星期",
    "SENSING_CURRENT_HOUR": "时",
    "SENSING_CURRENT_MINUTE": "分",
    "SENSING_CURRENT_SECOND": "秒",
    "SENSING_DAYSSINCE2000": "2000年至今的天数",
    "SENSING_USERNAME": "用户名",
    "SENSING_USERID": "用户id",
    "SOUND_PLAY": "播放声音 %1",
    "SOUND_PLAYUNTILDONE": "播放声音 %1 等待播完",
    "SOUND_STOPALLSOUNDS": "停止所有声音",
    "SOUND_SETEFFECTO": "将 %1 音效设为 %2",
    "SOUND_CHANGEEFFECTBY": "将 %1 音效增加 %2",
    "SOUND_CLEAREFFECTS": "停止播放所有声音",
    "SOUND_EFFECTS_PITCH": "音调",
    "SOUND_EFFECTS_PAN": "左右平衡",
    "SOUND_CHANGEVOLUMEBY": "将音量增加 %1",
    "SOUND_SETVOLUMETO": "将音量设为 %1%",
    "SOUND_VOLUME": "音量",
    "CATEGORY_MOTION": "运动",
    "CATEGORY_LOOKS": "外观",
    "CATEGORY_SOUND": "声音",
    "CATEGORY_EVENTS": "事件",
    "CATEGORY_CONTROL": "控制",
    "CATEGORY_SENSING": "侦测",
    "CATEGORY_OPERATORS": "运算",
    "CATEGORY_VARIABLES": "变量",
    "CATEGORY_MYBLOCKS": "自定义积木",
    "DUPLICATE": "复制",
    "DELETE": "删除",
    "ADD_COMMENT": "添加注释",
    "REMOVE_COMMENT": "删除注释",
    "DELETE_BLOCK": "删除",
    "DELETE_X_BLOCKS": "删除 %1 积木",
    "DELETE_ALL_BLOCKS": "删除全部 %1 积木？",
    "CLEAN_UP": "整理积木",
    "HELP": "帮助",
    "UNDO": "撤销",
    "REDO": "重做",
    "EDIT_PROCEDURE": "编辑",
    "SHOW_PROCEDURE_DEFINITION": "查看定义",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "说些什么……",
    "COLOUR_HUE_LABEL": "颜色",
    "COLOUR_SATURATION_LABEL": "饱和度",
    "COLOUR_BRIGHTNESS_LABEL": "亮度",
    "CHANGE_VALUE_TITLE": "更改变量：",
    "RENAME_VARIABLE": "修改变量名",
    "RENAME_VARIABLE_TITLE": "将所有的「%1」变量名改为：",
    "RENAME_VARIABLE_MODAL_TITLE": "修改变量名",
    "NEW_VARIABLE": "建立一个变量",
    "NEW_VARIABLE_TITLE": "新变量名：",
    "VARIABLE_MODAL_TITLE": "新建变量",
    "VARIABLE_ALREADY_EXISTS": "已经存在名为「%1」的变量。",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "已经存在一个名为「%1」的变量，其类型为「%2」。",
    "DELETE_VARIABLE_CONFIRMATION": "删除%1处「%2」变量吗？",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "无法删除变量「%1」，因为函数「%2」的定义中用到了它",
    "DELETE_VARIABLE": "删除变量「%1」",
    "NEW_PROCEDURE": "制作新的积木",
    "PROCEDURE_ALREADY_EXISTS": "已经存在名为「%1」的程序。",
    "NEW_LIST": "建立一个列表",
    "NEW_LIST_TITLE": "新的列表名：",
    "LIST_MODAL_TITLE": "新建列表",
    "LIST_ALREADY_EXISTS": "名为 「%1」 的列表已存在。",
    "RENAME_LIST_TITLE": "将所有的「%1」的列表名改为：",
    "RENAME_LIST_MODAL_TITLE": "修改列表名",
    "NEW_BROADCAST_MESSAGE": "新消息",
    "NEW_BROADCAST_MESSAGE_TITLE": "新消息的名称：",
    "BROADCAST_MODAL_TITLE": "新消息",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "消息1"
};

Blockly.ScratchMsgs.locales["zh-tw"] =
{
    "CONTROL_FOREVER": "重複無限次",
    "CONTROL_REPEAT": "重複 %1 次",
    "CONTROL_IF": "如果 %1 那麼",
    "CONTROL_ELSE": "否則",
    "CONTROL_STOP": "停止",
    "CONTROL_STOP_ALL": "全部",
    "CONTROL_STOP_THIS": "這個程式",
    "CONTROL_STOP_OTHER": "角色的其它程式",
    "CONTROL_WAIT": "等待 %1 秒",
    "CONTROL_WAITUNTIL": "等待直到 %1",
    "CONTROL_REPEATUNTIL": "重複直到 %1",
    "CONTROL_WHILE": "當 %1",
    "CONTROL_FOREACH": "計數 %1 於 %2",
    "CONTROL_STARTASCLONE": "當分身產生",
    "CONTROL_CREATECLONEOF": "建立 %1 的分身",
    "CONTROL_CREATECLONEOF_MYSELF": "自己",
    "CONTROL_DELETETHISCLONE": "分身刪除",
    "CONTROL_COUNTER": "計數器",
    "CONTROL_INCRCOUNTER": "計數器累計",
    "CONTROL_CLEARCOUNTER": "計數器重置",
    "CONTROL_ALLATONCE": "全部一起",
    "DATA_SETVARIABLETO": "%1 設為 %2",
    "DATA_CHANGEVARIABLEBY": "%1 改變 %2",
    "DATA_SHOWVARIABLE": "變數 %1 顯示",
    "DATA_HIDEVARIABLE": "變數 %1 隱藏",
    "DATA_ADDTOLIST": "添加 %1 到 %2",
    "DATA_DELETEOFLIST": "刪除 %2 的第 %1 項",
    "DATA_INSERTATLIST": "插入 %1 到 %3 的第 %2 項",
    "DATA_REPLACEITEMOFLIST": "替換 %2 的第 %1 項為 %3",
    "DATA_ITEMOFLIST": "%2 的第 %1 項",
    "DATA_LENGTHOFLIST": "清單 %1 的長度",
    "DATA_LISTCONTAINSITEM": "清單 %1 包含 %2？",
    "DATA_SHOWLIST": "清單 %1 顯示",
    "DATA_HIDELIST": "清單 %1 隱藏",
    "DATA_INDEX_ALL": "全部",
    "DATA_INDEX_LAST": "末",
    "DATA_INDEX_RANDOM": "隨機",
    "EVENT_WHENFLAGCLICKED": "當 %1 被點擊",
    "EVENT_WHENTHISSPRITECLICKED": "當角色被點擊",
    "EVENT_WHENSTAGECLICKED": "當舞台被點擊",
    "EVENT_WHENTOUCHINGOBJECT": "當角色碰到 %1",
    "EVENT_WHENBROADCASTRECEIVED": "當收到訊息 %1",
    "EVENT_WHENBACKDROPSWITCHESTO": "當背景換成 %1",
    "EVENT_WHENGREATERTHAN": "當 %1 > %2",
    "EVENT_WHENGREATERTHAN_TIMER": "計時器",
    "EVENT_BROADCAST": "廣播訊息 %1",
    "EVENT_BROADCASTANDWAIT": "廣播訊息 %1 並等待",
    "EVENT_WHENKEYPRESSED": "當 %1 鍵被按下",
    "EVENT_WHENKEYPRESSED_SPACE": "空白",
    "EVENT_WHENKEYPRESSED_LEFT": "向左",
    "EVENT_WHENKEYPRESSED_RIGHT": "向右",
    "EVENT_WHENKEYPRESSED_DOWN": "向下",
    "EVENT_WHENKEYPRESSED_UP": "向上",
    "EVENT_WHENKEYPRESSED_ANY": "任何",
    "LOOKS_SAYFORSECS": "說出 %1 %2 秒",
    "LOOKS_SAY": "說出 %1",
    "LOOKS_HELLO": "Hello!",
    "LOOKS_THINKFORSECS": "想著 %1 %2 秒",
    "LOOKS_THINK": "想著 %1",
    "LOOKS_HMM": "Hmm...",
    "LOOKS_SHOW": "顯示",
    "LOOKS_HIDE": "隱藏",
    "LOOKS_HIDEALLSPRITES": "隱藏所有角色",
    "LOOKS_EFFECT_COLOR": "顏色",
    "LOOKS_EFFECT_FISHEYE": "魚眼",
    "LOOKS_EFFECT_WHIRL": "漩渦",
    "LOOKS_EFFECT_PIXELATE": "像素化",
    "LOOKS_EFFECT_MOSAIC": "馬賽克",
    "LOOKS_EFFECT_BRIGHTNESS": "亮度",
    "LOOKS_EFFECT_GHOST": "幻影",
    "LOOKS_CHANGEEFFECTBY": "圖像效果 %1 改變 %2",
    "LOOKS_SETEFFECTTO": "圖像效果 %1 設為 %2",
    "LOOKS_CLEARGRAPHICEFFECTS": "圖像效果清除",
    "LOOKS_CHANGESIZEBY": "尺寸改變 %1",
    "LOOKS_SETSIZETO": "尺寸設為 %1 %",
    "LOOKS_SIZE": "尺寸",
    "LOOKS_CHANGESTRETCHBY": "伸縮改變 %1",
    "LOOKS_SETSTRETCHTO": "伸縮設為 %1 %",
    "LOOKS_SWITCHCOSTUMETO": "造型換成 %1",
    "LOOKS_NEXTCOSTUME": "下一個造型",
    "LOOKS_SWITCHBACKDROPTO": "背景換成 %1",
    "LOOKS_GOTOFRONTBACK": "圖層移到 %1 層",
    "LOOKS_GOTOFRONTBACK_FRONT": "最上",
    "LOOKS_GOTOFRONTBACK_BACK": "最下",
    "LOOKS_GOFORWARDBACKWARDLAYERS": "圖層 %1 移 %2 層",
    "LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD": "上",
    "LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD": "下",
    "LOOKS_BACKDROPNUMBERNAME": "背景 %1",
    "LOOKS_COSTUMENUMBERNAME": "造型 %1",
    "LOOKS_NUMBERNAME_NUMBER": "編號",
    "LOOKS_NUMBERNAME_NAME": "名稱",
    "LOOKS_SWITCHBACKDROPTOANDWAIT": "背景換成 %1 並等待",
    "LOOKS_NEXTBACKDROP": "下一個背景",
    "LOOKS_PREVIOUSBACKDROP": "上一個背景",
    "LOOKS_RANDOMBACKDROP": "random backdrop",
    "MOTION_MOVESTEPS": "移動 %1 點",
    "MOTION_TURNLEFT": "左轉 %1 %2 度",
    "MOTION_TURNRIGHT": "右轉 %1 %2 度",
    "MOTION_POINTINDIRECTION": "面朝 %1 度",
    "MOTION_POINTTOWARDS": "面朝 %1 向",
    "MOTION_POINTTOWARDS_POINTER": "鼠標",
    "MOTION_GOTO": "定位到 %1 位置",
    "MOTION_GOTO_POINTER": "鼠標",
    "MOTION_GOTO_RANDOM": "隨機",
    "MOTION_GOTOXY": "定位到 x:%1 y:%2",
    "MOTION_GLIDESECSTOXY": "滑行 %1 秒到 x:%2 y:%3",
    "MOTION_GLIDETO": "滑行 %1 秒到 %2 位置",
    "MOTION_GLIDETO_POINTER": "鼠標",
    "MOTION_GLIDETO_RANDOM": "隨機",
    "MOTION_CHANGEXBY": "x 改變 %1",
    "MOTION_SETX": "x 設為 %1",
    "MOTION_CHANGEYBY": "y 改變 %1",
    "MOTION_SETY": "y 設為 %1",
    "MOTION_IFONEDGEBOUNCE": "碰到邊緣就反彈",
    "MOTION_SETROTATIONSTYLE": "迴轉方式設為 %1",
    "MOTION_SETROTATIONSTYLE_LEFTRIGHT": "左-右",
    "MOTION_SETROTATIONSTYLE_DONTROTATE": "不旋轉",
    "MOTION_SETROTATIONSTYLE_ALLAROUND": "不設限",
    "MOTION_XPOSITION": "x 座標",
    "MOTION_YPOSITION": "y 座標",
    "MOTION_DIRECTION": "方向",
    "MOTION_SCROLLRIGHT": "滾動向右 %1",
    "MOTION_SCROLLUP": "滾動向上 %1",
    "MOTION_ALIGNSCENE": "場景 %1 對齊",
    "MOTION_ALIGNSCENE_BOTTOMLEFT": "左下",
    "MOTION_ALIGNSCENE_BOTTOMRIGHT": "右下",
    "MOTION_ALIGNSCENE_MIDDLE": "中間",
    "MOTION_ALIGNSCENE_TOPLEFT": "左上",
    "MOTION_ALIGNSCENE_TOPRIGHT": "右上",
    "MOTION_XSCROLL": "x 捲軸",
    "MOTION_YSCROLL": "y 捲軸",
    "MOTION_STAGE_SELECTED": "Stage selected: no motion blocks",
    "OPERATORS_ADD": "%1 + %2",
    "OPERATORS_SUBTRACT": "%1 - %2",
    "OPERATORS_MULTIPLY": "%1 * %2",
    "OPERATORS_DIVIDE": "%1 / %2",
    "OPERATORS_RANDOM": "隨機取數 %1 到 %2",
    "OPERATORS_GT": "%1 > %2",
    "OPERATORS_LT": "%1 < %2",
    "OPERATORS_EQUALS": "%1 = %2",
    "OPERATORS_AND": "%1 且 %2",
    "OPERATORS_OR": "%1 或 %2",
    "OPERATORS_NOT": "%1 不成立",
    "OPERATORS_JOIN": "字串組合 %1 %2",
    "OPERATORS_JOIN_APPLE": "apple",
    "OPERATORS_JOIN_BANANA": "banana",
    "OPERATORS_LETTEROF": "字串 %2 的第 %1 字",
    "OPERATORS_LETTEROF_APPLE": "a",
    "OPERATORS_LENGTH": "字串 %1 的長度",
    "OPERATORS_CONTAINS": "字串 %1 包含 %2？",
    "OPERATORS_MOD": "%1 除以 %2 的餘數",
    "OPERATORS_ROUND": "四捨五入數值 %1",
    "OPERATORS_MATHOP": "%1 數值 %2",
    "OPERATORS_MATHOP_ABS": "絕對值",
    "OPERATORS_MATHOP_FLOOR": "無條件捨去",
    "OPERATORS_MATHOP_CEILING": "無條件進位",
    "OPERATORS_MATHOP_SQRT": "平方根",
    "OPERATORS_MATHOP_SIN": "sin",
    "OPERATORS_MATHOP_COS": "cos",
    "OPERATORS_MATHOP_TAN": "tan",
    "OPERATORS_MATHOP_ASIN": "asin",
    "OPERATORS_MATHOP_ACOS": "acos",
    "OPERATORS_MATHOP_ATAN": "atan",
    "OPERATORS_MATHOP_LN": "ln",
    "OPERATORS_MATHOP_LOG": "log",
    "OPERATORS_MATHOP_EEXP": "e ^",
    "OPERATORS_MATHOP_10EXP": "10 ^",
    "PROCEDURES_DEFINITION": "定義 %1",
    "SENSING_TOUCHINGOBJECT": "碰到 %1？",
    "SENSING_TOUCHINGOBJECT_POINTER": "鼠標",
    "SENSING_TOUCHINGOBJECT_EDGE": "邊緣",
    "SENSING_TOUCHINGCOLOR": "碰到顏色 %1？",
    "SENSING_COLORISTOUCHINGCOLOR": "顏色 %1 碰到 顏色 %2？",
    "SENSING_DISTANCETO": "與 %1 的間距",
    "SENSING_DISTANCETO_POINTER": "鼠標",
    "SENSING_ASKANDWAIT": "詢問 %1 並等待",
    "SENSING_ASK_TEXT": "What's your name?",
    "SENSING_ANSWER": "詢問的答案",
    "SENSING_KEYPRESSED": "%1 鍵被按下？",
    "SENSING_MOUSEDOWN": "滑鼠鍵被按下？",
    "SENSING_MOUSEX": "鼠標的 x",
    "SENSING_MOUSEY": "鼠標的 y",
    "SENSING_SETDRAGMODE": "拖曳方式設為 %1",
    "SENSING_SETDRAGMODE_DRAGGABLE": "可拖曳",
    "SENSING_SETDRAGMODE_NOTDRAGGABLE": "不可拖曳",
    "SENSING_LOUDNESS": "聲音響度",
    "SENSING_LOUD": "大聲？",
    "SENSING_TIMER": "計時器",
    "SENSING_RESETTIMER": "計時器重置",
    "SENSING_OF": "%2 的 %1",
    "SENSING_OF_XPOSITION": "x 座標",
    "SENSING_OF_YPOSITION": "y 座標",
    "SENSING_OF_DIRECTION": "方向",
    "SENSING_OF_COSTUMENUMBER": "造型編號",
    "SENSING_OF_COSTUMENAME": "造型名稱",
    "SENSING_OF_SIZE": "尺寸",
    "SENSING_OF_VOLUME": "音量",
    "SENSING_OF_BACKDROPNUMBER": "背景編號",
    "SENSING_OF_BACKDROPNAME": "背景名稱",
    "SENSING_OF_STAGE": "舞台",
    "SENSING_CURRENT": "目前時間的 %1",
    "SENSING_CURRENT_YEAR": "年",
    "SENSING_CURRENT_MONTH": "月",
    "SENSING_CURRENT_DATE": "日",
    "SENSING_CURRENT_DAYOFWEEK": "週",
    "SENSING_CURRENT_HOUR": "時",
    "SENSING_CURRENT_MINUTE": "分",
    "SENSING_CURRENT_SECOND": "秒",
    "SENSING_DAYSSINCE2000": "2000年迄今日數",
    "SENSING_USERNAME": "用戶名稱",
    "SENSING_USERID": "用戶 ID",
    "SOUND_PLAY": "播放音效 %1",
    "SOUND_PLAYUNTILDONE": "播放音效 %1 直到結束",
    "SOUND_STOPALLSOUNDS": "停播所有音效",
    "SOUND_SETEFFECTO": "聲音效果 %1 設為 %2",
    "SOUND_CHANGEEFFECTBY": "聲音效果 %1 改變 %2",
    "SOUND_CLEAREFFECTS": "聲音效果清除",
    "SOUND_EFFECTS_PITCH": "音高",
    "SOUND_EFFECTS_PAN": "聲道左/右",
    "SOUND_CHANGEVOLUMEBY": "音量改變 %1",
    "SOUND_SETVOLUMETO": "音量設為 %1%",
    "SOUND_VOLUME": "音量",
    "CATEGORY_MOTION": "動作",
    "CATEGORY_LOOKS": "外觀",
    "CATEGORY_SOUND": "音效",
    "CATEGORY_EVENTS": "事件",
    "CATEGORY_CONTROL": "控制",
    "CATEGORY_SENSING": "偵測",
    "CATEGORY_OPERATORS": "運算",
    "CATEGORY_VARIABLES": "變數",
    "CATEGORY_MYBLOCKS": "函式積木",
    "DUPLICATE": "複製",
    "DELETE": "刪除",
    "ADD_COMMENT": "添加註解",
    "REMOVE_COMMENT": "移除註解",
    "DELETE_BLOCK": "刪除積木",
    "DELETE_X_BLOCKS": "刪除 %1 個積木",
    "DELETE_ALL_BLOCKS": "要刪除全部（%1 個）積木？",
    "CLEAN_UP": "整理積木",
    "HELP": "求助",
    "UNDO": "復原",
    "REDO": "重做",
    "EDIT_PROCEDURE": "編輯",
    "SHOW_PROCEDURE_DEFINITION": "移至定義",
    "WORKSPACE_COMMENT_DEFAULT_TEXT": "說些什麼…",
    "COLOUR_HUE_LABEL": "顏色",
    "COLOUR_SATURATION_LABEL": "彩度",
    "COLOUR_BRIGHTNESS_LABEL": "亮度",
    "CHANGE_VALUE_TITLE": "改成：",
    "RENAME_VARIABLE": "重新命名變數",
    "RENAME_VARIABLE_TITLE": "Rename all \"%1\" variables to:",
    "RENAME_VARIABLE_MODAL_TITLE": "重新命名變數",
    "NEW_VARIABLE": "建立一個變數",
    "NEW_VARIABLE_TITLE": "新變數的名稱",
    "VARIABLE_MODAL_TITLE": "新的變數",
    "VARIABLE_ALREADY_EXISTS": "A variable named \"%1\" already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named \"%1\" already exists for another variable of type \"%2\".",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the \"%2\" variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable \"%1\" because it's part of the definition of the function \"%2\"",
    "DELETE_VARIABLE": "Delete the \"%1\" variable",
    "NEW_PROCEDURE": "建立一個積木",
    "PROCEDURE_ALREADY_EXISTS": "A procedure named \"%1\" already exists.",
    "NEW_LIST": "建立一個清單",
    "NEW_LIST_TITLE": "新清單的名稱：",
    "LIST_MODAL_TITLE": "新的清單",
    "LIST_ALREADY_EXISTS": "A list named \"%1\" already exists.",
    "RENAME_LIST_TITLE": "Rename all \"%1\" lists to:",
    "RENAME_LIST_MODAL_TITLE": "重新命名清單",
    "NEW_BROADCAST_MESSAGE": "新的訊息",
    "NEW_BROADCAST_MESSAGE_TITLE": "新訊息的名稱：",
    "BROADCAST_MODAL_TITLE": "新的訊息",
    "DEFAULT_BROADCAST_MESSAGE_NAME": "訊息1"
};


/*** EXPORTS FROM exports-loader ***/
module.exports = Blockly;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

/*** IMPORTS FROM imports-loader ***/
var Blockly = __webpack_require__(69);

// Do not edit this file; automatically generated by build.py.
'use strict';

/*

 Visual Blocks Editor

 Copyright 2016 Massachusetts Institute of Technology
 All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
Blockly.Colours={motion:{primary:"#4C97FF",secondary:"#4280D7",tertiary:"#3373CC"},looks:{primary:"#9966FF",secondary:"#855CD6",tertiary:"#774DCB"},sounds:{primary:"#CF63CF",secondary:"#C94FC9",tertiary:"#BD42BD"},control:{primary:"#FFAB19",secondary:"#EC9C13",tertiary:"#CF8B17"},event:{primary:"#FFBF00",secondary:"#E6AC00",tertiary:"#CC9900"},sensing:{primary:"#5CB1D6",secondary:"#47A8D1",tertiary:"#2E8EB8"},pen:{primary:"#0fBD8C",secondary:"#0DA57A",tertiary:"#0B8E69"},operators:{primary:"#59C059",
secondary:"#46B946",tertiary:"#389438"},data:{primary:"#FF8C1A",secondary:"#FF8000",tertiary:"#DB6E00"},data_lists:{primary:"#FF661A",secondary:"#FF5500",tertiary:"#E64D00"},more:{primary:"#FF6680",secondary:"#FF4D6A",tertiary:"#FF3355"},text:"#575E75",workspace:"#F9F9F9",toolboxHover:"#4C97FF",toolboxSelected:"#e9eef2",toolboxText:"#575E75",toolbox:"#FFFFFF",flyout:"#F9F9F9",scrollbar:"#CECDCE",scrollbarHover:"#CECDCE",textField:"#FFFFFF",insertionMarker:"#000000",insertionMarkerOpacity:.2,dragShadowOpacity:.3,
stackGlow:"#FFF200",stackGlowSize:4,stackGlowOpacity:1,replacementGlow:"#FFFFFF",replacementGlowSize:2,replacementGlowOpacity:1,colourPickerStroke:"#FFFFFF",fieldShadow:"rgba(0,0,0,0.1)",dropDownShadow:"rgba(0, 0, 0, .3)",numPadBackground:"#547AB2",numPadBorder:"#435F91",numPadActiveBackground:"#435F91",numPadText:"#FFFFFF",valueReportBackground:"#FFFFFF",valueReportBorder:"#AAAAAA"};
Blockly.constants={};Blockly.DRAG_RADIUS=3;Blockly.FLYOUT_DRAG_RADIUS=10;Blockly.SNAP_RADIUS=48;Blockly.CONNECTING_SNAP_RADIUS=68;Blockly.CURRENT_CONNECTION_PREFERENCE=20;Blockly.BUMP_DELAY=0;Blockly.COLLAPSE_CHARS=30;Blockly.LONGPRESS=750;Blockly.SOUND_LIMIT=100;Blockly.DRAG_STACK=!0;Blockly.HSV_SATURATION=.45;Blockly.HSV_VALUE=.65;Blockly.SPRITE={width:96,height:124,url:"sprites.png"};Blockly.SVG_NS="http://www.w3.org/2000/svg";Blockly.HTML_NS="http://www.w3.org/1999/xhtml";
Blockly.INPUT_VALUE=1;Blockly.OUTPUT_VALUE=2;Blockly.NEXT_STATEMENT=3;Blockly.PREVIOUS_STATEMENT=4;Blockly.DUMMY_INPUT=5;Blockly.ALIGN_LEFT=-1;Blockly.ALIGN_CENTRE=0;Blockly.ALIGN_RIGHT=1;Blockly.DRAG_NONE=0;Blockly.DRAG_STICKY=1;Blockly.DRAG_BEGIN=1;Blockly.DRAG_FREE=2;Blockly.OPPOSITE_TYPE=[];Blockly.OPPOSITE_TYPE[Blockly.INPUT_VALUE]=Blockly.OUTPUT_VALUE;Blockly.OPPOSITE_TYPE[Blockly.OUTPUT_VALUE]=Blockly.INPUT_VALUE;Blockly.OPPOSITE_TYPE[Blockly.NEXT_STATEMENT]=Blockly.PREVIOUS_STATEMENT;
Blockly.OPPOSITE_TYPE[Blockly.PREVIOUS_STATEMENT]=Blockly.NEXT_STATEMENT;Blockly.TOOLBOX_AT_TOP=0;Blockly.TOOLBOX_AT_BOTTOM=1;Blockly.TOOLBOX_AT_LEFT=2;Blockly.TOOLBOX_AT_RIGHT=3;Blockly.OUTPUT_SHAPE_HEXAGONAL=1;Blockly.OUTPUT_SHAPE_ROUND=2;Blockly.OUTPUT_SHAPE_SQUARE=3;Blockly.Categories={motion:"motion",looks:"looks",sound:"sounds",pen:"pen",data:"data",dataLists:"data-lists",event:"events",control:"control",sensing:"sensing",operators:"operators",more:"more"};Blockly.DELETE_AREA_NONE=null;
Blockly.DELETE_AREA_TRASH=1;Blockly.DELETE_AREA_TOOLBOX=2;Blockly.VARIABLE_CATEGORY_NAME="VARIABLE";Blockly.PROCEDURE_CATEGORY_NAME="PROCEDURE";Blockly.RENAME_VARIABLE_ID="RENAME_VARIABLE_ID";Blockly.DELETE_VARIABLE_ID="DELETE_VARIABLE_ID";Blockly.NEW_BROADCAST_MESSAGE_ID="NEW_BROADCAST_MESSAGE_ID";Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE="broadcast_msg";Blockly.LIST_VARIABLE_TYPE="list";Blockly.SCALAR_VARIABLE_TYPE="";Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE="procedures_definition";
Blockly.PROCEDURES_PROTOTYPE_BLOCK_TYPE="procedures_prototype";Blockly.PROCEDURES_CALL_BLOCK_TYPE="procedures_call";Blockly.StatusButtonState={READY:"ready",NOT_READY:"not ready"};
Blockly.Blocks.math={};Blockly.Blocks.math_number={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_number",name:"NUM",value:"0"}],output:"Number",outputShape:Blockly.OUTPUT_SHAPE_ROUND,colour:Blockly.Colours.textField,colourSecondary:Blockly.Colours.textField,colourTertiary:Blockly.Colours.textField})}};
Blockly.Blocks.math_integer={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_number",name:"NUM",precision:1}],output:"Number",outputShape:Blockly.OUTPUT_SHAPE_ROUND,colour:Blockly.Colours.textField,colourSecondary:Blockly.Colours.textField,colourTertiary:Blockly.Colours.textField})}};
Blockly.Blocks.math_whole_number={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_number",name:"NUM",min:0,precision:1}],output:"Number",outputShape:Blockly.OUTPUT_SHAPE_ROUND,colour:Blockly.Colours.textField,colourSecondary:Blockly.Colours.textField,colourTertiary:Blockly.Colours.textField})}};
Blockly.Blocks.math_positive_number={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_number",name:"NUM",min:0}],output:"Number",outputShape:Blockly.OUTPUT_SHAPE_ROUND,colour:Blockly.Colours.textField,colourSecondary:Blockly.Colours.textField,colourTertiary:Blockly.Colours.textField})}};
Blockly.Blocks.math_angle={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_angle",name:"NUM",value:90}],output:"Number",outputShape:Blockly.OUTPUT_SHAPE_ROUND,colour:Blockly.Colours.textField,colourSecondary:Blockly.Colours.textField,colourTertiary:Blockly.Colours.textField})}};Blockly.Blocks.colour={};function randomColour(){return"#"+("00000"+Math.floor(Math.random()*Math.pow(2,24)).toString(16)).substr(-6)}Blockly.Blocks.colour_picker={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_colour_slider",name:"COLOUR",colour:randomColour()}],outputShape:Blockly.OUTPUT_SHAPE_ROUND,output:"Colour"})}};Blockly.Blocks.texts={};Blockly.Blocks.text={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_input",name:"TEXT"}],output:"String",outputShape:Blockly.OUTPUT_SHAPE_ROUND,colour:Blockly.Colours.textField,colourSecondary:Blockly.Colours.textField,colourTertiary:Blockly.Colours.textField})}};


/*** EXPORTS FROM exports-loader ***/
module.exports = Blockly;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

/*** IMPORTS FROM imports-loader ***/
var goog = __webpack_require__(30);
var Blockly = __webpack_require__(68);

// Do not edit this file; automatically generated by build.py.
'use strict';

/*

 Visual Blocks Editor

 Copyright 2016 Massachusetts Institute of Technology
 All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
Blockly.Colours={motion:{primary:"#4C97FF",secondary:"#4280D7",tertiary:"#3373CC"},looks:{primary:"#9966FF",secondary:"#855CD6",tertiary:"#774DCB"},sounds:{primary:"#CF63CF",secondary:"#C94FC9",tertiary:"#BD42BD"},control:{primary:"#FFAB19",secondary:"#EC9C13",tertiary:"#CF8B17"},event:{primary:"#FFBF00",secondary:"#E6AC00",tertiary:"#CC9900"},sensing:{primary:"#5CB1D6",secondary:"#47A8D1",tertiary:"#2E8EB8"},pen:{primary:"#0fBD8C",secondary:"#0DA57A",tertiary:"#0B8E69"},operators:{primary:"#59C059",
secondary:"#46B946",tertiary:"#389438"},data:{primary:"#FF8C1A",secondary:"#FF8000",tertiary:"#DB6E00"},data_lists:{primary:"#FF661A",secondary:"#FF5500",tertiary:"#E64D00"},more:{primary:"#FF6680",secondary:"#FF4D6A",tertiary:"#FF3355"},text:"#575E75",workspace:"#F9F9F9",toolboxHover:"#4C97FF",toolboxSelected:"#e9eef2",toolboxText:"#575E75",toolbox:"#FFFFFF",flyout:"#F9F9F9",scrollbar:"#CECDCE",scrollbarHover:"#CECDCE",textField:"#FFFFFF",insertionMarker:"#000000",insertionMarkerOpacity:.2,dragShadowOpacity:.3,
stackGlow:"#FFF200",stackGlowSize:4,stackGlowOpacity:1,replacementGlow:"#FFFFFF",replacementGlowSize:2,replacementGlowOpacity:1,colourPickerStroke:"#FFFFFF",fieldShadow:"rgba(0,0,0,0.1)",dropDownShadow:"rgba(0, 0, 0, .3)",numPadBackground:"#547AB2",numPadBorder:"#435F91",numPadActiveBackground:"#435F91",numPadText:"#FFFFFF",valueReportBackground:"#FFFFFF",valueReportBorder:"#AAAAAA"};
Blockly.constants={};Blockly.DRAG_RADIUS=3;Blockly.FLYOUT_DRAG_RADIUS=10;Blockly.SNAP_RADIUS=48;Blockly.CONNECTING_SNAP_RADIUS=68;Blockly.CURRENT_CONNECTION_PREFERENCE=20;Blockly.BUMP_DELAY=0;Blockly.COLLAPSE_CHARS=30;Blockly.LONGPRESS=750;Blockly.SOUND_LIMIT=100;Blockly.DRAG_STACK=!0;Blockly.HSV_SATURATION=.45;Blockly.HSV_VALUE=.65;Blockly.SPRITE={width:96,height:124,url:"sprites.png"};Blockly.SVG_NS="http://www.w3.org/2000/svg";Blockly.HTML_NS="http://www.w3.org/1999/xhtml";
Blockly.INPUT_VALUE=1;Blockly.OUTPUT_VALUE=2;Blockly.NEXT_STATEMENT=3;Blockly.PREVIOUS_STATEMENT=4;Blockly.DUMMY_INPUT=5;Blockly.ALIGN_LEFT=-1;Blockly.ALIGN_CENTRE=0;Blockly.ALIGN_RIGHT=1;Blockly.DRAG_NONE=0;Blockly.DRAG_STICKY=1;Blockly.DRAG_BEGIN=1;Blockly.DRAG_FREE=2;Blockly.OPPOSITE_TYPE=[];Blockly.OPPOSITE_TYPE[Blockly.INPUT_VALUE]=Blockly.OUTPUT_VALUE;Blockly.OPPOSITE_TYPE[Blockly.OUTPUT_VALUE]=Blockly.INPUT_VALUE;Blockly.OPPOSITE_TYPE[Blockly.NEXT_STATEMENT]=Blockly.PREVIOUS_STATEMENT;
Blockly.OPPOSITE_TYPE[Blockly.PREVIOUS_STATEMENT]=Blockly.NEXT_STATEMENT;Blockly.TOOLBOX_AT_TOP=0;Blockly.TOOLBOX_AT_BOTTOM=1;Blockly.TOOLBOX_AT_LEFT=2;Blockly.TOOLBOX_AT_RIGHT=3;Blockly.OUTPUT_SHAPE_HEXAGONAL=1;Blockly.OUTPUT_SHAPE_ROUND=2;Blockly.OUTPUT_SHAPE_SQUARE=3;Blockly.Categories={motion:"motion",looks:"looks",sound:"sounds",pen:"pen",data:"data",dataLists:"data-lists",event:"events",control:"control",sensing:"sensing",operators:"operators",more:"more"};Blockly.DELETE_AREA_NONE=null;
Blockly.DELETE_AREA_TRASH=1;Blockly.DELETE_AREA_TOOLBOX=2;Blockly.VARIABLE_CATEGORY_NAME="VARIABLE";Blockly.PROCEDURE_CATEGORY_NAME="PROCEDURE";Blockly.RENAME_VARIABLE_ID="RENAME_VARIABLE_ID";Blockly.DELETE_VARIABLE_ID="DELETE_VARIABLE_ID";Blockly.NEW_BROADCAST_MESSAGE_ID="NEW_BROADCAST_MESSAGE_ID";Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE="broadcast_msg";Blockly.LIST_VARIABLE_TYPE="list";Blockly.SCALAR_VARIABLE_TYPE="";Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE="procedures_definition";
Blockly.PROCEDURES_PROTOTYPE_BLOCK_TYPE="procedures_prototype";Blockly.PROCEDURES_CALL_BLOCK_TYPE="procedures_call";Blockly.StatusButtonState={READY:"ready",NOT_READY:"not ready"};
Blockly.ScratchBlocks={};Blockly.ScratchBlocks.VerticalExtensions={};Blockly.ScratchBlocks.VerticalExtensions.colourHelper=function(a){var b=Blockly.Colours[a];if(!(b&&b.primary&&b.secondary&&b.tertiary))throw Error('Could not find colours for category "'+a+'"');return function(){this.setColourFromRawValues_(b.primary,b.secondary,b.tertiary)}};Blockly.ScratchBlocks.VerticalExtensions.COLOUR_TEXTFIELD=function(){this.setColourFromRawValues_(Blockly.Colours.textField,Blockly.Colours.textField,Blockly.Colours.textField)};
Blockly.ScratchBlocks.VerticalExtensions.SHAPE_STATEMENT=function(){this.setInputsInline(!0);this.setPreviousStatement(!0,null);this.setNextStatement(!0,null)};Blockly.ScratchBlocks.VerticalExtensions.SHAPE_HAT=function(){this.setInputsInline(!0);this.setNextStatement(!0,null)};Blockly.ScratchBlocks.VerticalExtensions.SHAPE_END=function(){this.setInputsInline(!0);this.setPreviousStatement(!0,null)};
Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_NUMBER=function(){this.setInputsInline(!0);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setOutput(!0,"Number")};Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_STRING=function(){this.setInputsInline(!0);this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);this.setOutput(!0,"String")};Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_BOOLEAN=function(){this.setInputsInline(!0);this.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);this.setOutput(!0,"Boolean")};
Blockly.ScratchBlocks.VerticalExtensions.PROCEDURE_DEF_CONTEXTMENU={customContextMenu:function(a){a.push(Blockly.Procedures.makeEditOption(this));for(var b=0,c;c=a[b];b++)if(c.text==Blockly.Msg.DELETE_BLOCK){var d=this.getInput("custom_block");if(d&&d.connection&&d.connection.targetBlock())var e=d.connection.targetBlock().getProcCode();else return;var f=this;c.callback=function(){Blockly.Procedures.deleteProcedureDefCallback(e,f)||alert("To delete a block definition, first remove all uses of the block")}}for(b=
0;c=a[b];b++)if(c.text==Blockly.Msg.DUPLICATE){a.splice(b,1);break}}};Blockly.ScratchBlocks.VerticalExtensions.PROCEDURE_CALL_CONTEXTMENU={customContextMenu:function(a){a.push(Blockly.Procedures.makeEditOption(this))}};Blockly.ScratchBlocks.VerticalExtensions.SCRATCH_EXTENSION=function(){this.isScratchExtension=!0};
Blockly.ScratchBlocks.VerticalExtensions.registerAll=function(){for(var a="control data data_lists sounds motion looks event sensing pen operators more".split(" "),b=0;b<a.length;b++){var c=a[b];Blockly.Extensions.register("colours_"+c,Blockly.ScratchBlocks.VerticalExtensions.colourHelper(c))}Blockly.Extensions.register("colours_textfield",Blockly.ScratchBlocks.VerticalExtensions.COLOUR_TEXTFIELD);Blockly.Extensions.register("shape_statement",Blockly.ScratchBlocks.VerticalExtensions.SHAPE_STATEMENT);
Blockly.Extensions.register("shape_hat",Blockly.ScratchBlocks.VerticalExtensions.SHAPE_HAT);Blockly.Extensions.register("shape_end",Blockly.ScratchBlocks.VerticalExtensions.SHAPE_END);Blockly.Extensions.register("output_number",Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_NUMBER);Blockly.Extensions.register("output_string",Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_STRING);Blockly.Extensions.register("output_boolean",Blockly.ScratchBlocks.VerticalExtensions.OUTPUT_BOOLEAN);Blockly.Extensions.registerMixin("procedure_def_contextmenu",
Blockly.ScratchBlocks.VerticalExtensions.PROCEDURE_DEF_CONTEXTMENU);Blockly.Extensions.registerMixin("procedure_call_contextmenu",Blockly.ScratchBlocks.VerticalExtensions.PROCEDURE_CALL_CONTEXTMENU);Blockly.Extensions.register("scratch_extension",Blockly.ScratchBlocks.VerticalExtensions.SCRATCH_EXTENSION)};Blockly.ScratchBlocks.VerticalExtensions.registerAll();
Blockly.Blocks.operators={};Blockly.Blocks.operator_add={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_ADD,args0:[{type:"input_value",name:"NUM1"},{type:"input_value",name:"NUM2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_number"]})}};
Blockly.Blocks.operator_subtract={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_SUBTRACT,args0:[{type:"input_value",name:"NUM1"},{type:"input_value",name:"NUM2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_number"]})}};
Blockly.Blocks.operator_multiply={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_MULTIPLY,args0:[{type:"input_value",name:"NUM1"},{type:"input_value",name:"NUM2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_number"]})}};
Blockly.Blocks.operator_divide={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_DIVIDE,args0:[{type:"input_value",name:"NUM1"},{type:"input_value",name:"NUM2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_number"]})}};
Blockly.Blocks.operator_random={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_RANDOM,args0:[{type:"input_value",name:"FROM"},{type:"input_value",name:"TO"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_number"]})}};
Blockly.Blocks.operator_lt={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_LT,args0:[{type:"input_value",name:"OPERAND1"},{type:"input_value",name:"OPERAND2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_boolean"]})}};
Blockly.Blocks.operator_equals={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_EQUALS,args0:[{type:"input_value",name:"OPERAND1"},{type:"input_value",name:"OPERAND2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_boolean"]})}};
Blockly.Blocks.operator_gt={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_GT,args0:[{type:"input_value",name:"OPERAND1"},{type:"input_value",name:"OPERAND2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_boolean"]})}};
Blockly.Blocks.operator_and={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_AND,args0:[{type:"input_value",name:"OPERAND1",check:"Boolean"},{type:"input_value",name:"OPERAND2",check:"Boolean"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_boolean"]})}};
Blockly.Blocks.operator_or={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_OR,args0:[{type:"input_value",name:"OPERAND1",check:"Boolean"},{type:"input_value",name:"OPERAND2",check:"Boolean"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_boolean"]})}};
Blockly.Blocks.operator_not={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_NOT,args0:[{type:"input_value",name:"OPERAND",check:"Boolean"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_boolean"]})}};Blockly.Blocks.operator_join={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_JOIN,args0:[{type:"input_value",name:"STRING1"},{type:"input_value",name:"STRING2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_string"]})}};
Blockly.Blocks.operator_letter_of={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_LETTEROF,args0:[{type:"input_value",name:"LETTER"},{type:"input_value",name:"STRING"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_string"]})}};Blockly.Blocks.operator_length={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_LENGTH,args0:[{type:"input_value",name:"STRING"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_string"]})}};
Blockly.Blocks.operator_contains={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_CONTAINS,args0:[{type:"input_value",name:"STRING1"},{type:"input_value",name:"STRING2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_boolean"]})}};
Blockly.Blocks.operator_mod={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_MOD,args0:[{type:"input_value",name:"NUM1"},{type:"input_value",name:"NUM2"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_number"]})}};Blockly.Blocks.operator_round={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_ROUND,args0:[{type:"input_value",name:"NUM"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_number"]})}};
Blockly.Blocks.operator_mathop={init:function(){this.jsonInit({message0:Blockly.Msg.OPERATORS_MATHOP,args0:[{type:"field_dropdown",name:"OPERATOR",options:[[Blockly.Msg.OPERATORS_MATHOP_ABS,"abs"],[Blockly.Msg.OPERATORS_MATHOP_FLOOR,"floor"],[Blockly.Msg.OPERATORS_MATHOP_CEILING,"ceiling"],[Blockly.Msg.OPERATORS_MATHOP_SQRT,"sqrt"],[Blockly.Msg.OPERATORS_MATHOP_SIN,"sin"],[Blockly.Msg.OPERATORS_MATHOP_COS,"cos"],[Blockly.Msg.OPERATORS_MATHOP_TAN,"tan"],[Blockly.Msg.OPERATORS_MATHOP_ASIN,"asin"],[Blockly.Msg.OPERATORS_MATHOP_ACOS,
"acos"],[Blockly.Msg.OPERATORS_MATHOP_ATAN,"atan"],[Blockly.Msg.OPERATORS_MATHOP_LN,"ln"],[Blockly.Msg.OPERATORS_MATHOP_LOG,"log"],[Blockly.Msg.OPERATORS_MATHOP_EEXP,"e ^"],[Blockly.Msg.OPERATORS_MATHOP_10EXP,"10 ^"]]},{type:"input_value",name:"NUM"}],category:Blockly.Categories.operators,extensions:["colours_operators","output_number"]})}};Blockly.Blocks.procedures={};Blockly.ScratchBlocks.ProcedureUtils={};Blockly.ScratchBlocks.ProcedureUtils.callerMutationToDom=function(){var a=document.createElement("mutation");a.setAttribute("proccode",this.procCode_);a.setAttribute("argumentids",JSON.stringify(this.argumentIds_));a.setAttribute("warp",JSON.stringify(this.warp_));return a};
Blockly.ScratchBlocks.ProcedureUtils.callerDomToMutation=function(a){this.procCode_=a.getAttribute("proccode");this.generateShadows_=JSON.parse(a.getAttribute("generateshadows"));this.argumentIds_=JSON.parse(a.getAttribute("argumentids"));this.warp_=JSON.parse(a.getAttribute("warp"));this.updateDisplay_()};
Blockly.ScratchBlocks.ProcedureUtils.definitionMutationToDom=function(a){var b=document.createElement("mutation");a&&b.setAttribute("generateshadows",!0);b.setAttribute("proccode",this.procCode_);b.setAttribute("argumentids",JSON.stringify(this.argumentIds_));b.setAttribute("argumentnames",JSON.stringify(this.displayNames_));b.setAttribute("argumentdefaults",JSON.stringify(this.argumentDefaults_));b.setAttribute("warp",JSON.stringify(this.warp_));return b};
Blockly.ScratchBlocks.ProcedureUtils.definitionDomToMutation=function(a){this.procCode_=a.getAttribute("proccode");this.warp_=JSON.parse(a.getAttribute("warp"));this.argumentIds_=JSON.parse(a.getAttribute("argumentids"));this.displayNames_=JSON.parse(a.getAttribute("argumentnames"));this.argumentDefaults_=JSON.parse(a.getAttribute("argumentdefaults"));this.updateDisplay_()};Blockly.ScratchBlocks.ProcedureUtils.getProcCode=function(){return this.procCode_};
Blockly.ScratchBlocks.ProcedureUtils.updateDisplay_=function(){var a=this.rendered;this.rendered=!1;var b=this.disconnectOldBlocks_();this.removeAllInputs_();this.createAllInputs_(b);this.deleteShadows_(b);(this.rendered=a)&&!this.isInsertionMarker()&&(this.initSvg(),this.render())};
Blockly.ScratchBlocks.ProcedureUtils.disconnectOldBlocks_=function(){for(var a={},b=0,c;c=this.inputList[b];b++)if(c.connection){var d=c.connection.targetBlock(),e={shadow:c.connection.getShadowDom(),block:d};a[c.name]=e;c.connection.setShadowDom(null);d&&c.connection.disconnect()}return a};Blockly.ScratchBlocks.ProcedureUtils.removeAllInputs_=function(){for(var a=0,b;b=this.inputList[a];a++)b.dispose();this.inputList=[]};
Blockly.ScratchBlocks.ProcedureUtils.createAllInputs_=function(a){var b=this.procCode_.split(/(?=[^\\]%[nbs])/);b=b.map(function(a){return a.trim()});for(var c=0,d=0,e;e=b[d];d++){if("%"==e.substring(0,1)){var f=e.substring(1,2);if("n"!=f&&"b"!=f&&"s"!=f)throw Error("Found an custom procedure with an invalid type: "+f);e=e.substring(2).trim();var g=this.argumentIds_[c],h=this.appendValueInput(g);"b"==f&&h.setCheck("Boolean");this.populateArgument_(f,c,a,g,h);c++}else e=e.trim();this.addProcedureLabel_(e.replace(/\\%/,
"%"))}};Blockly.ScratchBlocks.ProcedureUtils.deleteShadows_=function(a){if(a)for(var b in a){var c=a[b];c&&(c=c.block)&&c.isShadow()&&(c.dispose(),a[b]=null)}};Blockly.ScratchBlocks.ProcedureUtils.addLabelField_=function(a){this.appendDummyInput().appendField(a)};Blockly.ScratchBlocks.ProcedureUtils.addLabelEditor_=function(a){a&&this.appendDummyInput(Blockly.utils.genUid()).appendField(new Blockly.FieldTextInputRemovable(a))};
Blockly.ScratchBlocks.ProcedureUtils.buildShadowDom_=function(a){var b=goog.dom.createDom("shadow");if("n"==a){var c="math_number";a="NUM";var d="1"}else c="text",a="TEXT",d="";b.setAttribute("type",c);c=goog.dom.createDom("field",null,d);c.setAttribute("name",a);b.appendChild(c);return b};
Blockly.ScratchBlocks.ProcedureUtils.attachShadow_=function(a,b){if("n"==b||"s"==b){var c="n"==b?"math_number":"text";Blockly.Events.disable();try{var d=this.workspace.newBlock(c);"n"==b?d.setFieldValue("1","NUM"):d.setFieldValue("","TEXT");d.setShadow(!0);this.isInsertionMarker()||(d.initSvg(),d.render(!1))}finally{Blockly.Events.enable()}Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.BlockCreate(d));d.outputConnection.connect(a.connection)}};
Blockly.ScratchBlocks.ProcedureUtils.createArgumentReporter_=function(a,b){a="n"==a||"s"==a?"argument_reporter_string_number":"argument_reporter_boolean";Blockly.Events.disable();try{var c=this.workspace.newBlock(a);c.setShadow(!0);c.setFieldValue(b,"VALUE");this.isInsertionMarker()||(c.initSvg(),c.render(!1))}finally{Blockly.Events.enable()}Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.BlockCreate(c));return c};
Blockly.ScratchBlocks.ProcedureUtils.populateArgumentOnCaller_=function(a,b,c,d,e){var f=b=null;c&&d in c&&(d=c[d],b=d.block,f=d.shadow);c&&b?(c[e.name]=null,b.outputConnection.connect(e.connection),"b"!=a&&this.generateShadows_&&(a=f||this.buildShadowDom_(a),console.log("setting shadow dom: "+a),e.connection.setShadowDom(a))):this.generateShadows_&&this.attachShadow_(e,a)};
Blockly.ScratchBlocks.ProcedureUtils.populateArgumentOnPrototype_=function(a,b,c,d,e){var f=null;c&&d in c&&(f=c[d].block);d=Blockly.ScratchBlocks.ProcedureUtils.checkOldTypeMatches_(f,a);b=this.displayNames_[b];c&&f&&d?(a=f,a.setFieldValue(b,"VALUE"),c[e.name]=null):a=this.createArgumentReporter_(a,b);e.connection.connect(a.outputConnection)};
Blockly.ScratchBlocks.ProcedureUtils.populateArgumentOnDeclaration_=function(a,b,c,d,e){var f=null;c&&d in c&&(f=c[d].block);d=Blockly.ScratchBlocks.ProcedureUtils.checkOldTypeMatches_(f,a);b=this.displayNames_[b];f&&d?(a=f,f.setFieldValue(b,"TEXT"),c[e.name]=null):a=this.createArgumentEditor_(a,b);e.connection.connect(a.outputConnection)};
Blockly.ScratchBlocks.ProcedureUtils.checkOldTypeMatches_=function(a,b){return a?("n"==b||"s"==b)&&"argument_reporter_string_number"==a.type||"b"==b&&"argument_reporter_boolean"==a.type?!0:!1:!1};
Blockly.ScratchBlocks.ProcedureUtils.createArgumentEditor_=function(a,b){Blockly.Events.disable();try{var c="n"==a||"s"==a?this.workspace.newBlock("argument_editor_string_number"):this.workspace.newBlock("argument_editor_boolean");c.setFieldValue(b,"TEXT");c.setShadow(!0);this.isInsertionMarker()||(c.initSvg(),c.render(!1))}finally{Blockly.Events.enable()}Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.BlockCreate(c));return c};
Blockly.ScratchBlocks.ProcedureUtils.updateDeclarationProcCode_=function(){this.procCode_="";this.displayNames_=[];this.argumentIds_=[];for(var a=0;a<this.inputList.length;a++){0!=a&&(this.procCode_+=" ");var b=this.inputList[a];if(b.type==Blockly.DUMMY_INPUT)this.procCode_+=b.fieldRow[0].getValue();else if(b.type==Blockly.INPUT_VALUE){var c=b.connection.targetBlock();this.displayNames_.push(c.getFieldValue("TEXT"));this.argumentIds_.push(b.name);this.procCode_="argument_editor_boolean"==c.type?this.procCode_+
"%b":this.procCode_+"%s"}else throw Error("Unexpected input type on a procedure mutator root: "+b.type);}};Blockly.ScratchBlocks.ProcedureUtils.focusLastEditor_=function(){if(0<this.inputList.length){var a=this.inputList[this.inputList.length-1];a.type==Blockly.DUMMY_INPUT?a.fieldRow[0].showEditor_():a.type==Blockly.INPUT_VALUE&&a.connection.targetBlock().getField("TEXT").showEditor_()}};
Blockly.ScratchBlocks.ProcedureUtils.addLabelExternal=function(){Blockly.WidgetDiv.hide(!0);this.procCode_+=" label text";this.updateDisplay_();this.focusLastEditor_()};Blockly.ScratchBlocks.ProcedureUtils.addBooleanExternal=function(){Blockly.WidgetDiv.hide(!0);this.procCode_+=" %b";this.displayNames_.push("boolean");this.argumentIds_.push(Blockly.utils.genUid());this.argumentDefaults_.push("todo");this.updateDisplay_();this.focusLastEditor_()};
Blockly.ScratchBlocks.ProcedureUtils.addStringNumberExternal=function(){Blockly.WidgetDiv.hide(!0);this.procCode_+=" %s";this.displayNames_.push("number or text");this.argumentIds_.push(Blockly.utils.genUid());this.argumentDefaults_.push("todo");this.updateDisplay_();this.focusLastEditor_()};Blockly.ScratchBlocks.ProcedureUtils.getWarp=function(){return this.warp_};Blockly.ScratchBlocks.ProcedureUtils.setWarp=function(a){this.warp_=a};
Blockly.ScratchBlocks.ProcedureUtils.removeFieldCallback=function(a){if(1!==this.inputList.length){for(var b=null,c=0;c<this.inputList.length;c++){var d=this.inputList[c];if(d.connection)d.connection.targetBlock().getField(a.name)==a&&(b=d.name);else for(var e=0;e<d.fieldRow.length;e++)d.fieldRow[e]==a&&(b=d.name)}b&&(Blockly.WidgetDiv.hide(!0),this.removeInput(b),this.onChangeFn(),this.updateDisplay_())}};
Blockly.ScratchBlocks.ProcedureUtils.removeArgumentCallback_=function(a){this.parentBlock_&&this.parentBlock_.removeFieldCallback&&this.parentBlock_.removeFieldCallback(a)};Blockly.Blocks.procedures_definition={init:function(){this.jsonInit({message0:Blockly.Msg.PROCEDURES_DEFINITION,args0:[{type:"input_statement",name:"custom_block"}],extensions:["colours_more","shape_hat","procedure_def_contextmenu"]})}};
Blockly.Blocks.procedures_call={init:function(){this.jsonInit({extensions:["colours_more","shape_statement","procedure_call_contextmenu"]});this.procCode_="";this.argumentIds_=[];this.warp_=!1},getProcCode:Blockly.ScratchBlocks.ProcedureUtils.getProcCode,removeAllInputs_:Blockly.ScratchBlocks.ProcedureUtils.removeAllInputs_,disconnectOldBlocks_:Blockly.ScratchBlocks.ProcedureUtils.disconnectOldBlocks_,deleteShadows_:Blockly.ScratchBlocks.ProcedureUtils.deleteShadows_,createAllInputs_:Blockly.ScratchBlocks.ProcedureUtils.createAllInputs_,
updateDisplay_:Blockly.ScratchBlocks.ProcedureUtils.updateDisplay_,mutationToDom:Blockly.ScratchBlocks.ProcedureUtils.callerMutationToDom,domToMutation:Blockly.ScratchBlocks.ProcedureUtils.callerDomToMutation,populateArgument_:Blockly.ScratchBlocks.ProcedureUtils.populateArgumentOnCaller_,addProcedureLabel_:Blockly.ScratchBlocks.ProcedureUtils.addLabelField_,attachShadow_:Blockly.ScratchBlocks.ProcedureUtils.attachShadow_,buildShadowDom_:Blockly.ScratchBlocks.ProcedureUtils.buildShadowDom_};
Blockly.Blocks.procedures_prototype={init:function(){this.jsonInit({extensions:["colours_more","shape_statement"]});this.procCode_="";this.displayNames_=[];this.argumentIds_=[];this.argumentDefaults_=[];this.warp_=!1},getProcCode:Blockly.ScratchBlocks.ProcedureUtils.getProcCode,removeAllInputs_:Blockly.ScratchBlocks.ProcedureUtils.removeAllInputs_,disconnectOldBlocks_:Blockly.ScratchBlocks.ProcedureUtils.disconnectOldBlocks_,deleteShadows_:Blockly.ScratchBlocks.ProcedureUtils.deleteShadows_,createAllInputs_:Blockly.ScratchBlocks.ProcedureUtils.createAllInputs_,
updateDisplay_:Blockly.ScratchBlocks.ProcedureUtils.updateDisplay_,mutationToDom:Blockly.ScratchBlocks.ProcedureUtils.definitionMutationToDom,domToMutation:Blockly.ScratchBlocks.ProcedureUtils.definitionDomToMutation,populateArgument_:Blockly.ScratchBlocks.ProcedureUtils.populateArgumentOnPrototype_,addProcedureLabel_:Blockly.ScratchBlocks.ProcedureUtils.addLabelField_,createArgumentReporter_:Blockly.ScratchBlocks.ProcedureUtils.createArgumentReporter_};
Blockly.Blocks.procedures_declaration={init:function(){this.jsonInit({extensions:["colours_more","shape_statement"]});this.procCode_="";this.displayNames_=[];this.argumentIds_=[];this.argumentDefaults_=[];this.warp_=!1},getProcCode:Blockly.ScratchBlocks.ProcedureUtils.getProcCode,removeAllInputs_:Blockly.ScratchBlocks.ProcedureUtils.removeAllInputs_,disconnectOldBlocks_:Blockly.ScratchBlocks.ProcedureUtils.disconnectOldBlocks_,deleteShadows_:Blockly.ScratchBlocks.ProcedureUtils.deleteShadows_,createAllInputs_:Blockly.ScratchBlocks.ProcedureUtils.createAllInputs_,
updateDisplay_:Blockly.ScratchBlocks.ProcedureUtils.updateDisplay_,mutationToDom:Blockly.ScratchBlocks.ProcedureUtils.definitionMutationToDom,domToMutation:Blockly.ScratchBlocks.ProcedureUtils.definitionDomToMutation,populateArgument_:Blockly.ScratchBlocks.ProcedureUtils.populateArgumentOnDeclaration_,addProcedureLabel_:Blockly.ScratchBlocks.ProcedureUtils.addLabelEditor_,removeFieldCallback:Blockly.ScratchBlocks.ProcedureUtils.removeFieldCallback,createArgumentEditor_:Blockly.ScratchBlocks.ProcedureUtils.createArgumentEditor_,
focusLastEditor_:Blockly.ScratchBlocks.ProcedureUtils.focusLastEditor_,getWarp:Blockly.ScratchBlocks.ProcedureUtils.getWarp,setWarp:Blockly.ScratchBlocks.ProcedureUtils.setWarp,addLabelExternal:Blockly.ScratchBlocks.ProcedureUtils.addLabelExternal,addBooleanExternal:Blockly.ScratchBlocks.ProcedureUtils.addBooleanExternal,addStringNumberExternal:Blockly.ScratchBlocks.ProcedureUtils.addStringNumberExternal,onChangeFn:Blockly.ScratchBlocks.ProcedureUtils.updateDeclarationProcCode_};
Blockly.Blocks.argument_reporter_boolean={init:function(){this.jsonInit({message0:" %1",args0:[{type:"field_label_serializable",name:"VALUE",text:""}],extensions:["colours_more","output_boolean"]})}};Blockly.Blocks.argument_reporter_string_number={init:function(){this.jsonInit({message0:" %1",args0:[{type:"field_label_serializable",name:"VALUE",text:""}],extensions:["colours_more","output_number","output_string"]})}};
Blockly.Blocks.argument_editor_boolean={init:function(){this.jsonInit({message0:" %1",args0:[{type:"field_input_removable",name:"TEXT",text:"foo"}],colour:Blockly.Colours.textField,colourSecondary:Blockly.Colours.textField,colourTertiary:Blockly.Colours.textField,extensions:["output_boolean"]})},removeFieldCallback:Blockly.ScratchBlocks.ProcedureUtils.removeArgumentCallback_};
Blockly.Blocks.argument_editor_string_number={init:function(){this.jsonInit({message0:" %1",args0:[{type:"field_input_removable",name:"TEXT",text:"foo"}],colour:Blockly.Colours.textField,colourSecondary:Blockly.Colours.textField,colourTertiary:Blockly.Colours.textField,extensions:["output_number","output_string"]})},removeFieldCallback:Blockly.ScratchBlocks.ProcedureUtils.removeArgumentCallback_};Blockly.Blocks.control={};Blockly.Blocks.control_forever={init:function(){this.jsonInit({id:"control_forever",message0:Blockly.Msg.CONTROL_FOREVER,message1:"%1",message2:"%1",lastDummyAlign2:"RIGHT",args1:[{type:"input_statement",name:"SUBSTACK"}],args2:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"repeat.svg",width:24,height:24,alt:"*",flip_rtl:!0}],category:Blockly.Categories.control,extensions:["colours_control","shape_end"]})}};
Blockly.Blocks.control_repeat={init:function(){this.jsonInit({id:"control_repeat",message0:Blockly.Msg.CONTROL_REPEAT,message1:"%1",message2:"%1",lastDummyAlign2:"RIGHT",args0:[{type:"input_value",name:"TIMES"}],args1:[{type:"input_statement",name:"SUBSTACK"}],args2:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"repeat.svg",width:24,height:24,alt:"*",flip_rtl:!0}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};
Blockly.Blocks.control_if={init:function(){this.jsonInit({type:"control_if",message0:Blockly.Msg.CONTROL_IF,message1:"%1",args0:[{type:"input_value",name:"CONDITION",check:"Boolean"}],args1:[{type:"input_statement",name:"SUBSTACK"}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};
Blockly.Blocks.control_if_else={init:function(){this.jsonInit({type:"control_if_else",message0:Blockly.Msg.CONTROL_IF,message1:"%1",message2:Blockly.Msg.CONTROL_ELSE,message3:"%1",args0:[{type:"input_value",name:"CONDITION",check:"Boolean"}],args1:[{type:"input_statement",name:"SUBSTACK"}],args3:[{type:"input_statement",name:"SUBSTACK2"}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};
Blockly.Blocks.control_stop={init:function(){var a=new Blockly.FieldDropdown(function(){return this.sourceBlock_&&this.sourceBlock_.nextConnection&&this.sourceBlock_.nextConnection.isConnected()?[[Blockly.Msg.CONTROL_STOP_OTHER,"other scripts in sprite"]]:[[Blockly.Msg.CONTROL_STOP_ALL,"all"],[Blockly.Msg.CONTROL_STOP_THIS,"this script"],[Blockly.Msg.CONTROL_STOP_OTHER,"other scripts in sprite"]]},function(a){Blockly.Events.setGroup(!0);var b=Blockly.Xml.domToText(this.sourceBlock_.mutationToDom());
this.sourceBlock_.setNextStatement("other scripts in sprite"==a);var d=Blockly.Xml.domToText(this.sourceBlock_.mutationToDom());Blockly.Events.fire(new Blockly.Events.BlockChange(this.sourceBlock_,"mutation",null,b,d));this.setValue(a);Blockly.Events.setGroup(!1);return null});this.appendDummyInput().appendField(Blockly.Msg.CONTROL_STOP).appendField(a,"STOP_OPTION");this.setCategory(Blockly.Categories.control);this.setColour(Blockly.Colours.control.primary,Blockly.Colours.control.secondary,Blockly.Colours.control.tertiary);
this.setPreviousStatement(!0)},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("hasnext",null!=this.nextConnection);return a},domToMutation:function(a){a="true"==a.getAttribute("hasnext");this.setNextStatement(a)}};Blockly.Blocks.control_wait={init:function(){this.jsonInit({id:"control_wait",message0:Blockly.Msg.CONTROL_WAIT,args0:[{type:"input_value",name:"DURATION"}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};
Blockly.Blocks.control_wait_until={init:function(){this.jsonInit({message0:Blockly.Msg.CONTROL_WAITUNTIL,args0:[{type:"input_value",name:"CONDITION",check:"Boolean"}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};
Blockly.Blocks.control_repeat_until={init:function(){this.jsonInit({message0:Blockly.Msg.CONTROL_REPEATUNTIL,message1:"%1",message2:"%1",lastDummyAlign2:"RIGHT",args0:[{type:"input_value",name:"CONDITION",check:"Boolean"}],args1:[{type:"input_statement",name:"SUBSTACK"}],args2:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"repeat.svg",width:24,height:24,alt:"*",flip_rtl:!0}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};
Blockly.Blocks.control_while={init:function(){this.jsonInit({message0:Blockly.Msg.CONTROL_WHILE,message1:"%1",message2:"%1",lastDummyAlign2:"RIGHT",args0:[{type:"input_value",name:"CONDITION",check:"Boolean"}],args1:[{type:"input_statement",name:"SUBSTACK"}],args2:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"repeat.svg",width:24,height:24,alt:"*",flip_rtl:!0}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};
Blockly.Blocks.control_for_each={init:function(){this.jsonInit({type:"control_for_each",message0:Blockly.Msg.CONTROL_FOREACH,message1:"%1",args0:[{type:"field_variable",name:"VARIABLE"},{type:"input_value",name:"VALUE"}],args1:[{type:"input_statement",name:"SUBSTACK"}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};
Blockly.Blocks.control_start_as_clone={init:function(){this.jsonInit({id:"control_start_as_clone",message0:Blockly.Msg.CONTROL_STARTASCLONE,args0:[],category:Blockly.Categories.control,extensions:["colours_control","shape_hat"]})}};Blockly.Blocks.control_create_clone_of_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"CLONE_OPTION",options:[[Blockly.Msg.CONTROL_CREATECLONEOF_MYSELF,"_myself_"]]}],extensions:["colours_control","output_string"]})}};
Blockly.Blocks.control_create_clone_of={init:function(){this.jsonInit({id:"control_start_as_clone",message0:Blockly.Msg.CONTROL_CREATECLONEOF,args0:[{type:"input_value",name:"CLONE_OPTION"}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};Blockly.Blocks.control_delete_this_clone={init:function(){this.jsonInit({message0:Blockly.Msg.CONTROL_DELETETHISCLONE,args0:[],category:Blockly.Categories.control,extensions:["colours_control","shape_end"]})}};
Blockly.Blocks.control_get_counter={init:function(){this.jsonInit({message0:Blockly.Msg.CONTROL_COUNTER,category:Blockly.Categories.control,extensions:["colours_control","output_number"]})}};Blockly.Blocks.control_incr_counter={init:function(){this.jsonInit({message0:Blockly.Msg.CONTROL_INCRCOUNTER,category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};
Blockly.Blocks.control_clear_counter={init:function(){this.jsonInit({message0:Blockly.Msg.CONTROL_CLEARCOUNTER,category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};Blockly.Blocks.control_all_at_once={init:function(){this.jsonInit({message0:Blockly.Msg.CONTROL_ALLATONCE,message1:"%1",args1:[{type:"input_statement",name:"SUBSTACK"}],category:Blockly.Categories.control,extensions:["colours_control","shape_statement"]})}};Blockly.Blocks.sensing={};Blockly.Blocks.sensing_touchingobject={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_TOUCHINGOBJECT,args0:[{type:"input_value",name:"TOUCHINGOBJECTMENU"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};
Blockly.Blocks.sensing_touchingobjectmenu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TOUCHINGOBJECTMENU",options:[[Blockly.Msg.SENSING_TOUCHINGOBJECT_POINTER,"_mouse_"],[Blockly.Msg.SENSING_TOUCHINGOBJECT_EDGE,"_edge_"]]}],extensions:["colours_sensing","output_string"]})}};
Blockly.Blocks.sensing_touchingcolor={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_TOUCHINGCOLOR,args0:[{type:"input_value",name:"COLOR"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};
Blockly.Blocks.sensing_coloristouchingcolor={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_COLORISTOUCHINGCOLOR,args0:[{type:"input_value",name:"COLOR"},{type:"input_value",name:"COLOR2"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};
Blockly.Blocks.sensing_distanceto={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_DISTANCETO,args0:[{type:"input_value",name:"DISTANCETOMENU"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.sensing_distancetomenu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"DISTANCETOMENU",options:[[Blockly.Msg.SENSING_DISTANCETO_POINTER,"_mouse_"]]}],extensions:["colours_sensing","output_string"]})}};
Blockly.Blocks.sensing_askandwait={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_ASKANDWAIT,args0:[{type:"input_value",name:"QUESTION"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","shape_statement"]})}};Blockly.Blocks.sensing_answer={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_ANSWER,category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_keypressed={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_KEYPRESSED,args0:[{type:"input_value",name:"KEY_OPTION"}],category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};
Blockly.Blocks.sensing_keyoptions={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"KEY_OPTION",options:[[Blockly.Msg.EVENT_WHENKEYPRESSED_SPACE,"space"],[Blockly.Msg.EVENT_WHENKEYPRESSED_LEFT,"left arrow"],[Blockly.Msg.EVENT_WHENKEYPRESSED_RIGHT,"right arrow"],[Blockly.Msg.EVENT_WHENKEYPRESSED_DOWN,"down arrow"],[Blockly.Msg.EVENT_WHENKEYPRESSED_UP,"up arrow"],[Blockly.Msg.EVENT_WHENKEYPRESSED_ANY,"any"],["a","a"],["b","b"],["c","c"],["d","d"],["e","e"],["f","f"],
["g","g"],["h","h"],["i","i"],["j","j"],["k","k"],["l","l"],["m","m"],["n","n"],["o","o"],["p","p"],["q","q"],["r","r"],["s","s"],["t","t"],["u","u"],["v","v"],["w","w"],["x","x"],["y","y"],["z","z"],["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"]]}],extensions:["colours_sensing","output_string"]})}};
Blockly.Blocks.sensing_mousedown={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_MOUSEDOWN,category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};Blockly.Blocks.sensing_mousex={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_MOUSEX,category:Blockly.Categories.sensing,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_mousey={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_MOUSEY,category:Blockly.Categories.sensing,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_setdragmode={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_SETDRAGMODE,args0:[{type:"field_dropdown",name:"DRAG_MODE",options:[[Blockly.Msg.SENSING_SETDRAGMODE_DRAGGABLE,"draggable"],[Blockly.Msg.SENSING_SETDRAGMODE_NOTDRAGGABLE,"not draggable"]]}],category:Blockly.Categories.sensing,extensions:["colours_sensing","shape_statement"]})}};
Blockly.Blocks.sensing_loudness={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_LOUDNESS,category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.sensing_loud={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_LOUD,category:Blockly.Categories.sensing,extensions:["colours_sensing","output_boolean"]})}};
Blockly.Blocks.sensing_timer={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_TIMER,category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.sensing_resettimer={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_RESETTIMER,category:Blockly.Categories.sensing,extensions:["colours_sensing","shape_statement"]})}};
Blockly.Blocks.sensing_of_object_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"OBJECT",options:[["Sprite1","Sprite1"],["Stage","_stage_"]]}],extensions:["colours_sensing","output_string"]})}};
Blockly.Blocks.sensing_of={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_OF,args0:[{type:"field_dropdown",name:"PROPERTY",options:[[Blockly.Msg.SENSING_OF_XPOSITION,"x position"],[Blockly.Msg.SENSING_OF_YPOSITION,"y position"],[Blockly.Msg.SENSING_OF_DIRECTION,"direction"],[Blockly.Msg.SENSING_OF_COSTUMENUMBER,"costume #"],[Blockly.Msg.SENSING_OF_COSTUMENAME,"costume name"],[Blockly.Msg.SENSING_OF_SIZE,"size"],[Blockly.Msg.SENSING_OF_VOLUME,"volume"],[Blockly.Msg.SENSING_OF_BACKDROPNUMBER,
"backdrop #"],[Blockly.Msg.SENSING_OF_BACKDROPNAME,"backdrop name"]]},{type:"input_value",name:"OBJECT"}],output:!0,category:Blockly.Categories.sensing,outputShape:Blockly.OUTPUT_SHAPE_ROUND,extensions:["colours_sensing"]})}};
Blockly.Blocks.sensing_current={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_CURRENT,args0:[{type:"field_dropdown",name:"CURRENTMENU",options:[[Blockly.Msg.SENSING_CURRENT_YEAR,"YEAR"],[Blockly.Msg.SENSING_CURRENT_MONTH,"MONTH"],[Blockly.Msg.SENSING_CURRENT_DATE,"DATE"],[Blockly.Msg.SENSING_CURRENT_DAYOFWEEK,"DAYOFWEEK"],[Blockly.Msg.SENSING_CURRENT_HOUR,"HOUR"],[Blockly.Msg.SENSING_CURRENT_MINUTE,"MINUTE"],[Blockly.Msg.SENSING_CURRENT_SECOND,"SECOND"]]}],category:Blockly.Categories.sensing,
checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.sensing_dayssince2000={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_DAYSSINCE2000,category:Blockly.Categories.sensing,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.sensing_username={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_USERNAME,category:Blockly.Categories.sensing,checkboxInFlyout:!0,extensions:["colours_sensing","output_number"]})}};
Blockly.Blocks.sensing_userid={init:function(){this.jsonInit({message0:Blockly.Msg.SENSING_USERID,category:Blockly.Categories.sensing,extensions:["colours_sensing","output_number"]})}};Blockly.Blocks.defaultToolbox='<xml id="toolbox-categories" style="display: none"><category name="%{BKY_CATEGORY_MOTION}" id="motion" colour="#4C97FF" secondaryColour="#3373CC"><block type="motion_movesteps" id="motion_movesteps"><value name="STEPS"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="motion_turnright" id="motion_turnright"><value name="DEGREES"><shadow type="math_number"><field name="NUM">15</field></shadow></value></block><block type="motion_turnleft" id="motion_turnleft"><value name="DEGREES"><shadow type="math_number"><field name="NUM">15</field></shadow></value></block><block type="motion_pointindirection" id="motion_pointindirection"><value name="DIRECTION"><shadow type="math_angle"><field name="NUM">90</field></shadow></value></block><block type="motion_pointtowards" id="motion_pointtowards"><value name="TOWARDS"><shadow type="motion_pointtowards_menu"></shadow></value></block><block type="motion_gotoxy" id="motion_gotoxy"><value name="X"><shadow id="movex" type="math_number"><field name="NUM">0</field></shadow></value><value name="Y"><shadow id="movey" type="math_number"><field name="NUM">0</field></shadow></value></block><block type="motion_goto" id="motion_goto"><value name="TO"><shadow type="motion_goto_menu"></shadow></value></block><block type="motion_glidesecstoxy" id="motion_glidesecstoxy"><value name="SECS"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="X"><shadow id="glidex" type="math_number"><field name="NUM">0</field></shadow></value><value name="Y"><shadow id="glidey" type="math_number"><field name="NUM">0</field></shadow></value></block><block type="motion_glideto" id="motion_glideto"><value name="SECS"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="TO"><shadow type="motion_glideto_menu"></shadow></value></block><block type="motion_changexby" id="motion_changexby"><value name="DX"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="motion_setx" id="motion_setx"><value name="X"><shadow id="setx" type="math_number"><field name="NUM">0</field></shadow></value></block><block type="motion_changeyby" id="motion_changeyby"><value name="DY"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="motion_sety" id="motion_sety"><value name="Y"><shadow id="sety" type="math_number"><field name="NUM">0</field></shadow></value></block><block type="motion_ifonedgebounce" id="motion_ifonedgebounce"></block><block type="motion_setrotationstyle" id="motion_setrotationstyle"></block><block type="motion_xposition" id="motion_xposition"></block><block type="motion_yposition" id="motion_yposition"></block><block type="motion_direction" id="motion_direction"></block></category><category name="%{BKY_CATEGORY_LOOKS}" id="looks" colour="#9966FF" secondaryColour="#774DCB"><block type="looks_show" id="looks_show"></block><block type="looks_hide" id="looks_hide"></block><block type="looks_switchcostumeto" id="looks_switchcostumeto"><value name="COSTUME"><shadow type="looks_costume"></shadow></value></block><block type="looks_nextcostume" id="looks_nextcostume"></block><block type="looks_nextbackdrop" id="looks_nextbackdrop"></block><block type="looks_switchbackdropto" id="looks_switchbackdropto"><value name="BACKDROP"><shadow type="looks_backdrops"></shadow></value></block><block type="looks_switchbackdroptoandwait" id="looks_switchbackdroptoandwait"><value name="BACKDROP"><shadow type="looks_backdrops"></shadow></value></block><block type="looks_changeeffectby" id="looks_changeeffectby"><value name="CHANGE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="looks_seteffectto" id="looks_seteffectto"><value name="VALUE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="looks_cleargraphiceffects" id="looks_cleargraphiceffects"></block><block type="looks_changesizeby" id="looks_changesizeby"><value name="CHANGE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="looks_setsizeto" id="looks_setsizeto"><value name="SIZE"><shadow type="math_number"><field name="NUM">100</field></shadow></value></block><block type="looks_gotofrontback" id="looks_gotofrontback"></block><block type="looks_goforwardbackwardlayers" id="looks_goforwardbackwardlayers"><value name="NUM"><shadow type="math_integer"><field name="NUM">1</field></shadow></value></block><block type="looks_costumenumbername" id="looks_costumenumbername"></block><block type="looks_backdropnumbername" id="looks_backdropnumbername"></block><block type="looks_size" id="looks_size"></block></category><category name="%{BKY_CATEGORY_SOUND}" id="sound" colour="#D65CD6" secondaryColour="#BD42BD"><block type="sound_play" id="sound_play"><value name="SOUND_MENU"><shadow type="sound_sounds_menu"></shadow></value></block><block type="sound_playuntildone" id="sound_playuntildone"><value name="SOUND_MENU"><shadow type="sound_sounds_menu"></shadow></value></block><block type="sound_stopallsounds" id="sound_stopallsounds"></block><block type="sound_changeeffectby" id="sound_changeeffectby"><value name="VALUE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="sound_seteffectto" id="sound_seteffectto"><value name="VALUE"><shadow type="math_number"><field name="NUM">100</field></shadow></value></block><block type="sound_cleareffects" id="sound_cleareffects"></block><block type="sound_changevolumeby" id="sound_changevolumeby"><value name="VOLUME"><shadow type="math_number"><field name="NUM">-10</field></shadow></value></block><block type="sound_setvolumeto" id="sound_setvolumeto"><value name="VOLUME"><shadow type="math_number"><field name="NUM">100</field></shadow></value></block><block type="sound_volume" id="sound_volume"></block></category><category name="%{BKY_CATEGORY_EVENTS}" id="events" colour="#FFD500" secondaryColour="#CC9900"><block type="event_whenflagclicked" id="event_whenflagclicked"></block><block type="event_whenkeypressed" id="event_whenkeypressed"></block><block type="event_whenthisspriteclicked" id="event_whenthisspriteclicked"></block><block type="event_whenbackdropswitchesto" id="event_whenbackdropswitchesto"></block><block type="event_whengreaterthan" id="event_whengreaterthan"><value name="VALUE"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="event_whenbroadcastreceived" id="event_whenbroadcastreceived"></block><block type="event_broadcast" id="event_broadcast"><value name="BROADCAST_INPUT"><shadow type="event_broadcast_menu"></shadow></value></block><block type="event_broadcastandwait" id="event_broadcastandwait"><value name="BROADCAST_INPUT"><shadow type="event_broadcast_menu"></shadow></value></block></category><category name="%{BKY_CATEGORY_CONTROL}" id="control" colour="#FFAB19" secondaryColour="#CF8B17"><block type="control_wait" id="control_wait"><value name="DURATION"><shadow type="math_positive_number"><field name="NUM">1</field></shadow></value></block><block type="control_repeat" id="control_repeat"><value name="TIMES"><shadow type="math_whole_number"><field name="NUM">10</field></shadow></value></block><block type="control_forever" id="control_forever"></block><block type="control_if" id="control_if"></block><block type="control_if_else" id="control_if_else"></block><block type="control_wait_until" id="control_wait_until"></block><block type="control_repeat_until" id="control_repeat_until"></block><block type="control_stop" id="control_stop"></block><block type="control_start_as_clone" id="control_start_as_clone"></block><block type="control_create_clone_of" id="control_create_clone_of"><value name="CLONE_OPTION"><shadow type="control_create_clone_of_menu"></shadow></value></block><block type="control_delete_this_clone" id="control_delete_this_clone"></block></category><category name="%{BKY_CATEGORY_SENSING}" id="sensing" colour="#4CBFE6" secondaryColour="#2E8EB8"><block type="sensing_touchingobject" id="sensing_touchingobject"><value name="TOUCHINGOBJECTMENU"><shadow type="sensing_touchingobjectmenu"></shadow></value></block><block type="sensing_touchingcolor" id="sensing_touchingcolor"><value name="COLOR"><shadow type="colour_picker"></shadow></value></block><block type="sensing_coloristouchingcolor" id="sensing_coloristouchingcolor"><value name="COLOR"><shadow type="colour_picker"></shadow></value><value name="COLOR2"><shadow type="colour_picker"></shadow></value></block><block type="sensing_distanceto" id="sensing_distanceto"><value name="DISTANCETOMENU"><shadow type="sensing_distancetomenu"></shadow></value></block><block type="sensing_keypressed" id="sensing_keypressed"><value name="KEY_OPTION"><shadow type="sensing_keyoptions"></shadow></value></block><block type="sensing_mousedown" id="sensing_mousedown"></block><block type="sensing_mousex" id="sensing_mousex"></block><block type="sensing_mousey" id="sensing_mousey"></block><block type="sensing_setdragmode" id="sensing_setdragmode"></block><block type="sensing_loudness" id="sensing_loudness"></block><block type="sensing_timer" id="sensing_timer"></block><block type="sensing_resettimer" id="sensing_resettimer"></block><block type="sensing_of" id="sensing_of"><value name="OBJECT"><shadow type="sensing_of_object_menu"></shadow></value></block><block type="sensing_current" id="sensing_current"></block><block type="sensing_dayssince2000" id="sensing_dayssince2000"></block></category><category name="%{BKY_CATEGORY_OPERATORS}" id="operators" colour="#40BF4A" secondaryColour="#389438"><block type="operator_add" id="operator_add"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_subtract" id="operator_subtract"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_multiply" id="operator_multiply"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_divide" id="operator_divide"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_random" id="operator_random"><value name="FROM"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="TO"><shadow type="math_number"><field name="NUM">10</field></shadow></value></block><block type="operator_lt" id="operator_lt"><value name="OPERAND1"><shadow type="text"><field name="TEXT"></field></shadow></value><value name="OPERAND2"><shadow type="text"><field name="TEXT"></field></shadow></value></block><block type="operator_equals" id="operator_equals"><value name="OPERAND1"><shadow type="text"><field name="TEXT"></field></shadow></value><value name="OPERAND2"><shadow type="text"><field name="TEXT"></field></shadow></value></block><block type="operator_gt" id="operator_gt"><value name="OPERAND1"><shadow type="text"><field name="TEXT"></field></shadow></value><value name="OPERAND2"><shadow type="text"><field name="TEXT"></field></shadow></value></block><block type="operator_and" id="operator_and"></block><block type="operator_or" id="operator_or"></block><block type="operator_not" id="operator_not"></block><block type="operator_join" id="operator_join"><value name="STRING1"><shadow type="text"><field name="TEXT">hello</field></shadow></value><value name="STRING2"><shadow type="text"><field name="TEXT">world</field></shadow></value></block><block type="operator_letter_of" id="operator_letter_of"><value name="LETTER"><shadow type="math_whole_number"><field name="NUM">1</field></shadow></value><value name="STRING"><shadow type="text"><field name="TEXT">world</field></shadow></value></block><block type="operator_length" id="operator_length"><value name="STRING"><shadow type="text"><field name="TEXT">world</field></shadow></value></block><block type="operator_contains" id="operator_contains"><value name="STRING1"><shadow type="text"><field name="TEXT">hello</field></shadow></value><value name="STRING2"><shadow type="text"><field name="TEXT">world</field></shadow></value></block><block type="operator_mod" id="operator_mod"><value name="NUM1"><shadow type="math_number"><field name="NUM"></field></shadow></value><value name="NUM2"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_round" id="operator_round"><value name="NUM"><shadow type="math_number"><field name="NUM"></field></shadow></value></block><block type="operator_mathop" id="operator_mathop"><value name="NUM"><shadow type="math_number"><field name="NUM"></field></shadow></value></block></category><category name="%{BKY_CATEGORY_VARIABLES}" id="data" colour="#FF8C1A" secondaryColour="#DB6E00" custom="VARIABLE"></category><category name="%{BKY_CATEGORY_MYBLOCKS}" id="more" colour="#FF6680" secondaryColour="#FF4D6A" custom="PROCEDURE"></category><category name="Extensions" id="extensions" colour="#FF6680" secondaryColour="#FF4D6A" iconURI="../media/extensions/wedo2-block-icon.svg" showStatusButton="true"><block type="extension_pen_down" id="extension_pen_down"></block><block type="extension_music_drum" id="extension_music_drum"><value name="NUMBER"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block><block type="extension_wedo_motor" id="extension_wedo_motor"></block><block type="extension_wedo_hat" id="extension_wedo_hat"></block><block type="extension_wedo_boolean" id="extension_wedo_boolean"></block><block type="extension_wedo_tilt_reporter" id="extension_wedo_reporter"><value name="TILT"><shadow type="extension_wedo_tilt_menu"></shadow></value></block><block type="extension_music_reporter" id="extension_music_reporter"></block></category></xml>';Blockly.Blocks.data={};Blockly.Constants={};Blockly.Constants.Data={};Blockly.Blocks.data_variable={init:function(){this.jsonInit({message0:"%1",lastDummyAlign0:"CENTRE",args0:[{type:"field_variable_getter",text:"",name:"VARIABLE",variableType:""}],category:Blockly.Categories.data,checkboxInFlyout:!0,extensions:["contextMenu_getVariableBlock","colours_data","output_string"]})}};
Blockly.Blocks.data_setvariableto={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_SETVARIABLETO,args0:[{type:"field_variable",name:"VARIABLE"},{type:"input_value",name:"VALUE"}],category:Blockly.Categories.data,extensions:["colours_data","shape_statement"]})}};
Blockly.Blocks.data_changevariableby={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_CHANGEVARIABLEBY,args0:[{type:"field_variable",name:"VARIABLE"},{type:"input_value",name:"VALUE"}],category:Blockly.Categories.data,extensions:["colours_data","shape_statement"]})}};
Blockly.Blocks.data_showvariable={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_SHOWVARIABLE,args0:[{type:"field_variable",name:"VARIABLE"}],previousStatement:null,nextStatement:null,category:Blockly.Categories.data,colour:Blockly.Colours.data.primary,colourSecondary:Blockly.Colours.data.secondary,colourTertiary:Blockly.Colours.data.tertiary})}};
Blockly.Blocks.data_hidevariable={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_HIDEVARIABLE,args0:[{type:"field_variable",name:"VARIABLE"}],previousStatement:null,nextStatement:null,category:Blockly.Categories.data,colour:Blockly.Colours.data.primary,colourSecondary:Blockly.Colours.data.secondary,colourTertiary:Blockly.Colours.data.tertiary})}};
Blockly.Blocks.data_listcontents={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_variable_getter",text:"",name:"LIST",variableType:Blockly.LIST_VARIABLE_TYPE}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","output_string"],checkboxInFlyout:!0})}};
Blockly.Blocks.data_listindexall={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_numberdropdown",name:"INDEX",value:"1",min:1,precision:1,options:[["1","1"],[Blockly.Msg.DATA_INDEX_LAST,"last"],[Blockly.Msg.DATA_INDEX_ALL,"all"]]}],category:Blockly.Categories.data,extensions:["colours_textfield","output_string"]})}};
Blockly.Blocks.data_listindexrandom={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_numberdropdown",name:"INDEX",value:"1",min:1,precision:1,options:[["1","1"],[Blockly.Msg.DATA_INDEX_LAST,"last"],[Blockly.Msg.DATA_INDEX_RANDOM,"random"]]}],category:Blockly.Categories.data,extensions:["colours_textfield","output_string"]})}};
Blockly.Blocks.data_addtolist={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_ADDTOLIST,args0:[{type:"input_value",name:"ITEM"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_deleteoflist={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_DELETEOFLIST,args0:[{type:"input_value",name:"INDEX"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_insertatlist={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_INSERTATLIST,args0:[{type:"input_value",name:"ITEM"},{type:"input_value",name:"INDEX"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_replaceitemoflist={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_REPLACEITEMOFLIST,args0:[{type:"input_value",name:"INDEX"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]},{type:"input_value",name:"ITEM"}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_itemoflist={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_ITEMOFLIST,args0:[{type:"input_value",name:"INDEX"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],output:null,category:Blockly.Categories.dataLists,extensions:["colours_data_lists"],outputShape:Blockly.OUTPUT_SHAPE_ROUND})}};
Blockly.Blocks.data_itemnumoflist={init:function(){this.jsonInit({message0:"item # of %1 in %2",args0:[{type:"input_value",name:"ITEM"},{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],output:null,category:Blockly.Categories.dataLists,extensions:["colours_data_lists"],outputShape:Blockly.OUTPUT_SHAPE_ROUND})}};
Blockly.Blocks.data_lengthoflist={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_LENGTHOFLIST,args0:[{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","output_number"]})}};
Blockly.Blocks.data_listcontainsitem={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_LISTCONTAINSITEM,args0:[{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]},{type:"input_value",name:"ITEM"}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","output_boolean"]})}};
Blockly.Blocks.data_showlist={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_SHOWLIST,args0:[{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Blocks.data_hidelist={init:function(){this.jsonInit({message0:Blockly.Msg.DATA_HIDELIST,args0:[{type:"field_variable",name:"LIST",variableTypes:[Blockly.LIST_VARIABLE_TYPE]}],category:Blockly.Categories.dataLists,extensions:["colours_data_lists","shape_statement"]})}};
Blockly.Constants.Data.CUSTOM_CONTEXT_MENU_GET_VARIABLE_MIXIN={customContextMenu:function(a){if(!this.isCollapsed())if(this.isInFlyout){var b={text:Blockly.Msg.RENAME_VARIABLE,enabled:!0,callback:Blockly.Constants.Data.RENAME_OPTION_CALLBACK_FACTORY(this)},c=this.getField("VARIABLE").text_;c={text:Blockly.Msg.DELETE_VARIABLE.replace("%1",c),enabled:!0,callback:Blockly.Constants.Data.DELETE_OPTION_CALLBACK_FACTORY(this)};a.push(b);a.push(c)}else for(b=this.workspace.getVariablesOfType(""),c=0;c<b.length;c++){var d=
{enabled:!0};d.text=b[c].name;d.callback=Blockly.Constants.Data.VARIABLE_OPTION_CALLBACK_FACTORY(this,d.text);a.push(d)}}};Blockly.Extensions.registerMixin("contextMenu_getVariableBlock",Blockly.Constants.Data.CUSTOM_CONTEXT_MENU_GET_VARIABLE_MIXIN);Blockly.Constants.Data.VARIABLE_OPTION_CALLBACK_FACTORY=function(a,b){return function(){var c=a.getField("VARIABLE");c||console.log("Tried to get a variable field on the wrong type of block.");c.setText(b)}};
Blockly.Constants.Data.RENAME_OPTION_CALLBACK_FACTORY=function(a){return function(){var b=a.workspace,c=a.getField("VARIABLE").getVariable();Blockly.Variables.renameVariable(b,c)}};Blockly.Constants.Data.DELETE_OPTION_CALLBACK_FACTORY=function(a){return function(){var b=a.workspace,c=a.getField("VARIABLE").getVariable();b.deleteVariableById(c.getId())}};Blockly.Blocks.motion={};Blockly.Blocks.motion_movesteps={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_MOVESTEPS,args0:[{type:"input_value",name:"STEPS"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_turnright={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_TURNLEFT,args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"rotate-right.svg",width:24,height:24},{type:"input_value",name:"DEGREES"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_turnleft={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_TURNRIGHT,args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"rotate-left.svg",width:24,height:24},{type:"input_value",name:"DEGREES"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_pointindirection={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_POINTINDIRECTION,args0:[{type:"input_value",name:"DIRECTION"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_pointtowards_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TOWARDS",options:[[Blockly.Msg.MOTION_POINTTOWARDS_POINTER,"_mouse_"]]}],colour:Blockly.Colours.motion.secondary,colourSecondary:Blockly.Colours.motion.secondary,colourTertiary:Blockly.Colours.motion.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.motion_pointtowards={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_POINTTOWARDS,args0:[{type:"input_value",name:"TOWARDS"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_goto_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TO",options:[[Blockly.Msg.MOTION_GOTO_POINTER,"_mouse_"],[Blockly.Msg.MOTION_GOTO_RANDOM,"_random_"]]}],colour:Blockly.Colours.motion.secondary,colourSecondary:Blockly.Colours.motion.secondary,colourTertiary:Blockly.Colours.motion.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.motion_gotoxy={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_GOTOXY,args0:[{type:"input_value",name:"X"},{type:"input_value",name:"Y"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};Blockly.Blocks.motion_goto={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_GOTO,args0:[{type:"input_value",name:"TO"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_glidesecstoxy={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_GLIDESECSTOXY,args0:[{type:"input_value",name:"SECS"},{type:"input_value",name:"X"},{type:"input_value",name:"Y"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_glideto_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TO",options:[[Blockly.Msg.MOTION_GLIDETO_POINTER,"_mouse_"],[Blockly.Msg.MOTION_GLIDETO_RANDOM,"_random_"]]}],colour:Blockly.Colours.motion.secondary,colourSecondary:Blockly.Colours.motion.secondary,colourTertiary:Blockly.Colours.motion.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.motion_glideto={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_GLIDETO,args0:[{type:"input_value",name:"SECS"},{type:"input_value",name:"TO"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};Blockly.Blocks.motion_changexby={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_CHANGEXBY,args0:[{type:"input_value",name:"DX"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_setx={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_SETX,args0:[{type:"input_value",name:"X"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};Blockly.Blocks.motion_changeyby={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_CHANGEYBY,args0:[{type:"input_value",name:"DY"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_sety={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_SETY,args0:[{type:"input_value",name:"Y"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};Blockly.Blocks.motion_ifonedgebounce={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_IFONEDGEBOUNCE,category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_setrotationstyle={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_SETROTATIONSTYLE,args0:[{type:"field_dropdown",name:"STYLE",options:[[Blockly.Msg.MOTION_SETROTATIONSTYLE_LEFTRIGHT,"left-right"],[Blockly.Msg.MOTION_SETROTATIONSTYLE_DONTROTATE,"don't rotate"],[Blockly.Msg.MOTION_SETROTATIONSTYLE_ALLAROUND,"all around"]]}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_xposition={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_XPOSITION,category:Blockly.Categories.motion,checkboxInFlyout:!0,extensions:["colours_motion","output_number"]})}};Blockly.Blocks.motion_yposition={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_YPOSITION,category:Blockly.Categories.motion,checkboxInFlyout:!0,extensions:["colours_motion","output_number"]})}};
Blockly.Blocks.motion_direction={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_DIRECTION,category:Blockly.Categories.motion,checkboxInFlyout:!0,extensions:["colours_motion","output_number"]})}};Blockly.Blocks.motion_scroll_right={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_SCROLLRIGHT,args0:[{type:"input_value",name:"DISTANCE"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_scroll_up={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_SCROLLUP,args0:[{type:"input_value",name:"DISTANCE"}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_align_scene={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_ALIGNSCENE,args0:[{type:"field_dropdown",name:"ALIGNMENT",options:[[Blockly.Msg.MOTION_ALIGNSCENE_BOTTOMLEFT,"bottom-left"],[Blockly.Msg.MOTION_ALIGNSCENE_BOTTOMRIGHT,"bottom-right"],[Blockly.Msg.MOTION_ALIGNSCENE_MIDDLE,"middle"],[Blockly.Msg.MOTION_ALIGNSCENE_TOPLEFT,"top-left"],[Blockly.Msg.MOTION_ALIGNSCENE_TOPRIGHT,"top-right"]]}],category:Blockly.Categories.motion,extensions:["colours_motion","shape_statement"]})}};
Blockly.Blocks.motion_xscroll={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_XSCROLL,category:Blockly.Categories.motion,extensions:["colours_motion","output_number"]})}};Blockly.Blocks.motion_yscroll={init:function(){this.jsonInit({message0:Blockly.Msg.MOTION_YSCROLL,category:Blockly.Categories.motion,extensions:["colours_motion","output_number"]})}};Blockly.Blocks.looks={};Blockly.Blocks.looks_sayforsecs={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SAYFORSECS,args0:[{type:"input_value",name:"MESSAGE"},{type:"input_value",name:"SECS"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_say={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SAY,args0:[{type:"input_value",name:"MESSAGE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_thinkforsecs={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_THINKFORSECS,args0:[{type:"input_value",name:"MESSAGE"},{type:"input_value",name:"SECS"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_think={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_THINK,args0:[{type:"input_value",name:"MESSAGE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_show={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SHOW,category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_hide={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_HIDE,category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_hideallsprites={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_HIDEALLSPRITES,category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_changeeffectby={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_CHANGEEFFECTBY,args0:[{type:"field_dropdown",name:"EFFECT",options:[[Blockly.Msg.LOOKS_EFFECT_COLOR,"COLOR"],[Blockly.Msg.LOOKS_EFFECT_FISHEYE,"FISHEYE"],[Blockly.Msg.LOOKS_EFFECT_WHIRL,"WHIRL"],[Blockly.Msg.LOOKS_EFFECT_PIXELATE,"PIXELATE"],[Blockly.Msg.LOOKS_EFFECT_MOSAIC,"MOSAIC"],[Blockly.Msg.LOOKS_EFFECT_BRIGHTNESS,"BRIGHTNESS"],[Blockly.Msg.LOOKS_EFFECT_GHOST,"GHOST"]]},{type:"input_value",name:"CHANGE"}],
category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_seteffectto={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SETEFFECTTO,args0:[{type:"field_dropdown",name:"EFFECT",options:[[Blockly.Msg.LOOKS_EFFECT_COLOR,"COLOR"],[Blockly.Msg.LOOKS_EFFECT_FISHEYE,"FISHEYE"],[Blockly.Msg.LOOKS_EFFECT_WHIRL,"WHIRL"],[Blockly.Msg.LOOKS_EFFECT_PIXELATE,"PIXELATE"],[Blockly.Msg.LOOKS_EFFECT_MOSAIC,"MOSAIC"],[Blockly.Msg.LOOKS_EFFECT_BRIGHTNESS,"BRIGHTNESS"],[Blockly.Msg.LOOKS_EFFECT_GHOST,"GHOST"]]},{type:"input_value",name:"VALUE"}],
category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_cleargraphiceffects={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_CLEARGRAPHICEFFECTS,category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_changesizeby={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_CHANGESIZEBY,args0:[{type:"input_value",name:"CHANGE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_setsizeto={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SETSIZETO,args0:[{type:"input_value",name:"SIZE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_size={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SIZE,category:Blockly.Categories.looks,checkboxInFlyout:!0,extensions:["colours_looks","output_number"]})}};Blockly.Blocks.looks_changestretchby={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_CHANGESTRETCHBY,args0:[{type:"input_value",name:"CHANGE"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_setstretchto={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SETSTRETCHTO,args0:[{type:"input_value",name:"STRETCH"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_costume={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"COSTUME",options:[["costume1","COSTUME1"],["costume2","COSTUME2"]]}],colour:Blockly.Colours.looks.secondary,colourSecondary:Blockly.Colours.looks.secondary,colourTertiary:Blockly.Colours.looks.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.looks_switchcostumeto={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SWITCHCOSTUMETO,args0:[{type:"input_value",name:"COSTUME"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_nextcostume={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_NEXTCOSTUME,category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_switchbackdropto={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SWITCHBACKDROPTO,args0:[{type:"input_value",name:"BACKDROP"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_backdrops={init:function(){this.jsonInit({id:"looks_backdrops",message0:"%1",args0:[{type:"field_dropdown",name:"BACKDROP",options:[["backdrop1","BACKDROP1"]]}],colour:Blockly.Colours.looks.secondary,colourSecondary:Blockly.Colours.looks.secondary,colourTertiary:Blockly.Colours.looks.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.looks_gotofrontback={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_GOTOFRONTBACK,args0:[{type:"field_dropdown",name:"FRONT_BACK",options:[[Blockly.Msg.LOOKS_GOTOFRONTBACK_FRONT,"front"],[Blockly.Msg.LOOKS_GOTOFRONTBACK_BACK,"back"]]}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_goforwardbackwardlayers={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_GOFORWARDBACKWARDLAYERS,args0:[{type:"field_dropdown",name:"FORWARD_BACKWARD",options:[[Blockly.Msg.LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD,"forward"],[Blockly.Msg.LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD,"backward"]]},{type:"input_value",name:"NUM"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};
Blockly.Blocks.looks_backdropnumbername={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_BACKDROPNUMBERNAME,args0:[{type:"field_dropdown",name:"NUMBER_NAME",options:[[Blockly.Msg.LOOKS_NUMBERNAME_NUMBER,"number"],[Blockly.Msg.LOOKS_NUMBERNAME_NAME,"name"]]}],category:Blockly.Categories.looks,checkboxInFlyout:!0,extensions:["colours_looks","output_number"]})}};
Blockly.Blocks.looks_costumenumbername={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_COSTUMENUMBERNAME,args0:[{type:"field_dropdown",name:"NUMBER_NAME",options:[[Blockly.Msg.LOOKS_NUMBERNAME_NUMBER,"number"],[Blockly.Msg.LOOKS_NUMBERNAME_NAME,"name"]]}],category:Blockly.Categories.looks,checkboxInFlyout:!0,extensions:["colours_looks","output_number"]})}};
Blockly.Blocks.looks_switchbackdroptoandwait={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_SWITCHBACKDROPTOANDWAIT,args0:[{type:"input_value",name:"BACKDROP"}],category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.looks_nextbackdrop={init:function(){this.jsonInit({message0:Blockly.Msg.LOOKS_NEXTBACKDROP,category:Blockly.Categories.looks,extensions:["colours_looks","shape_statement"]})}};Blockly.Blocks.sound={};Blockly.Blocks.sound_sounds_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"SOUND_MENU",options:[["1","0"],["2","1"],["3","2"],["4","3"],["5","4"],["6","5"],["7","6"],["8","7"],["9","8"],["10","9"]]}],colour:Blockly.Colours.sounds.secondary,colourSecondary:Blockly.Colours.sounds.secondary,colourTertiary:Blockly.Colours.sounds.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.sound_play={init:function(){this.jsonInit({message0:Blockly.Msg.SOUND_PLAY,args0:[{type:"input_value",name:"SOUND_MENU"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};Blockly.Blocks.sound_playuntildone={init:function(){this.jsonInit({message0:Blockly.Msg.SOUND_PLAYUNTILDONE,args0:[{type:"input_value",name:"SOUND_MENU"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_stopallsounds={init:function(){this.jsonInit({message0:Blockly.Msg.SOUND_STOPALLSOUNDS,category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_seteffectto={init:function(){this.jsonInit({message0:Blockly.Msg.SOUND_SETEFFECTO,args0:[{type:"field_dropdown",name:"EFFECT",options:[[Blockly.Msg.SOUND_EFFECTS_PITCH,"PITCH"],[Blockly.Msg.SOUND_EFFECTS_PAN,"PAN"]]},{type:"input_value",name:"VALUE"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_changeeffectby={init:function(){this.jsonInit({message0:Blockly.Msg.SOUND_CHANGEEFFECTBY,args0:[{type:"field_dropdown",name:"EFFECT",options:[[Blockly.Msg.SOUND_EFFECTS_PITCH,"PITCH"],[Blockly.Msg.SOUND_EFFECTS_PAN,"PAN"]]},{type:"input_value",name:"VALUE"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_cleareffects={init:function(){this.jsonInit({message0:Blockly.Msg.SOUND_CLEAREFFECTS,category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};Blockly.Blocks.sound_changevolumeby={init:function(){this.jsonInit({message0:Blockly.Msg.SOUND_CHANGEVOLUMEBY,args0:[{type:"input_value",name:"VOLUME"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};
Blockly.Blocks.sound_setvolumeto={init:function(){this.jsonInit({message0:Blockly.Msg.SOUND_SETVOLUMETO,args0:[{type:"input_value",name:"VOLUME"}],category:Blockly.Categories.sound,extensions:["colours_sounds","shape_statement"]})}};Blockly.Blocks.sound_volume={init:function(){this.jsonInit({message0:Blockly.Msg.SOUND_VOLUME,category:Blockly.Categories.sound,checkboxInFlyout:!0,extensions:["colours_sounds","output_number"]})}};Blockly.Blocks.event={};Blockly.Blocks.event_whentouchingobject={init:function(){this.jsonInit({message0:Blockly.Msg.EVENT_WHENTOUCHINGOBJECT,args0:[{type:"input_value",name:"TOUCHINGOBJECTMENU"}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_touchingobjectmenu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TOUCHINGOBJECTMENU",options:[[Blockly.Msg.SENSING_TOUCHINGOBJECT_POINTER,"_mouse_"],[Blockly.Msg.SENSING_TOUCHINGOBJECT_EDGE,"_edge_"]]}],extensions:["colours_event","output_string"]})}};
Blockly.Blocks.event_whenflagclicked={init:function(){this.jsonInit({id:"event_whenflagclicked",message0:Blockly.Msg.EVENT_WHENFLAGCLICKED,args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"green-flag.svg",width:24,height:24,alt:"flag"}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_whenthisspriteclicked={init:function(){this.jsonInit({message0:Blockly.Msg.EVENT_WHENTHISSPRITECLICKED,category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};Blockly.Blocks.event_whenstageclicked={init:function(){this.jsonInit({message0:Blockly.Msg.EVENT_WHENSTAGECLICKED,category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_whenbroadcastreceived={init:function(){this.jsonInit({id:"event_whenbroadcastreceived",message0:Blockly.Msg.EVENT_WHENBROADCASTRECEIVED,args0:[{type:"field_variable",name:"BROADCAST_OPTION",variableTypes:[Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE],variable:Blockly.Msg.DEFAULT_BROADCAST_MESSAGE_NAME}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_whenbackdropswitchesto={init:function(){this.jsonInit({message0:Blockly.Msg.EVENT_WHENBACKDROPSWITCHESTO,args0:[{type:"field_dropdown",name:"BACKDROP",options:[["backdrop1","BACKDROP1"]]}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_whengreaterthan={init:function(){this.jsonInit({message0:Blockly.Msg.EVENT_WHENGREATERTHAN,args0:[{type:"field_dropdown",name:"WHENGREATERTHANMENU",options:[[Blockly.Msg.EVENT_WHENGREATERTHAN_LOUDNESS,"LOUDNESS"],[Blockly.Msg.EVENT_WHENGREATERTHAN_TIMER,"TIMER"]]},{type:"input_value",name:"VALUE"}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};
Blockly.Blocks.event_broadcast_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_variable",name:"BROADCAST_OPTION",variableTypes:[Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE],variable:Blockly.Msg.DEFAULT_BROADCAST_MESSAGE_NAME}],colour:Blockly.Colours.event.secondary,colourSecondary:Blockly.Colours.event.secondary,colourTertiary:Blockly.Colours.event.tertiary,extensions:["output_string"]})}};
Blockly.Blocks.event_broadcast={init:function(){this.jsonInit({id:"event_broadcast",message0:Blockly.Msg.EVENT_BROADCAST,args0:[{type:"input_value",name:"BROADCAST_INPUT"}],category:Blockly.Categories.event,extensions:["colours_event","shape_statement"]})}};Blockly.Blocks.event_broadcastandwait={init:function(){this.jsonInit({message0:Blockly.Msg.EVENT_BROADCASTANDWAIT,args0:[{type:"input_value",name:"BROADCAST_INPUT"}],category:Blockly.Categories.event,extensions:["colours_event","shape_statement"]})}};
Blockly.Blocks.event_whenkeypressed={init:function(){this.jsonInit({id:"event_whenkeypressed",message0:Blockly.Msg.EVENT_WHENKEYPRESSED,args0:[{type:"field_dropdown",name:"KEY_OPTION",options:[[Blockly.Msg.EVENT_WHENKEYPRESSED_SPACE,"space"],[Blockly.Msg.EVENT_WHENKEYPRESSED_LEFT,"left arrow"],[Blockly.Msg.EVENT_WHENKEYPRESSED_RIGHT,"right arrow"],[Blockly.Msg.EVENT_WHENKEYPRESSED_DOWN,"down arrow"],[Blockly.Msg.EVENT_WHENKEYPRESSED_UP,"up arrow"],[Blockly.Msg.EVENT_WHENKEYPRESSED_ANY,"any"],["a",
"a"],["b","b"],["c","c"],["d","d"],["e","e"],["f","f"],["g","g"],["h","h"],["i","i"],["j","j"],["k","k"],["l","l"],["m","m"],["n","n"],["o","o"],["p","p"],["q","q"],["r","r"],["s","s"],["t","t"],["u","u"],["v","v"],["w","w"],["x","x"],["y","y"],["z","z"],["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"]]}],category:Blockly.Categories.event,extensions:["colours_event","shape_hat"]})}};Blockly.Blocks.extensions={};Blockly.Blocks.extension_pen_down={init:function(){this.jsonInit({message0:"%1 %2 pen down",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/pen-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"}],category:Blockly.Categories.more,extensions:["colours_more","shape_statement","scratch_extension"]})}};
Blockly.Blocks.extension_music_drum={init:function(){this.jsonInit({message0:"%1 %2 play drum %3",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/music-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"},{type:"input_value",name:"NUMBER"}],category:Blockly.Categories.more,extensions:["colours_more","shape_statement","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_motor={init:function(){this.jsonInit({message0:"%1 %2 turn a motor %3",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/wedo2-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"},{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"rotate-right.svg",width:24,height:24}],category:Blockly.Categories.more,extensions:["colours_more","shape_statement","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_hat={init:function(){this.jsonInit({message0:"%1 %2 when I am wearing a hat",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/wedo2-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"}],category:Blockly.Categories.more,extensions:["colours_more","shape_hat","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_boolean={init:function(){this.jsonInit({message0:"%1 %2 O RLY?",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/wedo2-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"}],category:Blockly.Categories.more,extensions:["colours_more","output_boolean","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_tilt_reporter={init:function(){this.jsonInit({message0:"%1 %2 tilt angle %3",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/wedo2-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"},{type:"input_value",name:"TILT"}],category:Blockly.Categories.more,extensions:["colours_more","output_number","scratch_extension"]})}};
Blockly.Blocks.extension_wedo_tilt_menu={init:function(){this.jsonInit({message0:"%1",args0:[{type:"field_dropdown",name:"TILT",options:[["Any","Any"],["Whirl","Whirl"],["South","South"],["Back in time","Back in time"]]}],extensions:["colours_more","output_string"]})}};
Blockly.Blocks.extension_music_reporter={init:function(){this.jsonInit({message0:"%1 %2 hey now, you're an all-star",args0:[{type:"field_image",src:Blockly.mainWorkspace.options.pathToMedia+"extensions/music-block-icon.svg",width:40,height:40},{type:"field_vertical_separator"}],category:Blockly.Categories.more,extensions:["colours_more","output_number","scratch_extension"]})}};


/*** EXPORTS FROM exports-loader ***/
module.exports = Blockly;


/***/ }),
/* 67 */
/***/ (function(module, exports) {

/*** IMPORTS FROM imports-loader ***/
(function() {

// Do not edit this file; automatically generated by build.py.
'use strict';

var $jscomp=$jscomp||{};$jscomp.scope={};var COMPILED=!0,goog=goog||{};goog.global=this;goog.isDef=function(a){return void 0!==a};goog.isString=function(a){return"string"==typeof a};goog.isBoolean=function(a){return"boolean"==typeof a};goog.isNumber=function(a){return"number"==typeof a};
goog.exportPath_=function(a,b,c){a=a.split(".");c=c||goog.global;a[0]in c||!c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]&&c[d]!==Object.prototype[d]?c[d]:c[d]={}};
goog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}goog.exportPath_(a,b)};goog.DEBUG=!1;goog.LOCALE="en";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;
goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide can not be used within a goog.module.");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var c=a;(c=c.substring(0,c.lastIndexOf(".")))&&!goog.getObjectByName(c);)goog.implicitNamespaces_[c]=!0}goog.exportPath_(a,b)};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};
goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a];if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return null!=goog.moduleLoaderState_};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};
goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&goog.isDefAndNotNull(goog.getObjectByName(a))},goog.implicitNamespaces_={"goog.module":!0});
goog.getObjectByName=function(a,b){a=a.split(".");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],!goog.isDefAndNotNull(b))return null;return b};goog.globalize=function(a,b){b=b||goog.global;for(var c in a)b[c]=a[c]};goog.addDependency=function(a,b,c,d){if(goog.DEPENDENCIES_ENABLED){var e=goog.getLoader_();e&&e.addDependency(a,b,c,d)}};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};
goog.require=function(a){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_&&goog.getLoader_().earlyProcessLoad(a);if(!COMPILED){if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{var c=goog.getLoader_();c?c.load(a):goog.logToConsole_("Could not load "+a+" because there is no debug loader.")}finally{goog.moduleLoaderState_=b}}return null}};goog.basePath="";
goog.nullFunction=function(){};goog.abstractMethod=function(){throw Error("unimplemented abstract method");};goog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE="detect";goog.TRANSPILER="transpile.js";goog.DEBUG_LOADER="";goog.hasBadLetScoping=null;goog.useSafari10Workaround=function(){if(null==goog.hasBadLetScoping){try{var a=!eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";')}catch(b){a=!1}goog.hasBadLetScoping=a}return goog.hasBadLetScoping};goog.workaroundSafari10EvalBug=function(a){return"(function(){"+a+"\n;})();\n"};
goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1};if(goog.isFunction(a))var c=a.call(void 0,{});else if(goog.isString(a))goog.useSafari10Workaround()&&(a=goog.workaroundSafari10EvalBug(a)),c=goog.loadModuleFromSource_.call(void 0,a);else throw Error("Invalid module definition");var d=goog.moduleLoaderState_.moduleName;if(goog.isString(d)&&d)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(d,c):goog.SEAL_MODULE_EXPORTS&&
Object.seal&&"object"==typeof c&&null!=c&&Object.seal(c),goog.loadedModules_[d]=c;else throw Error('Invalid module name "'+d+'"');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a){eval(a);return{}};goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};
goog.transpile_=function(a,b){var c=goog.global.$jscomp;c||(goog.global.$jscomp=c={});var d=c.transpile;if(!d){var e=goog.basePath+goog.TRANSPILER,f=goog.loadFileSync_(e);if(f){(function(){eval(f+"\n//# sourceURL="+e)}).call(goog.global);if(goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=goog.global.$gwtExport.$jscomp.transpile;
c=goog.global.$jscomp;d=c.transpile}}d||(d=c.transpile=function(a,b){goog.logToConsole_(b+" requires transpilation but no transpiler was found.");return a});return d(a,b)};
goog.typeOf=function(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return"array"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isFunction=function(a){return"function"==goog.typeOf(a)};
goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;
goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if(a.clone)return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};
goog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,"JavaScript");else if(goog.global.eval){if(null==goog.evalWorksForGlobals_){try{goog.global.eval("var _evalTest_ = 1;")}catch(d){}if("undefined"!=typeof goog.global._evalTest_){try{delete goog.global._evalTest_}catch(d){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1}if(goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement("SCRIPT");c.type="text/javascript";c.defer=
!1;c.appendChild(b.createTextNode(a));b.head.appendChild(c);b.head.removeChild(c)}}else throw Error("goog.globalEval not available");};goog.evalWorksForGlobals_=null;
goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split("-");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(a){return a};a=b?a+"-"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b){b&&(a=a.replace(/\{\$([^}]+)}/g,function(a,d){return null!=b&&d in b?b[d]:a}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)};goog.exportProperty=function(a,b,c){a[b]=c};
goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};
goog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if(d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}e=Array(arguments.length-2);for(f=2;f<arguments.length;f++)e[f-2]=arguments[f];f=!1;for(var g=a.constructor;g;g=
g.superClass_&&g.superClass_.constructor)if(g.prototype[b]===d)f=!0;else if(f)return g.prototype[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error("goog.base called from a method of one name to a method of a different name");};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a goog.module.");a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);
goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;
goog.defineClass.createSealingConstructor_=function(a,b){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return a;var c=!goog.defineClass.isUnsealable_(b),d=function(){var b=a.apply(this,arguments)||this;b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_];this.constructor===d&&c&&Object.seal instanceof Function&&Object.seal(b);return b};return d};goog.defineClass.isUnsealable_=function(a){return a&&a.prototype&&a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.tagUnsealableClass=function(a){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable";
goog.DEPENDENCIES_ENABLED&&(goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;a=b?[b]:a.getElementsByTagName("SCRIPT");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?");d=-1==d?c.length:d;if("base.js"==c.substr(d-
7,7)){goog.basePath=c.substr(0,d-7);break}}}},goog.findBasePath_(),goog.Transpiler=function(){this.requiresTranspilation_=null},goog.Transpiler.prototype.createRequiresTranspilation_=function(){function a(a,b){d?c[a]=!0:b()?c[a]=!1:d=c[a]=!0}function b(a){try{return!!eval(a)}catch(g){return!1}}var c={es3:!1},d=!1,e=goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";a("es5",function(){return b("[1,].length==1")});a("es6",function(){var a=e.match(/Edge\/(\d+)(\.\d)*/i);
return a&&15>Number(a[1])?!1:b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')});a("es6-impl",function(){return!0});a("es7",function(){return b("2 ** 2 == 4")});a("es8",function(){return b("async () => 1, true")});a("es_next",function(){return b("({...rest} = {}), true")});
return c},goog.Transpiler.prototype.needsTranspile=function(a){if("always"==goog.TRANSPILE)return!0;if("never"==goog.TRANSPILE)return!1;this.requiresTranspilation_||(this.requiresTranspilation_=this.createRequiresTranspilation_());if(a in this.requiresTranspilation_)return this.requiresTranspilation_[a];throw Error("Unknown language mode: "+a);},goog.Transpiler.prototype.transpile=function(a,b){return goog.transpile_(a,b)},goog.transpiler_=new goog.Transpiler,goog.DebugLoader=function(){this.dependencies_=
{loadFlags:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}};this.oldIeWaiting_=!1;this.queuedModules_=[];this.lastNonModuleScriptIndex_=0},goog.DebugLoader.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.DebugLoader.prototype.earlyProcessLoad=function(a){goog.DebugLoader.IS_OLD_IE_&&this.maybeProcessDeferredDep_(a)},goog.DebugLoader.prototype.load=function(a){var b=this.getPathFromDeps_(a);if(b){var c=[],d={},e=this.dependencies_,f=this,g=function(a){if(!(a in
e.written||a in e.visited)){e.visited[a]=!0;if(a in e.requires)for(var b in e.requires[a])if(!f.isProvided(b))if(b in e.nameToPath)g(e.nameToPath[b]);else throw Error("Undefined nameToPath for "+b);a in d||(d[a]=!0,c.push(a))}};g(b);for(a=0;a<c.length;a++)b=c[a],this.dependencies_.written[b]=!0;for(a=0;a<c.length;a++)if(b=c[a]){var h=e.loadFlags[b]||{},k=h.lang||"es3";k=this.getTranspiler().needsTranspile(k);"goog"==h.module||k?this.importProcessedScript_(goog.basePath+b,"goog"==h.module,k):this.importScript_(goog.basePath+
b)}else throw Error("Undefined script input");}else throw a="goog.require could not find: "+a,this.logToConsole(a),Error(a);},goog.DebugLoader.prototype.addDependency=function(a,b,c,d){var e;a=a.replace(/\\/g,"/");var f=this.dependencies_;d&&"boolean"!==typeof d||(d=d?{module:"goog"}:{});for(var g=0;e=b[g];g++)f.nameToPath[e]=a,f.loadFlags[a]=d;for(d=0;b=c[d];d++)a in f.requires||(f.requires[a]={}),f.requires[a][b]=!0},goog.DebugLoader.prototype.importScript_=function(a,b){(goog.global.CLOSURE_IMPORT_SCRIPT||
goog.bind(this.writeScriptTag_,this))(a,b)&&(this.dependencies_.written[a]=!0)},goog.DebugLoader.prototype.importProcessedScript_=function(a,b,c){this.importScript_("",'goog.debugLoader_.retrieveAndExec_("'+a+'", '+b+", "+c+");")},goog.DebugLoader.prototype.retrieveAndExec_=function(a,b,c){if(!COMPILED){var d=a;a=this.normalizePath(a);var e=goog.global.CLOSURE_IMPORT_SCRIPT||goog.bind(this.writeScriptTag_,this),f=this.loadFileSync(a);if(null==f)throw Error('Load of "'+a+'" failed');c&&(f=this.getTranspiler().transpile(f,
a));f=b?this.wrapModule_(a,f):f+("\n//# sourceURL="+a);goog.DebugLoader.IS_OLD_IE_&&this.oldIeWaiting_?(this.dependencies_.deferred[d]=f,this.queuedModules_.push(d)):e(a,f)}},goog.DebugLoader.prototype.wrapModule_=function(a,b){return goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(b+"\n//# sourceURL="+a+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+b+"\n;return exports});\n//# sourceURL="+a+"\n"},goog.DebugLoader.prototype.loadQueuedModules_=
function(){var a=this.queuedModules_.length;if(0<a){var b=this.queuedModules_;this.queuedModules_=[];for(var c=0;c<a;c++)this.maybeProcessDeferredPath_(b[c])}this.oldIeWaiting_=!1},goog.DebugLoader.prototype.maybeProcessDeferredDep_=function(a){this.isDeferredModule_(a)&&this.allDepsAreAvailable_(a)&&(a=this.getPathFromDeps_(a),this.maybeProcessDeferredPath_(goog.basePath+a))},goog.DebugLoader.prototype.isDeferredModule_=function(a){var b=(a=this.getPathFromDeps_(a))&&this.dependencies_.loadFlags[a]||
{},c=b.lang||"es3";return a&&("goog"==b.module||this.getTranspiler().needsTranspile(c))?goog.basePath+a in this.dependencies_.deferred:!1},goog.DebugLoader.prototype.allDepsAreAvailable_=function(a){if((a=this.getPathFromDeps_(a))&&a in this.dependencies_.requires)for(var b in this.dependencies_.requires[a])if(!this.isProvided(b)&&!this.isDeferredModule_(b))return!1;return!0},goog.DebugLoader.prototype.maybeProcessDeferredPath_=function(a){if(a in this.dependencies_.deferred){var b=this.dependencies_.deferred[a];
delete this.dependencies_.deferred[a];goog.globalEval(b)}},goog.DebugLoader.prototype.writeScriptSrcNode_=function(a){goog.global.document.write('<script type="text/javascript" src="'+a+'">\x3c/script>')},goog.DebugLoader.prototype.appendScriptSrcNode_=function(a){var b=goog.global.document,c=b.createElement("script");c.type="text/javascript";c.src=a;c.defer=!1;c.async=!1;b.head.appendChild(c)},goog.DebugLoader.prototype.writeScriptTag_=function(a,b){if(this.inHtmlDocument()){var c=goog.global.document;
if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&"complete"==c.readyState){if(/\bdeps.js$/.test(a))return!1;throw Error('Cannot write "'+a+'" after document load');}void 0===b?goog.DebugLoader.IS_OLD_IE_?(this.oldIeWaiting_=!0,b=" onreadystatechange='goog.debugLoader_.onScriptLoad_(this, "+ ++this.lastNonModuleScriptIndex_+")' ",c.write('<script type="text/javascript" src="'+a+'"'+b+">\x3c/script>")):goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING?this.appendScriptSrcNode_(a):this.writeScriptSrcNode_(a):
c.write('<script type="text/javascript">'+this.protectScriptTag_(b)+"\x3c/script>");return!0}return!1},goog.DebugLoader.prototype.protectScriptTag_=function(a){return a.replace(/<\/(SCRIPT)/ig,"\\x3c/$1")},goog.DebugLoader.prototype.onScriptLoad_=function(a,b){"complete"==a.readyState&&this.lastNonModuleScriptIndex_==b&&this.loadQueuedModules_();return!0},goog.DebugLoader.prototype.getPathFromDeps_=function(a){return a in this.dependencies_.nameToPath?this.dependencies_.nameToPath[a]:null},goog.DebugLoader.prototype.getTranspiler=
function(){return goog.transpiler_},goog.DebugLoader.prototype.isProvided=function(a){return goog.isProvided_(a)},goog.DebugLoader.prototype.inHtmlDocument=function(){return goog.inHtmlDocument_()},goog.DebugLoader.prototype.logToConsole=function(a){goog.logToConsole_(a)},goog.DebugLoader.prototype.loadFileSync=function(a){return goog.loadFileSync_(a)},goog.DebugLoader.prototype.normalizePath=function(a){return goog.normalizePath_(a)},goog.debugLoader_=null,goog.registerDebugLoader=function(a){if(goog.debugLoader_)throw Error("Debug loader already registered!");
if(!(a instanceof goog.DebugLoader))throw Error("Not a goog.DebugLoader.");goog.debugLoader_=a},goog.getLoader_=function(){if(!goog.debugLoader_&&goog.DEBUG_LOADER)throw Error("Loaded debug loader file but no loader was registered!");goog.debugLoader_||(goog.debugLoader_=new goog.DebugLoader);return goog.debugLoader_},function(){if(goog.DEBUG_LOADER){var a=new goog.DebugLoader;a.importScript_(goog.basePath+goog.DEBUG_LOADER)}goog.global.CLOSURE_NO_DEPS||(a=a||new goog.DebugLoader,goog.DEBUG_LOADER||
goog.registerDebugLoader(a),a.importScript_(goog.basePath+"deps.js"))}());
var Blockly={};Blockly.Blocks=Object(null);/*

 Visual Blocks Editor

 Copyright 2016 Massachusetts Institute of Technology
 All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
Blockly.Colours={motion:{primary:"#4C97FF",secondary:"#4280D7",tertiary:"#3373CC"},looks:{primary:"#9966FF",secondary:"#855CD6",tertiary:"#774DCB"},sounds:{primary:"#CF63CF",secondary:"#C94FC9",tertiary:"#BD42BD"},control:{primary:"#FFAB19",secondary:"#EC9C13",tertiary:"#CF8B17"},event:{primary:"#FFBF00",secondary:"#E6AC00",tertiary:"#CC9900"},sensing:{primary:"#5CB1D6",secondary:"#47A8D1",tertiary:"#2E8EB8"},pen:{primary:"#0fBD8C",secondary:"#0DA57A",tertiary:"#0B8E69"},operators:{primary:"#59C059",
secondary:"#46B946",tertiary:"#389438"},data:{primary:"#FF8C1A",secondary:"#FF8000",tertiary:"#DB6E00"},data_lists:{primary:"#FF661A",secondary:"#FF5500",tertiary:"#E64D00"},more:{primary:"#FF6680",secondary:"#FF4D6A",tertiary:"#FF3355"},text:"#575E75",workspace:"#F9F9F9",toolboxHover:"#4C97FF",toolboxSelected:"#e9eef2",toolboxText:"#575E75",toolbox:"#FFFFFF",flyout:"#F9F9F9",scrollbar:"#CECDCE",scrollbarHover:"#CECDCE",textField:"#FFFFFF",insertionMarker:"#000000",insertionMarkerOpacity:.2,dragShadowOpacity:.3,
stackGlow:"#FFF200",stackGlowSize:4,stackGlowOpacity:1,replacementGlow:"#FFFFFF",replacementGlowSize:2,replacementGlowOpacity:1,colourPickerStroke:"#FFFFFF",fieldShadow:"rgba(0,0,0,0.1)",dropDownShadow:"rgba(0, 0, 0, .3)",numPadBackground:"#547AB2",numPadBorder:"#435F91",numPadActiveBackground:"#435F91",numPadText:"#FFFFFF",valueReportBackground:"#FFFFFF",valueReportBorder:"#AAAAAA"};goog.debug={};goog.debug.Error=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a));this.reportErrorToServer=!0};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name="CustomError";goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;goog.asserts.AssertionError=function(a,b){goog.debug.Error.call(this,goog.asserts.subs_(a,b));this.messagePattern=a};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);goog.asserts.AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_=function(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");return c+a[d]};goog.asserts.doAssertFailure_=function(a,b,c,d){var e="Assertion failed";if(c){e+=": "+c;var f=d}else a&&(e+=": "+a,f=b);a=new goog.asserts.AssertionError(""+e,f||[]);goog.asserts.errorHandler_(a)};goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=a)};
goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&goog.asserts.doAssertFailure_("",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1)))};
goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(a)&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isString(a)&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(a)&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isArray(a)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(a)&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(b),goog.asserts.getType_(a)],c,Array.prototype.slice.call(arguments,3));return a};goog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||"number"==typeof a&&isFinite(a)||goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObjectPrototypeIsIntact=function(){for(var a in Object.prototype)goog.asserts.fail(a+" should not be enumerable in Object.prototype.")};goog.asserts.getType_=function(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};goog.debug.entryPointRegistry={};goog.debug.EntryPointMonitor=function(){};goog.debug.entryPointRegistry.refList_=[];goog.debug.entryPointRegistry.monitors_=[];goog.debug.entryPointRegistry.monitorsMayExist_=!1;goog.debug.entryPointRegistry.register=function(a){goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length]=a;if(goog.debug.entryPointRegistry.monitorsMayExist_)for(var b=goog.debug.entryPointRegistry.monitors_,c=0;c<b.length;c++)a(goog.bind(b[c].wrap,b[c]))};
goog.debug.entryPointRegistry.monitorAll=function(a){goog.debug.entryPointRegistry.monitorsMayExist_=!0;for(var b=goog.bind(a.wrap,a),c=0;c<goog.debug.entryPointRegistry.refList_.length;c++)goog.debug.entryPointRegistry.refList_[c](b);goog.debug.entryPointRegistry.monitors_.push(a)};
goog.debug.entryPointRegistry.unmonitorAllIfPossible=function(a){var b=goog.debug.entryPointRegistry.monitors_;goog.asserts.assert(a==b[b.length-1],"Only the most recent monitor can be unwrapped.");a=goog.bind(a.unwrap,a);for(var c=0;c<goog.debug.entryPointRegistry.refList_.length;c++)goog.debug.entryPointRegistry.refList_[c](a);b.length--};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;goog.array.ASSUME_NATIVE_FUNCTIONS=!1;goog.array.peek=function(a){return a[a.length-1]};goog.array.last=goog.array.peek;
goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(goog.isString(a))return goog.isString(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};
goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(goog.isString(a))return goog.isString(b)&&1==b.length?a.lastIndexOf(b,c):-1;for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};
goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEachRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a)};
goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=goog.isString(a)?a.split(""):a,h=0;h<d;h++)if(h in g){var k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};
goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=goog.isString(a)?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};
goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEach(a,function(c,g){e=b.call(d,e,c,g,a)});return e};
goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEachRight(a,function(c,g){e=b.call(d,e,c,g,a)});return e};
goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};
goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.count=function(a,b,c){var d=0;goog.array.forEach(a,function(a,f,g){b.call(c,a,f,g)&&++d},c);return d};
goog.array.find=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};goog.array.findIndex=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1};goog.array.findRight=function(a,b,c){b=goog.array.findIndexRight(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};
goog.array.findIndexRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1};goog.array.contains=function(a,b){return 0<=goog.array.indexOf(a,b)};goog.array.isEmpty=function(a){return 0==a.length};goog.array.clear=function(a){if(!goog.isArray(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0};goog.array.insert=function(a,b){goog.array.contains(a,b)||a.push(b)};
goog.array.insertAt=function(a,b,c){goog.array.splice(a,c,0,b)};goog.array.insertArrayAt=function(a,b,c){goog.partial(goog.array.splice,a,c,0).apply(null,b)};goog.array.insertBefore=function(a,b,c){var d;2==arguments.length||0>(d=goog.array.indexOf(a,c))?a.push(b):goog.array.insertAt(a,b,d)};goog.array.remove=function(a,b){b=goog.array.indexOf(a,b);var c;(c=0<=b)&&goog.array.removeAt(a,b);return c};
goog.array.removeLast=function(a,b){b=goog.array.lastIndexOf(a,b);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAt=function(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length};goog.array.removeIf=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAllIf=function(a,b,c){var d=0;goog.array.forEachRight(a,function(e,f){b.call(c,e,f,a)&&goog.array.removeAt(a,f)&&d++});return d};
goog.array.concat=function(a){return Array.prototype.concat.apply([],arguments)};goog.array.join=function(a){return Array.prototype.concat.apply([],arguments)};goog.array.toArray=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};goog.array.clone=goog.array.toArray;goog.array.extend=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(goog.isArrayLike(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}};
goog.array.splice=function(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,goog.array.slice(arguments,1))};goog.array.slice=function(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};
goog.array.removeDuplicates=function(a,b,c){b=b||a;var d=function(a){return goog.isObject(a)?"o"+goog.getUid(a):(typeof a).charAt(0)+a};c=c||d;d={};for(var e=0,f=0;f<a.length;){var g=a[f++],h=c(g);Object.prototype.hasOwnProperty.call(d,h)||(d[h]=!0,b[e++]=g)}b.length=e};goog.array.binarySearch=function(a,b,c){return goog.array.binarySearch_(a,c||goog.array.defaultCompare,!1,b)};goog.array.binarySelect=function(a,b,c){return goog.array.binarySearch_(a,b,!0,void 0,c)};
goog.array.binarySearch_=function(a,b,c,d,e){for(var f=0,g=a.length,h;f<g;){var k=f+g>>1;var m=c?b.call(e,a[k],k,a):b(d,a[k]);0<m?f=k+1:(g=k,h=!m)}return h?f:~f};goog.array.sort=function(a,b){a.sort(b||goog.array.defaultCompare)};goog.array.stableSort=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]={index:d,value:a[d]};var e=b||goog.array.defaultCompare;goog.array.sort(c,function(a,b){return e(a.value,b.value)||a.index-b.index});for(d=0;d<a.length;d++)a[d]=c[d].value};
goog.array.sortByKey=function(a,b,c){var d=c||goog.array.defaultCompare;goog.array.sort(a,function(a,c){return d(b(a),b(c))})};goog.array.sortObjectsByKey=function(a,b,c){goog.array.sortByKey(a,function(a){return a[b]},c)};goog.array.isSorted=function(a,b,c){b=b||goog.array.defaultCompare;for(var d=1;d<a.length;d++){var e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0};
goog.array.equals=function(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;var d=a.length;c=c||goog.array.defaultCompareEquality;for(var e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0};goog.array.compare3=function(a,b,c){c=c||goog.array.defaultCompare;for(var d=Math.min(a.length,b.length),e=0;e<d;e++){var f=c(a[e],b[e]);if(0!=f)return f}return goog.array.defaultCompare(a.length,b.length)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};
goog.array.inverseDefaultCompare=function(a,b){return-goog.array.defaultCompare(a,b)};goog.array.defaultCompareEquality=function(a,b){return a===b};goog.array.binaryInsert=function(a,b,c){c=goog.array.binarySearch(a,b,c);return 0>c?(goog.array.insertAt(a,b,-(c+1)),!0):!1};goog.array.binaryRemove=function(a,b,c){b=goog.array.binarySearch(a,b,c);return 0<=b?goog.array.removeAt(a,b):!1};
goog.array.bucket=function(a,b,c){for(var d={},e=0;e<a.length;e++){var f=a[e],g=b.call(c,f,e,a);goog.isDef(g)&&(d[g]||(d[g]=[])).push(f)}return d};goog.array.toObject=function(a,b,c){var d={};goog.array.forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d};goog.array.range=function(a,b,c){var d=[],e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d};
goog.array.repeat=function(a,b){for(var c=[],d=0;d<b;d++)c[d]=a;return c};goog.array.flatten=function(a){for(var b=[],c=0;c<arguments.length;c++){var d=arguments[c];if(goog.isArray(d))for(var e=0;e<d.length;e+=8192){var f=goog.array.slice(d,e,e+8192);f=goog.array.flatten.apply(null,f);for(var g=0;g<f.length;g++)b.push(f[g])}else b.push(d)}return b};
goog.array.rotate=function(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a};goog.array.moveItem=function(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])};
goog.array.zip=function(a){if(!arguments.length)return[];for(var b=[],c=arguments[0].length,d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){for(var e=[],f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b};goog.array.shuffle=function(a,b){b=b||Math.random;for(var c=a.length-1;0<c;c--){var d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e}};goog.array.copyByIndex=function(a,b){var c=[];goog.array.forEach(b,function(b){c.push(a[b])});return c};
goog.array.concatMap=function(a,b,c){return goog.array.concat.apply([],goog.array.map(a,b,c))};goog.debug.errorcontext={};goog.debug.errorcontext.addErrorContext=function(a,b,c){a[goog.debug.errorcontext.CONTEXT_KEY_]||(a[goog.debug.errorcontext.CONTEXT_KEY_]={});a[goog.debug.errorcontext.CONTEXT_KEY_][b]=c};goog.debug.errorcontext.getErrorContext=function(a){return a[goog.debug.errorcontext.CONTEXT_KEY_]||{}};goog.debug.errorcontext.CONTEXT_KEY_="__closure__error__context__984382";goog.string={};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:"\u00a0"};goog.string.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.endsWith=function(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(0,b.length))};
goog.string.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(a.length-b.length,b.length))};goog.string.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.subs=function(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")};goog.string.collapseWhitespace=function(a){return a.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};
goog.string.isEmptyOrWhitespace=function(a){return/^[\s\xa0]*$/.test(a)};goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\t\n\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};
goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return" "==a};goog.string.isUnicodeChar=function(a){return 1==a.length&&" "<=a&&"~">=a||"\u0080"<=a&&"\ufffd">=a};goog.string.stripNewlines=function(a){return a.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\r\n|\r|\n)/g,"\n")};
goog.string.normalizeWhitespace=function(a){return a.replace(/\xa0|\s/g," ")};goog.string.normalizeSpaces=function(a){return a.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]};goog.string.trimLeft=function(a){return a.replace(/^[\s\xa0]+/,"")};
goog.string.trimRight=function(a){return a.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};
goog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;for(var d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length),g=0;g<f;g++){c=d[g];var h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\D+/g)};
goog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\+/g," "))};goog.string.newLineToBr=function(a,b){return a.replace(/(\r\n|\r|\n)/g,b?"<br />":"<br>")};
goog.string.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.AMP_RE_,"&amp;").replace(goog.string.LT_RE_,"&lt;").replace(goog.string.GT_RE_,"&gt;").replace(goog.string.QUOT_RE_,"&quot;").replace(goog.string.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.NULL_RE_,"&#0;"),goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,"&#101;"));else{if(!goog.string.ALL_RE_.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(goog.string.AMP_RE_,"&amp;"));-1!=a.indexOf("<")&&(a=a.replace(goog.string.LT_RE_,
"&lt;"));-1!=a.indexOf(">")&&(a=a.replace(goog.string.GT_RE_,"&gt;"));-1!=a.indexOf('"')&&(a=a.replace(goog.string.QUOT_RE_,"&quot;"));-1!=a.indexOf("'")&&(a=a.replace(goog.string.SINGLE_QUOTE_RE_,"&#39;"));-1!=a.indexOf("\x00")&&(a=a.replace(goog.string.NULL_RE_,"&#0;"));goog.string.DETECT_DOUBLE_ESCAPING&&-1!=a.indexOf("e")&&(a=a.replace(goog.string.E_RE_,"&#101;"))}return a};goog.string.AMP_RE_=/&/g;goog.string.LT_RE_=/</g;goog.string.GT_RE_=/>/g;goog.string.QUOT_RE_=/"/g;
goog.string.SINGLE_QUOTE_RE_=/'/g;goog.string.NULL_RE_=/\x00/g;goog.string.E_RE_=/e/g;goog.string.ALL_RE_=goog.string.DETECT_DOUBLE_ESCAPING?/[\x00&<>"'e]/:/[\x00&<>"']/;goog.string.unescapeEntities=function(a){return goog.string.contains(a,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};
goog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,"&")?goog.string.unescapeEntitiesUsingDom_(a,b):a};
goog.string.unescapeEntitiesUsingDom_=function(a,b){var c={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};var d=b?b.createElement("div"):goog.global.document.createElement("div");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(a,b){var e=c[a];if(e)return e;"#"==b.charAt(0)&&(b=Number("0"+b.substr(1)),isNaN(b)||(e=String.fromCharCode(b)));e||(d.innerHTML=a+" ",e=d.firstChild.nodeValue.slice(0,-1));return c[a]=e})};
goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(a,c){switch(c){case "amp":return"&";case "lt":return"<";case "gt":return">";case "quot":return'"';default:return"#"!=c.charAt(0)||(c=Number("0"+c.substr(1)),isNaN(c))?a:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g," &#160;"),b)};
goog.string.preserveSpaces=function(a){return a.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){for(var c=b.length,d=0;d<c;d++){var e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+"...");c&&(a=goog.string.htmlEscape(a));return a};
goog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+"..."+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+"..."+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={"\x00":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\x0B",'"':'\\"',"\\":"\\\\","<":"<"};goog.string.jsEscapeCache_={"'":"\\'"};
goog.string.quote=function(a){a=String(a);for(var b=['"'],c=0;c<a.length;c++){var d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('"');return b.join("")};goog.string.escapeString=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join("")};
goog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];var b=a.charCodeAt(0);if(31<b&&127>b)var c=a;else{if(256>b){if(c="\\x",16>b||256<b)c+="0"}else c="\\u",4096>b&&(c+="0");c+=b.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=c};goog.string.contains=function(a,b){return-1!=a.indexOf(b)};
goog.string.caseInsensitiveContains=function(a,b){return goog.string.contains(a.toLowerCase(),b.toLowerCase())};goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){var d=a;0<=b&&b<a.length&&0<c&&(d=a.substr(0,b)+a.substr(b+c,a.length-b-c));return d};goog.string.remove=function(a,b){return a.replace(b,"")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,"")};
goog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,c.replace(/\$/g,"$$$$"))};goog.string.regExpEscape=function(a){return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};
goog.string.padNumber=function(a,b,c){a=goog.isDef(c)?a.toFixed(c):String(a);c=a.indexOf(".");-1==c&&(c=a.length);return goog.string.repeat("0",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?"":String(a)};goog.string.buildString=function(a){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};
goog.string.compareVersions=function(a,b){var c=0;a=goog.string.trim(String(a)).split(".");b=goog.string.trim(String(b)).split(".");for(var d=Math.max(a.length,b.length),e=0;0==c&&e<d;e++){var f=a[e]||"",g=b[e]||"";do{f=/(\d*)(\D*)(.*)/.exec(f)||["","","",""];g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""];if(0==f[0].length&&0==g[0].length)break;c=0==f[1].length?0:parseInt(f[1],10);var h=0==g[1].length?0:parseInt(g[1],10);c=goog.string.compareElements_(c,h)||goog.string.compareElements_(0==f[2].length,
0==g[2].length)||goog.string.compareElements_(f[2],g[2]);f=f[3];g=g[3]}while(0==c)}return c};goog.string.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.string.hashCode=function(a){for(var b=0,c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};
goog.string.toNumber=function(a){var b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\-([a-z])/g,function(a,c){return c.toUpperCase()})};goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,"-$1").toLowerCase()};
goog.string.toTitleCase=function(a,b){b=goog.isString(b)?goog.string.regExpEscape(b):"\\s";return a.replace(new RegExp("(^"+(b?"|["+b+"]+":"")+")([a-z])","g"),function(a,b,e){return b+e.toUpperCase()})};goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()};goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return goog.isString(a)?/^\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};
goog.string.splitLimit=function(a,b,c){a=a.split(b);for(var d=[];0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};goog.string.lastComponent=function(a,b){if(b)"string"==typeof b&&(b=[b]);else return a;for(var c=-1,d=0;d<b.length;d++)if(""!=b[d]){var e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)};
goog.string.editDistance=function(a,b){var c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.labs={};goog.labs.userAgent={};goog.labs.userAgent.util={};goog.labs.userAgent.util.getNativeUserAgentString_=function(){var a=goog.labs.userAgent.util.getNavigator_();return a&&(a=a.userAgent)?a:""};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();goog.labs.userAgent.util.setUserAgent=function(a){goog.labs.userAgent.util.userAgent_=a||goog.labs.userAgent.util.getNativeUserAgentString_()};
goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.contains(b,a)};goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.caseInsensitiveContains(b,a)};
goog.labs.userAgent.util.extractVersionTuples=function(a){for(var b=/(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g,c=[],d;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c};goog.object={};goog.object.is=function(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b};goog.object.forEach=function(a,b,c){for(var d in a)b.call(c,a[d],d,a)};goog.object.filter=function(a,b,c){var d={},e;for(e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d};goog.object.map=function(a,b,c){var d={},e;for(e in a)d[e]=b.call(c,a[e],e,a);return d};goog.object.some=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return!0;return!1};
goog.object.every=function(a,b,c){for(var d in a)if(!b.call(c,a[d],d,a))return!1;return!0};goog.object.getCount=function(a){var b=0,c;for(c in a)b++;return b};goog.object.getAnyKey=function(a){for(var b in a)return b};goog.object.getAnyValue=function(a){for(var b in a)return a[b]};goog.object.contains=function(a,b){return goog.object.containsValue(a,b)};goog.object.getValues=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b};
goog.object.getKeys=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b};goog.object.getValueByKeys=function(a,b){var c=goog.isArrayLike(b),d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]]}return a};goog.object.containsKey=function(a,b){return null!==a&&b in a};goog.object.containsValue=function(a,b){for(var c in a)if(a[c]==b)return!0;return!1};goog.object.findKey=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return d};
goog.object.findValue=function(a,b,c){return(b=goog.object.findKey(a,b,c))&&a[b]};goog.object.isEmpty=function(a){for(var b in a)return!1;return!0};goog.object.clear=function(a){for(var b in a)delete a[b]};goog.object.remove=function(a,b){var c;(c=b in a)&&delete a[b];return c};goog.object.add=function(a,b,c){if(null!==a&&b in a)throw Error('The object already contains the key "'+b+'"');goog.object.set(a,b,c)};goog.object.get=function(a,b,c){return null!==a&&b in a?a[b]:c};
goog.object.set=function(a,b,c){a[b]=c};goog.object.setIfUndefined=function(a,b,c){return b in a?a[b]:a[b]=c};goog.object.setWithReturnValueIfNotSet=function(a,b,c){if(b in a)return a[b];c=c();return a[b]=c};goog.object.equals=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(c in b)if(!(c in a))return!1;return!0};goog.object.clone=function(a){var b={},c;for(c in a)b[c]=a[c];return b};
goog.object.unsafeClone=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if(goog.isFunction(a.clone))return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.object.unsafeClone(a[c]);return b}return a};goog.object.transpose=function(a){var b={},c;for(c in a)b[a[c]]=c;return b};goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<goog.object.PROTOTYPE_FIELDS_.length;f++)c=goog.object.PROTOTYPE_FIELDS_[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};
goog.object.create=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(b%2)throw Error("Uneven number of arguments");for(var c={},d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c};goog.object.createSet=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c};
goog.object.createImmutableView=function(a){var b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b};goog.object.isImmutableView=function(a){return!!Object.isFrozen&&Object.isFrozen(a)};
goog.object.getAllPropertyNames=function(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(a);for(var d={};a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){for(var e=Object.getOwnPropertyNames(a),f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return goog.object.getKeys(d)};goog.labs.userAgent.browser={};goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.browser.matchEdge_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")};
goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdge_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))};goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")};
goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")};
goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchEdge_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};
goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdge_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")};
goog.labs.userAgent.browser.getVersion=function(){function a(a){a=goog.array.find(a,d);return c[a]||""}var b=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(b);b=goog.labs.userAgent.util.extractVersionTuples(b);var c={};goog.array.forEach(b,function(a){c[a[0]]=a[1]});var d=goog.partial(goog.object.containsKey,c);return goog.labs.userAgent.browser.isOpera()?a(["Version","Opera"]):goog.labs.userAgent.browser.isEdge()?a(["Edge"]):
goog.labs.userAgent.browser.isChrome()?a(["Chrome","CriOS"]):(b=b[2])&&b[1]||""};goog.labs.userAgent.browser.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(),a)};
goog.labs.userAgent.browser.getIEVersion_=function(a){var b=/rv: *([\d\.]*)/.exec(a);if(b&&b[1])return b[1];b="";var c=/MSIE +([\d\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\/(\d.\d)/.exec(a),"7.0"==c[1])if(a&&a[1])switch(a[1]){case "4.0":b="8.0";break;case "5.0":b="9.0";break;case "6.0":b="10.0";break;case "7.0":b="11.0"}else b="7.0";else b=c[1];return b};goog.labs.userAgent.engine={};goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};
goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};
goog.labs.userAgent.engine.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent();if(a){a=goog.labs.userAgent.util.extractVersionTuples(a);var b=goog.labs.userAgent.engine.getEngineTuple_(a);if(b)return"Gecko"==b[0]?goog.labs.userAgent.engine.getVersionForKey_(a,"Firefox"):b[1];a=a[0];var c;if(a&&(c=a[2])&&(c=/Trident\/([^\s;]+)/.exec(c)))return c[1]}return""};
goog.labs.userAgent.engine.getEngineTuple_=function(a){if(!goog.labs.userAgent.engine.isEdge())return a[1];for(var b=0;b<a.length;b++){var c=a[b];if("Edge"==c[0])return c}};goog.labs.userAgent.engine.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),a)};goog.labs.userAgent.engine.getVersionForKey_=function(a,b){return(a=goog.array.find(a,function(a){return b==a[0]}))&&a[1]||""};goog.labs.userAgent.platform={};goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")};goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")};
goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")};goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")};
goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")};goog.labs.userAgent.platform.isChromecast=function(){return goog.labs.userAgent.util.matchUserAgent("CrKey")};
goog.labs.userAgent.platform.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent(),b="";goog.labs.userAgent.platform.isWindows()?(b=/Windows (?:NT|Phone) ([0-9.]+)/,b=(a=b.exec(a))?a[1]:"0.0"):goog.labs.userAgent.platform.isIos()?(b=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/,b=(a=b.exec(a))&&a[1].replace(/_/g,".")):goog.labs.userAgent.platform.isMacintosh()?(b=/Mac OS X ([0-9_.]+)/,b=(a=b.exec(a))?a[1].replace(/_/g,"."):"10"):goog.labs.userAgent.platform.isAndroid()?(b=/Android\s+([^\);]+)(\)|;)/,
b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isChromeOS()&&(b=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/,b=(a=b.exec(a))&&a[1]);return b||""};goog.labs.userAgent.platform.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),a)};goog.reflect={};goog.reflect.object=function(a,b){return b};goog.reflect.objectProperty=function(a,b){return a};goog.reflect.sinkValue=function(a){goog.reflect.sinkValue[" "](a);return a};goog.reflect.sinkValue[" "]=goog.nullFunction;goog.reflect.canAccessProperty=function(a,b){try{return goog.reflect.sinkValue(a[b]),!0}catch(c){}return!1};goog.reflect.cache=function(a,b,c,d){d=d?d(b):b;return Object.prototype.hasOwnProperty.call(a,d)?a[d]:a[d]=c(b)};goog.userAgent={};goog.userAgent.ASSUME_IE=!1;goog.userAgent.ASSUME_EDGE=!1;goog.userAgent.ASSUME_GECKO=!1;goog.userAgent.ASSUME_WEBKIT=!1;goog.userAgent.ASSUME_MOBILE_WEBKIT=!1;goog.userAgent.ASSUME_OPERA=!1;goog.userAgent.ASSUME_ANY_VERSION=!1;goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};
goog.userAgent.getNavigator=function(){return goog.global.navigator||null};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;
goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")};goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_=function(){var a=goog.userAgent.getNavigator();return a&&a.platform||""};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.userAgent.ASSUME_MAC=!1;goog.userAgent.ASSUME_WINDOWS=!1;goog.userAgent.ASSUME_LINUX=!1;goog.userAgent.ASSUME_X11=!1;goog.userAgent.ASSUME_ANDROID=!1;goog.userAgent.ASSUME_IPHONE=!1;goog.userAgent.ASSUME_IPAD=!1;goog.userAgent.ASSUME_IPOD=!1;
goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();goog.userAgent.isX11_=function(){var a=goog.userAgent.getNavigator();return!!a&&goog.string.contains(a.appVersion||"","X11")};goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();
goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.IPOD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIpod();
goog.userAgent.IOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIos();goog.userAgent.determineVersion_=function(){var a="",b=goog.userAgent.getVersionRegexResult_();b&&(a=b?b[1]:"");return goog.userAgent.IE&&(b=goog.userAgent.getDocumentMode_(),null!=b&&b>parseFloat(a))?String(b):a};
goog.userAgent.getVersionRegexResult_=function(){var a=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return/rv:([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.EDGE)return/Edge\/([\d\.]+)/.exec(a);if(goog.userAgent.IE)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.WEBKIT)return/WebKit\/(\S+)/.exec(a);if(goog.userAgent.OPERA)return/(?:Version)[ \/]?(\S+)/.exec(a)};goog.userAgent.getDocumentMode_=function(){var a=goog.global.document;return a?a.documentMode:void 0};
goog.userAgent.VERSION=goog.userAgent.determineVersion_();goog.userAgent.compare=function(a,b){return goog.string.compareVersions(a,b)};goog.userAgent.isVersionOrHigherCache_={};goog.userAgent.isVersionOrHigher=function(a){return goog.userAgent.ASSUME_ANY_VERSION||goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_,a,function(){return 0<=goog.string.compareVersions(goog.userAgent.VERSION,a)})};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher=function(a){return Number(goog.userAgent.DOCUMENT_MODE)>=a};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;goog.userAgent.DOCUMENT_MODE=function(){var a=goog.global.document,b=goog.userAgent.getDocumentMode_();if(a&&goog.userAgent.IE)return b||("CSS1Compat"==a.compatMode?parseInt(goog.userAgent.VERSION,10):5)}();goog.debug.LOGGING_ENABLED=goog.DEBUG;goog.debug.FORCE_SLOPPY_STACKS=!1;goog.debug.catchErrors=function(a,b,c){c=c||goog.global;var d=c.onerror,e=!!b;goog.userAgent.WEBKIT&&!goog.userAgent.isVersionOrHigher("535.3")&&(e=!e);c.onerror=function(b,c,h,k,m){d&&d(b,c,h,k,m);a({message:b,fileName:c,line:h,lineNumber:h,col:k,error:m});return e}};
goog.debug.expose=function(a,b){if("undefined"==typeof a)return"undefined";if(null==a)return"NULL";var c=[],d;for(d in a)if(b||!goog.isFunction(a[d])){var e=d+" = ";try{e+=a[d]}catch(f){e+="*** "+f+" ***"}c.push(e)}return c.join("\n")};
goog.debug.deepExpose=function(a,b){var c=[],d=[],e={},f=function(a,h){var g=h+"  ";try{if(goog.isDef(a))if(goog.isNull(a))c.push("NULL");else if(goog.isString(a))c.push('"'+a.replace(/\n/g,"\n"+h)+'"');else if(goog.isFunction(a))c.push(String(a).replace(/\n/g,"\n"+h));else if(goog.isObject(a)){goog.hasUid(a)||d.push(a);var m=goog.getUid(a);if(e[m])c.push("*** reference loop detected (id="+m+") ***");else{e[m]=!0;c.push("{");for(var l in a)if(b||!goog.isFunction(a[l]))c.push("\n"),c.push(g),c.push(l+
" = "),f(a[l],g);c.push("\n"+h+"}");delete e[m]}}else c.push(a);else c.push("undefined")}catch(n){c.push("*** "+n+" ***")}};f(a,"");for(a=0;a<d.length;a++)goog.removeUid(d[a]);return c.join("")};goog.debug.exposeArray=function(a){for(var b=[],c=0;c<a.length;c++)goog.isArray(a[c])?b.push(goog.debug.exposeArray(a[c])):b.push(a[c]);return"[ "+b.join(", ")+" ]"};
goog.debug.normalizeErrorObject=function(a){var b=goog.getObjectByName("window.location.href");if(goog.isString(a))return{message:a,name:"Unknown error",lineNumber:"Not available",fileName:b,stack:"Not available"};var c=!1;try{var d=a.lineNumber||a.line||"Not available"}catch(f){d="Not available",c=!0}try{var e=a.fileName||a.filename||a.sourceURL||goog.global.$googDebugFname||b}catch(f){e="Not available",c=!0}return!c&&a.lineNumber&&a.fileName&&a.stack&&a.message&&a.name?a:{message:a.message||"Not available",
name:a.name||"UnknownError",lineNumber:d,fileName:e,stack:a.stack||"Not available"}};goog.debug.enhanceError=function(a,b){a instanceof Error||(a=Error(a),Error.captureStackTrace&&Error.captureStackTrace(a,goog.debug.enhanceError));a.stack||(a.stack=goog.debug.getStacktrace(goog.debug.enhanceError));if(b){for(var c=0;a["message"+c];)++c;a["message"+c]=String(b)}return a};
goog.debug.enhanceErrorWithContext=function(a,b){a=goog.debug.enhanceError(a);if(b)for(var c in b)goog.debug.errorcontext.addErrorContext(a,c,b[c]);return a};
goog.debug.getStacktraceSimple=function(a){if(!goog.debug.FORCE_SLOPPY_STACKS){var b=goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);if(b)return b}b=[];for(var c=arguments.callee.caller,d=0;c&&(!a||d<a);){b.push(goog.debug.getFunctionName(c));b.push("()\n");try{c=c.caller}catch(e){b.push("[exception trying to get caller]\n");break}d++;if(d>=goog.debug.MAX_STACK_DEPTH){b.push("[...long stack...]");break}}a&&d>=a?b.push("[...reached max depth limit...]"):b.push("[end]");return b.join("")};
goog.debug.MAX_STACK_DEPTH=50;goog.debug.getNativeStackTrace_=function(a){var b=Error();if(Error.captureStackTrace)return Error.captureStackTrace(b,a),String(b.stack);try{throw b;}catch(c){b=c}return(a=b.stack)?String(a):null};goog.debug.getStacktrace=function(a){var b;goog.debug.FORCE_SLOPPY_STACKS||(b=goog.debug.getNativeStackTrace_(a||goog.debug.getStacktrace));b||(b=goog.debug.getStacktraceHelper_(a||arguments.callee.caller,[]));return b};
goog.debug.getStacktraceHelper_=function(a,b){var c=[];if(goog.array.contains(b,a))c.push("[...circular reference...]");else if(a&&b.length<goog.debug.MAX_STACK_DEPTH){c.push(goog.debug.getFunctionName(a)+"(");for(var d=a.arguments,e=0;d&&e<d.length;e++){0<e&&c.push(", ");var f=d[e];switch(typeof f){case "object":f=f?"object":"null";break;case "string":break;case "number":f=String(f);break;case "boolean":f=f?"true":"false";break;case "function":f=(f=goog.debug.getFunctionName(f))?f:"[fn]";break;default:f=
typeof f}40<f.length&&(f=f.substr(0,40)+"...");c.push(f)}b.push(a);c.push(")\n");try{c.push(goog.debug.getStacktraceHelper_(a.caller,b))}catch(g){c.push("[exception trying to get caller]\n")}}else a?c.push("[...long stack...]"):c.push("[end]");return c.join("")};goog.debug.setFunctionResolver=function(a){goog.debug.fnNameResolver_=a};
goog.debug.getFunctionName=function(a){if(goog.debug.fnNameCache_[a])return goog.debug.fnNameCache_[a];if(goog.debug.fnNameResolver_){var b=goog.debug.fnNameResolver_(a);if(b)return goog.debug.fnNameCache_[a]=b}a=String(a);goog.debug.fnNameCache_[a]||(b=/function ([^\(]+)/.exec(a),goog.debug.fnNameCache_[a]=b?b[1]:"[Anonymous]");return goog.debug.fnNameCache_[a]};
goog.debug.makeWhitespaceVisible=function(a){return a.replace(/ /g,"[_]").replace(/\f/g,"[f]").replace(/\n/g,"[n]\n").replace(/\r/g,"[r]").replace(/\t/g,"[t]")};goog.debug.runtimeType=function(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};goog.debug.fnNameCache_={};goog.debug.freezeInternal_=goog.DEBUG&&Object.freeze||function(a){return a};
goog.debug.freeze=function(a){return goog.debug.freezeInternal_(a)};goog.events={};$jscomp.scope.purify=function(a){return a()};
goog.events.BrowserFeature={HAS_W3C_BUTTON:!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9),HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9),SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9"),HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT||goog.userAgent.isVersionOrHigher("528"),HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO&&goog.userAgent.isVersionOrHigher("1.9b")||goog.userAgent.IE&&goog.userAgent.isVersionOrHigher("8")||
goog.userAgent.OPERA&&goog.userAgent.isVersionOrHigher("9.5")||goog.userAgent.WEBKIT&&goog.userAgent.isVersionOrHigher("528"),HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO&&!goog.userAgent.isVersionOrHigher("8")||goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9"),TOUCH_ENABLED:"ontouchstart"in goog.global||!!(goog.global.document&&document.documentElement&&"ontouchstart"in document.documentElement)||!(!goog.global.navigator||!goog.global.navigator.maxTouchPoints&&!goog.global.navigator.msMaxTouchPoints),
POINTER_EVENTS:"PointerEvent"in goog.global,MSPOINTER_EVENTS:"MSPointerEvent"in goog.global&&!(!goog.global.navigator||!goog.global.navigator.msPointerEnabled),PASSIVE_EVENTS:(0,$jscomp.scope.purify)(function(){if(!goog.global.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0}});goog.global.addEventListener("test",goog.nullFunction,b);goog.global.removeEventListener("test",goog.nullFunction,b);return a})};goog.disposable={};goog.disposable.IDisposable=function(){};goog.disposable.IDisposable.prototype.dispose=goog.abstractMethod;goog.disposable.IDisposable.prototype.isDisposed=goog.abstractMethod;goog.Disposable=function(){goog.Disposable.MONITORING_MODE!=goog.Disposable.MonitoringMode.OFF&&(goog.Disposable.INCLUDE_STACK_ON_CREATION&&(this.creationStack=Error().stack),goog.Disposable.instances_[goog.getUid(this)]=this);this.disposed_=this.disposed_;this.onDisposeCallbacks_=this.onDisposeCallbacks_};goog.Disposable.MonitoringMode={OFF:0,PERMANENT:1,INTERACTIVE:2};goog.Disposable.MONITORING_MODE=0;goog.Disposable.INCLUDE_STACK_ON_CREATION=!0;goog.Disposable.instances_={};
goog.Disposable.getUndisposedObjects=function(){var a=[],b;for(b in goog.Disposable.instances_)goog.Disposable.instances_.hasOwnProperty(b)&&a.push(goog.Disposable.instances_[Number(b)]);return a};goog.Disposable.clearUndisposedObjects=function(){goog.Disposable.instances_={}};goog.Disposable.prototype.disposed_=!1;goog.Disposable.prototype.isDisposed=function(){return this.disposed_};goog.Disposable.prototype.getDisposed=goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose=function(){if(!this.disposed_&&(this.disposed_=!0,this.disposeInternal(),goog.Disposable.MONITORING_MODE!=goog.Disposable.MonitoringMode.OFF)){var a=goog.getUid(this);if(goog.Disposable.MONITORING_MODE==goog.Disposable.MonitoringMode.PERMANENT&&!goog.Disposable.instances_.hasOwnProperty(a))throw Error(this+" did not call the goog.Disposable base constructor or was disposed of after a clearUndisposedObjects call");if(goog.Disposable.MONITORING_MODE!=goog.Disposable.MonitoringMode.OFF&&
this.onDisposeCallbacks_&&0<this.onDisposeCallbacks_.length)throw Error(this+" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete goog.Disposable.instances_[a]}};goog.Disposable.prototype.registerDisposable=function(a){this.addOnDisposeCallback(goog.partial(goog.dispose,a))};
goog.Disposable.prototype.addOnDisposeCallback=function(a,b){this.disposed_?goog.isDef(b)?a.call(b):a():(this.onDisposeCallbacks_||(this.onDisposeCallbacks_=[]),this.onDisposeCallbacks_.push(goog.isDef(b)?goog.bind(a,b):a))};goog.Disposable.prototype.disposeInternal=function(){if(this.onDisposeCallbacks_)for(;this.onDisposeCallbacks_.length;)this.onDisposeCallbacks_.shift()()};goog.Disposable.isDisposed=function(a){return a&&"function"==typeof a.isDisposed?a.isDisposed():!1};
goog.dispose=function(a){a&&"function"==typeof a.dispose&&a.dispose()};goog.disposeAll=function(a){for(var b=0,c=arguments.length;b<c;++b){var d=arguments[b];goog.isArrayLike(d)?goog.disposeAll.apply(null,d):goog.dispose(d)}};goog.events.EventId=function(a){this.id=a};goog.events.EventId.prototype.toString=function(){return this.id};goog.events.Event=function(a,b){this.type=a instanceof goog.events.EventId?String(a):a;this.currentTarget=this.target=b;this.defaultPrevented=this.propagationStopped_=!1;this.returnValue_=!0};goog.events.Event.prototype.stopPropagation=function(){this.propagationStopped_=!0};goog.events.Event.prototype.preventDefault=function(){this.defaultPrevented=!0;this.returnValue_=!1};goog.events.Event.stopPropagation=function(a){a.stopPropagation()};goog.events.Event.preventDefault=function(a){a.preventDefault()};goog.events.getVendorPrefixedName_=function(a){return goog.userAgent.WEBKIT?"webkit"+a:goog.userAgent.OPERA?"o"+a.toLowerCase():a.toLowerCase()};
goog.events.EventType={CLICK:"click",RIGHTCLICK:"rightclick",DBLCLICK:"dblclick",MOUSEDOWN:"mousedown",MOUSEUP:"mouseup",MOUSEOVER:"mouseover",MOUSEOUT:"mouseout",MOUSEMOVE:"mousemove",MOUSEENTER:"mouseenter",MOUSELEAVE:"mouseleave",SELECTIONCHANGE:"selectionchange",SELECTSTART:"selectstart",WHEEL:"wheel",KEYPRESS:"keypress",KEYDOWN:"keydown",KEYUP:"keyup",BLUR:"blur",FOCUS:"focus",DEACTIVATE:"deactivate",FOCUSIN:"focusin",FOCUSOUT:"focusout",CHANGE:"change",RESET:"reset",SELECT:"select",SUBMIT:"submit",
INPUT:"input",PROPERTYCHANGE:"propertychange",DRAGSTART:"dragstart",DRAG:"drag",DRAGENTER:"dragenter",DRAGOVER:"dragover",DRAGLEAVE:"dragleave",DROP:"drop",DRAGEND:"dragend",TOUCHSTART:"touchstart",TOUCHMOVE:"touchmove",TOUCHEND:"touchend",TOUCHCANCEL:"touchcancel",BEFOREUNLOAD:"beforeunload",CONSOLEMESSAGE:"consolemessage",CONTEXTMENU:"contextmenu",DEVICEMOTION:"devicemotion",DEVICEORIENTATION:"deviceorientation",DOMCONTENTLOADED:"DOMContentLoaded",ERROR:"error",HELP:"help",LOAD:"load",LOSECAPTURE:"losecapture",
ORIENTATIONCHANGE:"orientationchange",READYSTATECHANGE:"readystatechange",RESIZE:"resize",SCROLL:"scroll",UNLOAD:"unload",CANPLAY:"canplay",CANPLAYTHROUGH:"canplaythrough",DURATIONCHANGE:"durationchange",EMPTIED:"emptied",ENDED:"ended",LOADEDDATA:"loadeddata",LOADEDMETADATA:"loadedmetadata",PAUSE:"pause",PLAY:"play",PLAYING:"playing",RATECHANGE:"ratechange",SEEKED:"seeked",SEEKING:"seeking",STALLED:"stalled",SUSPEND:"suspend",TIMEUPDATE:"timeupdate",VOLUMECHANGE:"volumechange",WAITING:"waiting",SOURCEOPEN:"sourceopen",
SOURCEENDED:"sourceended",SOURCECLOSED:"sourceclosed",ABORT:"abort",UPDATE:"update",UPDATESTART:"updatestart",UPDATEEND:"updateend",HASHCHANGE:"hashchange",PAGEHIDE:"pagehide",PAGESHOW:"pageshow",POPSTATE:"popstate",COPY:"copy",PASTE:"paste",CUT:"cut",BEFORECOPY:"beforecopy",BEFORECUT:"beforecut",BEFOREPASTE:"beforepaste",ONLINE:"online",OFFLINE:"offline",MESSAGE:"message",CONNECT:"connect",INSTALL:"install",ACTIVATE:"activate",FETCH:"fetch",FOREIGNFETCH:"foreignfetch",MESSAGEERROR:"messageerror",
STATECHANGE:"statechange",UPDATEFOUND:"updatefound",CONTROLLERCHANGE:"controllerchange",ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"),ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"),ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"),TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"),POINTERDOWN:"pointerdown",POINTERUP:"pointerup",POINTERCANCEL:"pointercancel",POINTERMOVE:"pointermove",POINTEROVER:"pointerover",POINTEROUT:"pointerout",
POINTERENTER:"pointerenter",POINTERLEAVE:"pointerleave",GOTPOINTERCAPTURE:"gotpointercapture",LOSTPOINTERCAPTURE:"lostpointercapture",MSGESTURECHANGE:"MSGestureChange",MSGESTUREEND:"MSGestureEnd",MSGESTUREHOLD:"MSGestureHold",MSGESTURESTART:"MSGestureStart",MSGESTURETAP:"MSGestureTap",MSGOTPOINTERCAPTURE:"MSGotPointerCapture",MSINERTIASTART:"MSInertiaStart",MSLOSTPOINTERCAPTURE:"MSLostPointerCapture",MSPOINTERCANCEL:"MSPointerCancel",MSPOINTERDOWN:"MSPointerDown",MSPOINTERENTER:"MSPointerEnter",MSPOINTERHOVER:"MSPointerHover",
MSPOINTERLEAVE:"MSPointerLeave",MSPOINTERMOVE:"MSPointerMove",MSPOINTEROUT:"MSPointerOut",MSPOINTEROVER:"MSPointerOver",MSPOINTERUP:"MSPointerUp",TEXT:"text",TEXTINPUT:goog.userAgent.IE?"textinput":"textInput",COMPOSITIONSTART:"compositionstart",COMPOSITIONUPDATE:"compositionupdate",COMPOSITIONEND:"compositionend",BEFOREINPUT:"beforeinput",EXIT:"exit",LOADABORT:"loadabort",LOADCOMMIT:"loadcommit",LOADREDIRECT:"loadredirect",LOADSTART:"loadstart",LOADSTOP:"loadstop",RESPONSIVE:"responsive",SIZECHANGED:"sizechanged",
UNRESPONSIVE:"unresponsive",VISIBILITYCHANGE:"visibilitychange",STORAGE:"storage",DOMSUBTREEMODIFIED:"DOMSubtreeModified",DOMNODEINSERTED:"DOMNodeInserted",DOMNODEREMOVED:"DOMNodeRemoved",DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument",DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument",DOMATTRMODIFIED:"DOMAttrModified",DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified",BEFOREPRINT:"beforeprint",AFTERPRINT:"afterprint",BEFOREINSTALLPROMPT:"beforeinstallprompt",APPINSTALLED:"appinstalled"};
goog.events.getPointerFallbackEventName_=function(a,b,c){return goog.events.BrowserFeature.POINTER_EVENTS?a:goog.events.BrowserFeature.MSPOINTER_EVENTS?b:c};
goog.events.PointerFallbackEventType={POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN,goog.events.EventType.MSPOINTERDOWN,goog.events.EventType.MOUSEDOWN),POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP,goog.events.EventType.MSPOINTERUP,goog.events.EventType.MOUSEUP),POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL,goog.events.EventType.MSPOINTERCANCEL,"mousecancel"),POINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE,
goog.events.EventType.MSPOINTERMOVE,goog.events.EventType.MOUSEMOVE),POINTEROVER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROVER,goog.events.EventType.MSPOINTEROVER,goog.events.EventType.MOUSEOVER),POINTEROUT:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROUT,goog.events.EventType.MSPOINTEROUT,goog.events.EventType.MOUSEOUT),POINTERENTER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERENTER,goog.events.EventType.MSPOINTERENTER,
goog.events.EventType.MOUSEENTER),POINTERLEAVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERLEAVE,goog.events.EventType.MSPOINTERLEAVE,goog.events.EventType.MOUSELEAVE)};goog.events.BrowserEvent=function(a,b){goog.events.Event.call(this,a?a.type:"");this.relatedTarget=this.currentTarget=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=this.offsetY=this.offsetX=0;this.key="";this.charCode=this.keyCode=0;this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.platformModifierKey=!1;this.pointerId=0;this.pointerType="";this.event_=null;a&&this.init(a,b)};goog.inherits(goog.events.BrowserEvent,goog.events.Event);
goog.events.BrowserEvent.MouseButton={LEFT:0,MIDDLE:1,RIGHT:2};goog.events.BrowserEvent.PointerType={MOUSE:"mouse",PEN:"pen",TOUCH:"touch"};goog.events.BrowserEvent.IEButtonMap=goog.debug.freeze([1,4,2]);goog.events.BrowserEvent.IE_BUTTON_MAP=goog.events.BrowserEvent.IEButtonMap;goog.events.BrowserEvent.IE_POINTER_TYPE_MAP=goog.debug.freeze({2:goog.events.BrowserEvent.PointerType.TOUCH,3:goog.events.BrowserEvent.PointerType.PEN,4:goog.events.BrowserEvent.PointerType.MOUSE});
goog.events.BrowserEvent.prototype.init=function(a,b){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.currentTarget=b;(b=a.relatedTarget)?goog.userAgent.GECKO&&(goog.reflect.canAccessProperty(b,"nodeName")||(b=null)):c==goog.events.EventType.MOUSEOVER?b=a.fromElement:c==goog.events.EventType.MOUSEOUT&&(b=a.toElement);this.relatedTarget=b;goog.isNull(d)?(this.offsetX=goog.userAgent.WEBKIT||void 0!==a.offsetX?a.offsetX:a.layerX,this.offsetY=
goog.userAgent.WEBKIT||void 0!==a.offsetY?a.offsetY:a.layerY,this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.keyCode=a.keyCode||0;this.key=a.key||"";this.charCode=a.charCode||("keypress"==c?a.keyCode:0);this.ctrlKey=
a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=a.metaKey;this.platformModifierKey=goog.userAgent.MAC?a.metaKey:a.ctrlKey;this.pointerId=a.pointerId||0;this.pointerType=goog.events.BrowserEvent.getPointerType_(a);this.state=a.state;this.event_=a;a.defaultPrevented&&this.preventDefault()};
goog.events.BrowserEvent.prototype.isButton=function(a){return goog.events.BrowserFeature.HAS_W3C_BUTTON?this.event_.button==a:"click"==this.type?a==goog.events.BrowserEvent.MouseButton.LEFT:!!(this.event_.button&goog.events.BrowserEvent.IE_BUTTON_MAP[a])};goog.events.BrowserEvent.prototype.isMouseActionButton=function(){return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT)&&!(goog.userAgent.WEBKIT&&goog.userAgent.MAC&&this.ctrlKey)};
goog.events.BrowserEvent.prototype.stopPropagation=function(){goog.events.BrowserEvent.superClass_.stopPropagation.call(this);this.event_.stopPropagation?this.event_.stopPropagation():this.event_.cancelBubble=!0};
goog.events.BrowserEvent.prototype.preventDefault=function(){goog.events.BrowserEvent.superClass_.preventDefault.call(this);var a=this.event_;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};goog.events.BrowserEvent.prototype.getBrowserEvent=function(){return this.event_};
goog.events.BrowserEvent.getPointerType_=function(a){return goog.isString(a.pointerType)?a.pointerType:goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[a.pointerType]||""};goog.events.Listenable=function(){};goog.events.Listenable.IMPLEMENTED_BY_PROP="closure_listenable_"+(1E6*Math.random()|0);goog.events.Listenable.addImplementation=function(a){a.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP]=!0};goog.events.Listenable.isImplementedBy=function(a){return!(!a||!a[goog.events.Listenable.IMPLEMENTED_BY_PROP])};goog.events.ListenableKey=function(){};goog.events.ListenableKey.counter_=0;goog.events.ListenableKey.reserveKey=function(){return++goog.events.ListenableKey.counter_};goog.events.Listener=function(a,b,c,d,e,f){goog.events.Listener.ENABLE_MONITORING&&(this.creationStack=Error().stack);this.listener=a;this.proxy=b;this.src=c;this.type=d;this.capture=!!e;this.handler=f;this.key=goog.events.ListenableKey.reserveKey();this.removed=this.callOnce=!1};goog.events.Listener.ENABLE_MONITORING=!1;goog.events.Listener.prototype.markAsRemoved=function(){this.removed=!0;this.handler=this.src=this.proxy=this.listener=null};goog.events.ListenerMap=function(a){this.src=a;this.listeners={};this.typeCount_=0};goog.events.ListenerMap.prototype.getTypeCount=function(){return this.typeCount_};goog.events.ListenerMap.prototype.getListenerCount=function(){var a=0,b;for(b in this.listeners)a+=this.listeners[b].length;return a};
goog.events.ListenerMap.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.listeners[f];a||(a=this.listeners[f]=[],this.typeCount_++);var g=goog.events.ListenerMap.findListenerIndex_(a,b,d,e);-1<g?(b=a[g],c||(b.callOnce=!1)):(b=new goog.events.Listener(b,null,this.src,f,!!d,e),b.callOnce=c,a.push(b));return b};
goog.events.ListenerMap.prototype.remove=function(a,b,c,d){a=a.toString();if(!(a in this.listeners))return!1;var e=this.listeners[a];b=goog.events.ListenerMap.findListenerIndex_(e,b,c,d);return-1<b?(e[b].markAsRemoved(),goog.array.removeAt(e,b),0==e.length&&(delete this.listeners[a],this.typeCount_--),!0):!1};
goog.events.ListenerMap.prototype.removeByKey=function(a){var b=a.type;if(!(b in this.listeners))return!1;var c=goog.array.remove(this.listeners[b],a);c&&(a.markAsRemoved(),0==this.listeners[b].length&&(delete this.listeners[b],this.typeCount_--));return c};goog.events.ListenerMap.prototype.removeAll=function(a){a=a&&a.toString();var b=0,c;for(c in this.listeners)if(!a||c==a){for(var d=this.listeners[c],e=0;e<d.length;e++)++b,d[e].markAsRemoved();delete this.listeners[c];this.typeCount_--}return b};
goog.events.ListenerMap.prototype.getListeners=function(a,b){a=this.listeners[a.toString()];var c=[];if(a)for(var d=0;d<a.length;++d){var e=a[d];e.capture==b&&c.push(e)}return c};goog.events.ListenerMap.prototype.getListener=function(a,b,c,d){a=this.listeners[a.toString()];var e=-1;a&&(e=goog.events.ListenerMap.findListenerIndex_(a,b,c,d));return-1<e?a[e]:null};
goog.events.ListenerMap.prototype.hasListener=function(a,b){var c=goog.isDef(a),d=c?a.toString():"",e=goog.isDef(b);return goog.object.some(this.listeners,function(a,g){for(g=0;g<a.length;++g)if(!(c&&a[g].type!=d||e&&a[g].capture!=b))return!0;return!1})};goog.events.ListenerMap.findListenerIndex_=function(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.removed&&f.listener==b&&f.capture==!!c&&f.handler==d)return e}return-1};goog.events.LISTENER_MAP_PROP_="closure_lm_"+(1E6*Math.random()|0);goog.events.onString_="on";goog.events.onStringMap_={};goog.events.CaptureSimulationMode={OFF_AND_FAIL:0,OFF_AND_SILENT:1,ON:2};goog.events.CAPTURE_SIMULATION_MODE=2;goog.events.listenerCountEstimate_=0;
goog.events.listen=function(a,b,c,d,e){if(d&&d.once)return goog.events.listenOnce(a,b,c,d,e);if(goog.isArray(b)){for(var f=0;f<b.length;f++)goog.events.listen(a,b[f],c,d,e);return null}c=goog.events.wrapListener(c);return goog.events.Listenable.isImplementedBy(a)?(d=goog.isObject(d)?!!d.capture:!!d,a.listen(b,c,d,e)):goog.events.listen_(a,b,c,!1,d,e)};
goog.events.listen_=function(a,b,c,d,e,f){if(!b)throw Error("Invalid event type");var g=goog.isObject(e)?!!e.capture:!!e;if(g&&!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT){if(goog.events.CAPTURE_SIMULATION_MODE==goog.events.CaptureSimulationMode.OFF_AND_FAIL)return goog.asserts.fail("Can not register capture listener in IE8-."),null;if(goog.events.CAPTURE_SIMULATION_MODE==goog.events.CaptureSimulationMode.OFF_AND_SILENT)return null}var h=goog.events.getListenerMap_(a);h||(a[goog.events.LISTENER_MAP_PROP_]=
h=new goog.events.ListenerMap(a));c=h.add(b,c,d,g,f);if(c.proxy)return c;d=goog.events.getProxy();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)goog.events.BrowserFeature.PASSIVE_EVENTS||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(goog.events.getOnString_(b.toString()),d);else if(a.addListener&&a.removeListener)goog.asserts.assert("change"===b,"MediaQueryList only has a change event"),a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");
goog.events.listenerCountEstimate_++;return c};goog.events.getProxy=function(){var a=goog.events.handleBrowserEvent_,b=goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b};
goog.events.listenOnce=function(a,b,c,d,e){if(goog.isArray(b)){for(var f=0;f<b.length;f++)goog.events.listenOnce(a,b[f],c,d,e);return null}c=goog.events.wrapListener(c);return goog.events.Listenable.isImplementedBy(a)?(d=goog.isObject(d)?!!d.capture:!!d,a.listenOnce(b,c,d,e)):goog.events.listen_(a,b,c,!0,d,e)};goog.events.listenWithWrapper=function(a,b,c,d,e){b.listen(a,c,d,e)};
goog.events.unlisten=function(a,b,c,d,e){if(goog.isArray(b)){for(var f=0;f<b.length;f++)goog.events.unlisten(a,b[f],c,d,e);return null}d=goog.isObject(d)?!!d.capture:!!d;c=goog.events.wrapListener(c);if(goog.events.Listenable.isImplementedBy(a))return a.unlisten(b,c,d,e);if(!a)return!1;if(a=goog.events.getListenerMap_(a))if(b=a.getListener(b,c,d,e))return goog.events.unlistenByKey(b);return!1};
goog.events.unlistenByKey=function(a){if(goog.isNumber(a)||!a||a.removed)return!1;var b=a.src;if(goog.events.Listenable.isImplementedBy(b))return b.unlistenByKey(a);var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(goog.events.getOnString_(c),d):b.addListener&&b.removeListener&&b.removeListener(d);goog.events.listenerCountEstimate_--;(c=goog.events.getListenerMap_(b))?(c.removeByKey(a),0==c.getTypeCount()&&(c.src=null,b[goog.events.LISTENER_MAP_PROP_]=
null)):a.markAsRemoved();return!0};goog.events.unlistenWithWrapper=function(a,b,c,d,e){b.unlisten(a,c,d,e)};goog.events.removeAll=function(a,b){if(!a)return 0;if(goog.events.Listenable.isImplementedBy(a))return a.removeAllListeners(b);a=goog.events.getListenerMap_(a);if(!a)return 0;var c=0;b=b&&b.toString();for(var d in a.listeners)if(!b||d==b)for(var e=a.listeners[d].concat(),f=0;f<e.length;++f)goog.events.unlistenByKey(e[f])&&++c;return c};
goog.events.getListeners=function(a,b,c){return goog.events.Listenable.isImplementedBy(a)?a.getListeners(b,c):a?(a=goog.events.getListenerMap_(a))?a.getListeners(b,c):[]:[]};goog.events.getListener=function(a,b,c,d,e){c=goog.events.wrapListener(c);d=!!d;return goog.events.Listenable.isImplementedBy(a)?a.getListener(b,c,d,e):a?(a=goog.events.getListenerMap_(a))?a.getListener(b,c,d,e):null:null};
goog.events.hasListener=function(a,b,c){if(goog.events.Listenable.isImplementedBy(a))return a.hasListener(b,c);a=goog.events.getListenerMap_(a);return!!a&&a.hasListener(b,c)};goog.events.expose=function(a){var b=[],c;for(c in a)a[c]&&a[c].id?b.push(c+" = "+a[c]+" ("+a[c].id+")"):b.push(c+" = "+a[c]);return b.join("\n")};goog.events.getOnString_=function(a){return a in goog.events.onStringMap_?goog.events.onStringMap_[a]:goog.events.onStringMap_[a]=goog.events.onString_+a};
goog.events.fireListeners=function(a,b,c,d){return goog.events.Listenable.isImplementedBy(a)?a.fireListeners(b,c,d):goog.events.fireListeners_(a,b,c,d)};goog.events.fireListeners_=function(a,b,c,d){var e=!0;if(a=goog.events.getListenerMap_(a))if(b=a.listeners[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.removed&&(f=goog.events.fireListener(f,d),e=e&&!1!==f)}return e};
goog.events.fireListener=function(a,b){var c=a.listener,d=a.handler||a.src;a.callOnce&&goog.events.unlistenByKey(a);return c.call(d,b)};goog.events.getTotalListenerCount=function(){return goog.events.listenerCountEstimate_};goog.events.dispatchEvent=function(a,b){goog.asserts.assert(goog.events.Listenable.isImplementedBy(a),"Can not use goog.events.dispatchEvent with non-goog.events.Listenable instance.");return a.dispatchEvent(b)};
goog.events.protectBrowserEventEntryPoint=function(a){goog.events.handleBrowserEvent_=a.protectEntryPoint(goog.events.handleBrowserEvent_)};
goog.events.handleBrowserEvent_=function(a,b){if(a.removed)return!0;if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT){var c=b||goog.getObjectByName("window.event");b=new goog.events.BrowserEvent(c,this);var d=!0;if(goog.events.CAPTURE_SIMULATION_MODE==goog.events.CaptureSimulationMode.ON){if(!goog.events.isMarkedIeEvent_(c)){goog.events.markIeEvent_(c);c=[];for(var e=b.currentTarget;e;e=e.parentNode)c.push(e);a=a.type;for(e=c.length-1;!b.propagationStopped_&&0<=e;e--){b.currentTarget=c[e];var f=
goog.events.fireListeners_(c[e],a,!0,b);d=d&&f}for(e=0;!b.propagationStopped_&&e<c.length;e++)b.currentTarget=c[e],f=goog.events.fireListeners_(c[e],a,!1,b),d=d&&f}}else d=goog.events.fireListener(a,b);return d}return goog.events.fireListener(a,new goog.events.BrowserEvent(b,this))};goog.events.markIeEvent_=function(a){var b=!1;if(0==a.keyCode)try{a.keyCode=-1;return}catch(c){b=!0}if(b||void 0==a.returnValue)a.returnValue=!0};goog.events.isMarkedIeEvent_=function(a){return 0>a.keyCode||void 0!=a.returnValue};
goog.events.uniqueIdCounter_=0;goog.events.getUniqueId=function(a){return a+"_"+goog.events.uniqueIdCounter_++};goog.events.getListenerMap_=function(a){a=a[goog.events.LISTENER_MAP_PROP_];return a instanceof goog.events.ListenerMap?a:null};goog.events.LISTENER_WRAPPER_PROP_="__closure_events_fn_"+(1E9*Math.random()>>>0);
goog.events.wrapListener=function(a){goog.asserts.assert(a,"Listener can not be null.");if(goog.isFunction(a))return a;goog.asserts.assert(a.handleEvent,"An object listener must have handleEvent method.");a[goog.events.LISTENER_WRAPPER_PROP_]||(a[goog.events.LISTENER_WRAPPER_PROP_]=function(b){return a.handleEvent(b)});return a[goog.events.LISTENER_WRAPPER_PROP_]};goog.debug.entryPointRegistry.register(function(a){goog.events.handleBrowserEvent_=a(goog.events.handleBrowserEvent_)});
Blockly.Touch={};Blockly.Touch.touchIdentifier_=null;Blockly.Touch.TOUCH_MAP={};goog.events.BrowserFeature.TOUCH_ENABLED&&(Blockly.Touch.TOUCH_MAP={mousedown:["touchstart"],mousemove:["touchmove"],mouseup:["touchend","touchcancel"]});Blockly.longPid_=0;Blockly.longStart_=function(a,b){Blockly.longStop_();1==a.changedTouches.length&&(Blockly.longPid_=setTimeout(function(){a.button=2;a.clientX=a.changedTouches[0].clientX;a.clientY=a.changedTouches[0].clientY;b&&b.handleRightClick(a)},Blockly.LONGPRESS))};
Blockly.longStop_=function(){Blockly.longPid_&&(clearTimeout(Blockly.longPid_),Blockly.longPid_=0)};Blockly.Touch.clearTouchIdentifier=function(){Blockly.Touch.touchIdentifier_=null};Blockly.Touch.shouldHandleEvent=function(a){return!Blockly.Touch.isMouseOrTouchEvent(a)||Blockly.Touch.checkTouchIdentifier(a)};
Blockly.Touch.getTouchIdentifierFromEvent=function(a){return a.changedTouches&&a.changedTouches[0]&&void 0!=a.changedTouches[0].identifier&&null!=a.changedTouches[0].identifier?a.changedTouches[0].identifier:"mouse"};
Blockly.Touch.checkTouchIdentifier=function(a){var b=Blockly.Touch.getTouchIdentifierFromEvent(a);return void 0!=Blockly.Touch.touchIdentifier_&&null!=Blockly.Touch.touchIdentifier_?Blockly.Touch.touchIdentifier_==b:"mousedown"==a.type||"touchstart"==a.type?(Blockly.Touch.touchIdentifier_=b,!0):!1};Blockly.Touch.setClientFromTouch=function(a){if(goog.string.startsWith(a.type,"touch")){var b=a.changedTouches[0];a.clientX=b.clientX;a.clientY=b.clientY}};
Blockly.Touch.isMouseOrTouchEvent=function(a){return goog.string.startsWith(a.type,"touch")||goog.string.startsWith(a.type,"mouse")};Blockly.Touch.splitEventByTouches=function(a){var b=[];if(a.changedTouches)for(var c=0;c<a.changedTouches.length;c++)b[c]={type:a.type,changedTouches:[a.changedTouches[c]],target:a.target,stopPropagation:function(){a.stopPropagation()},preventDefault:function(){a.preventDefault()}};else b.push(a);return b};goog.math={};goog.math.randomInt=function(a){return Math.floor(Math.random()*a)};goog.math.uniformRandom=function(a,b){return a+Math.random()*(b-a)};goog.math.clamp=function(a,b,c){return Math.min(Math.max(a,b),c)};goog.math.modulo=function(a,b){a%=b;return 0>a*b?a+b:a};goog.math.lerp=function(a,b,c){return a+c*(b-a)};goog.math.nearlyEquals=function(a,b,c){return Math.abs(a-b)<=(c||1E-6)};goog.math.standardAngle=function(a){return goog.math.modulo(a,360)};
goog.math.standardAngleInRadians=function(a){return goog.math.modulo(a,2*Math.PI)};goog.math.toRadians=function(a){return a*Math.PI/180};goog.math.toDegrees=function(a){return 180*a/Math.PI};goog.math.angleDx=function(a,b){return b*Math.cos(goog.math.toRadians(a))};goog.math.angleDy=function(a,b){return b*Math.sin(goog.math.toRadians(a))};goog.math.angle=function(a,b,c,d){return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(d-b,c-a)))};
goog.math.angleDifference=function(a,b){a=goog.math.standardAngle(b)-goog.math.standardAngle(a);180<a?a-=360:-180>=a&&(a=360+a);return a};goog.math.sign=function(a){return 0<a?1:0>a?-1:a};
goog.math.longestCommonSubsequence=function(a,b,c,d){c=c||function(a,b){return a==b};d=d||function(b,c){return a[b]};for(var e=a.length,f=b.length,g=[],h=0;h<e+1;h++)g[h]=[],g[h][0]=0;for(var k=0;k<f+1;k++)g[0][k]=0;for(h=1;h<=e;h++)for(k=1;k<=f;k++)c(a[h-1],b[k-1])?g[h][k]=g[h-1][k-1]+1:g[h][k]=Math.max(g[h-1][k],g[h][k-1]);var m=[];h=e;for(k=f;0<h&&0<k;)c(a[h-1],b[k-1])?(m.unshift(d(h-1,k-1)),h--,k--):g[h-1][k]>g[h][k-1]?h--:k--;return m};
goog.math.sum=function(a){return goog.array.reduce(arguments,function(a,c){return a+c},0)};goog.math.average=function(a){return goog.math.sum.apply(null,arguments)/arguments.length};goog.math.sampleVariance=function(a){var b=arguments.length;if(2>b)return 0;var c=goog.math.average.apply(null,arguments);return goog.math.sum.apply(null,goog.array.map(arguments,function(a){return Math.pow(a-c,2)}))/(b-1)};goog.math.standardDeviation=function(a){return Math.sqrt(goog.math.sampleVariance.apply(null,arguments))};
goog.math.isInt=function(a){return isFinite(a)&&0==a%1};goog.math.isFiniteNumber=function(a){return isFinite(a)};goog.math.isNegativeZero=function(a){return 0==a&&0>1/a};goog.math.log10Floor=function(a){if(0<a){var b=Math.round(Math.log(a)*Math.LOG10E);return b-(parseFloat("1e"+b)>a?1:0)}return 0==a?-Infinity:NaN};goog.math.safeFloor=function(a,b){goog.asserts.assert(!goog.isDef(b)||0<b);return Math.floor(a+(b||2E-15))};
goog.math.safeCeil=function(a,b){goog.asserts.assert(!goog.isDef(b)||0<b);return Math.ceil(a-(b||2E-15))};goog.math.Coordinate=function(a,b){this.x=goog.isDef(a)?a:0;this.y=goog.isDef(b)?b:0};goog.math.Coordinate.prototype.clone=function(){return new goog.math.Coordinate(this.x,this.y)};goog.DEBUG&&(goog.math.Coordinate.prototype.toString=function(){return"("+this.x+", "+this.y+")"});goog.math.Coordinate.prototype.equals=function(a){return a instanceof goog.math.Coordinate&&goog.math.Coordinate.equals(this,a)};goog.math.Coordinate.equals=function(a,b){return a==b?!0:a&&b?a.x==b.x&&a.y==b.y:!1};
goog.math.Coordinate.distance=function(a,b){var c=a.x-b.x;a=a.y-b.y;return Math.sqrt(c*c+a*a)};goog.math.Coordinate.magnitude=function(a){return Math.sqrt(a.x*a.x+a.y*a.y)};goog.math.Coordinate.azimuth=function(a){return goog.math.angle(0,0,a.x,a.y)};goog.math.Coordinate.squaredDistance=function(a,b){var c=a.x-b.x;a=a.y-b.y;return c*c+a*a};goog.math.Coordinate.difference=function(a,b){return new goog.math.Coordinate(a.x-b.x,a.y-b.y)};
goog.math.Coordinate.sum=function(a,b){return new goog.math.Coordinate(a.x+b.x,a.y+b.y)};goog.math.Coordinate.prototype.ceil=function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this};goog.math.Coordinate.prototype.floor=function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this};goog.math.Coordinate.prototype.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this};
goog.math.Coordinate.prototype.translate=function(a,b){a instanceof goog.math.Coordinate?(this.x+=a.x,this.y+=a.y):(this.x+=Number(a),goog.isNumber(b)&&(this.y+=b));return this};goog.math.Coordinate.prototype.scale=function(a,b){b=goog.isNumber(b)?b:a;this.x*=a;this.y*=b;return this};goog.math.Coordinate.prototype.rotateRadians=function(a,b){b=b||new goog.math.Coordinate(0,0);var c=this.x,d=this.y,e=Math.cos(a);a=Math.sin(a);this.x=(c-b.x)*e-(d-b.y)*a+b.x;this.y=(c-b.x)*a+(d-b.y)*e+b.y};
goog.math.Coordinate.prototype.rotateDegrees=function(a,b){this.rotateRadians(goog.math.toRadians(a),b)};Blockly.Events={};Blockly.Events.group_="";Blockly.Events.recordUndo=!0;Blockly.Events.disabled_=0;Blockly.Events.CREATE="create";Blockly.Events.BLOCK_CREATE=Blockly.Events.CREATE;Blockly.Events.DELETE="delete";Blockly.Events.BLOCK_DELETE=Blockly.Events.DELETE;Blockly.Events.CHANGE="change";Blockly.Events.BLOCK_CHANGE=Blockly.Events.CHANGE;Blockly.Events.MOVE="move";Blockly.Events.DRAG_OUTSIDE="dragOutside";Blockly.Events.END_DRAG="endDrag";Blockly.Events.BLOCK_MOVE=Blockly.Events.MOVE;
Blockly.Events.VAR_CREATE="var_create";Blockly.Events.VAR_DELETE="var_delete";Blockly.Events.VAR_RENAME="var_rename";Blockly.Events.COMMENT_CREATE="comment_create";Blockly.Events.COMMENT_MOVE="comment_move";Blockly.Events.COMMENT_CHANGE="comment_change";Blockly.Events.COMMENT_DELETE="comment_delete";Blockly.Events.UI="ui";Blockly.Events.FIRE_QUEUE_=[];Blockly.Events.fire=function(a){Blockly.Events.isEnabled()&&(Blockly.Events.FIRE_QUEUE_.length||setTimeout(Blockly.Events.fireNow_,0),Blockly.Events.FIRE_QUEUE_.push(a))};
Blockly.Events.fireNow_=function(){for(var a=Blockly.Events.filter(Blockly.Events.FIRE_QUEUE_,!0),b=Blockly.Events.FIRE_QUEUE_.length=0,c;c=a[b];b++){var d=Blockly.Workspace.getById(c.workspaceId);d&&d.fireChangeListener(c)}};
Blockly.Events.filter=function(a,b){a=goog.array.clone(a);b||a.reverse();for(var c=[],d=Object.create(null),e=0,f;f=a[e];e++)if(!f.isNull()){var g=[f.type,f.blockId,f.workspaceId].join(" "),h=d[g];h?f.type==Blockly.Events.MOVE?(h.newParentId=f.newParentId,h.newInputName=f.newInputName,h.newCoordinate=f.newCoordinate):f.type==Blockly.Events.CHANGE&&f.element==h.element&&f.name==h.name?h.newValue=f.newValue:f.type!=Blockly.Events.UI||"click"!=f.element||"commentOpen"!=h.element&&"mutatorOpen"!=h.element&&
"warningOpen"!=h.element?(d[g]=f,c.push(f)):h.newValue=f.newValue:(d[g]=f,c.push(f))}a=c.filter(function(a){return!a.isNull()});b||a.reverse();for(e=1;f=a[e];e++)f.type==Blockly.Events.CHANGE&&"mutation"==f.element&&a.unshift(a.splice(e,1)[0]);return a};Blockly.Events.clearPendingUndo=function(){for(var a=0,b;b=Blockly.Events.FIRE_QUEUE_[a];a++)b.recordUndo=!1};Blockly.Events.disable=function(){Blockly.Events.disabled_++};Blockly.Events.enable=function(){Blockly.Events.disabled_--};
Blockly.Events.isEnabled=function(){return 0==Blockly.Events.disabled_};Blockly.Events.getGroup=function(){return Blockly.Events.group_};Blockly.Events.setGroup=function(a){Blockly.Events.group_="boolean"==typeof a?a?Blockly.utils.genUid():"":a};Blockly.Events.getDescendantIds_=function(a){var b=[];a=a.getDescendants(!1);for(var c=0,d;d=a[c];c++)b[c]=d.id;return b};
Blockly.Events.fromJson=function(a,b){switch(a.type){case Blockly.Events.CREATE:var c=new Blockly.Events.Create(null);break;case Blockly.Events.DELETE:c=new Blockly.Events.Delete(null);break;case Blockly.Events.CHANGE:c=new Blockly.Events.Change(null);break;case Blockly.Events.MOVE:c=new Blockly.Events.Move(null);break;case Blockly.Events.VAR_CREATE:c=new Blockly.Events.VarCreate(null);break;case Blockly.Events.VAR_DELETE:c=new Blockly.Events.VarDelete(null);break;case Blockly.Events.VAR_RENAME:c=
new Blockly.Events.VarRename(null);break;case Blockly.Events.COMMENT_CREATE:c=new Blockly.Events.CommentCreate(null);break;case Blockly.Events.COMMENT_CHANGE:c=new Blockly.Events.CommentChange(null);break;case Blockly.Events.COMMENT_MOVE:c=new Blockly.Events.CommentMove(null);break;case Blockly.Events.COMMENT_DELETE:c=new Blockly.Events.CommentDelete(null);break;case Blockly.Events.UI:c=new Blockly.Events.Ui(null);break;case Blockly.Events.DRAG_OUTSIDE:c=new Blockly.Events.DragBlockOutside(null);
break;case Blockly.Events.END_DRAG:c=new Blockly.Events.EndBlockDrag(null,!1);break;default:throw"Unknown event type.";}c.fromJson(a);c.workspaceId=b.id;return c};
Blockly.Events.disableOrphans=function(a){if(a.type==Blockly.Events.MOVE||a.type==Blockly.Events.CREATE){Blockly.Events.disable();var b=Blockly.Workspace.getById(a.workspaceId);if(a=b.getBlockById(a.blockId))if(a.getParent()&&!a.getParent().disabled){b=a.getDescendants(!1);a=0;for(var c;c=b[a];a++)c.setDisabled(!1)}else if((a.outputConnection||a.previousConnection)&&!b.isDragging()){do a.setDisabled(!0),a=a.getNextBlock();while(a)}Blockly.Events.enable()}};
Blockly.Events.Abstract=function(){this.workspaceId=void 0;this.group=Blockly.Events.group_;this.recordUndo=Blockly.Events.recordUndo};Blockly.Events.Abstract.prototype.toJson=function(){var a={type:this.type};this.group&&(a.group=this.group);return a};Blockly.Events.Abstract.prototype.fromJson=function(a){this.group=a.group};Blockly.Events.Abstract.prototype.isNull=function(){return!1};Blockly.Events.Abstract.prototype.run=function(a){};
Blockly.Events.Abstract.prototype.getEventWorkspace_=function(){var a=Blockly.Workspace.getById(this.workspaceId);if(!a)throw Error("Workspace is null. Event must have been generated from real Blockly events.");return a};Blockly.Events.VarBase=function(a){Blockly.Events.VarBase.superClass_.constructor.call(this);this.varId=a.getId();this.workspaceId=a.workspace.id};goog.inherits(Blockly.Events.VarBase,Blockly.Events.Abstract);Blockly.Events.VarBase.prototype.toJson=function(){var a=Blockly.Events.VarBase.superClass_.toJson.call(this);a.varId=this.varId;return a};Blockly.Events.VarBase.prototype.fromJson=function(a){Blockly.Events.VarBase.superClass_.toJson.call(this);this.varId=a.varId};
Blockly.Events.VarCreate=function(a){a&&(Blockly.Events.VarCreate.superClass_.constructor.call(this,a),this.varType=a.type,this.varName=a.name,this.isLocal=a.isLocal)};goog.inherits(Blockly.Events.VarCreate,Blockly.Events.VarBase);Blockly.Events.VarCreate.prototype.type=Blockly.Events.VAR_CREATE;Blockly.Events.VarCreate.prototype.toJson=function(){var a=Blockly.Events.VarCreate.superClass_.toJson.call(this);a.varType=this.varType;a.varName=this.varName;a.isLocal=this.isLocal;return a};
Blockly.Events.VarCreate.prototype.fromJson=function(a){Blockly.Events.VarCreate.superClass_.fromJson.call(this,a);this.varType=a.varType;this.varName=a.varName;this.isLocal=a.isLocal};Blockly.Events.VarCreate.prototype.run=function(a){var b=this.getEventWorkspace_();a?b.createVariable(this.varName,this.varType,this.varId,this.isLocal):b.deleteVariableById(this.varId)};
Blockly.Events.VarDelete=function(a){a&&(Blockly.Events.VarDelete.superClass_.constructor.call(this,a),this.varType=a.type,this.varName=a.name,this.isLocal=a.isLocal)};goog.inherits(Blockly.Events.VarDelete,Blockly.Events.VarBase);Blockly.Events.VarDelete.prototype.type=Blockly.Events.VAR_DELETE;Blockly.Events.VarDelete.prototype.toJson=function(){var a=Blockly.Events.VarDelete.superClass_.toJson.call(this);a.varType=this.varType;a.varName=this.varName;a.isLocal=this.isLocal;return a};
Blockly.Events.VarDelete.prototype.fromJson=function(a){Blockly.Events.VarDelete.superClass_.fromJson.call(this,a);this.varType=a.varType;this.varName=a.varName;this.isLocal=a.isLocal};Blockly.Events.VarDelete.prototype.run=function(a){var b=this.getEventWorkspace_();a?b.deleteVariableById(this.varId):b.createVariable(this.varName,this.varType,this.varId,this.isLocal)};
Blockly.Events.VarRename=function(a,b){a&&(Blockly.Events.VarRename.superClass_.constructor.call(this,a),this.oldName=a.name,this.newName=b)};goog.inherits(Blockly.Events.VarRename,Blockly.Events.VarBase);Blockly.Events.VarRename.prototype.type=Blockly.Events.VAR_RENAME;Blockly.Events.VarRename.prototype.toJson=function(){var a=Blockly.Events.VarRename.superClass_.toJson.call(this);a.oldName=this.oldName;a.newName=this.newName;return a};
Blockly.Events.VarRename.prototype.fromJson=function(a){Blockly.Events.VarRename.superClass_.fromJson.call(this,a);this.oldName=a.oldName;this.newName=a.newName};Blockly.Events.VarRename.prototype.run=function(a){var b=this.getEventWorkspace_();a?b.renameVariableById(this.varId,this.newName):b.renameVariableById(this.varId,this.oldName)};
Blockly.VariableModel=function(a,b,c,d,e){this.workspace=a;this.name=b;this.type=c||"";this.id_=d||Blockly.utils.genUid();this.isLocal=e||!1;Blockly.Events.fire(new Blockly.Events.VarCreate(this))};Blockly.VariableModel.prototype.getId=function(){return this.id_};Blockly.VariableModel.compareByName=function(a,b){return Blockly.scratchBlocksUtils.compareStrings(a.name,b.name)};Blockly.VariableMap=function(a){this.variableMap_={};this.workspace=a};Blockly.VariableMap.prototype.clear=function(){this.variableMap_=Object(null)};
Blockly.VariableMap.prototype.renameVariable=function(a,b){var c=this.getVariable(b,a.type),d=this.workspace.getAllBlocks();Blockly.Events.setGroup(!0);try{c?console.warn("Unexpected conflict when attempting to rename variable with name: "+a.name+" and id: "+a.getId()+" to new name: "+b+". A variable with the new name already exists and has id: "+c.getId()):this.renameVariableAndUses_(a,b,d)}finally{Blockly.Events.setGroup(!1)}};
Blockly.VariableMap.prototype.renameVariableById=function(a,b){var c=this.getVariableById(a);if(!c)throw Error("Tried to rename a variable that didn't exist. ID: "+a);this.renameVariable(c,b)};Blockly.VariableMap.prototype.renameVariableAndUses_=function(a,b,c){Blockly.Events.fire(new Blockly.Events.VarRename(a,b));a.name=b;for(b=0;b<c.length;b++)c[b].updateVarName(a)};
Blockly.VariableMap.prototype.renameVariableWithConflict_=function(a,b,c,d){var e=a.type;b!=c.name&&this.renameVariableAndUses_(c,b,d);for(b=0;b<d.length;b++)d[b].renameVarById(a.getId(),c.getId());Blockly.Events.fire(new Blockly.Events.VarDelete(a));a=this.getVariablesOfType(e).indexOf(a);this.variableMap_[e].splice(a,1)};
Blockly.VariableMap.prototype.createVariable=function(a,b,c,d){var e=this.getVariable(a,b);if(e){if(c&&e.getId()!=c)throw Error('Variable "'+a+'" is already in use and its id is "'+e.getId()+'" which conflicts with the passed in id, "'+c+'".');return e}if(c&&this.getVariableById(c))throw Error('Variable id, "'+c+'", is already in use.');c=c||Blockly.utils.genUid();b=b||"";e=new Blockly.VariableModel(this.workspace,a,b,c,d);this.variableMap_[b]?this.variableMap_[b].push(e):this.variableMap_[b]=[e];
return e};Blockly.VariableMap.prototype.deleteVariable=function(a){for(var b=this.variableMap_[a.type],c=0,d;d=b[c];c++)if(d.getId()==a.getId()){b.splice(c,1);Blockly.Events.fire(new Blockly.Events.VarDelete(a));break}};
Blockly.VariableMap.prototype.deleteVariableById=function(a){var b=this.getVariableById(a);if(b){var c=b.name,d=this.getVariableUsesById(a);a=0;for(var e;e=d[a];a++)if(e.type==Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE||"procedures_defreturn"==e.type){a=e.getFieldValue("NAME");c=Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE.replace("%1",c).replace("%2",a);Blockly.alert(c);return}var f=this;1<d.length?(c=Blockly.Msg.DELETE_VARIABLE_CONFIRMATION.replace("%1",String(d.length)).replace("%2",c),Blockly.confirm(c,
function(a){a&&f.deleteVariableInternal_(b,d)})):f.deleteVariableInternal_(b,d)}else console.warn("Can't delete non-existent variable: "+a)};Blockly.VariableMap.prototype.deleteVariableInternal_=function(a,b){var c=Blockly.Events.getGroup();c||Blockly.Events.setGroup(!0);try{for(var d=0;d<b.length;d++)b[d].dispose(!0,!1);this.deleteVariable(a)}finally{c||Blockly.Events.setGroup(!1)}};
Blockly.VariableMap.prototype.getVariable=function(a,b){if(b=this.variableMap_[b||""])for(var c=0,d;d=b[c];c++)if(d.name==a)return d;return null};Blockly.VariableMap.prototype.getVariableById=function(a){for(var b=Object.keys(this.variableMap_),c=0;c<b.length;c++)for(var d=b[c],e=0,f;f=this.variableMap_[d][e];e++)if(f.getId()==a)return f;return null};Blockly.VariableMap.prototype.getVariablesOfType=function(a){return(a=this.variableMap_[a||""])?a.slice():[]};
Blockly.VariableMap.prototype.getVariableTypes=function(){for(var a=Object.keys(this.variableMap_),b=!1,c=0;c<a.length;c++)""==a[c]&&(b=!0);b||a.push("");return a};Blockly.VariableMap.prototype.getAllVariables=function(){for(var a=[],b=Object.keys(this.variableMap_),c=0;c<b.length;c++)a=a.concat(this.variableMap_[b[c]]);return a};
Blockly.VariableMap.prototype.getVariableUsesById=function(a){for(var b=[],c=this.workspace.getAllBlocks(),d=0;d<c.length;d++){var e=c[d].getVarModels();if(e)for(var f=0;f<e.length;f++)e[f].getId()==a&&b.push(c[d])}return b};Blockly.Events.CommentBase=function(a){this.commentId=a.id;this.workspaceId=a.workspace.id;this.blockId=a.blockId||null;this.group=Blockly.Events.group_;this.recordUndo=Blockly.Events.recordUndo};goog.inherits(Blockly.Events.CommentBase,Blockly.Events.Abstract);Blockly.Events.CommentBase.prototype.toJson=function(){var a={type:this.type};this.group&&(a.group=this.group);this.commentId&&(a.commentId=this.commentId);this.blockId&&(a.blockId=this.blockId);return a};
Blockly.Events.CommentBase.prototype.fromJson=function(a){this.commentId=a.commentId;this.group=a.group;this.blockId=a.blockId};Blockly.Events.CommentBase.prototype.getComment_=function(){return this.getEventWorkspace_().getCommentById(this.commentId)};Blockly.Events.CommentChange=function(a,b,c){a&&(Blockly.Events.CommentChange.superClass_.constructor.call(this,a),this.oldContents_=b,this.newContents_=c)};goog.inherits(Blockly.Events.CommentChange,Blockly.Events.CommentBase);
Blockly.Events.CommentChange.prototype.type=Blockly.Events.COMMENT_CHANGE;Blockly.Events.CommentChange.prototype.toJson=function(){var a=Blockly.Events.CommentChange.superClass_.toJson.call(this);a.newContents=this.newContents_;return a};Blockly.Events.CommentChange.prototype.fromJson=function(a){Blockly.Events.CommentChange.superClass_.fromJson.call(this,a);this.newContents_=a.newValue};Blockly.Events.CommentChange.prototype.isNull=function(){return this.oldContents_==this.newContents_};
Blockly.Events.CommentChange.prototype.run=function(a){var b=this.getComment_();b?(a=a?this.newContents_:this.oldContents_,a.hasOwnProperty("minimized")&&b.setMinimized(a.minimized),a.hasOwnProperty("width")&&a.hasOwnProperty("height")&&b.setSize(a.width,a.height),a.hasOwnProperty("text")&&b.setText(a.text)):console.warn("Can't change non-existent comment: "+this.commentId)};
Blockly.Events.CommentCreate=function(a){if(a){Blockly.Events.CommentCreate.superClass_.constructor.call(this,a);this.text=a.getText();this.xy=a.getXY();var b=a.getHeightWidth();this.width=b.width;this.height=b.height;this.minimized=a.isMinimized()||!1;this.xml=a.toXmlWithXY()}};goog.inherits(Blockly.Events.CommentCreate,Blockly.Events.CommentBase);Blockly.Events.CommentCreate.prototype.type=Blockly.Events.COMMENT_CREATE;
Blockly.Events.CommentCreate.prototype.toJson=function(){var a=Blockly.Events.CommentCreate.superClass_.toJson.call(this);a.xml=Blockly.Xml.domToText(this.xml);return a};Blockly.Events.CommentCreate.prototype.fromJson=function(a){Blockly.Events.CommentCreate.superClass_.fromJson.call(this,a);this.xml=Blockly.Xml.textToDom("<xml>"+a.xml+"</xml>").firstChild};
Blockly.Events.CommentCreate.prototype.run=function(a){if(a)if(a=this.getEventWorkspace_(),this.blockId)(a=a.getBlockById(this.blockId))&&a.setCommentText("",this.commentId,this.xy.x,this.xy.y,this.minimized);else{var b=goog.dom.createDom("xml");b.appendChild(this.xml);Blockly.Xml.domToWorkspace(b,a)}else(a=this.getComment_())?a.dispose(!1,!1):console.warn("Can't uncreate non-existent comment: "+this.commentId)};
Blockly.Events.CommentDelete=function(a){if(a){Blockly.Events.CommentDelete.superClass_.constructor.call(this,a);this.xy=a.getXY();this.minimized=a.isMinimized()||!1;this.text=a.getText();var b=a.getHeightWidth();this.height=b.height;this.width=b.width;this.xml=a.toXmlWithXY()}};goog.inherits(Blockly.Events.CommentDelete,Blockly.Events.CommentBase);Blockly.Events.CommentDelete.prototype.type=Blockly.Events.COMMENT_DELETE;Blockly.Events.CommentDelete.prototype.toJson=function(){return Blockly.Events.CommentDelete.superClass_.toJson.call(this)};
Blockly.Events.CommentDelete.prototype.fromJson=function(a){Blockly.Events.CommentDelete.superClass_.fromJson.call(this,a)};
Blockly.Events.CommentDelete.prototype.run=function(a){if(a)(a=this.getComment_())?a.dispose(!1,!1):console.warn("Can't delete non-existent comment: "+this.commentId);else if(a=this.getEventWorkspace_(),this.blockId)a=a.getBlockById(this.blockId),a.setCommentText(this.text,this.commentId,this.xy.x,this.xy.y,this.minimized),a.comment.setSize(this.width,this.height);else{var b=goog.dom.createDom("xml");b.appendChild(this.xml);Blockly.Xml.domToWorkspace(b,a)}};
Blockly.Events.CommentMove=function(a){a&&(Blockly.Events.CommentMove.superClass_.constructor.call(this,a),this.comment_=a,this.oldCoordinate_=a.getXY(),this.newCoordinate_=null)};goog.inherits(Blockly.Events.CommentMove,Blockly.Events.CommentBase);Blockly.Events.CommentMove.prototype.recordNew=function(){if(!this.comment_)throw Error("Tried to record the new position of a comment on the same event twice.");this.newCoordinate_=this.comment_.getXY();this.comment_=null};
Blockly.Events.CommentMove.prototype.type=Blockly.Events.COMMENT_MOVE;Blockly.Events.CommentMove.prototype.setOldCoordinate=function(a){this.oldCoordinate_=a};Blockly.Events.CommentMove.prototype.toJson=function(){var a=Blockly.Events.CommentMove.superClass_.toJson.call(this);this.newCoordinate_&&(a.newCoordinate=Math.round(this.newCoordinate_.x)+","+Math.round(this.newCoordinate_.y));return a};
Blockly.Events.CommentMove.prototype.fromJson=function(a){Blockly.Events.CommentMove.superClass_.fromJson.call(this,a);a.newCoordinate&&(a=a.newCoordinate.split(","),this.newCoordinate_=new goog.math.Coordinate(parseFloat(a[0]),parseFloat(a[1])))};Blockly.Events.CommentMove.prototype.isNull=function(){return goog.math.Coordinate.equals(this.oldCoordinate_,this.newCoordinate_)};
Blockly.Events.CommentMove.prototype.run=function(a){var b=this.getComment_();if(b)if(a=a?this.newCoordinate_:this.oldCoordinate_,b instanceof Blockly.ScratchBlockComment)b.moveTo(a.x,a.y);else{var c=b.getXY();b.moveBy(a.x-c.x,a.y-c.y)}else console.warn("Can't move non-existent comment: "+this.commentId)};Blockly.WorkspaceComment=function(a,b,c,d,e,f){this.id=f&&!a.getCommentById(f)?f:Blockly.utils.genUid();a.addTopComment(this);this.xy_=new goog.math.Coordinate(0,0);this.height_=c;this.width_=d;this.isMinimized_=e;this.workspace=a;this.RTL=a.RTL;this.movable_=this.deletable_=!0;this.content_=b;this.isComment=!0;Blockly.WorkspaceComment.fireCreateEvent(this)};Blockly.WorkspaceComment.MAX_LABEL_LENGTH=12;Blockly.WorkspaceComment.COMMENT_TEXT_LIMIT=8E3;
Blockly.WorkspaceComment.prototype.dispose=function(){this.workspace&&(Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.CommentDelete(this)),this.workspace.removeTopComment(this),this.workspace=null)};Blockly.WorkspaceComment.prototype.getHeight=function(){return this.height_};Blockly.WorkspaceComment.prototype.setHeight=function(a){this.height_=a};Blockly.WorkspaceComment.prototype.getWidth=function(){return this.width_};
Blockly.WorkspaceComment.prototype.setWidth=function(a){this.width_=a};Blockly.WorkspaceComment.prototype.getHeightWidth=function(){return{height:this.height_,width:this.width_}};Blockly.WorkspaceComment.prototype.getXY=function(){return this.xy_.clone()};Blockly.WorkspaceComment.prototype.moveBy=function(a,b){var c=new Blockly.Events.CommentMove(this);this.xy_.translate(a,b);c.recordNew();Blockly.Events.fire(c)};
Blockly.WorkspaceComment.prototype.isDeletable=function(){return this.deletable_&&!(this.workspace&&this.workspace.options.readOnly)};Blockly.WorkspaceComment.prototype.setDeletable=function(a){this.deletable_=a};Blockly.WorkspaceComment.prototype.isMovable=function(){return this.movable_&&!(this.workspace&&this.workspace.options.readOnly)};Blockly.WorkspaceComment.prototype.setMovable=function(a){this.movable_=a};Blockly.WorkspaceComment.prototype.getText=function(){return this.content_};
Blockly.WorkspaceComment.prototype.setText=function(a){this.content_!=a&&(Blockly.Events.fire(new Blockly.Events.CommentChange(this,{text:this.content_},{text:a})),this.content_=a)};Blockly.WorkspaceComment.prototype.isMinimized=function(){return this.isMinimized_};Blockly.WorkspaceComment.prototype.toXmlWithXY=function(a){a=this.toXml(a);a.setAttribute("x",Math.round(this.xy_.x));a.setAttribute("y",Math.round(this.xy_.y));a.setAttribute("h",this.height_);a.setAttribute("w",this.width_);return a};
Blockly.WorkspaceComment.prototype.getLabelText=function(){return this.content_.length>Blockly.WorkspaceComment.MAX_LABEL_LENGTH?this.RTL?"\u2026"+this.content_.slice(0,Blockly.WorkspaceComment.MAX_LABEL_LENGTH):this.content_.slice(0,Blockly.WorkspaceComment.MAX_LABEL_LENGTH)+"\u2026":this.content_};
Blockly.WorkspaceComment.prototype.toXml=function(a){var b=goog.dom.createDom("comment");a||b.setAttribute("id",this.id);this.isMinimized_&&b.setAttribute("minimized",!0);b.textContent=this.getText();return b};Blockly.WorkspaceComment.fireCreateEvent=function(a){if(Blockly.Events.isEnabled()){var b=Blockly.Events.getGroup();b||Blockly.Events.setGroup(!0);try{Blockly.Events.fire(new Blockly.Events.CommentCreate(a))}finally{b||Blockly.Events.setGroup(!1)}}};
Blockly.WorkspaceComment.fromXml=function(a,b){a=Blockly.WorkspaceComment.parseAttributes(a);b=new Blockly.WorkspaceComment(b,a.content,a.h,a.w,a.minimized,a.id);isNaN(a.x)||isNaN(a.y)||b.moveBy(a.x,a.y);Blockly.WorkspaceComment.fireCreateEvent(b);return b};
Blockly.WorkspaceComment.parseAttributes=function(a){var b=a.getAttribute("h"),c=a.getAttribute("w");return{id:a.getAttribute("id"),h:b?parseInt(b,10):100,w:c?parseInt(c,10):100,x:parseInt(a.getAttribute("x"),10),y:parseInt(a.getAttribute("y"),10),minimized:"true"==a.getAttribute("minimized")||!1,content:a.textContent}};
Blockly.Workspace=function(a){this.id=Blockly.utils.genUid();Blockly.Workspace.WorkspaceDB_[this.id]=this;this.options=a||{};this.RTL=!!this.options.RTL;this.horizontalLayout=!!this.options.horizontalLayout;this.toolboxPosition=this.options.toolboxPosition;this.topBlocks_=[];this.topComments_=[];this.commentDB_=Object.create(null);this.listeners_=[];this.tapListeners_=[];this.undoStack_=[];this.redoStack_=[];this.blockDB_=Object.create(null);this.variableMap_=new Blockly.VariableMap(this);this.potentialVariableMap_=
null};Blockly.Workspace.prototype.rendered=!1;Blockly.Workspace.prototype.isClearing=!1;Blockly.Workspace.prototype.MAX_UNDO=1024;Blockly.Workspace.prototype.refreshToolboxSelection_=function(){};Blockly.Workspace.prototype.dispose=function(){this.listeners_.length=0;this.clear();delete Blockly.Workspace.WorkspaceDB_[this.id]};Blockly.Workspace.SCAN_ANGLE=3;Blockly.Workspace.prototype.addTopBlock=function(a){this.topBlocks_.push(a)};
Blockly.Workspace.prototype.removeTopBlock=function(a){if(!goog.array.remove(this.topBlocks_,a))throw"Block not present in workspace's list of top-most blocks.";};Blockly.Workspace.prototype.getTopBlocks=function(a){var b=[].concat(this.topBlocks_);if(a&&1<b.length){var c=Math.sin(goog.math.toRadians(Blockly.Workspace.SCAN_ANGLE));this.RTL&&(c*=-1);b.sort(function(a,b){a=a.getRelativeToSurfaceXY();b=b.getRelativeToSurfaceXY();return a.y+c*a.x-(b.y+c*b.x)})}return b};
Blockly.Workspace.prototype.addTopComment=function(a){this.topComments_.push(a);this.commentDB_[a.id]&&console.warn('Overriding an existing comment on this workspace, with id "'+a.id+'"');this.commentDB_[a.id]=a};Blockly.Workspace.prototype.removeTopComment=function(a){if(!goog.array.remove(this.topComments_,a))throw"Comment not present in workspace's list of top-most comments.";delete this.commentDB_[a.id]};
Blockly.Workspace.prototype.getTopComments=function(a){var b=[].concat(this.topComments_);if(a&&1<b.length){var c=Math.sin(goog.math.toRadians(Blockly.Workspace.SCAN_ANGLE));this.RTL&&(c*=-1);b.sort(function(a,b){a=a.getRelativeToSurfaceXY();b=b.getRelativeToSurfaceXY();return a.y+c*a.x-(b.y+c*b.x)})}return b};
Blockly.Workspace.prototype.getAllBlocks=function(a){if(a){a=this.getTopBlocks(!0);for(var b=[],c=0;c<a.length;c++)b.push.apply(b,a[c].getDescendants(!0))}else for(b=this.getTopBlocks(!1),c=0;c<b.length;c++)b.push.apply(b,b[c].getChildren(!1));return b};
Blockly.Workspace.prototype.clear=function(){this.isClearing=!0;var a=Blockly.Events.getGroup();for(a||Blockly.Events.setGroup(!0);this.topBlocks_.length;)this.topBlocks_[0].dispose();for(;this.topComments_.length;)this.topComments_[this.topComments_.length-1].dispose();a||Blockly.Events.setGroup(!1);this.variableMap_.clear();Blockly.DropDownDiv&&Blockly.DropDownDiv.hideWithoutAnimation();Blockly.WidgetDiv&&Blockly.WidgetDiv.hide(!0);this.potentialVariableMap_&&this.potentialVariableMap_.clear();
this.isClearing=!1};Blockly.Workspace.prototype.renameVariableById=function(a,b){this.variableMap_.renameVariableById(a,b)};Blockly.Workspace.prototype.createVariable=function(a,b,c,d){return this.variableMap_.createVariable(a,b,c,d)};Blockly.Workspace.prototype.getVariableUsesById=function(a){return this.variableMap_.getVariableUsesById(a)};Blockly.Workspace.prototype.deleteVariableById=function(a){this.variableMap_.deleteVariableById(a)};
Blockly.Workspace.prototype.deleteVariableInternal_=function(a,b){this.variableMap_.deleteVariableInternal_(a,b)};Blockly.Workspace.prototype.variableIndexOf=function(a){console.warn("Deprecated call to Blockly.Workspace.prototype.variableIndexOf");return-1};Blockly.Workspace.prototype.getVariable=function(a,b){return this.variableMap_.getVariable(a,b)};Blockly.Workspace.prototype.getVariableById=function(a){return this.variableMap_.getVariableById(a)};
Blockly.Workspace.prototype.getVariablesOfType=function(a){return this.variableMap_.getVariablesOfType(a)};Blockly.Workspace.prototype.getVariableTypes=function(){return this.variableMap_.getVariableTypes()};Blockly.Workspace.prototype.getAllVariables=function(){return this.variableMap_.getAllVariables()};Blockly.Workspace.prototype.getWidth=function(){return 0};Blockly.Workspace.prototype.newBlock=function(a,b){return new Blockly.Block(this,a,b)};
Blockly.Workspace.prototype.undo=function(a){var b=a?this.redoStack_:this.undoStack_,c=a?this.undoStack_:this.redoStack_,d=b.pop();if(d){for(var e=[d];b.length&&d.group&&d.group==b[b.length-1].group;)e.push(b.pop());for(b=0;d=e[b];b++)c.push(d);e=Blockly.Events.filter(e,a);Blockly.Events.recordUndo=!1;if(Blockly.selected){Blockly.Events.disable();try{Blockly.selected.unselect()}finally{Blockly.Events.enable()}}try{for(b=0;d=e[b];b++)d.run(a)}finally{Blockly.Events.recordUndo=!0}}};
Blockly.Workspace.prototype.clearUndo=function(){this.undoStack_.length=0;this.redoStack_.length=0;Blockly.Events.clearPendingUndo()};Blockly.Workspace.prototype.hasRedoStack=function(){return 0!=this.redoStack_.length};Blockly.Workspace.prototype.hasUndoStack=function(){return 0!=this.undoStack_.length};Blockly.Workspace.prototype.addChangeListener=function(a){this.listeners_.push(a);return a};Blockly.Workspace.prototype.removeChangeListener=function(a){goog.array.remove(this.listeners_,a)};
Blockly.Workspace.prototype.fireChangeListener=function(a){a.recordUndo&&(this.undoStack_.push(a),this.redoStack_.length=0,this.undoStack_.length>this.MAX_UNDO&&this.undoStack_.unshift());for(var b=this.listeners_.slice(),c=0,d;d=b[c];c++)d(a)};Blockly.Workspace.prototype.getBlockById=function(a){var b=this.blockDB_[a];!b&&this.getFlyout()&&this.getFlyout().getWorkspace()&&(b=this.getFlyout().getWorkspace().blockDB_[a]);return b||null};
Blockly.Workspace.prototype.getCommentById=function(a){return this.commentDB_[a]||null};Blockly.Workspace.prototype.getFlyout=function(){return null};Blockly.Workspace.prototype.allInputsFilled=function(a){for(var b=this.getTopBlocks(!1),c=0,d;d=b[c];c++)if(!d.allInputsFilled(a))return!1;return!0};Blockly.Workspace.prototype.getPotentialVariableMap=function(){return this.potentialVariableMap_};Blockly.Workspace.prototype.createPotentialVariableMap=function(){this.potentialVariableMap_=new Blockly.VariableMap(this)};
Blockly.Workspace.prototype.getVariableMap=function(){return this.variableMap_};Blockly.Workspace.WorkspaceDB_=Object.create(null);Blockly.Workspace.getById=function(a){return Blockly.Workspace.WorkspaceDB_[a]||null};Blockly.Workspace.prototype.clear=Blockly.Workspace.prototype.clear;Blockly.Workspace.prototype.clearUndo=Blockly.Workspace.prototype.clearUndo;Blockly.Workspace.prototype.addChangeListener=Blockly.Workspace.prototype.addChangeListener;
Blockly.Workspace.prototype.removeChangeListener=Blockly.Workspace.prototype.removeChangeListener;goog.dom.BrowserFeature={CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9),CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO&&!goog.userAgent.IE||goog.userAgent.IE&&goog.userAgent.isDocumentModeOrHigher(9)||goog.userAgent.GECKO&&goog.userAgent.isVersionOrHigher("1.9.1"),CAN_USE_INNER_TEXT:goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9"),CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE||goog.userAgent.OPERA||goog.userAgent.WEBKIT,INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE,
LEGACY_IE_RANGES:goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(9)};goog.dom.HtmlElement=function(){};goog.dom.TagName=function(a){this.tagName_=a};goog.dom.TagName.prototype.toString=function(){return this.tagName_};goog.dom.TagName.A=new goog.dom.TagName("A");goog.dom.TagName.ABBR=new goog.dom.TagName("ABBR");goog.dom.TagName.ACRONYM=new goog.dom.TagName("ACRONYM");goog.dom.TagName.ADDRESS=new goog.dom.TagName("ADDRESS");goog.dom.TagName.APPLET=new goog.dom.TagName("APPLET");goog.dom.TagName.AREA=new goog.dom.TagName("AREA");goog.dom.TagName.ARTICLE=new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE=new goog.dom.TagName("ASIDE");goog.dom.TagName.AUDIO=new goog.dom.TagName("AUDIO");goog.dom.TagName.B=new goog.dom.TagName("B");goog.dom.TagName.BASE=new goog.dom.TagName("BASE");goog.dom.TagName.BASEFONT=new goog.dom.TagName("BASEFONT");goog.dom.TagName.BDI=new goog.dom.TagName("BDI");goog.dom.TagName.BDO=new goog.dom.TagName("BDO");goog.dom.TagName.BIG=new goog.dom.TagName("BIG");goog.dom.TagName.BLOCKQUOTE=new goog.dom.TagName("BLOCKQUOTE");goog.dom.TagName.BODY=new goog.dom.TagName("BODY");
goog.dom.TagName.BR=new goog.dom.TagName("BR");goog.dom.TagName.BUTTON=new goog.dom.TagName("BUTTON");goog.dom.TagName.CANVAS=new goog.dom.TagName("CANVAS");goog.dom.TagName.CAPTION=new goog.dom.TagName("CAPTION");goog.dom.TagName.CENTER=new goog.dom.TagName("CENTER");goog.dom.TagName.CITE=new goog.dom.TagName("CITE");goog.dom.TagName.CODE=new goog.dom.TagName("CODE");goog.dom.TagName.COL=new goog.dom.TagName("COL");goog.dom.TagName.COLGROUP=new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND=new goog.dom.TagName("COMMAND");goog.dom.TagName.DATA=new goog.dom.TagName("DATA");goog.dom.TagName.DATALIST=new goog.dom.TagName("DATALIST");goog.dom.TagName.DD=new goog.dom.TagName("DD");goog.dom.TagName.DEL=new goog.dom.TagName("DEL");goog.dom.TagName.DETAILS=new goog.dom.TagName("DETAILS");goog.dom.TagName.DFN=new goog.dom.TagName("DFN");goog.dom.TagName.DIALOG=new goog.dom.TagName("DIALOG");goog.dom.TagName.DIR=new goog.dom.TagName("DIR");goog.dom.TagName.DIV=new goog.dom.TagName("DIV");
goog.dom.TagName.DL=new goog.dom.TagName("DL");goog.dom.TagName.DT=new goog.dom.TagName("DT");goog.dom.TagName.EM=new goog.dom.TagName("EM");goog.dom.TagName.EMBED=new goog.dom.TagName("EMBED");goog.dom.TagName.FIELDSET=new goog.dom.TagName("FIELDSET");goog.dom.TagName.FIGCAPTION=new goog.dom.TagName("FIGCAPTION");goog.dom.TagName.FIGURE=new goog.dom.TagName("FIGURE");goog.dom.TagName.FONT=new goog.dom.TagName("FONT");goog.dom.TagName.FOOTER=new goog.dom.TagName("FOOTER");goog.dom.TagName.FORM=new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME=new goog.dom.TagName("FRAME");goog.dom.TagName.FRAMESET=new goog.dom.TagName("FRAMESET");goog.dom.TagName.H1=new goog.dom.TagName("H1");goog.dom.TagName.H2=new goog.dom.TagName("H2");goog.dom.TagName.H3=new goog.dom.TagName("H3");goog.dom.TagName.H4=new goog.dom.TagName("H4");goog.dom.TagName.H5=new goog.dom.TagName("H5");goog.dom.TagName.H6=new goog.dom.TagName("H6");goog.dom.TagName.HEAD=new goog.dom.TagName("HEAD");goog.dom.TagName.HEADER=new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP=new goog.dom.TagName("HGROUP");goog.dom.TagName.HR=new goog.dom.TagName("HR");goog.dom.TagName.HTML=new goog.dom.TagName("HTML");goog.dom.TagName.I=new goog.dom.TagName("I");goog.dom.TagName.IFRAME=new goog.dom.TagName("IFRAME");goog.dom.TagName.IMG=new goog.dom.TagName("IMG");goog.dom.TagName.INPUT=new goog.dom.TagName("INPUT");goog.dom.TagName.INS=new goog.dom.TagName("INS");goog.dom.TagName.ISINDEX=new goog.dom.TagName("ISINDEX");goog.dom.TagName.KBD=new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN=new goog.dom.TagName("KEYGEN");goog.dom.TagName.LABEL=new goog.dom.TagName("LABEL");goog.dom.TagName.LEGEND=new goog.dom.TagName("LEGEND");goog.dom.TagName.LI=new goog.dom.TagName("LI");goog.dom.TagName.LINK=new goog.dom.TagName("LINK");goog.dom.TagName.MAIN=new goog.dom.TagName("MAIN");goog.dom.TagName.MAP=new goog.dom.TagName("MAP");goog.dom.TagName.MARK=new goog.dom.TagName("MARK");goog.dom.TagName.MATH=new goog.dom.TagName("MATH");goog.dom.TagName.MENU=new goog.dom.TagName("MENU");
goog.dom.TagName.MENUITEM=new goog.dom.TagName("MENUITEM");goog.dom.TagName.META=new goog.dom.TagName("META");goog.dom.TagName.METER=new goog.dom.TagName("METER");goog.dom.TagName.NAV=new goog.dom.TagName("NAV");goog.dom.TagName.NOFRAMES=new goog.dom.TagName("NOFRAMES");goog.dom.TagName.NOSCRIPT=new goog.dom.TagName("NOSCRIPT");goog.dom.TagName.OBJECT=new goog.dom.TagName("OBJECT");goog.dom.TagName.OL=new goog.dom.TagName("OL");goog.dom.TagName.OPTGROUP=new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION=new goog.dom.TagName("OPTION");goog.dom.TagName.OUTPUT=new goog.dom.TagName("OUTPUT");goog.dom.TagName.P=new goog.dom.TagName("P");goog.dom.TagName.PARAM=new goog.dom.TagName("PARAM");goog.dom.TagName.PICTURE=new goog.dom.TagName("PICTURE");goog.dom.TagName.PRE=new goog.dom.TagName("PRE");goog.dom.TagName.PROGRESS=new goog.dom.TagName("PROGRESS");goog.dom.TagName.Q=new goog.dom.TagName("Q");goog.dom.TagName.RP=new goog.dom.TagName("RP");goog.dom.TagName.RT=new goog.dom.TagName("RT");
goog.dom.TagName.RTC=new goog.dom.TagName("RTC");goog.dom.TagName.RUBY=new goog.dom.TagName("RUBY");goog.dom.TagName.S=new goog.dom.TagName("S");goog.dom.TagName.SAMP=new goog.dom.TagName("SAMP");goog.dom.TagName.SCRIPT=new goog.dom.TagName("SCRIPT");goog.dom.TagName.SECTION=new goog.dom.TagName("SECTION");goog.dom.TagName.SELECT=new goog.dom.TagName("SELECT");goog.dom.TagName.SMALL=new goog.dom.TagName("SMALL");goog.dom.TagName.SOURCE=new goog.dom.TagName("SOURCE");goog.dom.TagName.SPAN=new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE=new goog.dom.TagName("STRIKE");goog.dom.TagName.STRONG=new goog.dom.TagName("STRONG");goog.dom.TagName.STYLE=new goog.dom.TagName("STYLE");goog.dom.TagName.SUB=new goog.dom.TagName("SUB");goog.dom.TagName.SUMMARY=new goog.dom.TagName("SUMMARY");goog.dom.TagName.SUP=new goog.dom.TagName("SUP");goog.dom.TagName.SVG=new goog.dom.TagName("SVG");goog.dom.TagName.TABLE=new goog.dom.TagName("TABLE");goog.dom.TagName.TBODY=new goog.dom.TagName("TBODY");goog.dom.TagName.TD=new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE=new goog.dom.TagName("TEMPLATE");goog.dom.TagName.TEXTAREA=new goog.dom.TagName("TEXTAREA");goog.dom.TagName.TFOOT=new goog.dom.TagName("TFOOT");goog.dom.TagName.TH=new goog.dom.TagName("TH");goog.dom.TagName.THEAD=new goog.dom.TagName("THEAD");goog.dom.TagName.TIME=new goog.dom.TagName("TIME");goog.dom.TagName.TITLE=new goog.dom.TagName("TITLE");goog.dom.TagName.TR=new goog.dom.TagName("TR");goog.dom.TagName.TRACK=new goog.dom.TagName("TRACK");goog.dom.TagName.TT=new goog.dom.TagName("TT");
goog.dom.TagName.U=new goog.dom.TagName("U");goog.dom.TagName.UL=new goog.dom.TagName("UL");goog.dom.TagName.VAR=new goog.dom.TagName("VAR");goog.dom.TagName.VIDEO=new goog.dom.TagName("VIDEO");goog.dom.TagName.WBR=new goog.dom.TagName("WBR");goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);"undefined"!=typeof b.Location&&"undefined"!=typeof b.Element&&goog.asserts.assert(a&&(a instanceof b.Location||!(a instanceof b.Element)),"Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(a))}return a};
goog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);"undefined"!=typeof c[b]&&"undefined"!=typeof c.Location&&"undefined"!=typeof c.Element&&goog.asserts.assert(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element)),"Argument is not a %s (or a non-Element, non-Location mock); got: %s",b,goog.dom.asserts.debugStringForType_(a))}return a};
goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAnchorElement")};goog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLButtonElement")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLLinkElement")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLImageElement")};
goog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLVideoElement")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLInputElement")};goog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLEmbedElement")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFormElement")};
goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFrameElement")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLIFrameElement")};goog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLObjectElement")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLScriptElement")};
goog.dom.asserts.debugStringForType_=function(a){return goog.isObject(a)?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):void 0===a?"undefined":null===a?"null":typeof a};goog.dom.asserts.getWindow_=function(a){return(a=a&&a.ownerDocument)&&(a.defaultView||a.parentWindow)||goog.global};goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return!0===goog.dom.tags.VOID_TAGS_[a]};goog.string.TypedString=function(){};goog.string.Const=function(){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_="";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};
goog.string.Const.prototype.toString=function(){return"Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"};goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail("expected object of type Const, got '"+a+"'");return"type_error:Const"};
goog.string.Const.from=function(a){return goog.string.Const.create__googStringSecurityPrivate_(a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.create__googStringSecurityPrivate_=function(a){var b=new goog.string.Const;b.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a;return b};goog.string.Const.EMPTY=goog.string.Const.from("");goog.html={};goog.html.SafeScript=function(){this.privateDoNotAccessOrElseSafeScriptWrappedValue_="";this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeScript.prototype.implementsGoogStringTypedString=!0;goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeScript.fromConstant=function(a){a=goog.string.Const.unwrap(a);return 0===a.length?goog.html.SafeScript.EMPTY:goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeScript.fromConstantAndArgs=function(a,b){for(var c=[],d=1;d<arguments.length;d++)c.push(goog.html.SafeScript.stringify_(arguments[d]));return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("("+goog.string.Const.unwrap(a)+")("+c.join(", ")+");")};goog.html.SafeScript.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_};
goog.DEBUG&&(goog.html.SafeScript.prototype.toString=function(){return"SafeScript{"+this.privateDoNotAccessOrElseSafeScriptWrappedValue_+"}"});
goog.html.SafeScript.unwrap=function(a){if(a instanceof goog.html.SafeScript&&a.constructor===goog.html.SafeScript&&a.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;goog.asserts.fail("expected object of type SafeScript, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeScript"};goog.html.SafeScript.stringify_=function(a){return JSON.stringify(a).replace(/</g,"\\x3c")};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse=function(a){return(new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(a)};goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=a;return this};goog.html.SafeScript.EMPTY=goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a)};goog.fs.url.getUrlObject_=function(){var a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error("This browser doesn't seem to support blob URLs");};
goog.fs.url.findUrlObject_=function(){return goog.isDef(goog.global.URL)&&goog.isDef(goog.global.URL.createObjectURL)?goog.global.URL:goog.isDef(goog.global.webkitURL)&&goog.isDef(goog.global.webkitURL.createObjectURL)?goog.global.webkitURL:goog.isDef(goog.global.createObjectURL)?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.i18n={};goog.i18n.bidi={};goog.i18n.bidi.FORCE_RTL=!1;
goog.i18n.bidi.IS_RTL=goog.i18n.bidi.FORCE_RTL||("ar"==goog.LOCALE.substring(0,2).toLowerCase()||"fa"==goog.LOCALE.substring(0,2).toLowerCase()||"he"==goog.LOCALE.substring(0,2).toLowerCase()||"iw"==goog.LOCALE.substring(0,2).toLowerCase()||"ps"==goog.LOCALE.substring(0,2).toLowerCase()||"sd"==goog.LOCALE.substring(0,2).toLowerCase()||"ug"==goog.LOCALE.substring(0,2).toLowerCase()||"ur"==goog.LOCALE.substring(0,2).toLowerCase()||"yi"==goog.LOCALE.substring(0,2).toLowerCase())&&(2==goog.LOCALE.length||
"-"==goog.LOCALE.substring(2,3)||"_"==goog.LOCALE.substring(2,3))||3<=goog.LOCALE.length&&"ckb"==goog.LOCALE.substring(0,3).toLowerCase()&&(3==goog.LOCALE.length||"-"==goog.LOCALE.substring(3,4)||"_"==goog.LOCALE.substring(3,4));goog.i18n.bidi.Format={LRE:"\u202a",RLE:"\u202b",PDF:"\u202c",LRM:"\u200e",RLM:"\u200f"};goog.i18n.bidi.Dir={LTR:1,RTL:-1,NEUTRAL:0};goog.i18n.bidi.RIGHT="right";goog.i18n.bidi.LEFT="left";goog.i18n.bidi.I18N_RIGHT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.LEFT:goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT;goog.i18n.bidi.toDir=function(a,b){return"number"==typeof a?0<a?goog.i18n.bidi.Dir.LTR:0>a?goog.i18n.bidi.Dir.RTL:b?null:goog.i18n.bidi.Dir.NEUTRAL:null==a?null:a?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};goog.i18n.bidi.ltrChars_="A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";goog.i18n.bidi.rtlChars_="\u0591-\u06ef\u06fa-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_=/<[^>]*>|&[^;]+;/g;goog.i18n.bidi.stripHtmlIfNeeded_=function(a,b){return b?a.replace(goog.i18n.bidi.htmlSkipReg_,""):a};goog.i18n.bidi.rtlCharReg_=new RegExp("["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.ltrCharReg_=new RegExp("["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.hasAnyRtl=function(a,b){return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.hasRtlChar=goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr=function(a,b){return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.ltrRe_=new RegExp("^["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlRe_=new RegExp("^["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.isRtlChar=function(a){return goog.i18n.bidi.rtlRe_.test(a)};goog.i18n.bidi.isLtrChar=function(a){return goog.i18n.bidi.ltrRe_.test(a)};goog.i18n.bidi.isNeutralChar=function(a){return!goog.i18n.bidi.isLtrChar(a)&&!goog.i18n.bidi.isRtlChar(a)};
goog.i18n.bidi.ltrDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.rtlChars_+"]*["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.ltrChars_+"]*["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.startsWithRtl=function(a,b){return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlText=goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr=function(a,b){return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrText=goog.i18n.bidi.startsWithLtr;goog.i18n.bidi.isRequiredLtrRe_=/^http:\/\/.*/;goog.i18n.bidi.isNeutralText=function(a,b){a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b);return goog.i18n.bidi.isRequiredLtrRe_.test(a)||!goog.i18n.bidi.hasAnyLtr(a)&&!goog.i18n.bidi.hasAnyRtl(a)};
goog.i18n.bidi.ltrExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.ltrChars_+"][^"+goog.i18n.bidi.rtlChars_+"]*$");goog.i18n.bidi.rtlExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.rtlChars_+"][^"+goog.i18n.bidi.ltrChars_+"]*$");goog.i18n.bidi.endsWithLtr=function(a,b){return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrExitText=goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl=function(a,b){return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlExitText=goog.i18n.bidi.endsWithRtl;goog.i18n.bidi.rtlLocalesRe_=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;goog.i18n.bidi.isRtlLanguage=function(a){return goog.i18n.bidi.rtlLocalesRe_.test(a)};goog.i18n.bidi.bracketGuardTextRe_=/(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText=function(a,b){b=(void 0===b?goog.i18n.bidi.hasAnyRtl(a):b)?goog.i18n.bidi.Format.RLM:goog.i18n.bidi.Format.LRM;return a.replace(goog.i18n.bidi.bracketGuardTextRe_,b+"$&"+b)};goog.i18n.bidi.enforceRtlInHtml=function(a){return"<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=rtl"):"\n<span dir=rtl>"+a+"</span>"};goog.i18n.bidi.enforceRtlInText=function(a){return goog.i18n.bidi.Format.RLE+a+goog.i18n.bidi.Format.PDF};
goog.i18n.bidi.enforceLtrInHtml=function(a){return"<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=ltr"):"\n<span dir=ltr>"+a+"</span>"};goog.i18n.bidi.enforceLtrInText=function(a){return goog.i18n.bidi.Format.LRE+a+goog.i18n.bidi.Format.PDF};goog.i18n.bidi.dimensionsRe_=/:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;goog.i18n.bidi.leftRe_=/left/gi;goog.i18n.bidi.rightRe_=/right/gi;goog.i18n.bidi.tempRe_=/%%%%/g;
goog.i18n.bidi.mirrorCSS=function(a){return a.replace(goog.i18n.bidi.dimensionsRe_,":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_,"%%%%").replace(goog.i18n.bidi.rightRe_,goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_,goog.i18n.bidi.RIGHT)};goog.i18n.bidi.doubleQuoteSubstituteRe_=/([\u0591-\u05f2])"/g;goog.i18n.bidi.singleQuoteSubstituteRe_=/([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote=function(a){return a.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_,"$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_,"$1\u05f3")};goog.i18n.bidi.wordSeparatorRe_=/\s+/;goog.i18n.bidi.hasNumeralsRe_=/[\d\u06f0-\u06f9]/;goog.i18n.bidi.rtlDetectionThreshold_=.4;
goog.i18n.bidi.estimateDirection=function(a,b){var c=0,d=0,e=!1;a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b).split(goog.i18n.bidi.wordSeparatorRe_);for(b=0;b<a.length;b++){var f=a[b];goog.i18n.bidi.startsWithRtl(f)?(c++,d++):goog.i18n.bidi.isRequiredLtrRe_.test(f)?e=!0:goog.i18n.bidi.hasAnyLtr(f)?d++:goog.i18n.bidi.hasNumeralsRe_.test(f)&&(e=!0)}return 0==d?e?goog.i18n.bidi.Dir.LTR:goog.i18n.bidi.Dir.NEUTRAL:c/d>goog.i18n.bidi.rtlDetectionThreshold_?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};
goog.i18n.bidi.detectRtlDirectionality=function(a,b){return goog.i18n.bidi.estimateDirection(a,b)==goog.i18n.bidi.Dir.RTL};goog.i18n.bidi.setElementDirAndAlign=function(a,b){a&&(b=goog.i18n.bidi.toDir(b))&&(a.style.textAlign=b==goog.i18n.bidi.Dir.RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT,a.dir=b==goog.i18n.bidi.Dir.RTL?"rtl":"ltr")};
goog.i18n.bidi.setElementDirByTextDirectionality=function(a,b){switch(goog.i18n.bidi.estimateDirection(b)){case goog.i18n.bidi.Dir.LTR:a.dir="ltr";break;case goog.i18n.bidi.Dir.RTL:a.dir="rtl";break;default:a.removeAttribute("dir")}};goog.i18n.bidi.DirectionalString=function(){};goog.html.TrustedResourceUrl=function(){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_="";this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.TrustedResourceUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a){var b=goog.html.TrustedResourceUrl.unwrap(this),c=/\?/.test(b)?"&":"?",d;for(d in a)for(var e=goog.isArray(a[d])?a[d]:[a[d]],f=0;f<e.length;f++)null!=e[f]&&(b+=c+encodeURIComponent(d)+"="+encodeURIComponent(String(e[f])),c="&");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.DEBUG&&(goog.html.TrustedResourceUrl.prototype.toString=function(){return"TrustedResourceUrl{"+this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+"}"});
goog.html.TrustedResourceUrl.unwrap=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl&&a.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:TrustedResourceUrl"};
goog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+JSON.stringify(b));a=b[e];return a instanceof goog.string.Const?goog.string.Const.unwrap(a):
encodeURIComponent(String(a))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=/^(?:https:)?\/\/[0-9a-z.:[\]-]+\/|^\/[^\/\\]|^about:blank#/i;goog.html.TrustedResourceUrl.formatWithParams=function(a,b,c){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};
goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b="",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){var b=new goog.html.TrustedResourceUrl;b.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=a;return b};goog.html.SafeUrl=function(){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_="";this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};goog.DEBUG&&(goog.html.SafeUrl.prototype.toString=function(){return"SafeUrl{"+this.privateDoNotAccessOrElseSafeHtmlWrappedValue_+"}"});
goog.html.SafeUrl.unwrap=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl&&a.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail("expected object of type SafeUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeUrl"};goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};
goog.html.SAFE_MIME_TYPE_PATTERN_=/^(?:audio\/(?:3gpp|3gpp2|aac|midi|mp4|mpeg|ogg|x-m4a|x-wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime))$/i;goog.html.SafeUrl.fromBlob=function(a){a=goog.html.SAFE_MIME_TYPE_PATTERN_.test(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.DATA_URL_PATTERN_=/^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl=function(a){var b=a.match(goog.html.DATA_URL_PATTERN_);b=b&&goog.html.SAFE_MIME_TYPE_PATTERN_.test(b[1]);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b?a:goog.html.SafeUrl.INNOCUOUS_STRING)};goog.html.SafeUrl.fromTelUrl=function(a){goog.string.caseInsensitiveStartsWith(a,"tel:")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};
goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.sanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a=a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);goog.html.SAFE_URL_PATTERN_.test(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.sanitizeAssertUnchanged=function(a){if(a instanceof goog.html.SafeUrl)return a;a=a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){var b=new goog.html.SafeUrl;b.privateDoNotAccessOrElseSafeHtmlWrappedValue_=a;return b};goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");goog.html.SafeStyle=function(){this.privateDoNotAccessOrElseSafeStyleWrappedValue_="";this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeStyle.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyle.fromConstant=function(a){a=goog.string.Const.unwrap(a);if(0===a.length)return goog.html.SafeStyle.EMPTY;goog.html.SafeStyle.checkStyle_(a);goog.asserts.assert(goog.string.endsWith(a,";"),"Last character of style string is not ';': "+a);goog.asserts.assert(goog.string.contains(a,":"),"Style string must contain at least one ':', to specify a \"name: value\" pair: "+a);return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeStyle.checkStyle_=function(a){goog.asserts.assert(!/[<>]/.test(a),"Forbidden characters in style string: "+a)};goog.html.SafeStyle.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_};goog.DEBUG&&(goog.html.SafeStyle.prototype.toString=function(){return"SafeStyle{"+this.privateDoNotAccessOrElseSafeStyleWrappedValue_+"}"});
goog.html.SafeStyle.unwrap=function(a){if(a instanceof goog.html.SafeStyle&&a.constructor===goog.html.SafeStyle&&a.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;goog.asserts.fail("expected object of type SafeStyle, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyle"};goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse=function(a){return(new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(a)};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=a;return this};goog.html.SafeStyle.EMPTY=goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyle.INNOCUOUS_STRING="zClosurez";
goog.html.SafeStyle.create=function(a){var b="",c;for(c in a){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error("Name allows only [-_a-zA-Z0-9], got: "+c);var d=a[c];null!=d&&(d=goog.isArray(d)?goog.array.map(d,goog.html.SafeStyle.sanitizePropertyValue_).join(" "):goog.html.SafeStyle.sanitizePropertyValue_(d),b+=c+":"+d+";")}if(!b)return goog.html.SafeStyle.EMPTY;goog.html.SafeStyle.checkStyle_(b);return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};
goog.html.SafeStyle.sanitizePropertyValue_=function(a){if(a instanceof goog.html.SafeUrl)return'url("'+goog.html.SafeUrl.unwrap(a).replace(/</g,"%3c").replace(/[\\"]/g,"\\$&")+'")';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):goog.html.SafeStyle.sanitizePropertyValueString_(String(a));goog.asserts.assert(!/[{;}]/.test(a),"Value does not allow [{;}].");return a};
goog.html.SafeStyle.sanitizePropertyValueString_=function(a){var b=a.replace(goog.html.SafeUrl.FUNCTIONS_RE_,"$1").replace(goog.html.SafeUrl.URL_RE_,"url");return goog.html.SafeStyle.VALUE_RE_.test(b)?goog.html.SafeStyle.hasBalancedQuotes_(a)?goog.html.SafeStyle.sanitizeUrl_(a):(goog.asserts.fail("String value requires balanced quotes, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING):(goog.asserts.fail("String value allows only "+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+" and simple functions, got: "+
a),goog.html.SafeStyle.INNOCUOUS_STRING)};goog.html.SafeStyle.hasBalancedQuotes_=function(a){for(var b=!0,c=!0,d=0;d<a.length;d++){var e=a.charAt(d);"'"==e&&c?b=!b:'"'==e&&b&&(c=!c)}return b&&c};goog.html.SafeStyle.VALUE_ALLOWED_CHARS_="[-,.\"'%_!# a-zA-Z0-9]";goog.html.SafeStyle.VALUE_RE_=new RegExp("^"+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+"+$");goog.html.SafeUrl.URL_RE_=/\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;goog.html.SafeUrl.FUNCTIONS_RE_=/\b(hsl|hsla|rgb|rgba|(rotate|scale|translate)(X|Y|Z|3d)?)\([-0-9a-z.%, ]+\)/g;
goog.html.SafeStyle.sanitizeUrl_=function(a){return a.replace(goog.html.SafeUrl.URL_RE_,function(a,c,d,e){var b="";d=d.replace(/^(['"])(.*)\1$/,function(a,c,d){b=c;return d});a=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+b+a+b+e})};goog.html.SafeStyle.concat=function(a){var b="",c=function(a){goog.isArray(a)?goog.array.forEach(a,c):b+=goog.html.SafeStyle.unwrap(a)};goog.array.forEach(arguments,c);return b?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):goog.html.SafeStyle.EMPTY};goog.html.SafeStyleSheet=function(){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_="";this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyleSheet.createRule=function(a,b){if(goog.string.contains(a,"<"))throw Error("Selector does not allow '<', got: "+a);var c=a.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g,"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c))throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: "+a);if(!goog.html.SafeStyleSheet.hasBalancedBrackets_(c))throw Error("() and [] in selector must be balanced, got: "+a);b instanceof goog.html.SafeStyle||(b=goog.html.SafeStyle.create(b));
a=a+"{"+goog.html.SafeStyle.unwrap(b)+"}";return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeStyleSheet.hasBalancedBrackets_=function(a){for(var b={"(":")","[":"]"},c=[],d=0;d<a.length;d++){var e=a[d];if(b[e])c.push(b[e]);else if(goog.object.contains(b,e)&&c.pop()!=e)return!1}return 0==c.length};
goog.html.SafeStyleSheet.concat=function(a){var b="",c=function(a){goog.isArray(a)?goog.array.forEach(a,c):b+=goog.html.SafeStyleSheet.unwrap(a)};goog.array.forEach(arguments,c);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.SafeStyleSheet.fromConstant=function(a){a=goog.string.Const.unwrap(a);if(0===a.length)return goog.html.SafeStyleSheet.EMPTY;goog.asserts.assert(!goog.string.contains(a,"<"),"Forbidden '<' character in style sheet string: "+a);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeStyleSheet.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_};
goog.DEBUG&&(goog.html.SafeStyleSheet.prototype.toString=function(){return"SafeStyleSheet{"+this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_+"}"});
goog.html.SafeStyleSheet.unwrap=function(a){if(a instanceof goog.html.SafeStyleSheet&&a.constructor===goog.html.SafeStyleSheet&&a.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;goog.asserts.fail("expected object of type SafeStyleSheet, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyleSheet"};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse=function(a){return(new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(a)};goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=a;return this};goog.html.SafeStyleSheet.EMPTY=goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.html.SafeHtml=function(){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_="";this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;this.dir_=null};goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeHtml.prototype.getDirection=function(){return this.dir_};goog.html.SafeHtml.prototype.implementsGoogStringTypedString=!0;goog.html.SafeHtml.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_};
goog.DEBUG&&(goog.html.SafeHtml.prototype.toString=function(){return"SafeHtml{"+this.privateDoNotAccessOrElseSafeHtmlWrappedValue_+"}"});
goog.html.SafeHtml.unwrap=function(a){if(a instanceof goog.html.SafeHtml&&a.constructor===goog.html.SafeHtml&&a.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail("expected object of type SafeHtml, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeHtml"};
goog.html.SafeHtml.htmlEscape=function(a){if(a instanceof goog.html.SafeHtml)return a;var b=null;a.implementsGoogI18nBidiDirectionalString&&(b=a.getDirection());a=a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(a),b)};
goog.html.SafeHtml.htmlEscapePreservingNewlines=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(a)),a.getDirection())};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(a)),a.getDirection())};goog.html.SafeHtml.from=goog.html.SafeHtml.htmlEscape;goog.html.SafeHtml.VALID_NAMES_IN_TAG_=/^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0};goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_={APPLET:!0,BASE:!0,EMBED:!0,IFRAME:!0,LINK:!0,MATH:!0,META:!0,OBJECT:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};goog.html.SafeHtml.create=function(a,b,c){goog.html.SafeHtml.verifyTagName(String(a));return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)};
goog.html.SafeHtml.verifyTagName=function(a){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(a))throw Error("Invalid tag name <"+a+">.");if(a.toUpperCase()in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)throw Error("Tag name <"+a+"> is not allowed for SafeHtml.");};
goog.html.SafeHtml.createIframe=function(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);var e={};e.src=a||null;e.srcdoc=b&&goog.html.SafeHtml.unwrap(b);a=goog.html.SafeHtml.combineAttributes(e,{sandbox:""},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.createSandboxIframe=function(a,b,c,d){if(!goog.html.SafeHtml.canUseSandboxIframe())throw Error("The browser does not support sandboxed iframes.");var e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox="";a=goog.html.SafeHtml.combineAttributes(e,{},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.canUseSandboxIframe=function(){return goog.global.HTMLIFrameElement&&"sandbox"in goog.global.HTMLIFrameElement.prototype};goog.html.SafeHtml.createScriptSrc=function(a,b){goog.html.TrustedResourceUrl.unwrap(a);a=goog.html.SafeHtml.combineAttributes({src:a},{},b);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",a)};
goog.html.SafeHtml.createScript=function(a,b){for(var c in b){var d=c.toLowerCase();if("language"==d||"src"==d||"text"==d||"type"==d)throw Error('Cannot set "'+d+'" attribute');}c="";a=goog.array.concat(a);for(d=0;d<a.length;d++)c+=goog.html.SafeScript.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",b,a)};
goog.html.SafeHtml.createStyle=function(a,b){b=goog.html.SafeHtml.combineAttributes({type:"text/css"},{},b);var c="";a=goog.array.concat(a);for(var d=0;d<a.length;d++)c+=goog.html.SafeStyleSheet.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",b,a)};
goog.html.SafeHtml.createMetaRefresh=function(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(goog.labs.userAgent.browser.isIE()||goog.labs.userAgent.browser.isEdge())&&goog.string.contains(a,";")&&(a="'"+a.replace(/'/g,"%27")+"'");return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",{"http-equiv":"refresh",content:(b||0)+"; url="+a})};
goog.html.SafeHtml.getAttrNameAndValue_=function(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if("style"==b.toLowerCase())c=goog.html.SafeHtml.getStyleValue_(c);else{if(/^on/i.test(b))throw Error('Attribute "'+b+'" requires goog.string.Const value, "'+c+'" given.');if(b.toLowerCase()in goog.html.SafeHtml.URL_ATTRIBUTES_)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);
else if(goog.isString(c))c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error('Attribute "'+b+'" on tag "'+a+'" requires goog.html.SafeUrl, goog.string.Const, or string, value "'+c+'" given.');}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());goog.asserts.assert(goog.isString(c)||goog.isNumber(c),"String or number value expected, got "+typeof c+" with value: "+c);return b+'="'+goog.string.htmlEscape(String(c))+'"'};
goog.html.SafeHtml.getStyleValue_=function(a){if(!goog.isObject(a))throw Error('The "style" attribute requires goog.html.SafeStyle or map of style properties, '+typeof a+" given: "+a);a instanceof goog.html.SafeStyle||(a=goog.html.SafeStyle.create(a));return goog.html.SafeStyle.unwrap(a)};goog.html.SafeHtml.createWithDir=function(a,b,c,d){b=goog.html.SafeHtml.create(b,c,d);b.dir_=a;return b};
goog.html.SafeHtml.concat=function(a){var b=goog.i18n.bidi.Dir.NEUTRAL,c="",d=function(a){goog.isArray(a)?goog.array.forEach(a,d):(a=goog.html.SafeHtml.htmlEscape(a),c+=goog.html.SafeHtml.unwrap(a),a=a.getDirection(),b==goog.i18n.bidi.Dir.NEUTRAL?b=a:a!=goog.i18n.bidi.Dir.NEUTRAL&&b!=a&&(b=null))};goog.array.forEach(arguments,d);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,b)};
goog.html.SafeHtml.concatWithDir=function(a,b){var c=goog.html.SafeHtml.concat(goog.array.slice(arguments,1));c.dir_=a;return c};goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse=function(a,b){return(new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(a,b)};goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a,b){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=a;this.dir_=b;return this};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse=function(a,b,c){var d=null;var e="<"+a+goog.html.SafeHtml.stringifyAttributes(a,b);goog.isDefAndNotNull(c)?goog.isArray(c)||(c=[c]):c=[];goog.dom.tags.isVoidTag(a.toLowerCase())?(goog.asserts.assert(!c.length,"Void tag <"+a+"> does not allow content."),e+=">"):(d=goog.html.SafeHtml.concat(c),e+=">"+goog.html.SafeHtml.unwrap(d)+"</"+a+">",d=d.getDirection());(a=b&&b.dir)&&(d=/^(ltr|rtl|auto)$/i.test(a)?goog.i18n.bidi.Dir.NEUTRAL:
null);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e,d)};goog.html.SafeHtml.stringifyAttributes=function(a,b){var c="";if(b)for(var d in b){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(d))throw Error('Invalid attribute name "'+d+'".');var e=b[d];goog.isDefAndNotNull(e)&&(c+=" "+goog.html.SafeHtml.getAttrNameAndValue_(a,d,e))}return c};
goog.html.SafeHtml.combineAttributes=function(a,b,c){var d={},e;for(e in a)goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=a[e];for(e in b)goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=b[e];for(e in c){var f=e.toLowerCase();if(f in a)throw Error('Cannot override "'+f+'" attribute, got "'+e+'" with value "'+c[e]+'"');f in b&&delete d[f];d[e]=c[e]}return d};
goog.html.SafeHtml.DOCTYPE_HTML=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.EMPTY=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.BR=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>",goog.i18n.bidi.Dir.NEUTRAL);goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,goog.html.SafeHtml.unwrap(c))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};
goog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+a.tagName+".");}a.innerHTML=goog.html.SafeHtml.unwrap(b)};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=goog.html.SafeHtml.unwrap(b)};
goog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formaction=goog.html.SafeUrl.unwrap(b)};
goog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formaction=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setStyle=function(a,b){a.style.cssText=goog.html.SafeStyle.unwrap(b)};goog.dom.safe.documentWrite=function(a,b){a.write(goog.html.SafeHtml.unwrap(b))};
goog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setImageSrc=function(a,b){goog.dom.asserts.assertIsHTMLImageElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.src=goog.html.SafeUrl.unwrap(b)};
goog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.src=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};
goog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=goog.html.SafeHtml.unwrap(b)};
goog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.caseInsensitiveContains(c,"stylesheet")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'),a.href=goog.html.TrustedResourceUrl.unwrap(b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrap(b):b instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrap(b):goog.html.SafeUrl.sanitizeAssertUnchanged(b).getTypedStringValue()};
goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.text=goog.html.SafeScript.unwrap(b)};
goog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.replaceLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrap(b))};
goog.dom.safe.openInWindow=function(a,b,c,d,e){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);return(b||window).open(goog.html.SafeUrl.unwrap(a),c?goog.string.Const.unwrap(c):"",d,e)};goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b,c){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b,c||null)};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.math.Size=function(a,b){this.width=a;this.height=b};goog.math.Size.equals=function(a,b){return a==b?!0:a&&b?a.width==b.width&&a.height==b.height:!1};goog.math.Size.prototype.clone=function(){return new goog.math.Size(this.width,this.height)};goog.DEBUG&&(goog.math.Size.prototype.toString=function(){return"("+this.width+" x "+this.height+")"});goog.math.Size.prototype.getLongest=function(){return Math.max(this.width,this.height)};
goog.math.Size.prototype.getShortest=function(){return Math.min(this.width,this.height)};goog.math.Size.prototype.area=function(){return this.width*this.height};goog.math.Size.prototype.perimeter=function(){return 2*(this.width+this.height)};goog.math.Size.prototype.aspectRatio=function(){return this.width/this.height};goog.math.Size.prototype.isEmpty=function(){return!this.area()};goog.math.Size.prototype.ceil=function(){this.width=Math.ceil(this.width);this.height=Math.ceil(this.height);return this};
goog.math.Size.prototype.fitsInside=function(a){return this.width<=a.width&&this.height<=a.height};goog.math.Size.prototype.floor=function(){this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};goog.math.Size.prototype.round=function(){this.width=Math.round(this.width);this.height=Math.round(this.height);return this};goog.math.Size.prototype.scale=function(a,b){b=goog.isNumber(b)?b:a;this.width*=a;this.height*=b;return this};
goog.math.Size.prototype.scaleToCover=function(a){a=this.aspectRatio()<=a.aspectRatio()?a.width/this.width:a.height/this.height;return this.scale(a)};goog.math.Size.prototype.scaleToFit=function(a){a=this.aspectRatio()>a.aspectRatio()?a.width/this.width:a.height/this.height;return this.scale(a)};goog.dom.ASSUME_QUIRKS_MODE=!1;goog.dom.ASSUME_STANDARDS_MODE=!1;goog.dom.COMPAT_MODE_KNOWN_=goog.dom.ASSUME_QUIRKS_MODE||goog.dom.ASSUME_STANDARDS_MODE;goog.dom.getDomHelper=function(a){return a?new goog.dom.DomHelper(goog.dom.getOwnerDocument(a)):goog.dom.defaultDomHelper_||(goog.dom.defaultDomHelper_=new goog.dom.DomHelper)};goog.dom.getDocument=function(){return document};goog.dom.getElement=function(a){return goog.dom.getElementHelper_(document,a)};
goog.dom.getElementHelper_=function(a,b){return goog.isString(b)?a.getElementById(b):b};goog.dom.getRequiredElement=function(a){return goog.dom.getRequiredElementHelper_(document,a)};goog.dom.getRequiredElementHelper_=function(a,b){goog.asserts.assertString(b);a=goog.dom.getElementHelper_(a,b);return a=goog.asserts.assertElement(a,"No element found with id: "+b)};goog.dom.$=goog.dom.getElement;goog.dom.getElementsByTagName=function(a,b){return(b||document).getElementsByTagName(String(a))};
goog.dom.getElementsByTagNameAndClass=function(a,b,c){return goog.dom.getElementsByTagNameAndClass_(document,a,b,c)};goog.dom.getElementByTagNameAndClass=function(a,b,c){return goog.dom.getElementByTagNameAndClass_(document,a,b,c)};goog.dom.getElementsByClass=function(a,b){var c=b||document;return goog.dom.canUseQuerySelector_(c)?c.querySelectorAll("."+a):goog.dom.getElementsByTagNameAndClass_(document,"*",a,b)};
goog.dom.getElementByClass=function(a,b){var c=b||document;return(c.getElementsByClassName?c.getElementsByClassName(a)[0]:goog.dom.getElementByTagNameAndClass_(document,"*",a,b))||null};goog.dom.getRequiredElementByClass=function(a,b){b=goog.dom.getElementByClass(a,b);return goog.asserts.assert(b,"No element found with className: "+a)};goog.dom.canUseQuerySelector_=function(a){return!(!a.querySelectorAll||!a.querySelector)};
goog.dom.getElementsByTagNameAndClass_=function(a,b,c,d){a=d||a;b=b&&"*"!=b?String(b).toUpperCase():"";if(goog.dom.canUseQuerySelector_(a)&&(b||c))return a.querySelectorAll(b+(c?"."+c:""));if(c&&a.getElementsByClassName){a=a.getElementsByClassName(c);if(b){d={};for(var e=0,f=0,g;g=a[f];f++)b==g.nodeName&&(d[e++]=g);d.length=e;return d}return a}a=a.getElementsByTagName(b||"*");if(c){d={};for(f=e=0;g=a[f];f++)b=g.className,"function"==typeof b.split&&goog.array.contains(b.split(/\s+/),c)&&(d[e++]=g);
d.length=e;return d}return a};goog.dom.getElementByTagNameAndClass_=function(a,b,c,d){var e=d||a,f=b&&"*"!=b?String(b).toUpperCase():"";return goog.dom.canUseQuerySelector_(e)&&(f||c)?e.querySelector(f+(c?"."+c:"")):goog.dom.getElementsByTagNameAndClass_(a,b,c,d)[0]||null};goog.dom.$$=goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties=function(a,b){goog.object.forEach(b,function(b,d){b&&b.implementsGoogStringTypedString&&(b=b.getTypedStringValue());"style"==d?a.style.cssText=b:"class"==d?a.className=b:"for"==d?a.htmlFor=b:goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(d)?a.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[d],b):goog.string.startsWith(d,"aria-")||goog.string.startsWith(d,"data-")?a.setAttribute(d,b):a[d]=b})};
goog.dom.DIRECT_ATTRIBUTE_MAP_={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"};goog.dom.getViewportSize=function(a){return goog.dom.getViewportSize_(a||window)};goog.dom.getViewportSize_=function(a){a=a.document;a=goog.dom.isCss1CompatMode_(a)?a.documentElement:a.body;return new goog.math.Size(a.clientWidth,a.clientHeight)};
goog.dom.getDocumentHeight=function(){return goog.dom.getDocumentHeight_(window)};goog.dom.getDocumentHeightForWindow=function(a){return goog.dom.getDocumentHeight_(a)};
goog.dom.getDocumentHeight_=function(a){var b=a.document,c=0;if(b){c=b.body;var d=b.documentElement;if(!d||!c)return 0;a=goog.dom.getViewportSize_(a).height;if(goog.dom.isCss1CompatMode_(b)&&d.scrollHeight)c=d.scrollHeight!=a?d.scrollHeight:d.offsetHeight;else{b=d.scrollHeight;var e=d.offsetHeight;d.clientHeight!=e&&(b=c.scrollHeight,e=c.offsetHeight);c=b>a?b>e?b:e:b<e?b:e}}return c};goog.dom.getPageScroll=function(a){return goog.dom.getDomHelper((a||goog.global||window).document).getDocumentScroll()};
goog.dom.getDocumentScroll=function(){return goog.dom.getDocumentScroll_(document)};goog.dom.getDocumentScroll_=function(a){var b=goog.dom.getDocumentScrollElement_(a);a=goog.dom.getWindow_(a);return goog.userAgent.IE&&goog.userAgent.isVersionOrHigher("10")&&a.pageYOffset!=b.scrollTop?new goog.math.Coordinate(b.scrollLeft,b.scrollTop):new goog.math.Coordinate(a.pageXOffset||b.scrollLeft,a.pageYOffset||b.scrollTop)};goog.dom.getDocumentScrollElement=function(){return goog.dom.getDocumentScrollElement_(document)};
goog.dom.getDocumentScrollElement_=function(a){return a.scrollingElement?a.scrollingElement:!goog.userAgent.WEBKIT&&goog.dom.isCss1CompatMode_(a)?a.documentElement:a.body||a.documentElement};goog.dom.getWindow=function(a){return a?goog.dom.getWindow_(a):window};goog.dom.getWindow_=function(a){return a.parentWindow||a.defaultView};goog.dom.createDom=function(a,b,c){return goog.dom.createDom_(document,arguments)};
goog.dom.createDom_=function(a,b){var c=String(b[0]),d=b[1];if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES&&d&&(d.name||d.type)){c=["<",c];d.name&&c.push(' name="',goog.string.htmlEscape(d.name),'"');if(d.type){c.push(' type="',goog.string.htmlEscape(d.type),'"');var e={};goog.object.extend(e,d);delete e.type;d=e}c.push(">");c=c.join("")}c=a.createElement(c);d&&(goog.isString(d)?c.className=d:goog.isArray(d)?c.className=d.join(" "):goog.dom.setProperties(c,d));2<b.length&&goog.dom.append_(a,
c,b,2);return c};goog.dom.append_=function(a,b,c,d){function e(c){c&&b.appendChild(goog.isString(c)?a.createTextNode(c):c)}for(;d<c.length;d++){var f=c[d];goog.isArrayLike(f)&&!goog.dom.isNodeLike(f)?goog.array.forEach(goog.dom.isNodeList(f)?goog.array.toArray(f):f,e):e(f)}};goog.dom.$dom=goog.dom.createDom;goog.dom.createElement=function(a){return goog.dom.createElement_(document,a)};goog.dom.createElement_=function(a,b){return a.createElement(String(b))};goog.dom.createTextNode=function(a){return document.createTextNode(String(a))};
goog.dom.createTable=function(a,b,c){return goog.dom.createTable_(document,a,b,!!c)};goog.dom.createTable_=function(a,b,c,d){for(var e=goog.dom.createElement_(a,"TABLE"),f=e.appendChild(goog.dom.createElement_(a,"TBODY")),g=0;g<b;g++){for(var h=goog.dom.createElement_(a,"TR"),k=0;k<c;k++){var m=goog.dom.createElement_(a,"TD");d&&goog.dom.setTextContent(m,goog.string.Unicode.NBSP);h.appendChild(m)}f.appendChild(h)}return e};
goog.dom.constHtmlToNode=function(a){var b=goog.array.map(arguments,goog.string.Const.unwrap);b=goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML string, that gets turned into a Node later, so it will be automatically balanced."),b.join(""));return goog.dom.safeHtmlToNode(b)};goog.dom.safeHtmlToNode=function(a){return goog.dom.safeHtmlToNode_(document,a)};
goog.dom.safeHtmlToNode_=function(a,b){var c=goog.dom.createElement_(a,"DIV");goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT?(goog.dom.safe.setInnerHtml(c,goog.html.SafeHtml.concat(goog.html.SafeHtml.BR,b)),c.removeChild(c.firstChild)):goog.dom.safe.setInnerHtml(c,b);return goog.dom.childrenToNode_(a,c)};goog.dom.childrenToNode_=function(a,b){if(1==b.childNodes.length)return b.removeChild(b.firstChild);for(a=a.createDocumentFragment();b.firstChild;)a.appendChild(b.firstChild);return a};
goog.dom.isCss1CompatMode=function(){return goog.dom.isCss1CompatMode_(document)};goog.dom.isCss1CompatMode_=function(a){return goog.dom.COMPAT_MODE_KNOWN_?goog.dom.ASSUME_STANDARDS_MODE:"CSS1Compat"==a.compatMode};goog.dom.canHaveChildren=function(a){if(a.nodeType!=goog.dom.NodeType.ELEMENT)return!1;switch(a.tagName){case "APPLET":case "AREA":case "BASE":case "BR":case "COL":case "COMMAND":case "EMBED":case "FRAME":case "HR":case "IMG":case "INPUT":case "IFRAME":case "ISINDEX":case "KEYGEN":case "LINK":case "NOFRAMES":case "NOSCRIPT":case "META":case "OBJECT":case "PARAM":case "SCRIPT":case "SOURCE":case "STYLE":case "TRACK":case "WBR":return!1}return!0};
goog.dom.appendChild=function(a,b){a.appendChild(b)};goog.dom.append=function(a,b){goog.dom.append_(goog.dom.getOwnerDocument(a),a,arguments,1)};goog.dom.removeChildren=function(a){for(var b;b=a.firstChild;)a.removeChild(b)};goog.dom.insertSiblingBefore=function(a,b){b.parentNode&&b.parentNode.insertBefore(a,b)};goog.dom.insertSiblingAfter=function(a,b){b.parentNode&&b.parentNode.insertBefore(a,b.nextSibling)};goog.dom.insertChildAt=function(a,b,c){a.insertBefore(b,a.childNodes[c]||null)};
goog.dom.removeNode=function(a){return a&&a.parentNode?a.parentNode.removeChild(a):null};goog.dom.replaceNode=function(a,b){var c=b.parentNode;c&&c.replaceChild(a,b)};goog.dom.flattenElement=function(a){var b,c=a.parentNode;if(c&&c.nodeType!=goog.dom.NodeType.DOCUMENT_FRAGMENT){if(a.removeNode)return a.removeNode(!1);for(;b=a.firstChild;)c.insertBefore(b,a);return goog.dom.removeNode(a)}};
goog.dom.getChildren=function(a){return goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE&&void 0!=a.children?a.children:goog.array.filter(a.childNodes,function(a){return a.nodeType==goog.dom.NodeType.ELEMENT})};goog.dom.getFirstElementChild=function(a){return goog.isDef(a.firstElementChild)?a.firstElementChild:goog.dom.getNextElementNode_(a.firstChild,!0)};goog.dom.getLastElementChild=function(a){return goog.isDef(a.lastElementChild)?a.lastElementChild:goog.dom.getNextElementNode_(a.lastChild,!1)};
goog.dom.getNextElementSibling=function(a){return goog.isDef(a.nextElementSibling)?a.nextElementSibling:goog.dom.getNextElementNode_(a.nextSibling,!0)};goog.dom.getPreviousElementSibling=function(a){return goog.isDef(a.previousElementSibling)?a.previousElementSibling:goog.dom.getNextElementNode_(a.previousSibling,!1)};goog.dom.getNextElementNode_=function(a,b){for(;a&&a.nodeType!=goog.dom.NodeType.ELEMENT;)a=b?a.nextSibling:a.previousSibling;return a};
goog.dom.getNextNode=function(a){if(!a)return null;if(a.firstChild)return a.firstChild;for(;a&&!a.nextSibling;)a=a.parentNode;return a?a.nextSibling:null};goog.dom.getPreviousNode=function(a){if(!a)return null;if(!a.previousSibling)return a.parentNode;for(a=a.previousSibling;a&&a.lastChild;)a=a.lastChild;return a};goog.dom.isNodeLike=function(a){return goog.isObject(a)&&0<a.nodeType};goog.dom.isElement=function(a){return goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT};
goog.dom.isWindow=function(a){return goog.isObject(a)&&a.window==a};goog.dom.getParentElement=function(a){var b;if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY&&!(goog.userAgent.IE&&goog.userAgent.isVersionOrHigher("9")&&!goog.userAgent.isVersionOrHigher("10")&&goog.global.SVGElement&&a instanceof goog.global.SVGElement)&&(b=a.parentElement))return b;b=a.parentNode;return goog.dom.isElement(b)?b:null};
goog.dom.contains=function(a,b){if(!a||!b)return!1;if(a.contains&&b.nodeType==goog.dom.NodeType.ELEMENT)return a==b||a.contains(b);if("undefined"!=typeof a.compareDocumentPosition)return a==b||!!(a.compareDocumentPosition(b)&16);for(;b&&a!=b;)b=b.parentNode;return b==a};
goog.dom.compareNodeOrder=function(a,b){if(a==b)return 0;if(a.compareDocumentPosition)return a.compareDocumentPosition(b)&2?1:-1;if(goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(9)){if(a.nodeType==goog.dom.NodeType.DOCUMENT)return-1;if(b.nodeType==goog.dom.NodeType.DOCUMENT)return 1}if("sourceIndex"in a||a.parentNode&&"sourceIndex"in a.parentNode){var c=a.nodeType==goog.dom.NodeType.ELEMENT,d=b.nodeType==goog.dom.NodeType.ELEMENT;if(c&&d)return a.sourceIndex-b.sourceIndex;var e=a.parentNode,
f=b.parentNode;return e==f?goog.dom.compareSiblingOrder_(a,b):!c&&goog.dom.contains(e,b)?-1*goog.dom.compareParentsDescendantNodeIe_(a,b):!d&&goog.dom.contains(f,a)?goog.dom.compareParentsDescendantNodeIe_(b,a):(c?a.sourceIndex:e.sourceIndex)-(d?b.sourceIndex:f.sourceIndex)}d=goog.dom.getOwnerDocument(a);c=d.createRange();c.selectNode(a);c.collapse(!0);a=d.createRange();a.selectNode(b);a.collapse(!0);return c.compareBoundaryPoints(goog.global.Range.START_TO_END,a)};
goog.dom.compareParentsDescendantNodeIe_=function(a,b){var c=a.parentNode;if(c==b)return-1;for(;b.parentNode!=c;)b=b.parentNode;return goog.dom.compareSiblingOrder_(b,a)};goog.dom.compareSiblingOrder_=function(a,b){for(;b=b.previousSibling;)if(b==a)return-1;return 1};
goog.dom.findCommonAncestor=function(a){var b,c=arguments.length;if(!c)return null;if(1==c)return arguments[0];var d=[],e=Infinity;for(b=0;b<c;b++){for(var f=[],g=arguments[b];g;)f.unshift(g),g=g.parentNode;d.push(f);e=Math.min(e,f.length)}f=null;for(b=0;b<e;b++){g=d[0][b];for(var h=1;h<c;h++)if(g!=d[h][b])return f;f=g}return f};goog.dom.getOwnerDocument=function(a){goog.asserts.assert(a,"Node cannot be null or undefined.");return a.nodeType==goog.dom.NodeType.DOCUMENT?a:a.ownerDocument||a.document};
goog.dom.getFrameContentDocument=function(a){return a.contentDocument||a.contentWindow.document};goog.dom.getFrameContentWindow=function(a){try{return a.contentWindow||(a.contentDocument?goog.dom.getWindow(a.contentDocument):null)}catch(b){}return null};
goog.dom.setTextContent=function(a,b){goog.asserts.assert(null!=a,"goog.dom.setTextContent expects a non-null value for node");if("textContent"in a)a.textContent=b;else if(a.nodeType==goog.dom.NodeType.TEXT)a.data=String(b);else if(a.firstChild&&a.firstChild.nodeType==goog.dom.NodeType.TEXT){for(;a.lastChild!=a.firstChild;)a.removeChild(a.lastChild);a.firstChild.data=String(b)}else{goog.dom.removeChildren(a);var c=goog.dom.getOwnerDocument(a);a.appendChild(c.createTextNode(String(b)))}};
goog.dom.getOuterHtml=function(a){goog.asserts.assert(null!==a,"goog.dom.getOuterHtml expects a non-null value for element");if("outerHTML"in a)return a.outerHTML;var b=goog.dom.getOwnerDocument(a);b=goog.dom.createElement_(b,"DIV");b.appendChild(a.cloneNode(!0));return b.innerHTML};goog.dom.findNode=function(a,b){var c=[];return goog.dom.findNodes_(a,b,c,!0)?c[0]:void 0};goog.dom.findNodes=function(a,b){var c=[];goog.dom.findNodes_(a,b,c,!1);return c};
goog.dom.findNodes_=function(a,b,c,d){if(null!=a)for(a=a.firstChild;a;){if(b(a)&&(c.push(a),d)||goog.dom.findNodes_(a,b,c,d))return!0;a=a.nextSibling}return!1};goog.dom.TAGS_TO_IGNORE_={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1};goog.dom.PREDEFINED_TAG_VALUES_={IMG:" ",BR:"\n"};goog.dom.isFocusableTabIndex=function(a){return goog.dom.hasSpecifiedTabIndex_(a)&&goog.dom.isTabIndexFocusable_(a)};goog.dom.setFocusableTabIndex=function(a,b){b?a.tabIndex=0:(a.tabIndex=-1,a.removeAttribute("tabIndex"))};
goog.dom.isFocusable=function(a){var b;return(b=goog.dom.nativelySupportsFocus_(a)?!a.disabled&&(!goog.dom.hasSpecifiedTabIndex_(a)||goog.dom.isTabIndexFocusable_(a)):goog.dom.isFocusableTabIndex(a))&&goog.userAgent.IE?goog.dom.hasNonZeroBoundingRect_(a):b};goog.dom.hasSpecifiedTabIndex_=function(a){return goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9")?(a=a.getAttributeNode("tabindex"),goog.isDefAndNotNull(a)&&a.specified):a.hasAttribute("tabindex")};
goog.dom.isTabIndexFocusable_=function(a){a=a.tabIndex;return goog.isNumber(a)&&0<=a&&32768>a};goog.dom.nativelySupportsFocus_=function(a){return"A"==a.tagName||"INPUT"==a.tagName||"TEXTAREA"==a.tagName||"SELECT"==a.tagName||"BUTTON"==a.tagName};goog.dom.hasNonZeroBoundingRect_=function(a){a=!goog.isFunction(a.getBoundingClientRect)||goog.userAgent.IE&&null==a.parentElement?{height:a.offsetHeight,width:a.offsetWidth}:a.getBoundingClientRect();return goog.isDefAndNotNull(a)&&0<a.height&&0<a.width};
goog.dom.getTextContent=function(a){if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT&&null!==a&&"innerText"in a)a=goog.string.canonicalizeNewlines(a.innerText);else{var b=[];goog.dom.getTextContent_(a,b,!0);a=b.join("")}a=a.replace(/ \xAD /g," ").replace(/\xAD/g,"");a=a.replace(/\u200B/g,"");goog.dom.BrowserFeature.CAN_USE_INNER_TEXT||(a=a.replace(/ +/g," "));" "!=a&&(a=a.replace(/^\s*/,""));return a};goog.dom.getRawTextContent=function(a){var b=[];goog.dom.getTextContent_(a,b,!1);return b.join("")};
goog.dom.getTextContent_=function(a,b,c){if(!(a.nodeName in goog.dom.TAGS_TO_IGNORE_))if(a.nodeType==goog.dom.NodeType.TEXT)c?b.push(String(a.nodeValue).replace(/(\r\n|\r|\n)/g,"")):b.push(a.nodeValue);else if(a.nodeName in goog.dom.PREDEFINED_TAG_VALUES_)b.push(goog.dom.PREDEFINED_TAG_VALUES_[a.nodeName]);else for(a=a.firstChild;a;)goog.dom.getTextContent_(a,b,c),a=a.nextSibling};goog.dom.getNodeTextLength=function(a){return goog.dom.getTextContent(a).length};
goog.dom.getNodeTextOffset=function(a,b){b=b||goog.dom.getOwnerDocument(a).body;for(var c=[];a&&a!=b;){for(var d=a;d=d.previousSibling;)c.unshift(goog.dom.getTextContent(d));a=a.parentNode}return goog.string.trimLeft(c.join("")).replace(/ +/g," ").length};
goog.dom.getNodeAtOffset=function(a,b,c){a=[a];for(var d=0,e=null;0<a.length&&d<b;)if(e=a.pop(),!(e.nodeName in goog.dom.TAGS_TO_IGNORE_))if(e.nodeType==goog.dom.NodeType.TEXT){var f=e.nodeValue.replace(/(\r\n|\r|\n)/g,"").replace(/ +/g," ");d+=f.length}else if(e.nodeName in goog.dom.PREDEFINED_TAG_VALUES_)d+=goog.dom.PREDEFINED_TAG_VALUES_[e.nodeName].length;else for(f=e.childNodes.length-1;0<=f;f--)a.push(e.childNodes[f]);goog.isObject(c)&&(c.remainder=e?e.nodeValue.length+b-d-1:0,c.node=e);return e};
goog.dom.isNodeList=function(a){if(a&&"number"==typeof a.length){if(goog.isObject(a))return"function"==typeof a.item||"string"==typeof a.item;if(goog.isFunction(a))return"function"==typeof a.item}return!1};goog.dom.getAncestorByTagNameAndClass=function(a,b,c,d){if(!b&&!c)return null;var e=b?String(b).toUpperCase():null;return goog.dom.getAncestor(a,function(a){return(!e||a.nodeName==e)&&(!c||goog.isString(a.className)&&goog.array.contains(a.className.split(/\s+/),c))},!0,d)};
goog.dom.getAncestorByClass=function(a,b,c){return goog.dom.getAncestorByTagNameAndClass(a,null,b,c)};goog.dom.getAncestor=function(a,b,c,d){a&&!c&&(a=a.parentNode);for(c=0;a&&(null==d||c<=d);){goog.asserts.assert("parentNode"!=a.name);if(b(a))return a;a=a.parentNode;c++}return null};goog.dom.getActiveElement=function(a){try{return a&&a.activeElement}catch(b){}return null};
goog.dom.getPixelRatio=function(){var a=goog.dom.getWindow();return goog.isDef(a.devicePixelRatio)?a.devicePixelRatio:a.matchMedia?goog.dom.matchesPixelRatio_(3)||goog.dom.matchesPixelRatio_(2)||goog.dom.matchesPixelRatio_(1.5)||goog.dom.matchesPixelRatio_(1)||.75:1};goog.dom.matchesPixelRatio_=function(a){return goog.dom.getWindow().matchMedia("(min-resolution: "+a+"dppx),(min--moz-device-pixel-ratio: "+a+"),(min-resolution: "+96*a+"dpi)").matches?a:0};goog.dom.getCanvasContext2D=function(a){return a.getContext("2d")};
goog.dom.DomHelper=function(a){this.document_=a||goog.global.document||document};goog.dom.DomHelper.prototype.getDomHelper=goog.dom.getDomHelper;goog.dom.DomHelper.prototype.setDocument=function(a){this.document_=a};goog.dom.DomHelper.prototype.getDocument=function(){return this.document_};goog.dom.DomHelper.prototype.getElement=function(a){return goog.dom.getElementHelper_(this.document_,a)};
goog.dom.DomHelper.prototype.getRequiredElement=function(a){return goog.dom.getRequiredElementHelper_(this.document_,a)};goog.dom.DomHelper.prototype.$=goog.dom.DomHelper.prototype.getElement;goog.dom.DomHelper.prototype.getElementsByTagName=function(a,b){return(b||this.document_).getElementsByTagName(String(a))};goog.dom.DomHelper.prototype.getElementsByTagNameAndClass=function(a,b,c){return goog.dom.getElementsByTagNameAndClass_(this.document_,a,b,c)};
goog.dom.DomHelper.prototype.getElementByTagNameAndClass=function(a,b,c){return goog.dom.getElementByTagNameAndClass_(this.document_,a,b,c)};goog.dom.DomHelper.prototype.getElementsByClass=function(a,b){return goog.dom.getElementsByClass(a,b||this.document_)};goog.dom.DomHelper.prototype.getElementByClass=function(a,b){return goog.dom.getElementByClass(a,b||this.document_)};goog.dom.DomHelper.prototype.getRequiredElementByClass=function(a,b){return goog.dom.getRequiredElementByClass(a,b||this.document_)};
goog.dom.DomHelper.prototype.$$=goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;goog.dom.DomHelper.prototype.setProperties=goog.dom.setProperties;goog.dom.DomHelper.prototype.getViewportSize=function(a){return goog.dom.getViewportSize(a||this.getWindow())};goog.dom.DomHelper.prototype.getDocumentHeight=function(){return goog.dom.getDocumentHeight_(this.getWindow())};goog.dom.DomHelper.prototype.createDom=function(a,b,c){return goog.dom.createDom_(this.document_,arguments)};
goog.dom.DomHelper.prototype.$dom=goog.dom.DomHelper.prototype.createDom;goog.dom.DomHelper.prototype.createElement=function(a){return goog.dom.createElement_(this.document_,a)};goog.dom.DomHelper.prototype.createTextNode=function(a){return this.document_.createTextNode(String(a))};goog.dom.DomHelper.prototype.createTable=function(a,b,c){return goog.dom.createTable_(this.document_,a,b,!!c)};goog.dom.DomHelper.prototype.safeHtmlToNode=function(a){return goog.dom.safeHtmlToNode_(this.document_,a)};
goog.dom.DomHelper.prototype.isCss1CompatMode=function(){return goog.dom.isCss1CompatMode_(this.document_)};goog.dom.DomHelper.prototype.getWindow=function(){return goog.dom.getWindow_(this.document_)};goog.dom.DomHelper.prototype.getDocumentScrollElement=function(){return goog.dom.getDocumentScrollElement_(this.document_)};goog.dom.DomHelper.prototype.getDocumentScroll=function(){return goog.dom.getDocumentScroll_(this.document_)};
goog.dom.DomHelper.prototype.getActiveElement=function(a){return goog.dom.getActiveElement(a||this.document_)};goog.dom.DomHelper.prototype.appendChild=goog.dom.appendChild;goog.dom.DomHelper.prototype.append=goog.dom.append;goog.dom.DomHelper.prototype.canHaveChildren=goog.dom.canHaveChildren;goog.dom.DomHelper.prototype.removeChildren=goog.dom.removeChildren;goog.dom.DomHelper.prototype.insertSiblingBefore=goog.dom.insertSiblingBefore;goog.dom.DomHelper.prototype.insertSiblingAfter=goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt=goog.dom.insertChildAt;goog.dom.DomHelper.prototype.removeNode=goog.dom.removeNode;goog.dom.DomHelper.prototype.replaceNode=goog.dom.replaceNode;goog.dom.DomHelper.prototype.flattenElement=goog.dom.flattenElement;goog.dom.DomHelper.prototype.getChildren=goog.dom.getChildren;goog.dom.DomHelper.prototype.getFirstElementChild=goog.dom.getFirstElementChild;goog.dom.DomHelper.prototype.getLastElementChild=goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling=goog.dom.getNextElementSibling;goog.dom.DomHelper.prototype.getPreviousElementSibling=goog.dom.getPreviousElementSibling;goog.dom.DomHelper.prototype.getNextNode=goog.dom.getNextNode;goog.dom.DomHelper.prototype.getPreviousNode=goog.dom.getPreviousNode;goog.dom.DomHelper.prototype.isNodeLike=goog.dom.isNodeLike;goog.dom.DomHelper.prototype.isElement=goog.dom.isElement;goog.dom.DomHelper.prototype.isWindow=goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement=goog.dom.getParentElement;goog.dom.DomHelper.prototype.contains=goog.dom.contains;goog.dom.DomHelper.prototype.compareNodeOrder=goog.dom.compareNodeOrder;goog.dom.DomHelper.prototype.findCommonAncestor=goog.dom.findCommonAncestor;goog.dom.DomHelper.prototype.getOwnerDocument=goog.dom.getOwnerDocument;goog.dom.DomHelper.prototype.getFrameContentDocument=goog.dom.getFrameContentDocument;goog.dom.DomHelper.prototype.getFrameContentWindow=goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent=goog.dom.setTextContent;goog.dom.DomHelper.prototype.getOuterHtml=goog.dom.getOuterHtml;goog.dom.DomHelper.prototype.findNode=goog.dom.findNode;goog.dom.DomHelper.prototype.findNodes=goog.dom.findNodes;goog.dom.DomHelper.prototype.isFocusableTabIndex=goog.dom.isFocusableTabIndex;goog.dom.DomHelper.prototype.setFocusableTabIndex=goog.dom.setFocusableTabIndex;goog.dom.DomHelper.prototype.isFocusable=goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent=goog.dom.getTextContent;goog.dom.DomHelper.prototype.getNodeTextLength=goog.dom.getNodeTextLength;goog.dom.DomHelper.prototype.getNodeTextOffset=goog.dom.getNodeTextOffset;goog.dom.DomHelper.prototype.getNodeAtOffset=goog.dom.getNodeAtOffset;goog.dom.DomHelper.prototype.isNodeList=goog.dom.isNodeList;goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass=goog.dom.getAncestorByTagNameAndClass;goog.dom.DomHelper.prototype.getAncestorByClass=goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor=goog.dom.getAncestor;goog.dom.DomHelper.prototype.getCanvasContext2D=goog.dom.getCanvasContext2D;Blockly.Bubble=function(a,b,c,d,e,f){this.workspace_=a;this.content_=b;this.shape_=c;c=Blockly.Bubble.ARROW_ANGLE;this.workspace_.RTL&&(c=-c);this.arrow_radians_=goog.math.toRadians(c);a.getBubbleCanvas().appendChild(this.createDom_(b,!(!e||!f)));this.setAnchorLocation(d);e&&f||(b=this.content_.getBBox(),e=b.width+2*Blockly.Bubble.BORDER_WIDTH,f=b.height+2*Blockly.Bubble.BORDER_WIDTH);this.setBubbleSize(e,f);this.positionBubble_();this.renderArrow_();this.rendered_=!0;a.options.readOnly||(Blockly.bindEventWithChecks_(this.bubbleBack_,
"mousedown",this,this.bubbleMouseDown_),this.resizeGroup_&&Blockly.bindEventWithChecks_(this.resizeGroup_,"mousedown",this,this.resizeMouseDown_))};Blockly.Bubble.BORDER_WIDTH=6;Blockly.Bubble.ARROW_THICKNESS=5;Blockly.Bubble.ARROW_ANGLE=20;Blockly.Bubble.ARROW_BEND=4;Blockly.Bubble.ANCHOR_RADIUS=8;Blockly.Bubble.onMouseUpWrapper_=null;Blockly.Bubble.onMouseMoveWrapper_=null;Blockly.Bubble.prototype.resizeCallback_=null;
Blockly.Bubble.unbindDragEvents_=function(){Blockly.Bubble.onMouseUpWrapper_&&(Blockly.unbindEvent_(Blockly.Bubble.onMouseUpWrapper_),Blockly.Bubble.onMouseUpWrapper_=null);Blockly.Bubble.onMouseMoveWrapper_&&(Blockly.unbindEvent_(Blockly.Bubble.onMouseMoveWrapper_),Blockly.Bubble.onMouseMoveWrapper_=null)};Blockly.Bubble.bubbleMouseUp_=function(){Blockly.Touch.clearTouchIdentifier();Blockly.Bubble.unbindDragEvents_()};Blockly.Bubble.prototype.rendered_=!1;Blockly.Bubble.prototype.anchorXY_=null;
Blockly.Bubble.prototype.relativeLeft_=0;Blockly.Bubble.prototype.relativeTop_=0;Blockly.Bubble.prototype.width_=0;Blockly.Bubble.prototype.height_=0;Blockly.Bubble.prototype.autoLayout_=!0;
Blockly.Bubble.prototype.createDom_=function(a,b){this.bubbleGroup_=Blockly.utils.createSvgElement("g",{},null);var c={filter:"url(#"+this.workspace_.options.embossFilterId+")"};-1!=goog.userAgent.getUserAgentString().indexOf("JavaFX")&&(c={});c=Blockly.utils.createSvgElement("g",c,this.bubbleGroup_);this.bubbleArrow_=Blockly.utils.createSvgElement("path",{},c);this.bubbleBack_=Blockly.utils.createSvgElement("rect",{"class":"blocklyDraggable",x:0,y:0,rx:Blockly.Bubble.BORDER_WIDTH,ry:Blockly.Bubble.BORDER_WIDTH},
c);b?(this.resizeGroup_=Blockly.utils.createSvgElement("g",{"class":this.workspace_.RTL?"blocklyResizeSW":"blocklyResizeSE"},this.bubbleGroup_),b=2*Blockly.Bubble.BORDER_WIDTH,Blockly.utils.createSvgElement("polygon",{points:"0,x x,x x,0".replace(/x/g,b.toString())},this.resizeGroup_),Blockly.utils.createSvgElement("line",{"class":"blocklyResizeLine",x1:b/3,y1:b-1,x2:b-1,y2:b/3},this.resizeGroup_),Blockly.utils.createSvgElement("line",{"class":"blocklyResizeLine",x1:2*b/3,y1:b-1,x2:b-1,y2:2*b/3},
this.resizeGroup_)):this.resizeGroup_=null;this.bubbleGroup_.appendChild(a);return this.bubbleGroup_};Blockly.Bubble.prototype.getSvgRoot=function(){return this.bubbleGroup_};Blockly.Bubble.prototype.setSvgId=function(a){this.bubbleGroup_.dataset&&(this.bubbleGroup_.dataset.blockId=a)};Blockly.Bubble.prototype.bubbleMouseDown_=function(a){var b=this.workspace_.getGesture(a);b&&b.handleBubbleStart(a,this)};Blockly.Bubble.prototype.showContextMenu_=function(a){};
Blockly.Bubble.prototype.isDeletable=function(){return!1};
Blockly.Bubble.prototype.resizeMouseDown_=function(a){this.promote_();Blockly.Bubble.unbindDragEvents_();Blockly.utils.isRightButton(a)||(this.workspace_.startDrag(a,new goog.math.Coordinate(this.workspace_.RTL?-this.width_:this.width_,this.height_)),Blockly.Bubble.onMouseUpWrapper_=Blockly.bindEventWithChecks_(document,"mouseup",this,Blockly.Bubble.bubbleMouseUp_),Blockly.Bubble.onMouseMoveWrapper_=Blockly.bindEventWithChecks_(document,"mousemove",this,this.resizeMouseMove_),Blockly.hideChaff());
a.stopPropagation()};Blockly.Bubble.prototype.resizeMouseMove_=function(a){this.autoLayout_=!1;a=this.workspace_.moveDrag(a);this.setBubbleSize(this.workspace_.RTL?-a.x:a.x,a.y);this.workspace_.RTL&&this.positionBubble_()};Blockly.Bubble.prototype.registerResizeEvent=function(a){this.resizeCallback_=a};Blockly.Bubble.prototype.promote_=function(){var a=this.bubbleGroup_.parentNode;return a.lastChild!==this.bubbleGroup_?(a.appendChild(this.bubbleGroup_),!0):!1};
Blockly.Bubble.prototype.setAnchorLocation=function(a){this.anchorXY_=a;this.rendered_&&this.positionBubble_()};
Blockly.Bubble.prototype.layoutBubble_=function(){var a=-this.width_/4,b=-this.height_-Blockly.BlockSvg.MIN_BLOCK_Y,c=this.workspace_.getMetrics();c.viewWidth/=this.workspace_.scale;c.viewLeft/=this.workspace_.scale;var d=this.anchorXY_.x;this.workspace_.RTL?d-c.viewLeft-a-this.width_<Blockly.Scrollbar.scrollbarThickness?a=d-c.viewLeft-this.width_-Blockly.Scrollbar.scrollbarThickness:d-c.viewLeft-a>c.viewWidth&&(a=d-c.viewLeft-c.viewWidth):d+a<c.viewLeft?a=c.viewLeft-d:c.viewLeft+c.viewWidth<d+a+
this.width_+Blockly.BlockSvg.SEP_SPACE_X+Blockly.Scrollbar.scrollbarThickness&&(a=c.viewLeft+c.viewWidth-d-this.width_-Blockly.Scrollbar.scrollbarThickness);this.anchorXY_.y+b<c.viewTop&&(b=this.shape_.getBBox().height);this.relativeLeft_=a;this.relativeTop_=b};Blockly.Bubble.prototype.positionBubble_=function(){var a=this.anchorXY_.x;a=this.workspace_.RTL?a-(this.relativeLeft_+this.width_):a+this.relativeLeft_;this.moveTo(a,this.relativeTop_+this.anchorXY_.y)};
Blockly.Bubble.prototype.moveTo=function(a,b){this.bubbleGroup_.setAttribute("transform","translate("+a+","+b+")")};Blockly.Bubble.prototype.getBubbleSize=function(){return{width:this.width_,height:this.height_}};
Blockly.Bubble.prototype.setBubbleSize=function(a,b){var c=2*Blockly.Bubble.BORDER_WIDTH;a=Math.max(a,c+45);b=Math.max(b,c+20);this.width_=a;this.height_=b;this.bubbleBack_.setAttribute("width",a);this.bubbleBack_.setAttribute("height",b);this.resizeGroup_&&(this.workspace_.RTL?this.resizeGroup_.setAttribute("transform","translate("+2*Blockly.Bubble.BORDER_WIDTH+","+(b-c)+") scale(-1 1)"):this.resizeGroup_.setAttribute("transform","translate("+(a-c)+","+(b-c)+")"));this.rendered_&&(this.autoLayout_&&
this.layoutBubble_(),this.positionBubble_(),this.renderArrow_());this.resizeCallback_&&this.resizeCallback_()};
Blockly.Bubble.prototype.renderArrow_=function(){var a=[],b=this.width_/2,c=this.height_/2,d=-this.relativeLeft_,e=-this.relativeTop_;if(b==d&&c==e)a.push("M "+b+","+c);else{e-=c;d-=b;this.workspace_.RTL&&(d*=-1);var f=Math.sqrt(e*e+d*d),g=Math.acos(d/f);0>e&&(g=2*Math.PI-g);var h=g+Math.PI/2;h>2*Math.PI&&(h-=2*Math.PI);var k=Math.sin(h),m=Math.cos(h),l=this.getBubbleSize();h=(l.width+l.height)/Blockly.Bubble.ARROW_THICKNESS;h=Math.min(h,l.width,l.height)/4;l=1-Blockly.Bubble.ANCHOR_RADIUS/f;d=b+
l*d;e=c+l*e;l=b+h*m;var n=c+h*k;b-=h*m;c-=h*k;k=g+this.arrow_radians_;k>2*Math.PI&&(k-=2*Math.PI);g=Math.sin(k)*f/Blockly.Bubble.ARROW_BEND;f=Math.cos(k)*f/Blockly.Bubble.ARROW_BEND;a.push("M"+l+","+n);a.push("C"+(l+f)+","+(n+g)+" "+d+","+e+" "+d+","+e);a.push("C"+d+","+e+" "+(b+f)+","+(c+g)+" "+b+","+c)}a.push("z");this.bubbleArrow_.setAttribute("d",a.join(" "))};Blockly.Bubble.prototype.setColour=function(a){this.bubbleBack_.setAttribute("fill",a);this.bubbleArrow_.setAttribute("fill",a)};
Blockly.Bubble.prototype.dispose=function(){Blockly.Bubble.unbindDragEvents_();goog.dom.removeNode(this.bubbleGroup_);this.shape_=this.content_=this.workspace_=this.resizeGroup_=this.bubbleBack_=this.bubbleArrow_=this.bubbleGroup_=null};Blockly.Bubble.prototype.moveDuringDrag=function(a,b){a?a.translateSurface(b.x,b.y):this.moveTo(b.x,b.y);this.relativeLeft_=this.workspace_.RTL?this.anchorXY_.x-b.x-this.width_:b.x-this.anchorXY_.x;this.relativeTop_=b.y-this.anchorXY_.y;this.renderArrow_()};
Blockly.Bubble.prototype.getRelativeToSurfaceXY=function(){return new goog.math.Coordinate(this.anchorXY_.x+this.relativeLeft_,this.anchorXY_.y+this.relativeTop_)};Blockly.Bubble.prototype.setAutoLayout=function(a){this.autoLayout_=a};Blockly.Events.BlockBase=function(a){Blockly.Events.BlockBase.superClass_.constructor.call(this);this.blockId=a.id;this.workspaceId=a.workspace.id};goog.inherits(Blockly.Events.BlockBase,Blockly.Events.Abstract);Blockly.Events.BlockBase.prototype.toJson=function(){var a=Blockly.Events.BlockBase.superClass_.toJson.call(this);a.blockId=this.blockId;return a};Blockly.Events.BlockBase.prototype.fromJson=function(a){Blockly.Events.BlockBase.superClass_.toJson.call(this);this.blockId=a.blockId};
Blockly.Events.Change=function(a,b,c,d,e){a&&(Blockly.Events.Change.superClass_.constructor.call(this,a),this.element=b,this.name=c,this.oldValue=d,this.newValue=e)};goog.inherits(Blockly.Events.Change,Blockly.Events.BlockBase);Blockly.Events.BlockChange=Blockly.Events.Change;Blockly.Events.Change.prototype.type=Blockly.Events.CHANGE;
Blockly.Events.Change.prototype.toJson=function(){var a=Blockly.Events.Change.superClass_.toJson.call(this);a.element=this.element;this.name&&(a.name=this.name);a.newValue=this.newValue;return a};Blockly.Events.Change.prototype.fromJson=function(a){Blockly.Events.Change.superClass_.fromJson.call(this,a);this.element=a.element;this.name=a.name;this.newValue=a.newValue};Blockly.Events.Change.prototype.isNull=function(){return this.oldValue==this.newValue};
Blockly.Events.Change.prototype.run=function(a){var b=this.getEventWorkspace_().getBlockById(this.blockId);if(b)switch(b.mutator&&b.mutator.setVisible(!1),a=a?this.newValue:this.oldValue,this.element){case "field":(b=b.getField(this.name))?(b.callValidator(a),b.setValue(a)):console.warn("Can't set non-existent field: "+this.name);break;case "comment":b.setCommentText(a||null);break;case "collapsed":b.setCollapsed(a);break;case "disabled":b.setDisabled(a);break;case "inline":b.setInputsInline(a);break;
case "mutation":var c="";b.mutationToDom&&(c=(c=b.mutationToDom())&&Blockly.Xml.domToText(c));if(b.domToMutation){a=a||"<mutation></mutation>";var d=Blockly.Xml.textToDom("<xml>"+a+"</xml>");b.domToMutation(d.firstChild)}Blockly.Events.fire(new Blockly.Events.Change(b,"mutation",null,c,a));break;default:console.warn("Unknown change type: "+this.element)}else console.warn("Can't change non-existent block: "+this.blockId)};
Blockly.Events.Create=function(a){a&&(Blockly.Events.Create.superClass_.constructor.call(this,a),this.xml=a.workspace.rendered?Blockly.Xml.blockToDomWithXY(a):Blockly.Xml.blockToDom(a),this.ids=Blockly.Events.getDescendantIds_(a))};goog.inherits(Blockly.Events.Create,Blockly.Events.BlockBase);Blockly.Events.BlockCreate=Blockly.Events.Create;Blockly.Events.Create.prototype.type=Blockly.Events.CREATE;
Blockly.Events.Create.prototype.toJson=function(){var a=Blockly.Events.Create.superClass_.toJson.call(this);a.xml=Blockly.Xml.domToText(this.xml);a.ids=this.ids;return a};Blockly.Events.Create.prototype.fromJson=function(a){Blockly.Events.Create.superClass_.fromJson.call(this,a);this.xml=Blockly.Xml.textToDom("<xml>"+a.xml+"</xml>").firstChild;this.ids=a.ids};
Blockly.Events.Create.prototype.run=function(a){var b=this.getEventWorkspace_();if(a)a=goog.dom.createDom("xml"),a.appendChild(this.xml),Blockly.Xml.domToWorkspace(a,b);else{a=0;for(var c;c=this.ids[a];a++){var d=b.getBlockById(c);d?d.dispose(!1,!1):c==this.blockId&&console.warn("Can't uncreate non-existent block: "+c)}}};
Blockly.Events.Delete=function(a){if(a){if(a.getParent())throw"Connected blocks cannot be deleted.";Blockly.Events.Delete.superClass_.constructor.call(this,a);this.oldXml=a.workspace.rendered?Blockly.Xml.blockToDomWithXY(a):Blockly.Xml.blockToDom(a);this.ids=Blockly.Events.getDescendantIds_(a)}};goog.inherits(Blockly.Events.Delete,Blockly.Events.BlockBase);Blockly.Events.BlockDelete=Blockly.Events.Delete;Blockly.Events.Delete.prototype.type=Blockly.Events.DELETE;
Blockly.Events.Delete.prototype.toJson=function(){var a=Blockly.Events.Delete.superClass_.toJson.call(this);a.ids=this.ids;return a};Blockly.Events.Delete.prototype.fromJson=function(a){Blockly.Events.Delete.superClass_.fromJson.call(this,a);this.ids=a.ids};
Blockly.Events.Delete.prototype.run=function(a){var b=this.getEventWorkspace_();if(a){a=0;for(var c;c=this.ids[a];a++){var d=b.getBlockById(c);d?d.dispose(!1,!1):c==this.blockId&&console.warn("Can't delete non-existent block: "+c)}}else a=goog.dom.createDom("xml"),a.appendChild(this.oldXml),Blockly.Xml.domToWorkspace(a,b)};
Blockly.Events.Move=function(a){a&&(Blockly.Events.Move.superClass_.constructor.call(this,a),a=this.currentLocation_(),this.oldParentId=a.parentId,this.oldInputName=a.inputName,this.oldCoordinate=a.coordinate)};goog.inherits(Blockly.Events.Move,Blockly.Events.BlockBase);Blockly.Events.BlockMove=Blockly.Events.Move;Blockly.Events.Move.prototype.type=Blockly.Events.MOVE;
Blockly.Events.Move.prototype.toJson=function(){var a=Blockly.Events.Move.superClass_.toJson.call(this);this.newParentId&&(a.newParentId=this.newParentId);this.newInputName&&(a.newInputName=this.newInputName);this.newCoordinate&&(a.newCoordinate=Math.round(this.newCoordinate.x)+","+Math.round(this.newCoordinate.y));return a};
Blockly.Events.Move.prototype.fromJson=function(a){Blockly.Events.Move.superClass_.fromJson.call(this,a);this.newParentId=a.newParentId;this.newInputName=a.newInputName;a.newCoordinate&&(a=a.newCoordinate.split(","),this.newCoordinate=new goog.math.Coordinate(parseFloat(a[0]),parseFloat(a[1])))};Blockly.Events.Move.prototype.recordNew=function(){var a=this.currentLocation_();this.newParentId=a.parentId;this.newInputName=a.inputName;this.newCoordinate=a.coordinate};
Blockly.Events.Move.prototype.currentLocation_=function(){var a=Blockly.Workspace.getById(this.workspaceId).getBlockById(this.blockId),b={},c=a.getParent();if(c){if(b.parentId=c.id,a=c.getInputWithBlock(a))b.inputName=a.name}else b.coordinate=a.getRelativeToSurfaceXY();return b};Blockly.Events.Move.prototype.isNull=function(){return this.oldParentId==this.newParentId&&this.oldInputName==this.newInputName&&goog.math.Coordinate.equals(this.oldCoordinate,this.newCoordinate)};
Blockly.Events.Move.prototype.run=function(a){var b=this.getEventWorkspace_(),c=b.getBlockById(this.blockId);if(c){var d=a?this.newParentId:this.oldParentId,e=a?this.newInputName:this.oldInputName;a=a?this.newCoordinate:this.oldCoordinate;var f=null;if(d&&(f=b.getBlockById(d),!f)){console.warn("Can't connect to non-existent block: "+d);return}c.getParent()&&c.unplug();if(a)e=c.getRelativeToSurfaceXY(),c.moveBy(a.x-e.x,a.y-e.y);else{c=c.outputConnection||c.previousConnection;if(e){if(b=f.getInput(e))var g=
b.connection}else c.type==Blockly.PREVIOUS_STATEMENT&&(g=f.nextConnection);g?c.connect(g):console.warn("Can't connect to non-existent input: "+e)}}else console.warn("Can't move non-existent block: "+this.blockId)};Blockly.Events.Ui=function(a,b,c,d){Blockly.Events.Ui.superClass_.constructor.call(this);this.blockId=a?a.id:null;this.workspaceId=a?a.workspace.id:null;this.element=b;this.oldValue=c;this.newValue=d;this.recordUndo=!1};goog.inherits(Blockly.Events.Ui,Blockly.Events.Abstract);Blockly.Events.Ui.prototype.type=Blockly.Events.UI;
Blockly.Events.Ui.prototype.toJson=function(){var a=Blockly.Events.Ui.superClass_.toJson.call(this);a.element=this.element;void 0!==this.newValue&&(a.newValue=this.newValue);this.blockId&&(a.blockId=this.blockId);return a};Blockly.Events.Ui.prototype.fromJson=function(a){Blockly.Events.Ui.superClass_.fromJson.call(this,a);this.element=a.element;this.newValue=a.newValue;this.blockId=a.blockId};Blockly.Icon=function(a){this.block_=a};Blockly.Icon.prototype.collapseHidden=!0;Blockly.Icon.prototype.SIZE=17;Blockly.Icon.prototype.bubble_=null;Blockly.Icon.prototype.iconXY_=null;
Blockly.Icon.prototype.createIcon=function(){this.iconGroup_||(this.iconGroup_=Blockly.utils.createSvgElement("g",{"class":"blocklyIconGroup"},null),this.block_.isInFlyout&&Blockly.utils.addClass(this.iconGroup_,"blocklyIconGroupReadonly"),this.drawIcon_(this.iconGroup_),this.block_.getSvgRoot().appendChild(this.iconGroup_),Blockly.bindEventWithChecks_(this.iconGroup_,"mouseup",this,this.iconClick_),this.updateEditable())};
Blockly.Icon.prototype.dispose=function(){goog.dom.removeNode(this.iconGroup_);this.iconGroup_=null;this.setVisible(!1);this.block_=null};Blockly.Icon.prototype.updateEditable=function(){};Blockly.Icon.prototype.isVisible=function(){return!!this.bubble_};Blockly.Icon.prototype.iconClick_=function(a){this.block_.workspace.isDragging()||this.block_.isInFlyout||Blockly.utils.isRightButton(a)||this.setVisible(!this.isVisible())};Blockly.Icon.prototype.updateColour=function(){this.isVisible()&&this.bubble_.setColour(this.block_.getColour())};
Blockly.Icon.prototype.renderIcon=function(a){if(this.collapseHidden&&this.block_.isCollapsed())return this.iconGroup_.setAttribute("display","none"),a;this.iconGroup_.setAttribute("display","block");var b=this.SIZE;this.block_.RTL&&(a-=b);this.iconGroup_.setAttribute("transform","translate("+a+",5)");this.computeIconLocation();return a=this.block_.RTL?a-Blockly.BlockSvg.SEP_SPACE_X:a+(b+Blockly.BlockSvg.SEP_SPACE_X)};
Blockly.Icon.prototype.setIconLocation=function(a){this.iconXY_=a;this.isVisible()&&this.bubble_.setAnchorLocation(a)};Blockly.Icon.prototype.computeIconLocation=function(){var a=this.block_.getRelativeToSurfaceXY(),b=Blockly.utils.getRelativeXY(this.iconGroup_);a=new goog.math.Coordinate(a.x+b.x+this.SIZE/2,a.y+b.y+this.SIZE/2);goog.math.Coordinate.equals(this.getIconLocation(),a)||this.setIconLocation(a)};Blockly.Icon.prototype.getIconLocation=function(){return this.iconXY_};
Blockly.Comment=function(a){Blockly.Comment.superClass_.constructor.call(this,a);this.createIcon()};goog.inherits(Blockly.Comment,Blockly.Icon);Blockly.Comment.prototype.text_="";Blockly.Comment.prototype.width_=160;Blockly.Comment.prototype.height_=80;
Blockly.Comment.prototype.drawIcon_=function(a){Blockly.utils.createSvgElement("circle",{"class":"blocklyIconShape",r:"8",cx:"8",cy:"8"},a);Blockly.utils.createSvgElement("path",{"class":"blocklyIconSymbol",d:"m6.8,10h2c0.003,-0.617 0.271,-0.962 0.633,-1.266 2.875,-2.4050.607,-5.534 -3.765,-3.874v1.7c3.12,-1.657 3.698,0.118 2.336,1.25-1.201,0.998 -1.201,1.528 -1.204,2.19z"},a);Blockly.utils.createSvgElement("rect",{"class":"blocklyIconSymbol",x:"6.8",y:"10.78",height:"2",width:"2"},a)};
Blockly.Comment.prototype.createEditor_=function(){this.foreignObject_=Blockly.utils.createSvgElement("foreignObject",{x:Blockly.Bubble.BORDER_WIDTH,y:Blockly.Bubble.BORDER_WIDTH},null);var a=document.createElementNS(Blockly.HTML_NS,"body");a.setAttribute("xmlns",Blockly.HTML_NS);a.className="blocklyMinimalBody";var b=document.createElementNS(Blockly.HTML_NS,"textarea");b.className="blocklyCommentTextarea";b.setAttribute("dir",this.block_.RTL?"RTL":"LTR");a.appendChild(b);this.textarea_=b;this.foreignObject_.appendChild(a);
Blockly.bindEventWithChecks_(b,"mouseup",this,this.textareaFocus_);Blockly.bindEventWithChecks_(b,"wheel",this,function(a){a.stopPropagation()});Blockly.bindEventWithChecks_(b,"change",this,function(a){this.text_!=b.value&&(Blockly.Events.fire(new Blockly.Events.BlockChange(this.block_,"comment",null,this.text_,b.value)),this.text_=b.value)});setTimeout(function(){b.focus()},0);return this.foreignObject_};
Blockly.Comment.prototype.updateEditable=function(){this.isVisible()&&(this.setVisible(!1),this.setVisible(!0));Blockly.Icon.prototype.updateEditable.call(this)};Blockly.Comment.prototype.resizeBubble_=function(){if(this.isVisible()){var a=this.bubble_.getBubbleSize(),b=2*Blockly.Bubble.BORDER_WIDTH;this.foreignObject_.setAttribute("width",a.width-b);this.foreignObject_.setAttribute("height",a.height-b);this.textarea_.style.width=a.width-b-4+"px";this.textarea_.style.height=a.height-b-4+"px"}};
Blockly.Comment.prototype.setVisible=function(a){if(a!=this.isVisible())if(Blockly.Events.fire(new Blockly.Events.Ui(this.block_,"commentOpen",!a,a)),!this.block_.isEditable()&&!this.textarea_||goog.userAgent.IE)Blockly.Warning.prototype.setVisible.call(this,a);else{var b=this.getText(),c=this.getBubbleSize();a?(this.bubble_=new Blockly.Bubble(this.block_.workspace,this.createEditor_(),this.block_.svgPath_,this.iconXY_,this.width_,this.height_),this.bubble_.registerResizeEvent(this.resizeBubble_.bind(this)),
this.updateColour()):(this.bubble_.dispose(),this.foreignObject_=this.textarea_=this.bubble_=null);this.setText(b);this.setBubbleSize(c.width,c.height)}};Blockly.Comment.prototype.textareaFocus_=function(a){this.bubble_.promote_()&&this.textarea_.focus()};Blockly.Comment.prototype.getBubbleSize=function(){return this.isVisible()?this.bubble_.getBubbleSize():{width:this.width_,height:this.height_}};
Blockly.Comment.prototype.setBubbleSize=function(a,b){this.textarea_?this.bubble_.setBubbleSize(a,b):(this.width_=a,this.height_=b)};Blockly.Comment.prototype.getText=function(){return this.textarea_?this.textarea_.value:this.text_};Blockly.Comment.prototype.setText=function(a){this.text_!=a&&(Blockly.Events.fire(new Blockly.Events.BlockChange(this.block_,"comment",null,this.text_,a)),this.text_=a);this.textarea_&&(this.textarea_.value=a)};
Blockly.Comment.prototype.dispose=function(){Blockly.Events.isEnabled()&&this.setText("");this.block_.comment=null;Blockly.Icon.prototype.dispose.call(this)};Blockly.ScratchBubble=function(a,b,c,d,e,f,g,h,k){this.comment=a;this.workspace_=b;this.content_=c;this.x=g;this.y=h;this.isMinimized_=k||!1;b.getBubbleCanvas().appendChild(this.createDom_(c,!(!e||!f),this.isMinimized_));this.setAnchorLocation(d);e&&f||(a=this.content_.getBBox(),e=a.width+2*Blockly.ScratchBubble.BORDER_WIDTH,f=a.height+2*Blockly.ScratchBubble.BORDER_WIDTH);this.setBubbleSize(e,f);this.positionBubble_();this.renderArrow_();this.rendered_=!0;b.options.readOnly||(Blockly.bindEventWithChecks_(this.minimizeArrow_,
"mousedown",this,this.minimizeArrowMouseDown_),Blockly.bindEventWithChecks_(this.minimizeArrow_,"mouseout",this,this.minimizeArrowMouseOut_),Blockly.bindEventWithChecks_(this.minimizeArrow_,"mouseup",this,this.minimizeArrowMouseUp_),Blockly.bindEventWithChecks_(this.deleteIcon_,"mousedown",this,this.deleteMouseDown_),Blockly.bindEventWithChecks_(this.deleteIcon_,"mouseout",this,this.deleteMouseOut_),Blockly.bindEventWithChecks_(this.deleteIcon_,"mouseup",this,this.deleteMouseUp_),Blockly.bindEventWithChecks_(this.bubbleGroup_,
"mousedown",this,this.bubbleMouseDown_),this.resizeGroup_&&(Blockly.bindEventWithChecks_(this.resizeGroup_,"mousedown",this,this.resizeMouseDown_),Blockly.bindEventWithChecks_(this.resizeGroup_,"mouseup",this,this.resizeMouseUp_)));this.setAutoLayout(!1);this.moveTo(this.x,this.y)};goog.inherits(Blockly.ScratchBubble,Blockly.Bubble);Blockly.ScratchBubble.BORDER_WIDTH=1;Blockly.ScratchBubble.LINE_THICKNESS=1;Blockly.ScratchBubble.TOP_BAR_HEIGHT=32;Blockly.ScratchBubble.MINIMIZE_ICON_SIZE=16;
Blockly.ScratchBubble.DELETE_ICON_SIZE=12;Blockly.ScratchBubble.TOP_BAR_ICON_INSET=6;
Blockly.ScratchBubble.prototype.createDom_=function(a,b,c){this.bubbleGroup_=Blockly.utils.createSvgElement("g",{},null);this.bubbleArrow_=Blockly.utils.createSvgElement("line",{"stroke-linecap":"round"},this.bubbleGroup_);this.bubbleBack_=Blockly.utils.createSvgElement("rect",{"class":"blocklyDraggable scratchCommentRect",x:0,y:0,rx:4*Blockly.ScratchBubble.BORDER_WIDTH,ry:4*Blockly.ScratchBubble.BORDER_WIDTH},this.bubbleGroup_);this.labelText_=a.labelText;this.createCommentTopBar_();this.commentEditor_=
a.commentEditor;this.bubbleGroup_.appendChild(this.commentEditor_);b?this.createResizeHandle_():this.resizeGroup_=null;c?(this.minimizeArrow_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"comment-arrow-up.svg"),this.commentEditor_.setAttribute("display","none"),this.resizeGroup_.setAttribute("display","none")):(this.minimizeArrow_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"comment-arrow-down.svg"),
this.topBarLabel_.setAttribute("display","none"));return this.bubbleGroup_};Blockly.ScratchBubble.prototype.createCommentTopBar_=function(){this.commentTopBar_=Blockly.utils.createSvgElement("rect",{"class":"blocklyDraggable scratchCommentTopBar",x:Blockly.ScratchBubble.BORDER_WIDTH,y:Blockly.ScratchBubble.BORDER_WIDTH,height:Blockly.ScratchBubble.TOP_BAR_HEIGHT},this.bubbleGroup_);this.createTopBarIcons_();this.createTopBarLabel_()};
Blockly.ScratchBubble.prototype.createTopBarIcons_=function(){var a=Blockly.ScratchBubble.TOP_BAR_HEIGHT/2+Blockly.ScratchBubble.BORDER_WIDTH,b=Blockly.ScratchBubble.TOP_BAR_ICON_INSET;this.minimizeArrow_=Blockly.utils.createSvgElement("image",{x:b,y:a-Blockly.ScratchBubble.MINIMIZE_ICON_SIZE/2,width:Blockly.ScratchBubble.MINIMIZE_ICON_SIZE,height:Blockly.ScratchBubble.MINIMIZE_ICON_SIZE},this.bubbleGroup_);this.deleteIcon_=Blockly.utils.createSvgElement("image",{x:b,y:a-Blockly.ScratchBubble.DELETE_ICON_SIZE/
2,width:Blockly.ScratchBubble.DELETE_ICON_SIZE,height:Blockly.ScratchBubble.DELETE_ICON_SIZE},this.bubbleGroup_);this.deleteIcon_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"delete-x.svg")};
Blockly.ScratchBubble.prototype.createTopBarLabel_=function(){this.topBarLabel_=Blockly.utils.createSvgElement("text",{"class":"scratchCommentText",x:this.width_/2,y:Blockly.ScratchBubble.TOP_BAR_HEIGHT/2+Blockly.ScratchBubble.BORDER_WIDTH,"text-anchor":"middle","dominant-baseline":"middle"},this.bubbleGroup_);var a=document.createTextNode(this.labelText_);this.topBarLabel_.appendChild(a)};
Blockly.ScratchBubble.prototype.createResizeHandle_=function(){this.resizeGroup_=Blockly.utils.createSvgElement("g",{"class":this.workspace_.RTL?"scratchCommentResizeSW":"scratchCommentResizeSE"},this.bubbleGroup_);var a=12*Blockly.ScratchBubble.BORDER_WIDTH;Blockly.utils.createSvgElement("polygon",{points:"0,x x,x x,0".replace(/x/g,a.toString())},this.resizeGroup_);Blockly.utils.createSvgElement("line",{"class":"blocklyResizeLine",x1:a/3,y1:a-1,x2:a-1,y2:a/3},this.resizeGroup_);Blockly.utils.createSvgElement("line",
{"class":"blocklyResizeLine",x1:2*a/3,y1:a-1,x2:a-1,y2:2*a/3},this.resizeGroup_)};Blockly.ScratchBubble.prototype.showContextMenu_=function(a){this.workspace_.options.readOnly||this.contextMenuCallback_&&this.contextMenuCallback_(a)};Blockly.ScratchBubble.prototype.minimizeArrowMouseDown_=function(a){this.shouldToggleMinimize_=!0;a.stopPropagation()};Blockly.ScratchBubble.prototype.minimizeArrowMouseOut_=function(a){this.shouldToggleMinimize_=!1};
Blockly.ScratchBubble.prototype.minimizeArrowMouseUp_=function(a){this.shouldToggleMinimize_&&(this.shouldToggleMinimize_=!1,this.minimizeToggleCallback_&&this.minimizeToggleCallback_.call(this));a.stopPropagation()};Blockly.ScratchBubble.prototype.deleteMouseDown_=function(a){this.shouldDelete_=!0;a.stopPropagation()};Blockly.ScratchBubble.prototype.deleteMouseOut_=function(a){this.shouldDelete_=!1};
Blockly.ScratchBubble.prototype.deleteMouseUp_=function(a){this.shouldDelete_&&(this.shouldDelete_=!1,this.deleteCallback_&&this.deleteCallback_.call(this));a.stopPropagation()};Blockly.ScratchBubble.prototype.resizeMouseDown_=function(a){this.resizeStartSize_={width:this.width_,height:this.height_};this.workspace_.setResizesEnabled(!1);Blockly.ScratchBubble.superClass_.resizeMouseDown_.call(this,a)};
Blockly.ScratchBubble.prototype.resizeMouseUp_=function(a){a=this.resizeStartSize_;this.resizeStartSize_=null;if(this.width_!=a.width||this.height_!=a.height)Blockly.Events.fire(new Blockly.Events.CommentChange(this.comment,{width:a.width,height:a.height},{width:this.width_,height:this.height_})),this.workspace_.setResizesEnabled(!0)};
Blockly.ScratchBubble.prototype.setMinimized=function(a,b){a!=this.isMinimized_&&(a?(this.isMinimized_=!0,this.minimizeArrow_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"comment-arrow-up.svg"),this.commentEditor_.setAttribute("display","none"),this.resizeGroup_&&this.resizeGroup_.setAttribute("display","none"),b&&this.labelText_!=b&&(this.topBarLabel_.textContent=b),Blockly.utils.removeAttribute(this.topBarLabel_,"display")):(this.isMinimized_=
!1,this.minimizeArrow_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"comment-arrow-down.svg"),this.topBarLabel_.setAttribute("display","none"),Blockly.utils.removeAttribute(this.commentEditor_,"display"),this.resizeGroup_&&Blockly.utils.removeAttribute(this.resizeGroup_,"display")))};Blockly.ScratchBubble.prototype.registerMinimizeToggleEvent=function(a){this.minimizeToggleCallback_=a};
Blockly.ScratchBubble.prototype.registerDeleteEvent=function(a){this.deleteCallback_=a};Blockly.ScratchBubble.prototype.registerContextMenuCallback=function(a){this.contextMenuCallback_=a};Blockly.ScratchBubble.prototype.setAnchorLocation=function(a){this.anchorXY_=a;this.rendered_&&this.positionBubble_()};Blockly.ScratchBubble.prototype.moveTo=function(a,b){Blockly.ScratchBubble.superClass_.moveTo.call(this,a,b);this.updatePosition_(a,b)};
Blockly.ScratchBubble.prototype.setBubbleSize=function(a,b){var c=2*Blockly.ScratchBubble.BORDER_WIDTH;a=Math.max(a,c+50);b=Math.max(b,c+Blockly.ScratchBubble.TOP_BAR_HEIGHT);this.width_=a;this.height_=b;this.bubbleBack_.setAttribute("width",a);this.bubbleBack_.setAttribute("height",b);this.commentTopBar_.setAttribute("width",a-c);this.commentTopBar_.setAttribute("height",Blockly.ScratchBubble.TOP_BAR_HEIGHT);this.workspace_.RTL?this.minimizeArrow_.setAttribute("x",a-Blockly.ScratchBubble.MINIMIZE_ICON_SIZE-
Blockly.ScratchBubble.TOP_BAR_ICON_INSET):this.deleteIcon_.setAttribute("x",a-Blockly.ScratchBubble.DELETE_ICON_SIZE-Blockly.ScratchBubble.TOP_BAR_ICON_INSET);this.resizeGroup_&&(a=12*Blockly.ScratchBubble.BORDER_WIDTH,this.workspace_.RTL?this.resizeGroup_.setAttribute("transform","translate("+(a+c)+","+(this.height_-c-a)+") scale(-1, 1)"):this.resizeGroup_.setAttribute("transform","translate("+(this.width_-c-a)+","+(this.height_-c-a)+")"));this.isMinimized_&&(this.topBarLabel_.setAttribute("x",this.width_/
2),this.topBarLabel_.setAttribute("y",this.height_/2));this.rendered_&&(this.positionBubble_(),this.renderArrow_());this.resizeCallback_&&this.resizeCallback_()};
Blockly.ScratchBubble.prototype.renderArrow_=function(){var a=this.width_/2,b=Blockly.ScratchBubble.TOP_BAR_HEIGHT/2,c=-this.relativeLeft_,d=-this.relativeTop_;if(a!=c||b!=d)d-=b,c-=a,this.workspace_.RTL&&(c*=-1),this.bubbleArrow_.setAttribute("x1",a),this.bubbleArrow_.setAttribute("y1",b),this.bubbleArrow_.setAttribute("x2",a+c),this.bubbleArrow_.setAttribute("y2",b+d),this.bubbleArrow_.setAttribute("stroke-width",Blockly.ScratchBubble.LINE_THICKNESS)};
Blockly.ScratchBubble.prototype.setColour=function(a){this.bubbleBack_.setAttribute("stroke",a);this.bubbleArrow_.setAttribute("stroke",a)};Blockly.ScratchBubble.prototype.moveDuringDrag=function(a,b){a?(a.translateSurface(b.x,b.y),this.updatePosition_(b.x,b.y)):this.moveTo(b.x,b.y)};Blockly.ScratchBubble.prototype.updatePosition_=function(a,b){this.relativeLeft_=this.workspace_.RTL?this.anchorXY_.x-a-this.width_:a-this.anchorXY_.x;this.relativeTop_=b-this.anchorXY_.y;this.renderArrow_()};
Blockly.ScratchBubble.prototype.dispose=function(){Blockly.ScratchBubble.superClass_.dispose.call(this);this.deleteIcon_=this.minimizeArrow_=this.commentTopBar_=this.topBarLabel_=null};Blockly.ScratchBlockComment=function(a,b,c,d,e,f){Blockly.ScratchBlockComment.superClass_.constructor.call(this,a);this.text_=b;b="number"==typeof d&&!isNaN(d);var g="number"==typeof e&&!isNaN(e);this.needsAutoPositioning_=!b&&!g;this.x_=b?d:0;this.y_=g?e:0;this.isMinimized_=f||!1;this.workspace=a.workspace;this.id=goog.isString(c)&&!this.workspace.getCommentById(c)?c:Blockly.utils.genUid();this.workspace.addTopComment(this);this.blockId=a.id;a.rendered||Blockly.ScratchBlockComment.fireCreateEvent(this)};
goog.inherits(Blockly.ScratchBlockComment,Blockly.Comment);Blockly.ScratchBlockComment.prototype.width_=200;Blockly.ScratchBlockComment.prototype.height_=200;Blockly.ScratchBlockComment.prototype.SIZE=0;Blockly.ScratchBlockComment.TEXTAREA_OFFSET=12;Blockly.ScratchBlockComment.MAX_LABEL_LENGTH=12;Blockly.ScratchBlockComment.COMMENT_TEXT_LIMIT=8E3;Blockly.ScratchBlockComment.MINIMIZE_WIDTH=200;Blockly.ScratchBlockComment.prototype.drawIcon_=function(a){};
Blockly.ScratchBlockComment.prototype.renderIcon=function(a,b){if(this.collapseHidden&&this.block_.isCollapsed())return this.iconGroup_.setAttribute("display","none"),a;this.iconGroup_.setAttribute("display","block");var c=this.SIZE;this.block_.RTL&&(a-=c);this.iconGroup_.setAttribute("transform","translate("+a+","+b+")");this.computeIconLocation();return a=this.block_.RTL?a-Blockly.BlockSvg.SEP_SPACE_X:a+(c+Blockly.BlockSvg.SEP_SPACE_X)};
Blockly.ScratchBlockComment.prototype.createEditor_=function(){this.foreignObject_=Blockly.utils.createSvgElement("foreignObject",{x:Blockly.ScratchBubble.BORDER_WIDTH,y:Blockly.ScratchBubble.BORDER_WIDTH+Blockly.ScratchBubble.TOP_BAR_HEIGHT,"class":"scratchCommentForeignObject"},null);var a=document.createElementNS(Blockly.HTML_NS,"body");a.setAttribute("xmlns",Blockly.HTML_NS);a.className="blocklyMinimalBody scratchCommentBody";var b=document.createElementNS(Blockly.HTML_NS,"textarea");b.className=
"scratchCommentTextarea scratchCommentText";b.setAttribute("dir",this.block_.RTL?"RTL":"LTR");b.setAttribute("maxlength",Blockly.ScratchBlockComment.COMMENT_TEXT_LIMIT);a.appendChild(b);this.textarea_=b;this.textarea_.style.margin=Blockly.ScratchBlockComment.TEXTAREA_OFFSET+"px";this.foreignObject_.appendChild(a);Blockly.bindEventWithChecks_(b,"mouseup",this,this.textareaFocus_);Blockly.bindEventWithChecks_(b,"wheel",this,function(a){a.stopPropagation()});Blockly.bindEventWithChecks_(b,"change",this,
function(a){this.text_!=b.value&&(Blockly.Events.fire(new Blockly.Events.CommentChange(this,{text:this.text_},{text:b.value})),this.text_=b.value)});setTimeout(function(){b.focus()},0);this.label_=this.getLabelText();return{commentEditor:this.foreignObject_,labelText:this.label_}};
Blockly.ScratchBlockComment.prototype.resizeBubble_=function(){if(this.isVisible()&&!this.isMinimized_){var a=this.bubble_.getBubbleSize(),b=2*Blockly.ScratchBubble.BORDER_WIDTH,c=2*Blockly.ScratchBlockComment.TEXTAREA_OFFSET;this.foreignObject_.setAttribute("width",a.width-b);this.foreignObject_.setAttribute("height",a.height-b-Blockly.ScratchBubble.TOP_BAR_HEIGHT);this.textarea_.style.width=a.width-c+"px";this.textarea_.style.height=a.height-b-Blockly.ScratchBubble.TOP_BAR_HEIGHT-c+"px";this.width_=
a.width;this.height_=a.height}};Blockly.ScratchBlockComment.prototype.updateColour=function(){this.isVisible()&&this.bubble_.setColour(this.block_.getColourTertiary())};
Blockly.ScratchBlockComment.prototype.autoPosition_=function(){if(this.needsAutoPositioning_){if(this.isMinimized_){var a=4*Blockly.BlockSvg.GRID_UNIT;this.x_=this.block_.RTL?this.iconXY_.x-a:this.iconXY_.x+a}else{a=Math.floor(this.block_.getHeightWidth().width);var b=Math.floor(this.block_.svgPath_.getBBox().width),c=8*Blockly.BlockSvg.GRID_UNIT;this.x_=a!=b||this.block_.parentBlock_?this.block_.RTL?this.iconXY_.x-this.width_-a-c:this.iconXY_.x+a+c:this.block_.RTL?this.iconXY_.x-this.width_-c:this.iconXY_.x+
c}this.y_=this.iconXY_.y-Blockly.ScratchBubble.TOP_BAR_HEIGHT/2}};
Blockly.ScratchBlockComment.prototype.setVisible=function(a){if(a!=this.isVisible())if(!this.block_.isEditable()&&!this.textarea_||goog.userAgent.IE)Blockly.Warning.prototype.setVisible.call(this,a);else{var b=this.getText(),c=this.getBubbleSize();a?(this.needsAutoPositioning_&&(this.autoPosition_(),this.needsAutoPositioning_=!1),this.bubble_=new Blockly.ScratchBubble(this,this.block_.workspace,this.createEditor_(),this.iconXY_,this.width_,this.height_,this.x_,this.y_,this.isMinimized_),this.bubble_.setAutoLayout(!1),
this.bubble_.registerResizeEvent(this.resizeBubble_.bind(this)),this.bubble_.registerMinimizeToggleEvent(this.toggleMinimize_.bind(this)),this.bubble_.registerDeleteEvent(this.dispose.bind(this)),this.bubble_.registerContextMenuCallback(this.showContextMenu_.bind(this)),this.updateColour()):(this.bubble_.dispose(),this.label_=this.foreignObject_=this.textarea_=this.bubble_=null);this.setText(b);this.setBubbleSize(c.width,c.height);a&&Blockly.ScratchBlockComment.fireCreateEvent(this)}};
Blockly.ScratchBlockComment.prototype.toggleMinimize_=function(){this.setMinimized(!this.isMinimized_)};
Blockly.ScratchBlockComment.prototype.setMinimized=function(a){this.isMinimized_!=a&&(Blockly.Events.fire(new Blockly.Events.CommentChange(this,{minimized:this.isMinimized_},{minimized:a})),(this.isMinimized_=a)?(this.bubble_.setMinimized(!0,this.getLabelText()),this.setBubbleSize(Blockly.ScratchBlockComment.MINIMIZE_WIDTH,Blockly.ScratchBubble.TOP_BAR_HEIGHT)):(this.bubble_.setMinimized(!1),this.setText(this.text_),this.setBubbleSize(this.width_,this.height_)))};
Blockly.ScratchBlockComment.prototype.setBubbleSize=function(a,b){this.bubble_&&(this.isMinimized_?this.bubble_.setBubbleSize(Blockly.ScratchBlockComment.MINIMIZE_WIDTH,Blockly.ScratchBubble.TOP_BAR_HEIGHT):this.bubble_.setBubbleSize(a,b))};
Blockly.ScratchBlockComment.prototype.setSize=function(a,b){var c=this.width_,d=this.height_;this.isMinimized_||this.setBubbleSize(a,b);this.height_=b;this.width_=a;c==this.width_&&d==this.height_||Blockly.Events.fire(new Blockly.Events.CommentChange(this,{width:c,height:d},{width:this.width_,height:this.height_}))};
Blockly.ScratchBlockComment.prototype.getLabelText=function(){return this.text_.length>Blockly.ScratchBlockComment.MAX_LABEL_LENGTH?this.block_.RTL?"\u2026"+this.text_.slice(0,Blockly.ScratchBlockComment.MAX_LABEL_LENGTH):this.text_.slice(0,Blockly.ScratchBlockComment.MAX_LABEL_LENGTH)+"\u2026":this.text_};
Blockly.ScratchBlockComment.prototype.setText=function(a){this.text_!=a&&(Blockly.Events.fire(new Blockly.Events.CommentChange(this,{text:this.text_},{text:a})),this.text_=a);this.textarea_&&(this.textarea_.value=a)};Blockly.ScratchBlockComment.prototype.moveTo=function(a,b){var c=new Blockly.Events.CommentMove(this);this.bubble_&&this.bubble_.moveTo(a,b);this.x_=a;this.y_=b;c.recordNew();Blockly.Events.fire(c)};
Blockly.ScratchBlockComment.prototype.getXY=function(){if(this.bubble_)return this.bubble_.getRelativeToSurfaceXY();this.needsAutoPositioning_&&this.iconXY_&&this.autoPosition_();return new goog.math.Coordinate(this.x_,this.y_)};Blockly.ScratchBlockComment.prototype.getHeightWidth=function(){return{height:this.height_,width:this.width_}};
Blockly.ScratchBlockComment.prototype.getBoundingRectangle=function(){var a=this.getXY(),b=this.getHeightWidth();if(this.workspace.RTL){var c=new goog.math.Coordinate(a.x-b.width,a.y);a=new goog.math.Coordinate(a.x,a.y+b.height)}else c=new goog.math.Coordinate(a.x,a.y),a=new goog.math.Coordinate(a.x+b.width,a.y+b.height);return{topLeft:c,bottomRight:a}};Blockly.ScratchBlockComment.prototype.isMinimized=function(){return this.isMinimized_};
Blockly.ScratchBlockComment.prototype.showContextMenu_=function(a){var b=[];b.push(Blockly.ContextMenu.commentDeleteOption(this,Blockly.Msg.DELETE));Blockly.ContextMenu.show(a,b,this.block_.RTL)};Blockly.ScratchBlockComment.prototype.toXmlWithXY=function(){var a=goog.dom.createDom("comment");a.setAttribute("id",this.id);a.textContent=this.text_;a.setAttribute("x",Math.round(this.x_));a.setAttribute("y",Math.round(this.y_));a.setAttribute("h",this.height_);a.setAttribute("w",this.width_);return a};
Blockly.ScratchBlockComment.fireCreateEvent=function(a){if(Blockly.Events.isEnabled()){var b=Blockly.Events.getGroup();b||Blockly.Events.setGroup(!0);try{Blockly.Events.fire(new Blockly.Events.CommentCreate(a))}finally{b||Blockly.Events.setGroup(!1)}}};Blockly.ScratchBlockComment.prototype.dispose=function(){Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.CommentDelete(this));this.block_.comment=null;this.workspace.removeTopComment(this);Blockly.Icon.prototype.dispose.call(this)};Blockly.Connection=function(a,b){this.sourceBlock_=a;this.type=b;a.workspace.connectionDBList&&(this.db_=a.workspace.connectionDBList[b],this.dbOpposite_=a.workspace.connectionDBList[Blockly.OPPOSITE_TYPE[b]],this.hidden_=!this.db_)};Blockly.Connection.CAN_CONNECT=0;Blockly.Connection.REASON_SELF_CONNECTION=1;Blockly.Connection.REASON_WRONG_TYPE=2;Blockly.Connection.REASON_TARGET_NULL=3;Blockly.Connection.REASON_CHECKS_FAILED=4;Blockly.Connection.REASON_DIFFERENT_WORKSPACES=5;
Blockly.Connection.REASON_SHADOW_PARENT=6;Blockly.Connection.REASON_CUSTOM_PROCEDURE=7;Blockly.Connection.prototype.targetConnection=null;Blockly.Connection.prototype.check_=null;Blockly.Connection.prototype.shadowDom_=null;Blockly.Connection.prototype.x_=0;Blockly.Connection.prototype.y_=0;Blockly.Connection.prototype.inDB_=!1;Blockly.Connection.prototype.db_=null;Blockly.Connection.prototype.dbOpposite_=null;Blockly.Connection.prototype.hidden_=null;
Blockly.Connection.prototype.connect_=function(a){var b=this,c=b.getSourceBlock(),d=a.getSourceBlock(),e=!1;b==c.getFirstStatementConnection()&&(e=!0);if(a.isConnected()){if(e)var f=a.targetConnection;a.disconnect()}if(b.isConnected()){var g=b.targetBlock(),h=b.getShadowDom();b.setShadowDom(null);if(g.isShadow())h=Blockly.Xml.blockToDom(g),g.dispose(),g=null;else if(b.type==Blockly.NEXT_STATEMENT){if(!g.previousConnection)throw"Orphan block does not have a previous connection.";for(var k=d;k.nextConnection;){var m=
k.getNextBlock();if(m&&!m.isShadow())k=m;else{g.previousConnection.checkType_(k.nextConnection)&&(k.nextConnection.connect(g.previousConnection),g=null);break}}}if(g&&(b.disconnect(),Blockly.Events.recordUndo)){var l=Blockly.Events.getGroup();setTimeout(function(){g.workspace&&!g.getParent()&&(Blockly.Events.setGroup(l),g.outputConnection?g.outputConnection.bumpAwayFrom_(b):g.previousConnection&&g.previousConnection.bumpAwayFrom_(b),Blockly.Events.setGroup(!1))},Blockly.BUMP_DELAY)}b.setShadowDom(h)}e&&
f&&f.connect(c.previousConnection);var n;Blockly.Events.isEnabled()&&(n=new Blockly.Events.BlockMove(d));Blockly.Connection.connectReciprocally_(b,a);d.setParent(c);n&&(n.recordNew(),Blockly.Events.fire(n))};Blockly.Connection.prototype.dispose=function(){if(this.isConnected())throw"Disconnect connection before disposing of it.";this.inDB_&&this.db_.removeConnection_(this);this.dbOpposite_=this.db_=null};
Blockly.Connection.prototype.isConnectedToNonInsertionMarker=function(){return this.targetConnection&&!this.targetBlock().isInsertionMarker()};Blockly.Connection.prototype.getSourceBlock=function(){return this.sourceBlock_};Blockly.Connection.prototype.isSuperior=function(){return this.type==Blockly.INPUT_VALUE||this.type==Blockly.NEXT_STATEMENT};Blockly.Connection.prototype.isConnected=function(){return!!this.targetConnection};
Blockly.Connection.prototype.canConnectWithReason_=function(a){if(!a)return Blockly.Connection.REASON_TARGET_NULL;if(this.isSuperior())var b=this.sourceBlock_,c=a.getSourceBlock(),d=this;else c=this.sourceBlock_,b=a.getSourceBlock(),d=a;if(b&&b==c)return Blockly.Connection.REASON_SELF_CONNECTION;if(a.type!=Blockly.OPPOSITE_TYPE[this.type])return Blockly.Connection.REASON_WRONG_TYPE;if(b&&c&&b.workspace!==c.workspace)return Blockly.Connection.REASON_DIFFERENT_WORKSPACES;if(this.checkType_(a)){if(b.isShadow()&&
!c.isShadow())return Blockly.Connection.REASON_SHADOW_PARENT;if(b.type==Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE&&"procedures_prototype"!=c.type&&d==b.getInput("custom_block").connection)return Blockly.Connection.REASON_CUSTOM_PROCEDURE}else return Blockly.Connection.REASON_CHECKS_FAILED;return Blockly.Connection.CAN_CONNECT};
Blockly.Connection.prototype.checkConnection_=function(a){switch(this.canConnectWithReason_(a)){case Blockly.Connection.CAN_CONNECT:break;case Blockly.Connection.REASON_SELF_CONNECTION:throw"Attempted to connect a block to itself.";case Blockly.Connection.REASON_DIFFERENT_WORKSPACES:throw"Blocks not on same workspace.";case Blockly.Connection.REASON_WRONG_TYPE:throw"Attempt to connect incompatible types.";case Blockly.Connection.REASON_TARGET_NULL:throw"Target connection is null.";case Blockly.Connection.REASON_CHECKS_FAILED:throw"Connection checks failed. "+
(this+" expected "+this.check_+", found "+a.check_);case Blockly.Connection.REASON_SHADOW_PARENT:throw"Connecting non-shadow to shadow block.";case Blockly.Connection.REASON_CUSTOM_PROCEDURE:throw"Trying to replace a shadow on a custom procedure definition.";default:throw"Unknown connection failure: this should never happen!";}};
Blockly.Connection.prototype.canConnectToPrevious_=function(a){if(this.targetConnection||-1!=Blockly.draggingConnections_.indexOf(a))return!1;var b=this.sourceBlock_.getFirstStatementConnection(),c=this==b,d=this==this.sourceBlock_.nextConnection;if(null!=b&&!c&&!d)return!1;b=null!=this.sourceBlock_.previousConnection;if(c&&b)return!0;if(d||c&&!b){if(!a.targetConnection)return!0;a=a.targetBlock();return a.isInsertionMarker()?!a.getPreviousBlock():!1}};
Blockly.Connection.prototype.isConnectionAllowed=function(a){if(a.sourceBlock_.isInsertionMarker()||this.canConnectWithReason_(a)!=Blockly.Connection.CAN_CONNECT)return!1;var b=this.sourceBlock_.getFirstStatementConnection();switch(a.type){case Blockly.PREVIOUS_STATEMENT:return this.canConnectToPrevious_(a);case Blockly.OUTPUT_VALUE:return!1;case Blockly.INPUT_VALUE:if(a.targetConnection&&!a.targetBlock().isMovable()&&!a.targetBlock().isShadow())return!1;break;case Blockly.NEXT_STATEMENT:if(b&&this==
this.sourceBlock_.previousConnection&&a.isConnectedToNonInsertionMarker()&&!b.targetConnection||a.isConnectedToNonInsertionMarker()&&!this.sourceBlock_.nextConnection&&!a.targetBlock().isShadow()&&a.targetBlock().nextConnection)return!1;break;default:throw"Unknown connection type in isConnectionAllowed";}return-1!=Blockly.draggingConnections_.indexOf(a)?!1:!0};Blockly.Connection.prototype.connect=function(a){this.targetConnection!=a&&(this.checkConnection_(a),this.isSuperior()?this.connect_(a):a.connect_(this))};
Blockly.Connection.connectReciprocally_=function(a,b){goog.asserts.assert(a&&b,"Cannot connect null connections.");a.targetConnection=b;b.targetConnection=a};Blockly.Connection.singleConnection_=function(a,b){for(var c=!1,d=0;d<a.inputList.length;d++){var e=a.inputList[d].connection;if(e&&e.type==Blockly.INPUT_VALUE&&b.outputConnection.checkType_(e)){if(c)return null;c=e}}return c};
Blockly.Connection.prototype.disconnect=function(){var a=this.targetConnection;goog.asserts.assert(a,"Source connection not connected.");goog.asserts.assert(a.targetConnection==this,"Target connection not connected to source connection.");if(this.isSuperior()){var b=this.sourceBlock_;var c=a.getSourceBlock();a=this}else b=a.getSourceBlock(),c=this.sourceBlock_;this.disconnectInternal_(b,c);a.respawnShadow_()};
Blockly.Connection.prototype.disconnectInternal_=function(a,b){var c;Blockly.Events.isEnabled()&&(c=new Blockly.Events.BlockMove(b));this.targetConnection=this.targetConnection.targetConnection=null;b.setParent(null);c&&(c.recordNew(),Blockly.Events.fire(c))};
Blockly.Connection.prototype.respawnShadow_=function(){var a=this.getSourceBlock(),b=this.getShadowDom();if(a.workspace&&b&&Blockly.Events.recordUndo)if(a=Blockly.Xml.domToBlock(b,a.workspace),a.outputConnection)this.connect(a.outputConnection);else if(a.previousConnection)this.connect(a.previousConnection);else throw"Child block does not have output or previous statement.";};Blockly.Connection.prototype.targetBlock=function(){return this.isConnected()?this.targetConnection.getSourceBlock():null};
Blockly.Connection.prototype.checkType_=function(a){if(!this.check_||!a.check_)return!0;for(var b=0;b<this.check_.length;b++)if(-1!=a.check_.indexOf(this.check_[b]))return!0;return!1};Blockly.Connection.prototype.onCheckChanged_=function(){this.isConnected()&&!this.checkType_(this.targetConnection)&&(this.isSuperior()?this.targetBlock():this.sourceBlock_).unplug()};
Blockly.Connection.prototype.setCheck=function(a){a?(goog.isArray(a)||(a=[a]),this.check_=a,this.onCheckChanged_()):this.check_=null;return this};Blockly.Connection.prototype.getOutputShape=function(){return this.check_?-1!==this.check_.indexOf("Boolean")?Blockly.OUTPUT_SHAPE_HEXAGONAL:-1!==this.check_.indexOf("Number")?Blockly.OUTPUT_SHAPE_ROUND:-1!==this.check_.indexOf("String")?Blockly.OUTPUT_SHAPE_SQUARE:Blockly.OUTPUT_SHAPE_ROUND:Blockly.OUTPUT_SHAPE_ROUND};
Blockly.Connection.prototype.setShadowDom=function(a){this.shadowDom_=a};Blockly.Connection.prototype.getShadowDom=function(){return this.shadowDom_};Blockly.Connection.prototype.neighbours_=function(){return[]};
Blockly.Connection.prototype.toString=function(){var a=this.sourceBlock_;if(a)if(a.outputConnection==this)var b="Output Connection of ";else if(a.previousConnection==this)b="Previous Connection of ";else if(a.nextConnection==this)b="Next Connection of ";else if(b=goog.array.find(a.inputList,function(a){return a.connection==this},this))b='Input "'+b.name+'" connection on ';else return console.warn("Connection not actually connected to sourceBlock_"),"Orphan Connection";else return"Orphan Connection";
return b+a.toDevString()};Blockly.ConnectionDB=function(){};Blockly.ConnectionDB.prototype=[];Blockly.ConnectionDB.constructor=Blockly.ConnectionDB;Blockly.ConnectionDB.prototype.addConnection=function(a){if(a.inDB_)throw"Connection already in database.";if(!a.getSourceBlock().isInFlyout){var b=this.findPositionForConnection_(a);this.splice(b,0,a);a.inDB_=!0}};
Blockly.ConnectionDB.prototype.findConnection=function(a){if(!this.length)return-1;var b=this.findPositionForConnection_(a);if(b>=this.length)return-1;for(var c=a.y_,d=b;0<=d&&this[d].y_==c;){if(this[d]==a)return d;d--}for(;b<this.length&&this[b].y_==c;){if(this[b]==a)return b;b++}return-1};
Blockly.ConnectionDB.prototype.findPositionForConnection_=function(a){if(!this.length)return 0;for(var b=0,c=this.length;b<c;){var d=Math.floor((b+c)/2);if(this[d].y_<a.y_)b=d+1;else if(this[d].y_>a.y_)c=d;else{b=d;break}}return b};Blockly.ConnectionDB.prototype.removeConnection_=function(a){if(!a.inDB_)throw"Connection not in database.";var b=this.findConnection(a);if(-1==b)throw"Unable to find connection in connectionDB.";a.inDB_=!1;this.splice(b,1)};
Blockly.ConnectionDB.prototype.getNeighbours=function(a,b){function c(a){var c=e-d[a].x_,g=f-d[a].y_;Math.sqrt(c*c+g*g)<=b&&k.push(d[a]);return g<b}var d=this,e=a.x_,f=a.y_;a=0;for(var g=d.length-2,h=g;a<h;)d[h].y_<f?a=h:g=h,h=Math.floor((a+g)/2);var k=[];g=a=h;if(d.length){for(;0<=a&&c(a);)a--;do g++;while(g<d.length&&c(g))}return k};Blockly.ConnectionDB.prototype.isInYRange_=function(a,b,c){return Math.abs(this[a].y_-b)<=c};
Blockly.ConnectionDB.prototype.searchForClosest=function(a,b,c){if(!this.length)return{connection:null,radius:b};var d=a.y_,e=a.x_;a.x_=e+c.x;a.y_=d+c.y;var f=this.findPositionForConnection_(a);c=null;for(var g=b,h,k=f-1;0<=k&&this.isInYRange_(k,a.y_,b);)h=this[k],a.isConnectionAllowed(h,g)&&(c=h,g=h.distanceFrom(a)),k--;for(;f<this.length&&this.isInYRange_(f,a.y_,b);)h=this[f],a.isConnectionAllowed(h,g)&&(c=h,g=h.distanceFrom(a)),f++;a.x_=e;a.y_=d;return{connection:c,radius:g}};
Blockly.ConnectionDB.init=function(a){var b=[];b[Blockly.INPUT_VALUE]=new Blockly.ConnectionDB;b[Blockly.OUTPUT_VALUE]=new Blockly.ConnectionDB;b[Blockly.NEXT_STATEMENT]=new Blockly.ConnectionDB;b[Blockly.PREVIOUS_STATEMENT]=new Blockly.ConnectionDB;a.connectionDBList=b};Blockly.constants={};Blockly.DRAG_RADIUS=3;Blockly.FLYOUT_DRAG_RADIUS=10;Blockly.SNAP_RADIUS=48;Blockly.CONNECTING_SNAP_RADIUS=68;Blockly.CURRENT_CONNECTION_PREFERENCE=20;Blockly.BUMP_DELAY=0;Blockly.COLLAPSE_CHARS=30;Blockly.LONGPRESS=750;Blockly.SOUND_LIMIT=100;Blockly.DRAG_STACK=!0;Blockly.HSV_SATURATION=.45;Blockly.HSV_VALUE=.65;Blockly.SPRITE={width:96,height:124,url:"sprites.png"};Blockly.SVG_NS="http://www.w3.org/2000/svg";Blockly.HTML_NS="http://www.w3.org/1999/xhtml";
Blockly.INPUT_VALUE=1;Blockly.OUTPUT_VALUE=2;Blockly.NEXT_STATEMENT=3;Blockly.PREVIOUS_STATEMENT=4;Blockly.DUMMY_INPUT=5;Blockly.ALIGN_LEFT=-1;Blockly.ALIGN_CENTRE=0;Blockly.ALIGN_RIGHT=1;Blockly.DRAG_NONE=0;Blockly.DRAG_STICKY=1;Blockly.DRAG_BEGIN=1;Blockly.DRAG_FREE=2;Blockly.OPPOSITE_TYPE=[];Blockly.OPPOSITE_TYPE[Blockly.INPUT_VALUE]=Blockly.OUTPUT_VALUE;Blockly.OPPOSITE_TYPE[Blockly.OUTPUT_VALUE]=Blockly.INPUT_VALUE;Blockly.OPPOSITE_TYPE[Blockly.NEXT_STATEMENT]=Blockly.PREVIOUS_STATEMENT;
Blockly.OPPOSITE_TYPE[Blockly.PREVIOUS_STATEMENT]=Blockly.NEXT_STATEMENT;Blockly.TOOLBOX_AT_TOP=0;Blockly.TOOLBOX_AT_BOTTOM=1;Blockly.TOOLBOX_AT_LEFT=2;Blockly.TOOLBOX_AT_RIGHT=3;Blockly.OUTPUT_SHAPE_HEXAGONAL=1;Blockly.OUTPUT_SHAPE_ROUND=2;Blockly.OUTPUT_SHAPE_SQUARE=3;Blockly.Categories={motion:"motion",looks:"looks",sound:"sounds",pen:"pen",data:"data",dataLists:"data-lists",event:"events",control:"control",sensing:"sensing",operators:"operators",more:"more"};Blockly.DELETE_AREA_NONE=null;
Blockly.DELETE_AREA_TRASH=1;Blockly.DELETE_AREA_TOOLBOX=2;Blockly.VARIABLE_CATEGORY_NAME="VARIABLE";Blockly.PROCEDURE_CATEGORY_NAME="PROCEDURE";Blockly.RENAME_VARIABLE_ID="RENAME_VARIABLE_ID";Blockly.DELETE_VARIABLE_ID="DELETE_VARIABLE_ID";Blockly.NEW_BROADCAST_MESSAGE_ID="NEW_BROADCAST_MESSAGE_ID";Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE="broadcast_msg";Blockly.LIST_VARIABLE_TYPE="list";Blockly.SCALAR_VARIABLE_TYPE="";Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE="procedures_definition";
Blockly.PROCEDURES_PROTOTYPE_BLOCK_TYPE="procedures_prototype";Blockly.PROCEDURES_CALL_BLOCK_TYPE="procedures_call";Blockly.StatusButtonState={READY:"ready",NOT_READY:"not ready"};Blockly.Variables={};Blockly.Variables.NAME_TYPE=Blockly.VARIABLE_CATEGORY_NAME;
Blockly.Variables.allUsedVariables=function(a){if(a instanceof Blockly.Block)var b=a.getDescendants(!1);else if(a instanceof Blockly.Workspace||a instanceof Blockly.WorkspaceSvg)b=a.getAllBlocks();else throw"Not Block or Workspace: "+a;var c=Blockly.Variables.noVariableText();a=Object.create(null);for(var d=0;d<b.length;d++){var e=b[d].getVarModels();if(e)for(var f=0;f<e.length;f++){var g=e[f];g.getId()&&g.name.toLowerCase()!=c&&(a[g.name.toLowerCase()]=g.name)}}b=[];for(var h in a)b.push(a[h]);return b};
Blockly.Variables.allVariables=function(a){return a instanceof Blockly.Block?(console.warn("Deprecated call to Blockly.Variables.allVariables with a block instead of a workspace.  You may want Blockly.Variables.allUsedVariables"),{}):a.getAllVariables()};Blockly.Variables.allDeveloperVariables=function(a){var b=a.getAllBlocks();a={};for(var c=0;c<b.length;c++){var d=b[c];if(d.getDeveloperVars){d=d.getDeveloperVars();for(var e=0;e<d.length;e++)a[d[e]]=d[e]}}b=[];for(var f in a)b.push(a[f]);return b};
Blockly.Variables.noVariableText=function(){return"No variable selected"};Blockly.Variables.generateUniqueName=function(a){a=a.getAllVariables();var b="";if(a.length)for(var c=1,d=0,e="ijkmnopqrstuvwxyzabcdefgh".charAt(d);!b;){for(var f=!1,g=0;g<a.length;g++)if(a[g].name.toLowerCase()==e){f=!0;break}f?(d++,25==d&&(d=0,c++),e="ijkmnopqrstuvwxyzabcdefgh".charAt(d),1<c&&(e+=c)):b=e}else b="i";return b};
Blockly.Variables.realizePotentialVar=function(a,b,c,d){var e=c.getPotentialVariableMap();c=c.targetWorkspace;if(e){var f;d&&(f=Blockly.Variables.getVariable(c,null,a,b));d=e.getVariable(a,b);if(!d)return null;var g=d.getId();e.deleteVariable(d);return f?f:c.createVariable(a,b,g)}console.warn("Called Blockly.Variables.realizePotentialVar with incorrect workspace. The provided workspace does not have a potential variable map.")};
Blockly.Variables.createVariable=function(a,b,c){if(c==Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE){var d=Blockly.Msg.NEW_BROADCAST_MESSAGE_TITLE;var e=Blockly.Msg.BROADCAST_MODAL_TITLE}else c==Blockly.LIST_VARIABLE_TYPE?(d=Blockly.Msg.NEW_LIST_TITLE,e=Blockly.Msg.LIST_MODAL_TITLE):(c=c?c:"",d=Blockly.Msg.NEW_VARIABLE_TITLE,e=Blockly.Msg.VARIABLE_MODAL_TITLE);var f=Blockly.Variables.nameValidator_.bind(null,c);Blockly.prompt(d,"",function(d,e,k){e="local"===e||!1;k=k||[];if(d=f(d,a,k,b)){var g;a.getPotentialVariableMap()&&
c&&(g=Blockly.Variables.realizePotentialVar(d,c,a,!1));g||(g=a.createVariable(d,c,null,e));d=a.isFlyout?a:a.getFlyout();g=g.getId();d.setCheckboxState&&d.setCheckboxState(g,!0);b&&b(g)}else b&&b(null)},e,c)};
Blockly.Variables.nameValidator_=function(a,b,c,d,e){return a==Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE?Blockly.Variables.validateBroadcastMessageName_(b,c,e):a==Blockly.LIST_VARIABLE_TYPE?Blockly.Variables.validateScalarVarOrListName_(b,c,d,a,Blockly.Msg.LIST_ALREADY_EXISTS):Blockly.Variables.validateScalarVarOrListName_(b,c,d,a,Blockly.Msg.VARIABLE_ALREADY_EXISTS)};
Blockly.Variables.validateBroadcastMessageName_=function(a,b,c){return a?(b=b.getVariable(a,Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE))?(c&&c(b.getId()),null):a:null};Blockly.Variables.validateScalarVarOrListName_=function(a,b,c,d,e){a=Blockly.Variables.trimName_(a);return a?b.getVariable(a,d)||0<=c.indexOf(a)?(Blockly.alert(e.replace("%1",a)),null):a:null};
Blockly.Variables.renameVariable=function(a,b,c){var d=b.type;if(d==Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE)console.warn("Unexpected attempt to rename a broadcast message with id: "+b.getId()+" and name: "+b.name);else{if(d==Blockly.LIST_VARIABLE_TYPE){var e=Blockly.Msg.RENAME_LIST_TITLE;var f=Blockly.Msg.RENAME_LIST_MODAL_TITLE}else e=Blockly.Msg.RENAME_VARIABLE_TITLE,f=Blockly.Msg.RENAME_VARIABLE_MODAL_TITLE;var g=Blockly.Variables.nameValidator_.bind(null,d);e=e.replace("%1",b.name);Blockly.prompt(e,
"",function(d){var e=g(d,a);e?(a.renameVariableById(b.getId(),e),c&&c(d)):c&&c(null)},f,d)}};Blockly.Variables.trimName_=function(a){return a?goog.string.trim(a):a};Blockly.Variables.generateVariableFieldXml_=function(a,b){var c=a.type;""==c&&(c="''");return'<field name="'+(b||"VARIABLE")+'" id="'+a.getId()+'" variabletype="'+goog.string.htmlEscape(c)+'">'+goog.string.htmlEscape(a.name)+"</field>"};
Blockly.Variables.getOrCreateVariablePackage=function(a,b,c,d){var e=Blockly.Variables.getVariable(a,b,c,d);e||(e=Blockly.Variables.createVariable_(a,b,c,d));return e};Blockly.Variables.getVariable=function(a,b,c,d){var e=a.getPotentialVariableMap();if(b){var f=a.getVariableById(b);!f&&e&&(f=e.getVariableById(b))}else if(c){if(void 0==d)throw Error("Tried to look up a variable by name without a type");f=a.getVariable(c,d);!f&&e&&(f=e.getVariable(c,d))}return f};
Blockly.Variables.createVariable_=function(a,b,c,d){var e=a.getPotentialVariableMap();c||(c=Blockly.Variables.generateUniqueName(a.isFlyout?a.targetWorkspace:a));return e?e.createVariable(c,d,b):a.createVariable(c,d,b)};Blockly.Variables.getAddedVariables=function(a,b){a=a.getAllVariables();var c=[];if(b.length!=a.length)for(var d=0;d<a.length;d++){var e=a[d];b.includes(e)||c.push(e)}return c};Blockly.DataCategory=function(a){var b=a.getVariablesOfType("");b.sort(Blockly.VariableModel.compareByName);var c=[];Blockly.DataCategory.addCreateButton(c,a,"VARIABLE");for(var d=0;d<b.length;d++)Blockly.DataCategory.addDataVariable(c,b[d]);0<b.length&&(c[c.length-1].setAttribute("gap",24),b=b[0],Blockly.DataCategory.addSetVariableTo(c,b),Blockly.DataCategory.addChangeVariableBy(c,b),Blockly.DataCategory.addShowVariable(c,b),Blockly.DataCategory.addHideVariable(c,b));Blockly.DataCategory.addCreateButton(c,
a,"LIST");b=a.getVariablesOfType(Blockly.LIST_VARIABLE_TYPE);b.sort(Blockly.VariableModel.compareByName);for(d=0;d<b.length;d++)Blockly.DataCategory.addDataList(c,b[d]);0<b.length&&(c[c.length-1].setAttribute("gap",24),b=b[0],Blockly.DataCategory.addAddToList(c,b),Blockly.DataCategory.addDeleteOfList(c,b),Blockly.DataCategory.addInsertAtList(c,b),Blockly.DataCategory.addReplaceItemOfList(c,b),Blockly.DataCategory.addItemOfList(c,b),Blockly.DataCategory.addItemNumberOfList(c,b),Blockly.DataCategory.addLengthOfList(c,
b),Blockly.DataCategory.addListContainsItem(c,b),Blockly.DataCategory.addShowList(c,b),Blockly.DataCategory.addHideList(c,b));return c};Blockly.DataCategory.addDataVariable=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_variable","VARIABLE");a[a.length-1].setAttribute("id",b.getId())};Blockly.DataCategory.addSetVariableTo=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_setvariableto","VARIABLE",["VALUE","text",0])};
Blockly.DataCategory.addChangeVariableBy=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_changevariableby","VARIABLE",["VALUE","math_number",1])};Blockly.DataCategory.addShowVariable=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_showvariable","VARIABLE")};Blockly.DataCategory.addHideVariable=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_hidevariable","VARIABLE")};
Blockly.DataCategory.addDataList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_listcontents","LIST");a[a.length-1].setAttribute("id",b.getId())};Blockly.DataCategory.addAddToList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_addtolist","LIST",["ITEM","text","thing"])};Blockly.DataCategory.addDeleteOfList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_deleteoflist","LIST",["INDEX","math_integer",1])};
Blockly.DataCategory.addInsertAtList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_insertatlist","LIST",["INDEX","math_integer",1],["ITEM","text","thing"])};Blockly.DataCategory.addReplaceItemOfList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_replaceitemoflist","LIST",["INDEX","math_integer",1],["ITEM","text","thing"])};Blockly.DataCategory.addItemOfList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_itemoflist","LIST",["INDEX","math_integer",1])};
Blockly.DataCategory.addItemNumberOfList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_itemnumoflist","LIST",["ITEM","text","thing"])};Blockly.DataCategory.addLengthOfList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_lengthoflist","LIST")};Blockly.DataCategory.addListContainsItem=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_listcontainsitem","LIST",["ITEM","text","thing"])};Blockly.DataCategory.addShowList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_showlist","LIST")};
Blockly.DataCategory.addHideList=function(a,b){Blockly.DataCategory.addBlock(a,b,"data_hidelist","LIST")};
Blockly.DataCategory.addCreateButton=function(a,b,c){var d=goog.dom.createDom("button"),e=Blockly.Msg.NEW_VARIABLE,f="CREATE_VARIABLE",g=function(a){Blockly.Variables.createVariable(a.getTargetWorkspace(),null,"")};"LIST"===c&&(e=Blockly.Msg.NEW_LIST,f="CREATE_LIST",g=function(a){Blockly.Variables.createVariable(a.getTargetWorkspace(),null,Blockly.LIST_VARIABLE_TYPE)});d.setAttribute("text",e);d.setAttribute("callbackKey",f);b.registerButtonCallback(f,g);a.push(d)};
Blockly.DataCategory.addBlock=function(a,b,c,d,e,f){if(Blockly.Blocks[c]){var g,h;e&&(g=Blockly.DataCategory.createValue(e[0],e[1],e[2]));f&&(h=Blockly.DataCategory.createValue(f[0],f[1],e[2]));b='<xml><block type="'+c+'" gap="8">'+Blockly.Variables.generateVariableFieldXml_(b,d)+g+h+"</block></xml>";b=Blockly.Xml.textToDom(b).firstChild;a.push(b)}};
Blockly.DataCategory.createValue=function(a,b,c){switch(a){case "ITEM":var d="TEXT";break;case "INDEX":d="NUM";break;case "VALUE":d="math_number"===b?"NUM":"TEXT"}return'<value name="'+a+'"><shadow type="'+b+'"><field name="'+d+'">'+c+"</field></shadow></value>"};goog.dom.vendor={};goog.dom.vendor.getVendorJsPrefix=function(){return goog.userAgent.WEBKIT?"Webkit":goog.userAgent.GECKO?"Moz":goog.userAgent.IE?"ms":goog.userAgent.OPERA?"O":null};goog.dom.vendor.getVendorPrefix=function(){return goog.userAgent.WEBKIT?"-webkit":goog.userAgent.GECKO?"-moz":goog.userAgent.IE?"-ms":goog.userAgent.OPERA?"-o":null};
goog.dom.vendor.getPrefixedPropertyName=function(a,b){if(b&&a in b)return a;var c=goog.dom.vendor.getVendorJsPrefix();return c?(c=c.toLowerCase(),a=c+goog.string.toTitleCase(a),!goog.isDef(b)||a in b?a:null):null};goog.dom.vendor.getPrefixedEventType=function(a){return((goog.dom.vendor.getVendorJsPrefix()||"")+a).toLowerCase()};goog.math.Box=function(a,b,c,d){this.top=a;this.right=b;this.bottom=c;this.left=d};goog.math.Box.boundingBox=function(a){for(var b=new goog.math.Box(arguments[0].y,arguments[0].x,arguments[0].y,arguments[0].x),c=1;c<arguments.length;c++)b.expandToIncludeCoordinate(arguments[c]);return b};goog.math.Box.prototype.getWidth=function(){return this.right-this.left};goog.math.Box.prototype.getHeight=function(){return this.bottom-this.top};
goog.math.Box.prototype.clone=function(){return new goog.math.Box(this.top,this.right,this.bottom,this.left)};goog.DEBUG&&(goog.math.Box.prototype.toString=function(){return"("+this.top+"t, "+this.right+"r, "+this.bottom+"b, "+this.left+"l)"});goog.math.Box.prototype.contains=function(a){return goog.math.Box.contains(this,a)};
goog.math.Box.prototype.expand=function(a,b,c,d){goog.isObject(a)?(this.top-=a.top,this.right+=a.right,this.bottom+=a.bottom,this.left-=a.left):(this.top-=a,this.right+=Number(b),this.bottom+=Number(c),this.left-=Number(d));return this};goog.math.Box.prototype.expandToInclude=function(a){this.left=Math.min(this.left,a.left);this.top=Math.min(this.top,a.top);this.right=Math.max(this.right,a.right);this.bottom=Math.max(this.bottom,a.bottom)};
goog.math.Box.prototype.expandToIncludeCoordinate=function(a){this.top=Math.min(this.top,a.y);this.right=Math.max(this.right,a.x);this.bottom=Math.max(this.bottom,a.y);this.left=Math.min(this.left,a.x)};goog.math.Box.equals=function(a,b){return a==b?!0:a&&b?a.top==b.top&&a.right==b.right&&a.bottom==b.bottom&&a.left==b.left:!1};
goog.math.Box.contains=function(a,b){return a&&b?b instanceof goog.math.Box?b.left>=a.left&&b.right<=a.right&&b.top>=a.top&&b.bottom<=a.bottom:b.x>=a.left&&b.x<=a.right&&b.y>=a.top&&b.y<=a.bottom:!1};goog.math.Box.relativePositionX=function(a,b){return b.x<a.left?b.x-a.left:b.x>a.right?b.x-a.right:0};goog.math.Box.relativePositionY=function(a,b){return b.y<a.top?b.y-a.top:b.y>a.bottom?b.y-a.bottom:0};
goog.math.Box.distance=function(a,b){var c=goog.math.Box.relativePositionX(a,b);a=goog.math.Box.relativePositionY(a,b);return Math.sqrt(c*c+a*a)};goog.math.Box.intersects=function(a,b){return a.left<=b.right&&b.left<=a.right&&a.top<=b.bottom&&b.top<=a.bottom};goog.math.Box.intersectsWithPadding=function(a,b,c){return a.left<=b.right+c&&b.left<=a.right+c&&a.top<=b.bottom+c&&b.top<=a.bottom+c};
goog.math.Box.prototype.ceil=function(){this.top=Math.ceil(this.top);this.right=Math.ceil(this.right);this.bottom=Math.ceil(this.bottom);this.left=Math.ceil(this.left);return this};goog.math.Box.prototype.floor=function(){this.top=Math.floor(this.top);this.right=Math.floor(this.right);this.bottom=Math.floor(this.bottom);this.left=Math.floor(this.left);return this};
goog.math.Box.prototype.round=function(){this.top=Math.round(this.top);this.right=Math.round(this.right);this.bottom=Math.round(this.bottom);this.left=Math.round(this.left);return this};goog.math.Box.prototype.translate=function(a,b){a instanceof goog.math.Coordinate?(this.left+=a.x,this.right+=a.x,this.top+=a.y,this.bottom+=a.y):(goog.asserts.assertNumber(a),this.left+=a,this.right+=a,goog.isNumber(b)&&(this.top+=b,this.bottom+=b));return this};
goog.math.Box.prototype.scale=function(a,b){b=goog.isNumber(b)?b:a;this.left*=a;this.right*=a;this.top*=b;this.bottom*=b;return this};goog.math.IRect=function(){};goog.math.Rect=function(a,b,c,d){this.left=a;this.top=b;this.width=c;this.height=d};goog.math.Rect.prototype.clone=function(){return new goog.math.Rect(this.left,this.top,this.width,this.height)};goog.math.Rect.prototype.toBox=function(){return new goog.math.Box(this.top,this.left+this.width,this.top+this.height,this.left)};goog.math.Rect.createFromPositionAndSize=function(a,b){return new goog.math.Rect(a.x,a.y,b.width,b.height)};
goog.math.Rect.createFromBox=function(a){return new goog.math.Rect(a.left,a.top,a.right-a.left,a.bottom-a.top)};goog.DEBUG&&(goog.math.Rect.prototype.toString=function(){return"("+this.left+", "+this.top+" - "+this.width+"w x "+this.height+"h)"});goog.math.Rect.equals=function(a,b){return a==b?!0:a&&b?a.left==b.left&&a.width==b.width&&a.top==b.top&&a.height==b.height:!1};
goog.math.Rect.prototype.intersection=function(a){var b=Math.max(this.left,a.left),c=Math.min(this.left+this.width,a.left+a.width);if(b<=c){var d=Math.max(this.top,a.top);a=Math.min(this.top+this.height,a.top+a.height);if(d<=a)return this.left=b,this.top=d,this.width=c-b,this.height=a-d,!0}return!1};
goog.math.Rect.intersection=function(a,b){var c=Math.max(a.left,b.left),d=Math.min(a.left+a.width,b.left+b.width);if(c<=d){var e=Math.max(a.top,b.top);a=Math.min(a.top+a.height,b.top+b.height);if(e<=a)return new goog.math.Rect(c,e,d-c,a-e)}return null};goog.math.Rect.intersects=function(a,b){return a.left<=b.left+b.width&&b.left<=a.left+a.width&&a.top<=b.top+b.height&&b.top<=a.top+a.height};goog.math.Rect.prototype.intersects=function(a){return goog.math.Rect.intersects(this,a)};
goog.math.Rect.difference=function(a,b){var c=goog.math.Rect.intersection(a,b);if(!c||!c.height||!c.width)return[a.clone()];c=[];var d=a.top,e=a.height,f=a.left+a.width,g=a.top+a.height,h=b.left+b.width,k=b.top+b.height;b.top>a.top&&(c.push(new goog.math.Rect(a.left,a.top,a.width,b.top-a.top)),d=b.top,e-=b.top-a.top);k<g&&(c.push(new goog.math.Rect(a.left,k,a.width,g-k)),e=k-d);b.left>a.left&&c.push(new goog.math.Rect(a.left,d,b.left-a.left,e));h<f&&c.push(new goog.math.Rect(h,d,f-h,e));return c};
goog.math.Rect.prototype.difference=function(a){return goog.math.Rect.difference(this,a)};goog.math.Rect.prototype.boundingRect=function(a){var b=Math.max(this.left+this.width,a.left+a.width),c=Math.max(this.top+this.height,a.top+a.height);this.left=Math.min(this.left,a.left);this.top=Math.min(this.top,a.top);this.width=b-this.left;this.height=c-this.top};goog.math.Rect.boundingRect=function(a,b){if(!a||!b)return null;a=new goog.math.Rect(a.left,a.top,a.width,a.height);a.boundingRect(b);return a};
goog.math.Rect.prototype.contains=function(a){return a instanceof goog.math.Coordinate?a.x>=this.left&&a.x<=this.left+this.width&&a.y>=this.top&&a.y<=this.top+this.height:this.left<=a.left&&this.left+this.width>=a.left+a.width&&this.top<=a.top&&this.top+this.height>=a.top+a.height};goog.math.Rect.prototype.squaredDistance=function(a){var b=a.x<this.left?this.left-a.x:Math.max(a.x-(this.left+this.width),0);a=a.y<this.top?this.top-a.y:Math.max(a.y-(this.top+this.height),0);return b*b+a*a};
goog.math.Rect.prototype.distance=function(a){return Math.sqrt(this.squaredDistance(a))};goog.math.Rect.prototype.getSize=function(){return new goog.math.Size(this.width,this.height)};goog.math.Rect.prototype.getTopLeft=function(){return new goog.math.Coordinate(this.left,this.top)};goog.math.Rect.prototype.getCenter=function(){return new goog.math.Coordinate(this.left+this.width/2,this.top+this.height/2)};
goog.math.Rect.prototype.getBottomRight=function(){return new goog.math.Coordinate(this.left+this.width,this.top+this.height)};goog.math.Rect.prototype.ceil=function(){this.left=Math.ceil(this.left);this.top=Math.ceil(this.top);this.width=Math.ceil(this.width);this.height=Math.ceil(this.height);return this};goog.math.Rect.prototype.floor=function(){this.left=Math.floor(this.left);this.top=Math.floor(this.top);this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};
goog.math.Rect.prototype.round=function(){this.left=Math.round(this.left);this.top=Math.round(this.top);this.width=Math.round(this.width);this.height=Math.round(this.height);return this};goog.math.Rect.prototype.translate=function(a,b){a instanceof goog.math.Coordinate?(this.left+=a.x,this.top+=a.y):(this.left+=goog.asserts.assertNumber(a),goog.isNumber(b)&&(this.top+=b));return this};
goog.math.Rect.prototype.scale=function(a,b){b=goog.isNumber(b)?b:a;this.left*=a;this.width*=a;this.top*=b;this.height*=b;return this};goog.style={};goog.style.setStyle=function(a,b,c){if(goog.isString(b))goog.style.setStyle_(a,c,b);else for(var d in b)goog.style.setStyle_(a,b[d],d)};goog.style.setStyle_=function(a,b,c){(c=goog.style.getVendorJsStyleName_(a,c))&&(a.style[c]=b)};goog.style.styleNameCache_={};
goog.style.getVendorJsStyleName_=function(a,b){var c=goog.style.styleNameCache_[b];if(!c){var d=goog.string.toCamelCase(b);c=d;void 0===a.style[d]&&(d=goog.dom.vendor.getVendorJsPrefix()+goog.string.toTitleCase(d),void 0!==a.style[d]&&(c=d));goog.style.styleNameCache_[b]=c}return c};
goog.style.getVendorStyleName_=function(a,b){var c=goog.string.toCamelCase(b);return void 0===a.style[c]&&(c=goog.dom.vendor.getVendorJsPrefix()+goog.string.toTitleCase(c),void 0!==a.style[c])?goog.dom.vendor.getVendorPrefix()+"-"+b:b};goog.style.getStyle=function(a,b){var c=a.style[goog.string.toCamelCase(b)];return"undefined"!==typeof c?c:a.style[goog.style.getVendorJsStyleName_(a,b)]||""};
goog.style.getComputedStyle=function(a,b){var c=goog.dom.getOwnerDocument(a);return c.defaultView&&c.defaultView.getComputedStyle&&(a=c.defaultView.getComputedStyle(a,null))?a[b]||a.getPropertyValue(b)||"":""};goog.style.getCascadedStyle=function(a,b){return a.currentStyle?a.currentStyle[b]:null};goog.style.getStyle_=function(a,b){return goog.style.getComputedStyle(a,b)||goog.style.getCascadedStyle(a,b)||a.style&&a.style[b]};
goog.style.getComputedBoxSizing=function(a){return goog.style.getStyle_(a,"boxSizing")||goog.style.getStyle_(a,"MozBoxSizing")||goog.style.getStyle_(a,"WebkitBoxSizing")||null};goog.style.getComputedPosition=function(a){return goog.style.getStyle_(a,"position")};goog.style.getBackgroundColor=function(a){return goog.style.getStyle_(a,"backgroundColor")};goog.style.getComputedOverflowX=function(a){return goog.style.getStyle_(a,"overflowX")};
goog.style.getComputedOverflowY=function(a){return goog.style.getStyle_(a,"overflowY")};goog.style.getComputedZIndex=function(a){return goog.style.getStyle_(a,"zIndex")};goog.style.getComputedTextAlign=function(a){return goog.style.getStyle_(a,"textAlign")};goog.style.getComputedCursor=function(a){return goog.style.getStyle_(a,"cursor")};goog.style.getComputedTransform=function(a){var b=goog.style.getVendorStyleName_(a,"transform");return goog.style.getStyle_(a,b)||goog.style.getStyle_(a,"transform")};
goog.style.setPosition=function(a,b,c){if(b instanceof goog.math.Coordinate){var d=b.x;b=b.y}else d=b,b=c;a.style.left=goog.style.getPixelStyleValue_(d,!1);a.style.top=goog.style.getPixelStyleValue_(b,!1)};goog.style.getPosition=function(a){return new goog.math.Coordinate(a.offsetLeft,a.offsetTop)};
goog.style.getClientViewportElement=function(a){a=a?goog.dom.getOwnerDocument(a):goog.dom.getDocument();return!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9)||goog.dom.getDomHelper(a).isCss1CompatMode()?a.documentElement:a.body};goog.style.getViewportPageOffset=function(a){var b=a.body;a=a.documentElement;return new goog.math.Coordinate(b.scrollLeft||a.scrollLeft,b.scrollTop||a.scrollTop)};
goog.style.getBoundingClientRect_=function(a){try{var b=a.getBoundingClientRect()}catch(c){return{left:0,top:0,right:0,bottom:0}}goog.userAgent.IE&&a.ownerDocument.body&&(a=a.ownerDocument,b.left-=a.documentElement.clientLeft+a.body.clientLeft,b.top-=a.documentElement.clientTop+a.body.clientTop);return b};
goog.style.getOffsetParent=function(a){if(goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(8))return goog.asserts.assert(a&&"offsetParent"in a),a.offsetParent;var b=goog.dom.getOwnerDocument(a),c=goog.style.getStyle_(a,"position"),d="fixed"==c||"absolute"==c;for(a=a.parentNode;a&&a!=b;a=a.parentNode)if(a.nodeType==goog.dom.NodeType.DOCUMENT_FRAGMENT&&a.host&&(a=a.host),c=goog.style.getStyle_(a,"position"),d=d&&"static"==c&&a!=b.documentElement&&a!=b.body,!d&&(a.scrollWidth>a.clientWidth||
a.scrollHeight>a.clientHeight||"fixed"==c||"absolute"==c||"relative"==c))return a;return null};
goog.style.getVisibleRectForElement=function(a){for(var b=new goog.math.Box(0,Infinity,Infinity,0),c=goog.dom.getDomHelper(a),d=c.getDocument().body,e=c.getDocument().documentElement,f=c.getDocumentScrollElement();a=goog.style.getOffsetParent(a);)if(!(goog.userAgent.IE&&0==a.clientWidth||goog.userAgent.WEBKIT&&0==a.clientHeight&&a==d)&&a!=d&&a!=e&&"visible"!=goog.style.getStyle_(a,"overflow")){var g=goog.style.getPageOffset(a),h=goog.style.getClientLeftTop(a);g.x+=h.x;g.y+=h.y;b.top=Math.max(b.top,
g.y);b.right=Math.min(b.right,g.x+a.clientWidth);b.bottom=Math.min(b.bottom,g.y+a.clientHeight);b.left=Math.max(b.left,g.x)}d=f.scrollLeft;f=f.scrollTop;b.left=Math.max(b.left,d);b.top=Math.max(b.top,f);c=c.getViewportSize();b.right=Math.min(b.right,d+c.width);b.bottom=Math.min(b.bottom,f+c.height);return 0<=b.top&&0<=b.left&&b.bottom>b.top&&b.right>b.left?b:null};
goog.style.getContainerOffsetToScrollInto=function(a,b,c){var d=b||goog.dom.getDocumentScrollElement(),e=goog.style.getPageOffset(a),f=goog.style.getPageOffset(d),g=goog.style.getBorderBox(d);d==goog.dom.getDocumentScrollElement()?(b=e.x-d.scrollLeft,e=e.y-d.scrollTop,goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(10)&&(b+=g.left,e+=g.top)):(b=e.x-f.x-g.left,e=e.y-f.y-g.top);g=goog.style.getSizeWithDisplay_(a);a=d.clientWidth-g.width;g=d.clientHeight-g.height;f=d.scrollLeft;d=d.scrollTop;
c?(f+=b-a/2,d+=e-g/2):(f+=Math.min(b,Math.max(b-a,0)),d+=Math.min(e,Math.max(e-g,0)));return new goog.math.Coordinate(f,d)};goog.style.scrollIntoContainerView=function(a,b,c){b=b||goog.dom.getDocumentScrollElement();a=goog.style.getContainerOffsetToScrollInto(a,b,c);b.scrollLeft=a.x;b.scrollTop=a.y};goog.style.getClientLeftTop=function(a){return new goog.math.Coordinate(a.clientLeft,a.clientTop)};
goog.style.getPageOffset=function(a){var b=goog.dom.getOwnerDocument(a);goog.asserts.assertObject(a,"Parameter is required");var c=new goog.math.Coordinate(0,0),d=goog.style.getClientViewportElement(b);if(a==d)return c;a=goog.style.getBoundingClientRect_(a);b=goog.dom.getDomHelper(b).getDocumentScroll();c.x=a.left+b.x;c.y=a.top+b.y;return c};goog.style.getPageOffsetLeft=function(a){return goog.style.getPageOffset(a).x};goog.style.getPageOffsetTop=function(a){return goog.style.getPageOffset(a).y};
goog.style.getFramedPageOffset=function(a,b){var c=new goog.math.Coordinate(0,0),d=goog.dom.getWindow(goog.dom.getOwnerDocument(a));if(!goog.reflect.canAccessProperty(d,"parent"))return c;do{var e=d==b?goog.style.getPageOffset(a):goog.style.getClientPositionForElement_(goog.asserts.assert(a));c.x+=e.x;c.y+=e.y}while(d&&d!=b&&d!=d.parent&&(a=d.frameElement)&&(d=d.parent));return c};
goog.style.translateRectForAnotherFrame=function(a,b,c){if(b.getDocument()!=c.getDocument()){var d=b.getDocument().body;c=goog.style.getFramedPageOffset(d,c.getWindow());c=goog.math.Coordinate.difference(c,goog.style.getPageOffset(d));!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9)||b.isCss1CompatMode()||(c=goog.math.Coordinate.difference(c,b.getDocumentScroll()));a.left+=c.x;a.top+=c.y}};
goog.style.getRelativePosition=function(a,b){a=goog.style.getClientPosition(a);b=goog.style.getClientPosition(b);return new goog.math.Coordinate(a.x-b.x,a.y-b.y)};goog.style.getClientPositionForElement_=function(a){a=goog.style.getBoundingClientRect_(a);return new goog.math.Coordinate(a.left,a.top)};
goog.style.getClientPosition=function(a){goog.asserts.assert(a);if(a.nodeType==goog.dom.NodeType.ELEMENT)return goog.style.getClientPositionForElement_(a);a=a.changedTouches?a.changedTouches[0]:a;return new goog.math.Coordinate(a.clientX,a.clientY)};goog.style.setPageOffset=function(a,b,c){var d=goog.style.getPageOffset(a);b instanceof goog.math.Coordinate&&(c=b.y,b=b.x);b=goog.asserts.assertNumber(b)-d.x;goog.style.setPosition(a,a.offsetLeft+b,a.offsetTop+(Number(c)-d.y))};
goog.style.setSize=function(a,b,c){if(b instanceof goog.math.Size)c=b.height,b=b.width;else if(void 0==c)throw Error("missing height argument");goog.style.setWidth(a,b);goog.style.setHeight(a,c)};goog.style.getPixelStyleValue_=function(a,b){"number"==typeof a&&(a=(b?Math.round(a):a)+"px");return a};goog.style.setHeight=function(a,b){a.style.height=goog.style.getPixelStyleValue_(b,!0)};goog.style.setWidth=function(a,b){a.style.width=goog.style.getPixelStyleValue_(b,!0)};
goog.style.getSize=function(a){return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_,a)};goog.style.evaluateWithTemporaryDisplay_=function(a,b){if("none"!=goog.style.getStyle_(b,"display"))return a(b);var c=b.style,d=c.display,e=c.visibility,f=c.position;c.visibility="hidden";c.position="absolute";c.display="inline";a=a(b);c.display=d;c.position=f;c.visibility=e;return a};
goog.style.getSizeWithDisplay_=function(a){var b=a.offsetWidth,c=a.offsetHeight,d=goog.userAgent.WEBKIT&&!b&&!c;return goog.isDef(b)&&!d||!a.getBoundingClientRect?new goog.math.Size(b,c):(a=goog.style.getBoundingClientRect_(a),new goog.math.Size(a.right-a.left,a.bottom-a.top))};goog.style.getTransformedSize=function(a){if(!a.getBoundingClientRect)return null;a=goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_,a);return new goog.math.Size(a.right-a.left,a.bottom-a.top)};
goog.style.getBounds=function(a){var b=goog.style.getPageOffset(a);a=goog.style.getSize(a);return new goog.math.Rect(b.x,b.y,a.width,a.height)};goog.style.toCamelCase=function(a){return goog.string.toCamelCase(String(a))};goog.style.toSelectorCase=function(a){return goog.string.toSelectorCase(a)};
goog.style.getOpacity=function(a){goog.asserts.assert(a);var b=a.style;a="";"opacity"in b?a=b.opacity:"MozOpacity"in b?a=b.MozOpacity:"filter"in b&&(b=b.filter.match(/alpha\(opacity=([\d.]+)\)/))&&(a=String(b[1]/100));return""==a?a:Number(a)};goog.style.setOpacity=function(a,b){goog.asserts.assert(a);a=a.style;"opacity"in a?a.opacity=b:"MozOpacity"in a?a.MozOpacity=b:"filter"in a&&(a.filter=""===b?"":"alpha(opacity="+100*Number(b)+")")};
goog.style.setTransparentBackgroundImage=function(a,b){a=a.style;goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("8")?a.filter='progid:DXImageTransform.Microsoft.AlphaImageLoader(src="'+b+'", sizingMethod="crop")':(a.backgroundImage="url("+b+")",a.backgroundPosition="top left",a.backgroundRepeat="no-repeat")};goog.style.clearTransparentBackgroundImage=function(a){a=a.style;"filter"in a?a.filter="":a.backgroundImage="none"};goog.style.showElement=function(a,b){goog.style.setElementShown(a,b)};
goog.style.setElementShown=function(a,b){a.style.display=b?"":"none"};goog.style.isElementShown=function(a){return"none"!=a.style.display};
goog.style.installSafeStyleSheet=function(a,b){b=goog.dom.getDomHelper(b);var c=b.getDocument();if(goog.userAgent.IE&&c.createStyleSheet)return b=c.createStyleSheet(),goog.style.setSafeStyleSheet(b,a),b;c=b.getElementsByTagNameAndClass("HEAD")[0];if(!c){var d=b.getElementsByTagNameAndClass("BODY")[0];c=b.createDom("HEAD");d.parentNode.insertBefore(c,d)}d=b.createDom("STYLE");goog.style.setSafeStyleSheet(d,a);b.appendChild(c,d);return d};
goog.style.uninstallStyles=function(a){goog.dom.removeNode(a.ownerNode||a.owningElement||a)};goog.style.setSafeStyleSheet=function(a,b){b=goog.html.SafeStyleSheet.unwrap(b);goog.userAgent.IE&&goog.isDef(a.cssText)?a.cssText=b:a.innerHTML=b};goog.style.setPreWrap=function(a){a=a.style;goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("8")?(a.whiteSpace="pre",a.wordWrap="break-word"):a.whiteSpace=goog.userAgent.GECKO?"-moz-pre-wrap":"pre-wrap"};
goog.style.setInlineBlock=function(a){a=a.style;a.position="relative";goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("8")?(a.zoom="1",a.display="inline"):a.display="inline-block"};goog.style.isRightToLeft=function(a){return"rtl"==goog.style.getStyle_(a,"direction")};goog.style.unselectableStyle_=goog.userAgent.GECKO?"MozUserSelect":goog.userAgent.WEBKIT||goog.userAgent.EDGE?"WebkitUserSelect":null;
goog.style.isUnselectable=function(a){return goog.style.unselectableStyle_?"none"==a.style[goog.style.unselectableStyle_].toLowerCase():goog.userAgent.IE||goog.userAgent.OPERA?"on"==a.getAttribute("unselectable"):!1};
goog.style.setUnselectable=function(a,b,c){c=c?null:a.getElementsByTagName("*");var d=goog.style.unselectableStyle_;if(d){if(b=b?"none":"",a.style&&(a.style[d]=b),c){a=0;for(var e;e=c[a];a++)e.style&&(e.style[d]=b)}}else if(goog.userAgent.IE||goog.userAgent.OPERA)if(b=b?"on":"",a.setAttribute("unselectable",b),c)for(a=0;e=c[a];a++)e.setAttribute("unselectable",b)};goog.style.getBorderBoxSize=function(a){return new goog.math.Size(a.offsetWidth,a.offsetHeight)};
goog.style.setBorderBoxSize=function(a,b){var c=goog.dom.getOwnerDocument(a),d=goog.dom.getDomHelper(c).isCss1CompatMode();!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10")||d&&goog.userAgent.isVersionOrHigher("8")?goog.style.setBoxSizingSize_(a,b,"border-box"):(c=a.style,d?(d=goog.style.getPaddingBox(a),a=goog.style.getBorderBox(a),c.pixelWidth=b.width-a.left-d.left-d.right-a.right,c.pixelHeight=b.height-a.top-d.top-d.bottom-a.bottom):(c.pixelWidth=b.width,c.pixelHeight=b.height))};
goog.style.getContentBoxSize=function(a){var b=goog.dom.getOwnerDocument(a),c=goog.userAgent.IE&&a.currentStyle;if(c&&goog.dom.getDomHelper(b).isCss1CompatMode()&&"auto"!=c.width&&"auto"!=c.height&&!c.boxSizing)return b=goog.style.getIePixelValue_(a,c.width,"width","pixelWidth"),a=goog.style.getIePixelValue_(a,c.height,"height","pixelHeight"),new goog.math.Size(b,a);c=goog.style.getBorderBoxSize(a);b=goog.style.getPaddingBox(a);a=goog.style.getBorderBox(a);return new goog.math.Size(c.width-a.left-
b.left-b.right-a.right,c.height-a.top-b.top-b.bottom-a.bottom)};
goog.style.setContentBoxSize=function(a,b){var c=goog.dom.getOwnerDocument(a),d=goog.dom.getDomHelper(c).isCss1CompatMode();!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10")||d&&goog.userAgent.isVersionOrHigher("8")?goog.style.setBoxSizingSize_(a,b,"content-box"):(c=a.style,d?(c.pixelWidth=b.width,c.pixelHeight=b.height):(d=goog.style.getPaddingBox(a),a=goog.style.getBorderBox(a),c.pixelWidth=b.width+a.left+d.left+d.right+a.right,c.pixelHeight=b.height+a.top+d.top+d.bottom+a.bottom))};
goog.style.setBoxSizingSize_=function(a,b,c){a=a.style;goog.userAgent.GECKO?a.MozBoxSizing=c:goog.userAgent.WEBKIT?a.WebkitBoxSizing=c:a.boxSizing=c;a.width=Math.max(b.width,0)+"px";a.height=Math.max(b.height,0)+"px"};goog.style.getIePixelValue_=function(a,b,c,d){if(/^\d+px?$/.test(b))return parseInt(b,10);var e=a.style[c],f=a.runtimeStyle[c];a.runtimeStyle[c]=a.currentStyle[c];a.style[c]=b;b=a.style[d];a.style[c]=e;a.runtimeStyle[c]=f;return+b};
goog.style.getIePixelDistance_=function(a,b){return(b=goog.style.getCascadedStyle(a,b))?goog.style.getIePixelValue_(a,b,"left","pixelLeft"):0};
goog.style.getBox_=function(a,b){if(goog.userAgent.IE){var c=goog.style.getIePixelDistance_(a,b+"Left"),d=goog.style.getIePixelDistance_(a,b+"Right"),e=goog.style.getIePixelDistance_(a,b+"Top");a=goog.style.getIePixelDistance_(a,b+"Bottom");return new goog.math.Box(e,d,a,c)}c=goog.style.getComputedStyle(a,b+"Left");d=goog.style.getComputedStyle(a,b+"Right");e=goog.style.getComputedStyle(a,b+"Top");a=goog.style.getComputedStyle(a,b+"Bottom");return new goog.math.Box(parseFloat(e),parseFloat(d),parseFloat(a),
parseFloat(c))};goog.style.getPaddingBox=function(a){return goog.style.getBox_(a,"padding")};goog.style.getMarginBox=function(a){return goog.style.getBox_(a,"margin")};goog.style.ieBorderWidthKeywords_={thin:2,medium:4,thick:6};goog.style.getIePixelBorder_=function(a,b){if("none"==goog.style.getCascadedStyle(a,b+"Style"))return 0;b=goog.style.getCascadedStyle(a,b+"Width");return b in goog.style.ieBorderWidthKeywords_?goog.style.ieBorderWidthKeywords_[b]:goog.style.getIePixelValue_(a,b,"left","pixelLeft")};
goog.style.getBorderBox=function(a){if(goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(9)){var b=goog.style.getIePixelBorder_(a,"borderLeft"),c=goog.style.getIePixelBorder_(a,"borderRight"),d=goog.style.getIePixelBorder_(a,"borderTop");a=goog.style.getIePixelBorder_(a,"borderBottom");return new goog.math.Box(d,c,a,b)}b=goog.style.getComputedStyle(a,"borderLeftWidth");c=goog.style.getComputedStyle(a,"borderRightWidth");d=goog.style.getComputedStyle(a,"borderTopWidth");a=goog.style.getComputedStyle(a,
"borderBottomWidth");return new goog.math.Box(parseFloat(d),parseFloat(c),parseFloat(a),parseFloat(b))};goog.style.getFontFamily=function(a){var b=goog.dom.getOwnerDocument(a),c="";if(b.body.createTextRange&&goog.dom.contains(b,a)){b=b.body.createTextRange();b.moveToElementText(a);try{c=b.queryCommandValue("FontName")}catch(d){c=""}}c||(c=goog.style.getStyle_(a,"fontFamily"));a=c.split(",");1<a.length&&(c=a[0]);return goog.string.stripQuotes(c,"\"'")};goog.style.lengthUnitRegex_=/[^\d]+$/;
goog.style.getLengthUnits=function(a){return(a=a.match(goog.style.lengthUnitRegex_))&&a[0]||null};goog.style.ABSOLUTE_CSS_LENGTH_UNITS_={cm:1,"in":1,mm:1,pc:1,pt:1};goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_={em:1,ex:1};
goog.style.getFontSize=function(a){var b=goog.style.getStyle_(a,"fontSize"),c=goog.style.getLengthUnits(b);if(b&&"px"==c)return parseInt(b,10);if(goog.userAgent.IE){if(String(c)in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_)return goog.style.getIePixelValue_(a,b,"left","pixelLeft");if(a.parentNode&&a.parentNode.nodeType==goog.dom.NodeType.ELEMENT&&String(c)in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_)return a=a.parentNode,c=goog.style.getStyle_(a,"fontSize"),goog.style.getIePixelValue_(a,b==c?"1em":b,
"left","pixelLeft")}c=goog.dom.createDom("SPAN",{style:"visibility:hidden;position:absolute;line-height:0;padding:0;margin:0;border:0;height:1em;"});goog.dom.appendChild(a,c);b=c.offsetHeight;goog.dom.removeNode(c);return b};goog.style.parseStyleAttribute=function(a){var b={};goog.array.forEach(a.split(/\s*;\s*/),function(a){var c=a.match(/\s*([\w-]+)\s*:(.+)/);c&&(a=c[1],c=goog.string.trim(c[2]),b[goog.string.toCamelCase(a.toLowerCase())]=c)});return b};
goog.style.toStyleAttribute=function(a){var b=[];goog.object.forEach(a,function(a,d){b.push(goog.string.toSelectorCase(d),":",a,";")});return b.join("")};goog.style.setFloat=function(a,b){a.style[goog.userAgent.IE?"styleFloat":"cssFloat"]=b};goog.style.getFloat=function(a){return a.style[goog.userAgent.IE?"styleFloat":"cssFloat"]||""};
goog.style.getScrollbarWidth=function(a){var b=goog.dom.createElement("DIV");a&&(b.className=a);b.style.cssText="overflow:auto;position:absolute;top:0;width:100px;height:100px";a=goog.dom.createElement("DIV");goog.style.setSize(a,"200px","200px");b.appendChild(a);goog.dom.appendChild(goog.dom.getDocument().body,b);a=b.offsetWidth-b.clientWidth;goog.dom.removeNode(b);return a};goog.style.MATRIX_TRANSLATION_REGEX_=/matrix\([0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, ([0-9\.\-]+)p?x?, ([0-9\.\-]+)p?x?\)/;
goog.style.getCssTranslation=function(a){a=goog.style.getComputedTransform(a);return a?(a=a.match(goog.style.MATRIX_TRANSLATION_REGEX_))?new goog.math.Coordinate(parseFloat(a[1]),parseFloat(a[2])):new goog.math.Coordinate(0,0):new goog.math.Coordinate(0,0)};Blockly.DropDownDiv=function(){};Blockly.DropDownDiv.DIV_=null;Blockly.DropDownDiv.boundsElement_=null;Blockly.DropDownDiv.owner_=null;Blockly.DropDownDiv.ARROW_SIZE=16;Blockly.DropDownDiv.BORDER_SIZE=1;Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING=12;Blockly.DropDownDiv.PADDING_Y=20;Blockly.DropDownDiv.ANIMATION_TIME=.25;Blockly.DropDownDiv.animateOutTimer_=null;Blockly.DropDownDiv.onHide_=0;
Blockly.DropDownDiv.createDom=function(){Blockly.DropDownDiv.DIV_||(Blockly.DropDownDiv.DIV_=goog.dom.createDom("div","blocklyDropDownDiv"),document.body.appendChild(Blockly.DropDownDiv.DIV_),Blockly.DropDownDiv.content_=goog.dom.createDom("div","blocklyDropDownContent"),Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_),Blockly.DropDownDiv.arrow_=goog.dom.createDom("div","blocklyDropDownArrow"),Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_),Blockly.DropDownDiv.DIV_.style.transition=
"transform "+Blockly.DropDownDiv.ANIMATION_TIME+"s, opacity "+Blockly.DropDownDiv.ANIMATION_TIME+"s")};Blockly.DropDownDiv.setBoundsElement=function(a){Blockly.DropDownDiv.boundsElement_=a};Blockly.DropDownDiv.getContentDiv=function(){return Blockly.DropDownDiv.content_};Blockly.DropDownDiv.clearContent=function(){Blockly.DropDownDiv.content_.innerHTML=""};Blockly.DropDownDiv.setColour=function(a,b){Blockly.DropDownDiv.DIV_.style.backgroundColor=a;Blockly.DropDownDiv.DIV_.style.borderColor=b};
Blockly.DropDownDiv.setCategory=function(a){Blockly.DropDownDiv.DIV_.setAttribute("data-category",a)};Blockly.DropDownDiv.showPositionedByBlock=function(a,b,c,d){var e=b.workspace.scale,f=b.width;a=b.height;f*=e;a*=e;e=b.getSvgRoot().getBoundingClientRect();f=e.left+f/2;a=e.top+a;e=e.top;d&&(e+=d);Blockly.DropDownDiv.setBoundsElement(b.workspace.getParentSvg().parentNode);return Blockly.DropDownDiv.show(this,f,a,f,e,c)};
Blockly.DropDownDiv.show=function(a,b,c,d,e,f){Blockly.DropDownDiv.owner_=a;Blockly.DropDownDiv.onHide_=f;a=Blockly.DropDownDiv.DIV_;b=Blockly.DropDownDiv.getPositionMetrics(b,c,d,e);Blockly.DropDownDiv.arrow_.style.transform="translate("+b.arrowX+"px,"+b.arrowY+"px) rotate(45deg)";Blockly.DropDownDiv.arrow_.setAttribute("class",b.arrowAtTop?"blocklyDropDownArrow arrowTop":"blocklyDropDownArrow arrowBottom");a.style.left=b.initialX+"px";a.style.top=b.initialY+"px";a.style.display="block";a.style.opacity=
1;a.style.transform="translate("+(b.finalX-b.initialX)+"px,"+(b.finalY-b.initialY)+"px)";return b.arrowAtTop};
Blockly.DropDownDiv.getPositionMetrics=function(a,b,c,d){var e=Blockly.DropDownDiv.DIV_,f=Blockly.DropDownDiv.boundsElement_.getBoundingClientRect(),g=goog.style.getSize(Blockly.DropDownDiv.boundsElement_);e=goog.style.getSize(e);if(b+e.height>f.top+g.height)if(d-e.height<f.top){c=b+Blockly.DropDownDiv.PADDING_Y;var h=!1}else a=c,c=d-e.height-Blockly.DropDownDiv.PADDING_Y,h=!0;else c=b+Blockly.DropDownDiv.PADDING_Y,h=!1;var k=a-Blockly.DropDownDiv.ARROW_SIZE/2;k=Math.max(f.left,Math.min(k,f.left+
g.width));a=Math.max(f.left,Math.min(a-e.width/2,f.left+g.width-e.width));k=Math.max(Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,Math.min(k-a,e.width-Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING-Blockly.DropDownDiv.ARROW_SIZE));f=h?e.height-Blockly.DropDownDiv.BORDER_SIZE:0;f-=Blockly.DropDownDiv.ARROW_SIZE/2+Blockly.DropDownDiv.BORDER_SIZE;return{initialX:a,initialY:h?d-e.height:b,finalX:a,finalY:c,arrowX:k,arrowY:f,arrowAtTop:!h}};Blockly.DropDownDiv.isVisible=function(){return!!Blockly.DropDownDiv.owner_};
Blockly.DropDownDiv.hideIfOwner=function(a){return Blockly.DropDownDiv.owner_===a?(Blockly.DropDownDiv.hide(),!0):!1};Blockly.DropDownDiv.hide=function(){var a=Blockly.DropDownDiv.DIV_;a.style.transform="translate(0px, 0px)";a.style.opacity=0;Blockly.DropDownDiv.animateOutTimer_=setTimeout(function(){Blockly.DropDownDiv.hideWithoutAnimation()},1E3*Blockly.DropDownDiv.ANIMATION_TIME);Blockly.DropDownDiv.onHide_&&(Blockly.DropDownDiv.onHide_(),Blockly.DropDownDiv.onHide_=null)};
Blockly.DropDownDiv.hideWithoutAnimation=function(){if(Blockly.DropDownDiv.isVisible()){var a=Blockly.DropDownDiv.DIV_;Blockly.DropDownDiv.animateOutTimer_&&window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);a.style.transform="";a.style.top="";a.style.left="";a.style.display="none";Blockly.DropDownDiv.clearContent();Blockly.DropDownDiv.owner_=null;Blockly.DropDownDiv.onHide_&&(Blockly.DropDownDiv.onHide_(),Blockly.DropDownDiv.onHide_=null)}};Blockly.BlockAnimations={};Blockly.BlockAnimations.disposeUiEffect=function(a){var b=a.workspace,c=a.getSvgRoot();b.getAudioManager().play("delete");a=b.getSvgXY(c);c=c.cloneNode(!0);c.translateX_=a.x;c.translateY_=a.y;c.setAttribute("transform","translate("+a.x+","+a.y+")");b.getParentSvg().appendChild(c);c.bBox_=c.getBBox();Blockly.BlockAnimations.disposeUiStep_(c,b.RTL,new Date,b.scale)};
Blockly.BlockAnimations.disposeUiStep_=function(a,b,c,d){var e=(new Date-c)/150;1<e?goog.dom.removeNode(a):(a.setAttribute("transform","translate("+(a.translateX_+(b?-1:1)*a.bBox_.width*d/2*e)+","+(a.translateY_+a.bBox_.height*d*e)+") scale("+(1-e)*d+")"),setTimeout(Blockly.BlockAnimations.disposeUiStep_,10,a,b,c,d))};Blockly.BlockAnimations.connectionUiEffect=function(a){a.workspace.getAudioManager().play("click")};Blockly.BlockAnimations.disconnectUiEffect=function(a){};
Blockly.BlockAnimations.disconnectUiStop=function(){};Blockly.Events.DragBlockOutside=function(a){a&&(Blockly.Events.DragBlockOutside.superClass_.constructor.call(this,a),this.recordUndo=!1)};goog.inherits(Blockly.Events.DragBlockOutside,Blockly.Events.BlockBase);Blockly.Events.DragBlockOutside.prototype.type=Blockly.Events.DRAG_OUTSIDE;Blockly.Events.DragBlockOutside.prototype.toJson=function(){var a=Blockly.Events.DragBlockOutside.superClass_.toJson.call(this);this.isOutside&&(a.isOutside=this.isOutside);return a};
Blockly.Events.DragBlockOutside.prototype.fromJson=function(a){Blockly.Events.DragBlockOutside.superClass_.fromJson.call(this,a);this.isOutside=a.isOutside};Blockly.Events.EndBlockDrag=function(a,b){if(a){Blockly.Events.EndBlockDrag.superClass_.constructor.call(this,a);if(this.isOutside=b)this.xml=Blockly.Xml.blockToDom(a,!0);this.recordUndo=!1}};goog.inherits(Blockly.Events.EndBlockDrag,Blockly.Events.BlockBase);Blockly.Events.EndBlockDrag.prototype.type=Blockly.Events.END_DRAG;
Blockly.Events.EndBlockDrag.prototype.toJson=function(){var a=Blockly.Events.EndBlockDrag.superClass_.toJson.call(this);this.isOutside&&(a.isOutside=this.isOutside);this.xml&&(a.xml=this.xml);return a};Blockly.Events.EndBlockDrag.prototype.fromJson=function(a){Blockly.Events.EndBlockDrag.superClass_.fromJson.call(this,a);this.isOutside=a.isOutside;this.xml=a.xml};Blockly.RenderedConnection=function(a,b){Blockly.RenderedConnection.superClass_.constructor.call(this,a,b);this.offsetInBlock_=new goog.math.Coordinate(0,0)};goog.inherits(Blockly.RenderedConnection,Blockly.Connection);Blockly.RenderedConnection.prototype.distanceFrom=function(a){var b=this.x_-a.x_;a=this.y_-a.y_;return Math.sqrt(b*b+a*a)};
Blockly.RenderedConnection.prototype.bumpAwayFrom_=function(a){if(!this.sourceBlock_.workspace.isDragging()){var b=this.sourceBlock_.getRootBlock();if(!b.isInFlyout){var c=!1;if(!b.isMovable()){b=a.getSourceBlock().getRootBlock();if(!b.isMovable())return;a=this;c=!0}var d=Blockly.selected==b;d||b.addSelect();var e=a.x_+Blockly.SNAP_RADIUS-this.x_;a=a.y_+Blockly.SNAP_RADIUS-this.y_;c&&(a=-a);b.RTL&&(e=-e);b.moveBy(e,a);d||b.removeSelect()}}};
Blockly.RenderedConnection.prototype.moveTo=function(a,b){this.inDB_&&this.db_.removeConnection_(this);this.x_=a;this.y_=b;this.hidden_||this.db_.addConnection(this)};Blockly.RenderedConnection.prototype.moveBy=function(a,b){this.moveTo(this.x_+a,this.y_+b)};Blockly.RenderedConnection.prototype.moveToOffset=function(a){this.moveTo(a.x+this.offsetInBlock_.x,a.y+this.offsetInBlock_.y)};
Blockly.RenderedConnection.prototype.setOffsetInBlock=function(a,b){this.offsetInBlock_.x=a;this.offsetInBlock_.y=b};Blockly.RenderedConnection.prototype.tighten_=function(){var a=this.targetConnection.x_-this.x_,b=this.targetConnection.y_-this.y_;if(0!=a||0!=b){var c=this.targetBlock(),d=c.getSvgRoot();if(!d)throw"block is not rendered.";d=Blockly.utils.getRelativeXY(d);c.getSvgRoot().setAttribute("transform","translate("+(d.x-a)+","+(d.y-b)+")");c.moveConnections_(-a,-b)}};
Blockly.RenderedConnection.prototype.closest=function(a,b){return this.dbOpposite_.searchForClosest(this,a,b)};
Blockly.RenderedConnection.prototype.highlight=function(){var a="m -20,0 h 5 "+Blockly.BlockSvg.NOTCH_PATH_LEFT+" h 5";var b=this.sourceBlock_.getRelativeToSurfaceXY();Blockly.Connection.highlightedPath_=Blockly.utils.createSvgElement("path",{"class":"blocklyHighlightedConnectionPath",d:a,transform:"translate("+(this.x_-b.x)+","+(this.y_-b.y)+")"+(this.sourceBlock_.RTL?" scale(-1 1)":"")},this.sourceBlock_.getSvgRoot())};
Blockly.RenderedConnection.prototype.unhideAll=function(){this.setHidden(!1);var a=[];if(this.type!=Blockly.INPUT_VALUE&&this.type!=Blockly.NEXT_STATEMENT)return a;var b=this.targetBlock();if(b){if(b.isCollapsed()){var c=[];b.outputConnection&&c.push(b.outputConnection);b.nextConnection&&c.push(b.nextConnection);b.previousConnection&&c.push(b.previousConnection)}else c=b.getConnections_(!0);for(var d=0;d<c.length;d++)a.push.apply(a,c[d].unhideAll());a.length||(a[0]=b)}return a};
Blockly.RenderedConnection.prototype.unhighlight=function(){goog.dom.removeNode(Blockly.Connection.highlightedPath_);delete Blockly.Connection.highlightedPath_};Blockly.RenderedConnection.prototype.setHidden=function(a){(this.hidden_=a)&&this.inDB_?this.db_.removeConnection_(this):a||this.inDB_||this.db_.addConnection(this)};
Blockly.RenderedConnection.prototype.hideAll=function(){this.setHidden(!0);if(this.targetConnection)for(var a=this.targetBlock().getDescendants(!1),b=0;b<a.length;b++){for(var c=a[b],d=c.getConnections_(!0),e=0;e<d.length;e++)d[e].setHidden(!0);c=c.getIcons();for(e=0;e<c.length;e++)c[e].setVisible(!1)}};Blockly.RenderedConnection.prototype.isConnectionAllowed=function(a,b){return this.distanceFrom(a)>b?!1:Blockly.RenderedConnection.superClass_.isConnectionAllowed.call(this,a)};
Blockly.RenderedConnection.prototype.disconnectInternal_=function(a,b){Blockly.RenderedConnection.superClass_.disconnectInternal_.call(this,a,b);a.rendered&&a.render();b.rendered&&(b.updateDisabled(),b.render())};
Blockly.RenderedConnection.prototype.respawnShadow_=function(){var a=this.getSourceBlock(),b=this.getShadowDom();if(a.workspace&&b&&Blockly.Events.recordUndo){Blockly.RenderedConnection.superClass_.respawnShadow_.call(this);b=this.targetBlock();if(!b)throw"Couldn't respawn the shadow block that should exist here.";b.initSvg();b.render(!1);a.rendered&&a.render()}};Blockly.RenderedConnection.prototype.neighbours_=function(a){return this.dbOpposite_.getNeighbours(this,a)};
Blockly.RenderedConnection.prototype.connect_=function(a){Blockly.RenderedConnection.superClass_.connect_.call(this,a);var b=this.getSourceBlock();a=a.getSourceBlock();b.rendered&&b.updateDisabled();a.rendered&&a.updateDisabled();b.rendered&&a.rendered&&(this.type==Blockly.NEXT_STATEMENT||this.type==Blockly.PREVIOUS_STATEMENT?a.render():b.render())};
Blockly.RenderedConnection.prototype.onCheckChanged_=function(){this.isConnected()&&!this.checkType_(this.targetConnection)&&((this.isSuperior()?this.targetBlock():this.sourceBlock_).unplug(),this.sourceBlock_.bumpNeighbours_())};Blockly.InsertionMarkerManager=function(a){this.topBlock_=Blockly.selected=a;this.workspace_=a.workspace;this.lastMarker_=this.lastOnStack_=null;this.firstMarker_=this.createMarkerBlock_(this.topBlock_);this.localConnection_=this.closestConnection_=null;this.wouldDeleteBlock_=!1;this.markerConnection_=null;this.highlightingBlock_=!1;this.highlightedBlock_=null;this.availableConnections_=this.initAvailableConnections_()};
Blockly.InsertionMarkerManager.prototype.dispose=function(){this.workspace_=this.topBlock_=null;this.availableConnections_.length=0;this.localConnection_=this.closestConnection_=null;Blockly.Events.disable();try{this.firstMarker_&&(this.firstMarker_.dispose(),this.firstMarker_=null),this.lastMarker_&&(this.lastMarker_.dispose(),this.lastMarker_=null)}finally{Blockly.Events.enable()}this.highlightedBlock_=null};Blockly.InsertionMarkerManager.prototype.wouldDeleteBlock=function(){return this.wouldDeleteBlock_};
Blockly.InsertionMarkerManager.prototype.applyConnections=function(){if(this.closestConnection_&&(Blockly.Events.disable(),this.hidePreview_(),Blockly.Events.enable(),this.localConnection_.connect(this.closestConnection_),this.topBlock_.rendered)){var a=this.localConnection_.isSuperior()?this.closestConnection_:this.localConnection_;Blockly.BlockAnimations.connectionUiEffect(a.getSourceBlock());this.topBlock_.getRootBlock().bringToFront()}};
Blockly.InsertionMarkerManager.prototype.update=function(a,b){var c=this.getCandidate_(a);if((this.wouldDeleteBlock_=this.shouldDelete_(c,b))||this.shouldUpdatePreviews_(c,a))Blockly.Events.disable(),this.maybeHidePreview_(c),this.maybeShowPreview_(c),Blockly.Events.enable()};
Blockly.InsertionMarkerManager.prototype.createMarkerBlock_=function(a){var b=a.type;Blockly.Events.disable();try{var c=this.workspace_.newBlock(b);c.setInsertionMarker(!0,a.width);if(a.mutationToDom){var d=a.mutationToDom();c.domToMutation(d)}c.initSvg()}finally{Blockly.Events.enable()}return c};
Blockly.InsertionMarkerManager.prototype.initAvailableConnections_=function(){var a=this.topBlock_.getConnections_(!1),b=this.topBlock_.lastConnectionInStack();b&&b!=this.topBlock_.nextConnection&&(a.push(b),this.lastOnStack_=b,this.lastMarker_=this.createMarkerBlock_(b.sourceBlock_));return a};
Blockly.InsertionMarkerManager.prototype.shouldUpdatePreviews_=function(a,b){var c=a.local,d=a.closest;a=a.radius;if(c&&d){if(c.type==Blockly.OUTPUT_VALUE)return!0;if(this.localConnection_&&this.closestConnection_){if(this.closestConnection_==d)return!1;c=this.localConnection_.x_+b.x-this.closestConnection_.x_;b=this.localConnection_.y_+b.y-this.closestConnection_.y_;b=Math.sqrt(c*c+b*b);return!(d&&a>b-Blockly.CURRENT_CONNECTION_PREFERENCE)}if(this.localConnection_||this.closestConnection_)console.error("Only one of localConnection_ and closestConnection_ was set.");
else return!0}else return!(!this.localConnection_||!this.closestConnection_);console.error("Returning true from shouldUpdatePreviews, but it's not clear why.");return!0};Blockly.InsertionMarkerManager.prototype.getCandidate_=function(a){for(var b=this.getStartRadius_(),c=null,d=null,e=0;e<this.availableConnections_.length;e++){var f=this.availableConnections_[e],g=f.closest(b,a);g.connection&&(c=g.connection,d=f,b=g.radius)}return{closest:c,local:d,radius:b}};
Blockly.InsertionMarkerManager.prototype.getStartRadius_=function(){return this.closestConnection_&&this.localConnection_?Blockly.CONNECTING_SNAP_RADIUS:Blockly.SNAP_RADIUS};Blockly.InsertionMarkerManager.prototype.shouldReplace_=function(){var a=this.closestConnection_,b=this.localConnection_;return b.type==Blockly.OUTPUT_VALUE?!0:b==b.sourceBlock_.getFirstStatementConnection()?!1:!this.topBlock_.nextConnection&&b.type==Blockly.PREVIOUS_STATEMENT&&a.isConnected()?!0:!1};
Blockly.InsertionMarkerManager.prototype.shouldDelete_=function(a,b){a=a&&!!a.closest&&b!=Blockly.DELETE_AREA_TOOLBOX;return!!b&&!this.topBlock_.getParent()&&this.topBlock_.isDeletable()&&!a};Blockly.InsertionMarkerManager.prototype.maybeShowPreview_=function(a){if(!this.wouldDeleteBlock_){var b=a.closest;a=a.local;b&&b!=this.closestConnection_&&!b.sourceBlock_.isInsertionMarker()&&(this.closestConnection_=b,this.localConnection_=a,this.showPreview_())}};
Blockly.InsertionMarkerManager.prototype.showPreview_=function(){this.shouldReplace_()?this.highlightBlock_():this.connectMarker_()};Blockly.InsertionMarkerManager.prototype.maybeHidePreview_=function(a){a.closest||this.hidePreview_();var b=this.closestConnection_!=a.closest;a=this.localConnection_!=a.local;this.closestConnection_&&this.localConnection_&&(b||a||this.wouldDeleteBlock_)&&this.hidePreview_();this.localConnection_=this.closestConnection_=this.markerConnection_=null};
Blockly.InsertionMarkerManager.prototype.hidePreview_=function(){this.highlightingBlock_?this.unhighlightBlock_():this.markerConnection_&&this.disconnectMarker_()};
Blockly.InsertionMarkerManager.prototype.highlightBlock_=function(){var a=this.closestConnection_,b=this.localConnection_;a.targetBlock()?(this.highlightedBlock_=a.targetBlock(),a.targetBlock().highlightForReplacement(!0)):b.type==Blockly.OUTPUT_VALUE&&(this.highlightedBlock_=a.sourceBlock_,a.sourceBlock_.highlightShapeForInput(a,!0));this.highlightingBlock_=!0};
Blockly.InsertionMarkerManager.prototype.unhighlightBlock_=function(){var a=this.closestConnection_;a.type!=Blockly.INPUT_VALUE||a.isConnected()?this.highlightedBlock_.highlightForReplacement(!1):this.highlightedBlock_.highlightShapeForInput(a,!1);this.highlightedBlock_=null;this.highlightingBlock_=!1};
Blockly.InsertionMarkerManager.prototype.disconnectMarker_=function(){if(this.markerConnection_){var a=this.markerConnection_,b=a.sourceBlock_,c=b.nextConnection,d=b.previousConnection;a!=c||d&&d.targetConnection?a.type==Blockly.NEXT_STATEMENT&&a!=c?(c=a.targetConnection,c.sourceBlock_.unplug(!1),d=d?d.targetConnection:null,b.unplug(!0),d&&d.connect(c)):b.unplug(!0):a.targetBlock().unplug(!1);if(a.targetConnection)throw"markerConnection_ still connected at the end of disconnectInsertionMarker";this.markerConnection_=
null;b.getSvgRoot().setAttribute("visibility","hidden")}else console.log("No insertion marker connection to disconnect")};
Blockly.InsertionMarkerManager.prototype.connectMarker_=function(){var a=this.localConnection_,b=this.closestConnection_,c=this.lastOnStack_&&a==this.lastOnStack_?this.lastMarker_:this.firstMarker_;a=c.getMatchingConnection(a.sourceBlock_,a);goog.asserts.assert(a!=this.markerConnection_,"Made it to connectMarker_ even though the marker isn't changing");c.render();c.rendered=!0;c.getSvgRoot().setAttribute("visibility","visible");c.positionNewBlock(c,a,b);a.connect(b);this.markerConnection_=a};Blockly.BlockDragger=function(a,b){this.draggingBlock_=a;this.workspace_=b;this.draggedConnectionManager_=new Blockly.InsertionMarkerManager(this.draggingBlock_);this.deleteArea_=null;this.wasOutside_=this.wouldDeleteBlock_=!1;this.startXY_=this.draggingBlock_.getRelativeToSurfaceXY();this.dragIconData_=Blockly.BlockDragger.initIconData_(a)};
Blockly.BlockDragger.prototype.dispose=function(){this.startWorkspace_=this.workspace_=this.draggingBlock_=null;this.dragIconData_.length=0;this.draggedConnectionManager_&&(this.draggedConnectionManager_.dispose(),this.draggedConnectionManager_=null)};Blockly.BlockDragger.initIconData_=function(a){var b=[];a=a.getDescendants(!1);for(var c=0,d;d=a[c];c++){d=d.getIcons();for(var e=0;e<d.length;e++){var f={location:d[e].getIconLocation(),icon:d[e]};b.push(f)}}return b};
Blockly.BlockDragger.prototype.startBlockDrag=function(a){Blockly.Events.getGroup()||Blockly.Events.setGroup(!0);this.workspace_.setResizesEnabled(!1);Blockly.BlockAnimations.disconnectUiStop();this.draggingBlock_.getParent()&&(this.draggingBlock_.unplug(),a=this.pixelsToWorkspaceUnits_(a),a=goog.math.Coordinate.sum(this.startXY_,a),this.draggingBlock_.translate(a.x,a.y),Blockly.BlockAnimations.disconnectUiEffect(this.draggingBlock_));this.draggingBlock_.setDragging(!0);this.draggingBlock_.moveToDragSurface_();
if(a=this.workspace_.getToolbox()){var b=this.draggingBlock_.isDeletable()?"blocklyToolboxDelete":"blocklyToolboxGrab";a.addStyle(b)}};
Blockly.BlockDragger.prototype.dragBlock=function(a,b){b=this.pixelsToWorkspaceUnits_(b);var c=goog.math.Coordinate.sum(this.startXY_,b);this.draggingBlock_.moveDuringDrag(c);this.dragIcons_(b);this.deleteArea_=this.workspace_.isDeleteArea(a);a=!this.workspace_.isInsideBlocksArea(a);this.draggedConnectionManager_.update(b,this.deleteArea_,a);a!==this.wasOutside_&&(this.fireDragOutsideEvent_(a),this.wasOutside_=a);this.updateCursorDuringBlockDrag_(a);return a};
Blockly.BlockDragger.prototype.endBlockDrag=function(a,b){this.dragBlock(a,b);this.dragIconData_=[];a=this.wasOutside_;this.fireEndDragEvent_(a);this.draggingBlock_.setMouseThroughStyle(!1);Blockly.BlockAnimations.disconnectUiStop();var c=this.pixelsToWorkspaceUnits_(b);b=goog.math.Coordinate.sum(this.startXY_,c);this.draggingBlock_.moveOffDragSurface_(b);b=this.wouldDeleteBlock_&&this.draggingBlock_.type==Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE;this.maybeDeleteBlock_()||(this.draggingBlock_.moveConnections_(c.x,
c.y),this.draggingBlock_.setDragging(!1),this.draggedConnectionManager_.applyConnections(),this.draggingBlock_.render(),this.fireMoveEvent_(),this.draggingBlock_.scheduleSnapAndBump());this.workspace_.setResizesEnabled(!0);if(c=this.workspace_.getToolbox()){var d=this.draggingBlock_.isDeletable()?"blocklyToolboxDelete":"blocklyToolboxGrab";c.removeStyle(d)}Blockly.Events.setGroup(!1);if(a){var e=this.workspace_;setTimeout(function(){e.undo()})}b&&(e=this.workspace_,setTimeout(function(){for(var a=
e.getAllBlocks(),b=0;b<a.length;b++){var c=a[b];if(c.type==Blockly.PROCEDURES_CALL_BLOCK_TYPE&&(c=c.getProcCode(),!Blockly.Procedures.getDefineBlock(c,e))){alert("To delete a block definition, first remove all uses of the block");e.undo();return}}e.refreshToolboxSelection_()}))};Blockly.BlockDragger.prototype.fireDragOutsideEvent_=function(a){var b=new Blockly.Events.DragBlockOutside(this.draggingBlock_);b.isOutside=a;Blockly.Events.fire(b)};
Blockly.BlockDragger.prototype.fireEndDragEvent_=function(a){a=new Blockly.Events.EndBlockDrag(this.draggingBlock_,a);Blockly.Events.fire(a)};Blockly.BlockDragger.prototype.fireMoveEvent_=function(){var a=new Blockly.Events.BlockMove(this.draggingBlock_);a.oldCoordinate=this.startXY_;a.recordNew();Blockly.Events.fire(a)};
Blockly.BlockDragger.prototype.maybeDeleteBlock_=function(){var a=this.workspace_.trashcan;this.wouldDeleteBlock_?(a&&goog.Timer.callOnce(a.close,100,a),this.fireMoveEvent_(),this.draggingBlock_.dispose(!1,!0)):a&&a.close();return this.wouldDeleteBlock_};
Blockly.BlockDragger.prototype.updateCursorDuringBlockDrag_=function(a){this.wouldDeleteBlock_=this.draggedConnectionManager_.wouldDeleteBlock();var b=this.workspace_.trashcan;this.wouldDeleteBlock_?(this.draggingBlock_.setDeleteStyle(!0),this.deleteArea_==Blockly.DELETE_AREA_TRASH&&b&&b.setOpen_(!0)):(this.draggingBlock_.setDeleteStyle(!1),b&&b.setOpen_(!1));a?this.draggingBlock_.setMouseThroughStyle(!0):this.draggingBlock_.setMouseThroughStyle(!1)};
Blockly.BlockDragger.prototype.pixelsToWorkspaceUnits_=function(a){a=new goog.math.Coordinate(a.x/this.workspace_.scale,a.y/this.workspace_.scale);this.workspace_.isMutator&&(a=a.scale(1/this.workspace_.options.parentWorkspace.scale));return a};Blockly.BlockDragger.prototype.dragIcons_=function(a){for(var b=0;b<this.dragIconData_.length;b++){var c=this.dragIconData_[b];c.icon.setIconLocation(goog.math.Coordinate.sum(c.location,a))}};Blockly.WorkspaceCommentSvg=function(a,b,c,d,e,f){this.svgGroup_=Blockly.utils.createSvgElement("g",{},null);this.svgGroup_.translate_="";this.svgRect_=Blockly.utils.createSvgElement("rect",{"class":"scratchCommentRect scratchWorkspaceCommentBorder",x:0,y:0,rx:4*Blockly.WorkspaceCommentSvg.BORDER_WIDTH,ry:4*Blockly.WorkspaceCommentSvg.BORDER_WIDTH});this.svgGroup_.appendChild(this.svgRect_);this.rendered_=!1;this.useDragSurface_=Blockly.utils.is3dSupported()&&!!a.blockDragSurface_;Blockly.WorkspaceCommentSvg.superClass_.constructor.call(this,
a,b,c,d,e,f);this.render()};goog.inherits(Blockly.WorkspaceCommentSvg,Blockly.WorkspaceComment);Blockly.WorkspaceCommentSvg.DEFAULT_SIZE=200;
Blockly.WorkspaceCommentSvg.prototype.dispose=function(){this.workspace&&(Blockly.selected==this&&(this.unselect(),this.workspace.cancelCurrentGesture()),Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.CommentDelete(this)),goog.dom.removeNode(this.svgGroup_),this.svgRect_=this.svgGroup_=null,this.disposeInternal_(),Blockly.Events.disable(),Blockly.WorkspaceCommentSvg.superClass_.dispose.call(this),Blockly.Events.enable())};
Blockly.WorkspaceCommentSvg.prototype.initSvg=function(){goog.asserts.assert(this.workspace.rendered,"Workspace is headless.");this.workspace.options.readOnly||this.eventsInit_||(Blockly.bindEventWithChecks_(this.svgRectTarget_,"mousedown",this,this.pathMouseDown_),Blockly.bindEventWithChecks_(this.svgHandleTarget_,"mousedown",this,this.pathMouseDown_));this.eventsInit_=!0;this.updateMovable();this.getSvgRoot().parentNode||this.workspace.getBubbleCanvas().appendChild(this.getSvgRoot())};
Blockly.WorkspaceCommentSvg.prototype.pathMouseDown_=function(a){var b=this.workspace.getGesture(a);b&&b.handleBubbleStart(a,this)};Blockly.WorkspaceCommentSvg.prototype.showContextMenu_=function(a){if(!this.workspace.options.readOnly){var b=[];this.isDeletable()&&this.isMovable()&&(b.push(Blockly.ContextMenu.commentDuplicateOption(this)),b.push(Blockly.ContextMenu.commentDeleteOption(this)));Blockly.ContextMenu.show(a,b,this.RTL)}};
Blockly.WorkspaceCommentSvg.prototype.select=function(){if(Blockly.selected!=this){var a=null;if(Blockly.selected){a=Blockly.selected.id;Blockly.Events.disable();try{Blockly.selected.unselect()}finally{Blockly.Events.enable()}}a=new Blockly.Events.Ui(null,"selected",a,this.id);a.workspaceId=this.workspace.id;Blockly.Events.fire(a);Blockly.selected=this;this.addSelect()}};
Blockly.WorkspaceCommentSvg.prototype.unselect=function(){if(Blockly.selected==this){var a=new Blockly.Events.Ui(null,"selected",this.id,null);a.workspaceId=this.workspace.id;Blockly.Events.fire(a);Blockly.selected=null;this.removeSelect()}};Blockly.WorkspaceCommentSvg.prototype.addSelect=function(){Blockly.utils.addClass(this.svgGroup_,"blocklySelected");this.setFocus()};Blockly.WorkspaceCommentSvg.prototype.removeSelect=function(){Blockly.utils.removeClass(this.svgGroup_,"blocklySelected");this.blurFocus()};
Blockly.WorkspaceCommentSvg.prototype.addFocus=function(){Blockly.utils.addClass(this.svgGroup_,"blocklyFocused")};Blockly.WorkspaceCommentSvg.prototype.removeFocus=function(){Blockly.utils.removeClass(this.svgGroup_,"blocklyFocused")};
Blockly.WorkspaceCommentSvg.prototype.getRelativeToSurfaceXY=function(){var a=0,b=0,c=this.useDragSurface_?this.workspace.blockDragSurface_.getGroup():null,d=this.getSvgRoot();if(d){do{var e=Blockly.utils.getRelativeXY(d);a+=e.x;b+=e.y;this.useDragSurface_&&this.workspace.blockDragSurface_.getCurrentBlock()==d&&(e=this.workspace.blockDragSurface_.getSurfaceTranslation(),a+=e.x,b+=e.y);d=d.parentNode}while(d&&d!=this.workspace.getBubbleCanvas()&&d!=c)}return this.xy_=new goog.math.Coordinate(a,b)};
Blockly.WorkspaceCommentSvg.prototype.moveBy=function(a,b){var c=new Blockly.Events.CommentMove(this),d=this.getRelativeToSurfaceXY();this.translate(d.x+a,d.y+b);c.recordNew();Blockly.Events.fire(c);this.workspace.resizeContents()};Blockly.WorkspaceCommentSvg.prototype.translate=function(a,b){this.xy_=new goog.math.Coordinate(a,b);this.getSvgRoot().setAttribute("transform","translate("+a+","+b+")")};
Blockly.WorkspaceCommentSvg.prototype.moveToDragSurface_=function(){if(this.useDragSurface_){var a=this.getRelativeToSurfaceXY();this.clearTransformAttributes_();this.workspace.blockDragSurface_.translateSurface(a.x,a.y);this.workspace.blockDragSurface_.setBlocksAndShow(this.getSvgRoot())}};Blockly.WorkspaceCommentSvg.prototype.moveOffDragSurface_=function(a){this.useDragSurface_&&(this.translate(a.x,a.y),this.workspace.blockDragSurface_.clearAndHide(this.workspace.getCanvas()))};
Blockly.WorkspaceCommentSvg.prototype.moveDuringDrag=function(a,b){a?a.translateSurface(b.x,b.y):(this.svgGroup_.translate_="translate("+b.x+","+b.y+")",this.svgGroup_.setAttribute("transform",this.svgGroup_.translate_+this.svgGroup_.skew_))};Blockly.WorkspaceCommentSvg.prototype.moveTo=function(a,b){this.translate(a,b)};Blockly.WorkspaceCommentSvg.prototype.clearTransformAttributes_=function(){Blockly.utils.removeAttribute(this.getSvgRoot(),"transform")};
Blockly.WorkspaceCommentSvg.prototype.getBoundingRectangle=function(){var a=this.getRelativeToSurfaceXY(),b=this.getHeightWidth();if(this.RTL){var c=new goog.math.Coordinate(a.x-b.width,a.y);a=new goog.math.Coordinate(a.x,a.y+b.height)}else c=new goog.math.Coordinate(a.x,a.y),a=new goog.math.Coordinate(a.x+b.width,a.y+b.height);return{topLeft:c,bottomRight:a}};
Blockly.WorkspaceCommentSvg.prototype.updateMovable=function(){this.isMovable()?Blockly.utils.addClass(this.svgGroup_,"blocklyDraggable"):Blockly.utils.removeClass(this.svgGroup_,"blocklyDraggable")};Blockly.WorkspaceCommentSvg.prototype.setMovable=function(a){Blockly.WorkspaceCommentSvg.superClass_.setMovable.call(this,a);this.updateMovable()};
Blockly.WorkspaceCommentSvg.prototype.setDragging=function(a){a?(a=this.getSvgRoot(),a.translate_="",a.skew_="",Blockly.utils.addClass(this.svgGroup_,"blocklyDragging")):Blockly.utils.removeClass(this.svgGroup_,"blocklyDragging")};Blockly.WorkspaceCommentSvg.prototype.getSvgRoot=function(){return this.svgGroup_};Blockly.WorkspaceCommentSvg.prototype.getText=function(){return this.textarea_?this.textarea_.value:this.content_};
Blockly.WorkspaceCommentSvg.prototype.setText=function(a){Blockly.WorkspaceCommentSvg.superClass_.setText.call(this,a);this.textarea_&&(this.textarea_.value=a)};Blockly.WorkspaceCommentSvg.prototype.setDeleteStyle=function(a){a?Blockly.utils.addClass(this.svgGroup_,"blocklyDraggingDelete"):Blockly.utils.removeClass(this.svgGroup_,"blocklyDraggingDelete")};Blockly.WorkspaceCommentSvg.prototype.setAutoLayout=function(){};
Blockly.WorkspaceCommentSvg.fromXml=function(a,b,c){Blockly.Events.disable();try{var d=Blockly.WorkspaceComment.parseAttributes(a),e=new Blockly.WorkspaceCommentSvg(b,d.content,d.h,d.w,d.minimized,d.id);b.rendered&&(e.initSvg(),e.render(!1));if(!isNaN(d.x)&&!isNaN(d.y))if(b.RTL){var f=c||b.getWidth();e.moveBy(f-d.x,d.y)}else e.moveBy(d.x,d.y)}finally{Blockly.Events.enable()}Blockly.WorkspaceComment.fireCreateEvent(e);return e};
Blockly.WorkspaceCommentSvg.prototype.toXmlWithXY=function(a){var b;this.workspace.RTL&&(b=this.workspace.getWidth());a=this.toXml(a);var c=this.getRelativeToSurfaceXY();a.setAttribute("x",Math.round(this.workspace.RTL?b-c.x:c.x));a.setAttribute("y",Math.round(c.y));a.setAttribute("h",this.getHeight());a.setAttribute("w",this.getWidth());return a};Blockly.BubbleDragger=function(a,b){this.draggingBubble_=a;this.workspace_=b;this.deleteArea_=null;this.wouldDeleteBubble_=!1;this.startXY_=this.draggingBubble_.getRelativeToSurfaceXY();this.dragSurface_=Blockly.utils.is3dSupported()&&b.getBlockDragSurface()?b.getBlockDragSurface():null};Blockly.BubbleDragger.prototype.dispose=function(){this.dragSurface_=this.workspace_=this.draggingBubble_=null};
Blockly.BubbleDragger.prototype.startBubbleDrag=function(){Blockly.Events.getGroup()||Blockly.Events.setGroup(!0);this.workspace_.setResizesEnabled(!1);this.draggingBubble_.setAutoLayout(!1);this.dragSurface_&&this.moveToDragSurface_();this.draggingBubble_.setDragging&&this.draggingBubble_.setDragging(!0);var a=this.workspace_.getToolbox();if(a){var b=this.draggingBubble_.isDeletable()?"blocklyToolboxDelete":"blocklyToolboxGrab";a.addStyle(b)}};
Blockly.BubbleDragger.prototype.dragBubble=function(a,b){b=this.pixelsToWorkspaceUnits_(b);b=goog.math.Coordinate.sum(this.startXY_,b);this.draggingBubble_.moveDuringDrag(this.dragSurface_,b);this.draggingBubble_.isDeletable()&&(this.deleteArea_=this.workspace_.isDeleteArea(a),this.updateCursorDuringBubbleDrag_())};
Blockly.BubbleDragger.prototype.maybeDeleteBubble_=function(){var a=this.workspace_.trashcan;this.wouldDeleteBubble_?(a&&goog.Timer.callOnce(a.close,100,a),this.fireMoveEvent_(),this.draggingBubble_.dispose(!1,!0)):a&&a.close();return this.wouldDeleteBubble_};
Blockly.BubbleDragger.prototype.updateCursorDuringBubbleDrag_=function(){this.wouldDeleteBubble_=this.deleteArea_!=Blockly.DELETE_AREA_NONE;var a=this.workspace_.trashcan;this.wouldDeleteBubble_?(this.draggingBubble_.setDeleteStyle(!0),this.deleteArea_==Blockly.DELETE_AREA_TRASH&&a&&a.setOpen_(!0)):(this.draggingBubble_.setDeleteStyle(!1),a&&a.setOpen_(!1))};
Blockly.BubbleDragger.prototype.endBubbleDrag=function(a,b){this.dragBubble(a,b);a=this.pixelsToWorkspaceUnits_(b);a=goog.math.Coordinate.sum(this.startXY_,a);this.draggingBubble_.moveTo(a.x,a.y);this.maybeDeleteBubble_()||(this.dragSurface_&&this.dragSurface_.clearAndHide(this.workspace_.getBubbleCanvas()),this.draggingBubble_.setDragging&&this.draggingBubble_.setDragging(!1),this.fireMoveEvent_());this.workspace_.setResizesEnabled(!0);this.workspace_.toolbox_&&(a=this.draggingBubble_.isDeletable()?
"blocklyToolboxDelete":"blocklyToolboxGrab",this.workspace_.toolbox_.removeStyle(a));Blockly.Events.setGroup(!1)};Blockly.BubbleDragger.prototype.fireMoveEvent_=function(){if(this.draggingBubble_.isComment)var a=new Blockly.Events.CommentMove(this.draggingBubble_);else if(this.draggingBubble_ instanceof Blockly.ScratchBubble)a=new Blockly.Events.CommentMove(this.draggingBubble_.comment);else return;a.setOldCoordinate(this.startXY_);a.recordNew();Blockly.Events.fire(a)};
Blockly.BubbleDragger.prototype.pixelsToWorkspaceUnits_=function(a){a=new goog.math.Coordinate(a.x/this.workspace_.scale,a.y/this.workspace_.scale);this.workspace_.isMutator&&(a=a.scale(1/this.workspace_.options.parentWorkspace.scale));return a};Blockly.BubbleDragger.prototype.moveToDragSurface_=function(){this.draggingBubble_.moveTo(0,0);this.dragSurface_.translateSurface(this.startXY_.x,this.startXY_.y);this.dragSurface_.setBlocksAndShow(this.draggingBubble_.getSvgRoot())};Blockly.WorkspaceDragger=function(a){this.workspace_=a;this.startDragMetrics_=a.getMetrics();this.startScrollXY_=new goog.math.Coordinate(a.scrollX,a.scrollY)};Blockly.WorkspaceDragger.prototype.dispose=function(){this.workspace_=null};Blockly.WorkspaceDragger.prototype.startDrag=function(){Blockly.selected&&Blockly.selected.unselect();this.workspace_.setupDragSurface()};Blockly.WorkspaceDragger.prototype.endDrag=function(a){this.drag(a);this.workspace_.resetDragSurface()};
Blockly.WorkspaceDragger.prototype.drag=function(a){var b=this.startDragMetrics_,c=goog.math.Coordinate.sum(this.startScrollXY_,a);a=Math.min(c.x,-b.contentLeft);c=Math.min(c.y,-b.contentTop);a=Math.max(a,b.viewWidth-b.contentLeft-b.contentWidth);c=Math.max(c,b.viewHeight-b.contentTop-b.contentHeight);a=-a-b.contentLeft;c=-c-b.contentTop;this.updateScroll_(a,c)};Blockly.WorkspaceDragger.prototype.updateScroll_=function(a,b){this.workspace_.scrollbar.set(a,b)};Blockly.FlyoutDragger=function(a){Blockly.FlyoutDragger.superClass_.constructor.call(this,a.getWorkspace());this.scrollbar_=a.scrollbar_;this.horizontalLayout_=a.horizontalLayout_};goog.inherits(Blockly.FlyoutDragger,Blockly.WorkspaceDragger);Blockly.FlyoutDragger.prototype.updateScroll_=function(a,b){this.horizontalLayout_?this.scrollbar_.set(a):this.scrollbar_.set(b)};Blockly.scratchBlocksUtils={};Blockly.scratchBlocksUtils.measureText=function(a,b,c,d){var e=document.createElement("canvas").getContext("2d");e.font=c+" "+a+" "+b;return e.measureText(d).width};Blockly.scratchBlocksUtils.encodeEntities=function(a){return a.replace(/[\u00A0-\u9999<>&]/gim,function(a){return"&#"+a.charCodeAt(0)+";"})};
Blockly.scratchBlocksUtils.changeObscuredShadowIds=function(a){a=a.getDescendants(!1);for(var b=a.length-1;0<=b;b--)for(var c=a[b],d=0;d<c.inputList.length;d++){var e=c.inputList[d].connection;if(e){var f=e.getShadowDom();f&&(f.setAttribute("id",Blockly.utils.genUid()),e.setShadowDom(f))}}};Blockly.scratchBlocksUtils.isShadowArgumentReporter=function(a){return a.isShadow()&&("argument_reporter_boolean"==a.type||"argument_reporter_string_number"==a.type)};
Blockly.scratchBlocksUtils.compareStrings=function(a,b){return a.localeCompare(b,[],{sensitivity:"base",numeric:!0})};Blockly.Tooltip={};Blockly.Tooltip.visible=!1;Blockly.Tooltip.blocked_=!1;Blockly.Tooltip.LIMIT=50;Blockly.Tooltip.mouseOutPid_=0;Blockly.Tooltip.showPid_=0;Blockly.Tooltip.lastX_=0;Blockly.Tooltip.lastY_=0;Blockly.Tooltip.element_=null;Blockly.Tooltip.poisonedElement_=null;Blockly.Tooltip.OFFSET_X=0;Blockly.Tooltip.OFFSET_Y=10;Blockly.Tooltip.RADIUS_OK=10;Blockly.Tooltip.HOVER_MS=750;Blockly.Tooltip.MARGINS=5;Blockly.Tooltip.DIV=null;
Blockly.Tooltip.createDom=function(){Blockly.Tooltip.DIV||(Blockly.Tooltip.DIV=goog.dom.createDom("DIV","blocklyTooltipDiv"),document.body.appendChild(Blockly.Tooltip.DIV))};Blockly.Tooltip.bindMouseEvents=function(a){Blockly.bindEvent_(a,"mouseover",null,Blockly.Tooltip.onMouseOver_);Blockly.bindEvent_(a,"mouseout",null,Blockly.Tooltip.onMouseOut_);a.addEventListener("mousemove",Blockly.Tooltip.onMouseMove_,!1)};
Blockly.Tooltip.onMouseOver_=function(a){if(!Blockly.Tooltip.blocked_){for(a=a.target;!goog.isString(a.tooltip)&&!goog.isFunction(a.tooltip);)a=a.tooltip;Blockly.Tooltip.element_!=a&&(Blockly.Tooltip.hide(),Blockly.Tooltip.poisonedElement_=null,Blockly.Tooltip.element_=a);clearTimeout(Blockly.Tooltip.mouseOutPid_)}};
Blockly.Tooltip.onMouseOut_=function(a){Blockly.Tooltip.blocked_||(Blockly.Tooltip.mouseOutPid_=setTimeout(function(){Blockly.Tooltip.element_=null;Blockly.Tooltip.poisonedElement_=null;Blockly.Tooltip.hide()},1),clearTimeout(Blockly.Tooltip.showPid_))};
Blockly.Tooltip.onMouseMove_=function(a){if(Blockly.Tooltip.element_&&Blockly.Tooltip.element_.tooltip&&!Blockly.WidgetDiv.isVisible()&&!Blockly.Tooltip.blocked_)if(Blockly.Tooltip.visible){var b=Blockly.Tooltip.lastX_-a.pageX;a=Blockly.Tooltip.lastY_-a.pageY;Math.sqrt(b*b+a*a)>Blockly.Tooltip.RADIUS_OK&&Blockly.Tooltip.hide()}else Blockly.Tooltip.poisonedElement_!=Blockly.Tooltip.element_&&(clearTimeout(Blockly.Tooltip.showPid_),Blockly.Tooltip.lastX_=a.pageX,Blockly.Tooltip.lastY_=a.pageY,Blockly.Tooltip.showPid_=
setTimeout(Blockly.Tooltip.show_,Blockly.Tooltip.HOVER_MS))};Blockly.Tooltip.hide=function(){Blockly.Tooltip.visible&&(Blockly.Tooltip.visible=!1,Blockly.Tooltip.DIV&&(Blockly.Tooltip.DIV.style.display="none"));Blockly.Tooltip.showPid_&&clearTimeout(Blockly.Tooltip.showPid_)};Blockly.Tooltip.block=function(){Blockly.Tooltip.hide();Blockly.Tooltip.blocked_=!0};Blockly.Tooltip.unblock=function(){Blockly.Tooltip.blocked_=!1};
Blockly.Tooltip.show_=function(){if(!Blockly.Tooltip.blocked_&&(Blockly.Tooltip.poisonedElement_=Blockly.Tooltip.element_,Blockly.Tooltip.DIV)){goog.dom.removeChildren(Blockly.Tooltip.DIV);for(var a=Blockly.Tooltip.element_.tooltip;goog.isFunction(a);)a=a();a=Blockly.utils.wrap(a,Blockly.Tooltip.LIMIT);a=a.split("\n");for(var b=0;b<a.length;b++){var c=document.createElement("div");c.appendChild(document.createTextNode(a[b]));Blockly.Tooltip.DIV.appendChild(c)}a=Blockly.Tooltip.element_.RTL;b=goog.dom.getViewportSize();
Blockly.Tooltip.DIV.style.direction=a?"rtl":"ltr";Blockly.Tooltip.DIV.style.display="block";Blockly.Tooltip.visible=!0;c=Blockly.Tooltip.lastX_;c=a?c-(Blockly.Tooltip.OFFSET_X+Blockly.Tooltip.DIV.offsetWidth):c+Blockly.Tooltip.OFFSET_X;var d=Blockly.Tooltip.lastY_+Blockly.Tooltip.OFFSET_Y;d+Blockly.Tooltip.DIV.offsetHeight>b.height+window.scrollY&&(d-=Blockly.Tooltip.DIV.offsetHeight+2*Blockly.Tooltip.OFFSET_Y);a?c=Math.max(Blockly.Tooltip.MARGINS-window.scrollX,c):c+Blockly.Tooltip.DIV.offsetWidth>
b.width+window.scrollX-2*Blockly.Tooltip.MARGINS&&(c=b.width-Blockly.Tooltip.DIV.offsetWidth-2*Blockly.Tooltip.MARGINS);Blockly.Tooltip.DIV.style.top=d+"px";Blockly.Tooltip.DIV.style.left=c+"px"}};Blockly.Gesture=function(a,b){this.startWorkspace_=this.targetBlock_=this.startBlock_=this.startField_=this.startBubble_=this.currentDragDeltaXY_=this.mouseDownXY_=null;this.creatorWorkspace_=b;this.isDraggingBubble_=this.isDraggingBlock_=this.isDraggingWorkspace_=this.hasExceededDragRadius_=!1;this.mostRecentEvent_=a;this.flyout_=this.workspaceDragger_=this.blockDragger_=this.bubbleDragger_=this.onUpWrapper_=this.onMoveWrapper_=null;this.shouldDuplicateOnDrag_=this.isEnding_=this.hasStarted_=this.calledUpdateIsDragging_=
!1};
Blockly.Gesture.prototype.dispose=function(){Blockly.Touch.clearTouchIdentifier();Blockly.Tooltip.unblock();this.creatorWorkspace_.clearGesture();this.onMoveWrapper_&&Blockly.unbindEvent_(this.onMoveWrapper_);this.onUpWrapper_&&Blockly.unbindEvent_(this.onUpWrapper_);this.flyout_=this.startWorkspace_=this.targetBlock_=this.startBlock_=this.startField_=null;this.blockDragger_&&(this.blockDragger_.dispose(),this.blockDragger_=null);this.workspaceDragger_&&(this.workspaceDragger_.dispose(),this.workspaceDragger_=null);
this.bubbleDragger_&&(this.bubbleDragger_.dispose(),this.bubbleDragger_=null)};Blockly.Gesture.prototype.updateFromEvent_=function(a){var b=new goog.math.Coordinate(a.clientX,a.clientY);this.updateDragDelta_(b)&&(this.updateIsDragging_(),Blockly.longStop_());this.mostRecentEvent_=a};
Blockly.Gesture.prototype.updateDragDelta_=function(a){this.currentDragDeltaXY_=goog.math.Coordinate.difference(a,this.mouseDownXY_);return this.hasExceededDragRadius_?!1:this.hasExceededDragRadius_=goog.math.Coordinate.magnitude(this.currentDragDeltaXY_)>(this.flyout_?Blockly.FLYOUT_DRAG_RADIUS:Blockly.DRAG_RADIUS)};
Blockly.Gesture.prototype.updateIsDraggingFromFlyout_=function(){return this.targetBlock_.disabled?!1:!this.flyout_.isScrollable()||this.flyout_.isDragTowardWorkspace(this.currentDragDeltaXY_)?(this.startWorkspace_=this.flyout_.targetWorkspace_,this.startWorkspace_.updateScreenCalculationsIfScrolled(),Blockly.Events.getGroup()||Blockly.Events.setGroup(!0),this.startBlock_=null,this.targetBlock_=this.flyout_.createBlock(this.targetBlock_),this.targetBlock_.select(),!0):!1};
Blockly.Gesture.prototype.updateIsDraggingBubble_=function(){if(!this.startBubble_)return!1;this.isDraggingBubble_=!0;this.startDraggingBubble_();return!0};Blockly.Gesture.prototype.updateIsDraggingBlock_=function(){if(!this.targetBlock_)return!1;if(this.flyout_)this.isDraggingBlock_=this.updateIsDraggingFromFlyout_();else if(this.targetBlock_.isMovable()||this.shouldDuplicateOnDrag_)this.isDraggingBlock_=!0;return this.isDraggingBlock_?(this.startDraggingBlock_(),!0):!1};
Blockly.Gesture.prototype.updateIsDraggingWorkspace_=function(){if(this.flyout_?this.flyout_.isScrollable():this.startWorkspace_&&this.startWorkspace_.isDraggable())this.workspaceDragger_=this.flyout_?new Blockly.FlyoutDragger(this.flyout_):new Blockly.WorkspaceDragger(this.startWorkspace_),this.isDraggingWorkspace_=!0,this.workspaceDragger_.startDrag()};
Blockly.Gesture.prototype.updateIsDragging_=function(){goog.asserts.assert(!this.calledUpdateIsDragging_,"updateIsDragging_ should only be called once per gesture.");this.calledUpdateIsDragging_=!0;this.updateIsDraggingBubble_()||this.updateIsDraggingBlock_()||this.updateIsDraggingWorkspace_()};
Blockly.Gesture.prototype.startDraggingBlock_=function(){this.shouldDuplicateOnDrag_&&this.duplicateOnDrag_();this.blockDragger_=new Blockly.BlockDragger(this.targetBlock_,this.startWorkspace_);this.blockDragger_.startBlockDrag(this.currentDragDeltaXY_);this.blockDragger_.dragBlock(this.mostRecentEvent_,this.currentDragDeltaXY_)};
Blockly.Gesture.prototype.startDraggingBubble_=function(){this.bubbleDragger_=new Blockly.BubbleDragger(this.startBubble_,this.startWorkspace_);this.bubbleDragger_.startBubbleDrag();this.bubbleDragger_.dragBubble(this.mostRecentEvent_,this.currentDragDeltaXY_)};
Blockly.Gesture.prototype.doStart=function(a){Blockly.utils.isTargetInput(a)?this.cancel():(this.hasStarted_=!0,Blockly.BlockAnimations.disconnectUiStop(),this.startWorkspace_.updateScreenCalculationsIfScrolled(),this.startWorkspace_.isMutator&&this.startWorkspace_.resize(),this.startWorkspace_.markFocused(),this.mostRecentEvent_=a,Blockly.hideChaff(!!this.flyout_),Blockly.Tooltip.block(),this.targetBlock_&&this.targetBlock_.select(),Blockly.utils.isRightButton(a)?this.handleRightClick(a):(goog.string.caseInsensitiveEquals(a.type,
"touchstart")&&Blockly.longStart_(a,this),this.mouseDownXY_=new goog.math.Coordinate(a.clientX,a.clientY),this.bindMouseEvents(a)))};Blockly.Gesture.prototype.bindMouseEvents=function(a){this.onMoveWrapper_=Blockly.bindEventWithChecks_(document,"mousemove",null,this.handleMove.bind(this));this.onUpWrapper_=Blockly.bindEventWithChecks_(document,"mouseup",null,this.handleUp.bind(this));a.preventDefault();a.stopPropagation()};
Blockly.Gesture.prototype.handleMove=function(a){var b=!0;this.updateFromEvent_(a);this.isDraggingWorkspace_?this.workspaceDragger_.drag(this.currentDragDeltaXY_):this.isDraggingBlock_?this.blockDragger_.dragBlock(this.mostRecentEvent_,this.currentDragDeltaXY_)&&(b=!1):this.isDraggingBubble_&&this.bubbleDragger_.dragBubble(this.mostRecentEvent_,this.currentDragDeltaXY_);b&&(a.preventDefault(),a.stopPropagation())};
Blockly.Gesture.prototype.handleUp=function(a){this.updateFromEvent_(a);Blockly.longStop_();this.isEnding_?console.log("Trying to end a gesture recursively."):(this.isEnding_=!0,this.isDraggingBubble_?this.bubbleDragger_.endBubbleDrag(a,this.currentDragDeltaXY_):this.isDraggingBlock_?this.blockDragger_.endBlockDrag(a,this.currentDragDeltaXY_):this.isDraggingWorkspace_?this.workspaceDragger_.endDrag(this.currentDragDeltaXY_):this.isBubbleClick_()?this.doBubbleClick_():this.isFieldClick_()?this.doFieldClick_():
this.isBlockClick_()?this.doBlockClick_():this.isWorkspaceClick_()&&this.doWorkspaceClick_(),a.preventDefault(),a.stopPropagation(),this.dispose())};
Blockly.Gesture.prototype.cancel=function(){this.isEnding_?console.log("Trying to cancel a gesture recursively."):(this.isEnding_=!0,Blockly.longStop_(),this.isDraggingBubble_?this.bubbleDragger_.endBubbleDrag(this.mostRecentEvent_,this.currentDragDeltaXY_):this.isDraggingBlock_?this.blockDragger_.endBlockDrag(this.mostRecentEvent_,this.currentDragDeltaXY_):this.isDraggingWorkspace_&&this.workspaceDragger_.endDrag(this.currentDragDeltaXY_),this.dispose())};
Blockly.Gesture.prototype.handleRightClick=function(a){this.targetBlock_?(this.bringBlockToFront_(),Blockly.hideChaff(this.flyout_),this.targetBlock_.showContextMenu_(a)):this.startBubble_?this.startBubble_.showContextMenu_(a):this.startWorkspace_&&!this.flyout_&&(Blockly.hideChaff(),this.startWorkspace_.showContextMenu_(a));a.preventDefault();a.stopPropagation();this.dispose()};
Blockly.Gesture.prototype.handleWsStart=function(a,b){goog.asserts.assert(!this.hasStarted_,"Tried to call gesture.handleWsStart, but the gesture had already been started.");this.setStartWorkspace_(b);this.mostRecentEvent_=a;this.doStart(a)};Blockly.Gesture.prototype.handleFlyoutStart=function(a,b){goog.asserts.assert(!this.hasStarted_,"Tried to call gesture.handleFlyoutStart, but the gesture had already been started.");this.setStartFlyout_(b);this.handleWsStart(a,b.getWorkspace())};
Blockly.Gesture.prototype.handleBlockStart=function(a,b){goog.asserts.assert(!this.hasStarted_,"Tried to call gesture.handleBlockStart, but the gesture had already been started.");this.setStartBlock(b);this.mostRecentEvent_=a};Blockly.Gesture.prototype.handleBubbleStart=function(a,b){goog.asserts.assert(!this.hasStarted_,"Tried to call gesture.handleBubbleStart, but the gesture had already been started.");this.setStartBubble(b);this.mostRecentEvent_=a};
Blockly.Gesture.prototype.doBubbleClick_=function(){this.startBubble_.setFocus&&this.startBubble_.setFocus();this.startBubble_.select&&this.startBubble_.select()};Blockly.Gesture.prototype.doFieldClick_=function(){this.startField_.showEditor_();this.bringBlockToFront_()};
Blockly.Gesture.prototype.doBlockClick_=function(){if(this.flyout_&&this.flyout_.autoClose)this.targetBlock_.disabled||(Blockly.Events.getGroup()||Blockly.Events.setGroup(!0),this.flyout_.createBlock(this.targetBlock_).scheduleSnapAndBump());else if(!Blockly.WidgetDiv.isVisible()&&!Blockly.DropDownDiv.isVisible()){Blockly.Events.fire(new Blockly.Events.Ui(this.startBlock_,"click",void 0,void 0));var a=this.startBlock_.getRootBlock();Blockly.Events.fire(new Blockly.Events.Ui(a,"stackclick",void 0,
void 0))}this.bringBlockToFront_();Blockly.Events.setGroup(!1)};Blockly.Gesture.prototype.doWorkspaceClick_=function(){Blockly.selected&&Blockly.selected.unselect()};Blockly.Gesture.prototype.bringBlockToFront_=function(){this.targetBlock_&&!this.flyout_&&this.targetBlock_.bringToFront()};Blockly.Gesture.prototype.setStartField=function(a){goog.asserts.assert(!this.hasStarted_,"Tried to call gesture.setStartField, but the gesture had already been started.");this.startField_||(this.startField_=a)};
Blockly.Gesture.prototype.setStartBubble=function(a){this.startBubble_||(this.startBubble_=a)};Blockly.Gesture.prototype.setStartBlock=function(a){this.startBlock_||this.startBubble_||(this.startBlock_=a,this.shouldDuplicateOnDrag_=Blockly.scratchBlocksUtils.isShadowArgumentReporter(a),a.isInFlyout&&a!=a.getRootBlock()?this.setTargetBlock_(a.getRootBlock()):this.setTargetBlock_(a))};
Blockly.Gesture.prototype.setTargetBlock_=function(a){a.isShadow()&&!this.shouldDuplicateOnDrag_?this.setTargetBlock_(a.getParent()):this.targetBlock_=a};Blockly.Gesture.prototype.setStartWorkspace_=function(a){this.startWorkspace_||(this.startWorkspace_=a)};Blockly.Gesture.prototype.setStartFlyout_=function(a){this.flyout_||(this.flyout_=a)};Blockly.Gesture.prototype.isBubbleClick_=function(){return!!this.startBubble_&&!this.hasExceededDragRadius_};
Blockly.Gesture.prototype.isBlockClick_=function(){return!!this.startBlock_&&!this.hasExceededDragRadius_&&!this.isFieldClick_()};Blockly.Gesture.prototype.isFieldClick_=function(){return(this.startField_?this.startField_.isCurrentlyEditable():!1)&&!this.hasExceededDragRadius_};Blockly.Gesture.prototype.isWorkspaceClick_=function(){return!this.startBlock_&&!this.startBubble_&&!this.startField_&&!this.hasExceededDragRadius_};
Blockly.Gesture.prototype.isDragging=function(){return this.isDraggingWorkspace_||this.isDraggingBlock_||this.isDraggingBubble_};Blockly.Gesture.prototype.hasStarted=function(){return this.hasStarted_};Blockly.Gesture.prototype.forceStartBlockDrag=function(a,b){this.handleBlockStart(a,b);this.handleWsStart(a,b.workspace);this.hasExceededDragRadius_=this.isDraggingBlock_=!0;this.startDraggingBlock_()};
Blockly.Gesture.prototype.duplicateOnDrag_=function(){var a=null;Blockly.Events.disable();try{this.startWorkspace_.setResizesEnabled(!1);var b=Blockly.Xml.blockToDom(this.targetBlock_);a=Blockly.Xml.domToBlock(b,this.startWorkspace_);var c=this.targetBlock_.getRelativeToSurfaceXY();a.moveBy(c.x,c.y);a.setShadow(!1)}finally{Blockly.Events.enable()}a?(Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.BlockCreate(a)),a.select(),this.targetBlock_=a):console.error("Something went wrong while duplicating a block.")};Blockly.utils={};Blockly.utils.getMessageArray_=function(){return goog.global.Blockly.Msg};Blockly.utils.removeAttribute=function(a,b){goog.userAgent.IE&&goog.userAgent.isVersion("10.0")?a.setAttribute(b,null):a.removeAttribute(b)};Blockly.utils.addClass=function(a,b){var c=a.getAttribute("class")||"";if(-1!=(" "+c+" ").indexOf(" "+b+" "))return!1;c&&(c+=" ");a.setAttribute("class",c+b);return!0};
Blockly.utils.removeClass=function(a,b){var c=a.getAttribute("class");if(-1==(" "+c+" ").indexOf(" "+b+" "))return!1;c=c.split(/\s+/);for(var d=0;d<c.length;d++)c[d]&&c[d]!=b||(c.splice(d,1),d--);c.length?a.setAttribute("class",c.join(" ")):Blockly.utils.removeAttribute(a,"class");return!0};Blockly.utils.hasClass=function(a,b){return-1!=(" "+a.getAttribute("class")+" ").indexOf(" "+b+" ")};Blockly.utils.noEvent=function(a){a.preventDefault();a.stopPropagation()};
Blockly.utils.isTargetInput=function(a){return"textarea"==a.target.type||"text"==a.target.type||"number"==a.target.type||"email"==a.target.type||"password"==a.target.type||"search"==a.target.type||"tel"==a.target.type||"url"==a.target.type||a.target.isContentEditable};
Blockly.utils.getRelativeXY=function(a){var b=new goog.math.Coordinate(0,0),c=a.getAttribute("x");c&&(b.x=parseInt(c,10));if(c=a.getAttribute("y"))b.y=parseInt(c,10);if(c=(c=a.getAttribute("transform"))&&c.match(Blockly.utils.getRelativeXY.XY_REGEX_))b.x+=parseFloat(c[1]),c[3]&&(b.y+=parseFloat(c[3]));(a=a.getAttribute("style"))&&-1<a.indexOf("translate")&&((c=a.match(Blockly.utils.getRelativeXY.XY_2D_REGEX_))||(c=a.match(Blockly.utils.getRelativeXY.XY_3D_REGEX_)),c&&(b.x+=parseFloat(c[1]),c[3]&&
(b.y+=parseFloat(c[3]))));return b};Blockly.utils.getInjectionDivXY_=function(a){for(var b=0,c=0;a;){var d=Blockly.utils.getRelativeXY(a),e=Blockly.utils.getScale_(a);b=b*e+d.x;c=c*e+d.y;if(-1!=(" "+(a.getAttribute("class")||"")+" ").indexOf(" injectionDiv "))break;a=a.parentNode}return new goog.math.Coordinate(b,c)};Blockly.utils.getScale_=function(a){var b=1;(a=a.getAttribute("transform"))&&(a=a.match(Blockly.utils.getScale_.REGEXP_))&&a[0]&&(b=parseFloat(a[0]));return b};
Blockly.utils.getRelativeXY.XY_REGEX_=/translate\(\s*([-+\d.e]+)([ ,]\s*([-+\d.e]+)\s*\))?/;Blockly.utils.getScale_REGEXP_=/scale\(\s*([-+\d.e]+)\s*\)/;Blockly.utils.getRelativeXY.XY_3D_REGEX_=/transform:\s*translate3d\(\s*([-+\d.e]+)px([ ,]\s*([-+\d.e]+)\s*)px([ ,]\s*([-+\d.e]+)\s*)px\)?/;Blockly.utils.getRelativeXY.XY_2D_REGEX_=/transform:\s*translate\(\s*([-+\d.e]+)px([ ,]\s*([-+\d.e]+)\s*)px\)?/;
Blockly.utils.createSvgElement=function(a,b,c){a=document.createElementNS(Blockly.SVG_NS,a);for(var d in b)a.setAttribute(d,b[d]);document.body.runtimeStyle&&(a.runtimeStyle=a.currentStyle=a.style);c&&c.appendChild(a);return a};Blockly.utils.isRightButton=function(a){return a.ctrlKey&&goog.userAgent.MAC?!0:2==a.button};Blockly.utils.mouseToSvg=function(a,b,c){var d=b.createSVGPoint();d.x=a.clientX;d.y=a.clientY;c||(c=b.getScreenCTM().inverse());return d.matrixTransform(c)};
Blockly.utils.shortestStringLength=function(a){return a.length?a.reduce(function(a,c){return a.length<c.length?a:c}).length:0};Blockly.utils.commonWordPrefix=function(a,b){if(!a.length)return 0;if(1==a.length)return a[0].length;var c=0;b=b||Blockly.utils.shortestStringLength(a);for(var d=0;d<b;d++){for(var e=a[0][d],f=1;f<a.length;f++)if(e!=a[f][d])return c;" "==e&&(c=d+1)}for(f=1;f<a.length;f++)if((e=a[f][d])&&" "!=e)return c;return b};
Blockly.utils.commonWordSuffix=function(a,b){if(!a.length)return 0;if(1==a.length)return a[0].length;var c=0;b=b||Blockly.utils.shortestStringLength(a);for(var d=0;d<b;d++){for(var e=a[0].substr(-d-1,1),f=1;f<a.length;f++)if(e!=a[f].substr(-d-1,1))return c;" "==e&&(c=d+1)}for(f=1;f<a.length;f++)if((e=a[f].charAt(a[f].length-d-1))&&" "!=e)return c;return b};Blockly.utils.tokenizeInterpolation=function(a){return Blockly.utils.tokenizeInterpolation_(a,!0)};
Blockly.utils.replaceMessageReferences=function(a){if(!goog.isString(a))return a;a=Blockly.utils.tokenizeInterpolation_(a,!1);return a.length?a[0]:""};Blockly.utils.checkMessageReferences=function(a){for(var b=!0,c=/%{BKY_([a-zA-Z][a-zA-Z0-9_]*)}/g,d=c.exec(a);d;){var e=d[1];void 0==Blockly.utils.getMessageArray_()[e]&&(console.log("WARNING: No message string for %{BKY_"+e+"}."),b=!1);a=a.substring(d.index+e.length+1);d=c.exec(a)}return b};
Blockly.utils.tokenizeInterpolation_=function(a,b){var c=[],d=a.split("");d.push("");var e=0;a=[];for(var f=null,g=0;g<d.length;g++){var h=d[g];0==e?"%"==h?((h=a.join(""))&&c.push(h),a.length=0,e=1):a.push(h):1==e?"%"==h?(a.push(h),e=0):b&&"0"<=h&&"9">=h?(e=2,f=h,(h=a.join(""))&&c.push(h),a.length=0):"{"==h?e=3:(a.push("%",h),e=0):2==e?"0"<=h&&"9">=h?f+=h:(c.push(parseInt(f,10)),g--,e=0):3==e&&(""==h?(a.splice(0,0,"%{"),g--,e=0):"}"!=h?a.push(h):(e=a.join(""),/[a-zA-Z][a-zA-Z0-9_]*/.test(e)?(h=e.toUpperCase(),
(h=goog.string.startsWith(h,"BKY_")?h.substring(4):null)&&h in Blockly.Msg?(e=Blockly.Msg[h],goog.isString(e)?Array.prototype.push.apply(c,Blockly.utils.tokenizeInterpolation(e)):b?c.push(String(e)):c.push(e)):c.push("%{"+e+"}")):c.push("%{"+e+"}"),e=a.length=0))}(h=a.join(""))&&c.push(h);b=[];for(g=a.length=0;g<c.length;++g)"string"==typeof c[g]?a.push(c[g]):((h=a.join(""))&&b.push(h),a.length=0,b.push(c[g]));(h=a.join(""))&&b.push(h);a.length=0;return b};
Blockly.utils.genUid=function(){for(var a=Blockly.utils.genUid.soup_.length,b=[],c=0;20>c;c++)b[c]=Blockly.utils.genUid.soup_.charAt(Math.random()*a);return b.join("")};Blockly.utils.genUid.soup_="!#$%()*+,-./:;=?@[]^_`{|}~ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";Blockly.utils.wrap=function(a,b){a=a.split("\n");for(var c=0;c<a.length;c++)a[c]=Blockly.utils.wrapLine_(a[c],b);return a.join("\n")};
Blockly.utils.wrapLine_=function(a,b){if(a.length<=b)return a;for(var c=a.trim().split(/\s+/),d=0;d<c.length;d++)c[d].length>b&&(b=c[d].length);d=-Infinity;var e=1;do{var f=d;var g=a;a=[];var h=c.length/e,k=1;for(d=0;d<c.length-1;d++)k<(d+1.5)/h?(k++,a[d]=!0):a[d]=!1;a=Blockly.utils.wrapMutate_(c,a,b);d=Blockly.utils.wrapScore_(c,a,b);a=Blockly.utils.wrapToText_(c,a);e++}while(d>f);return g};
Blockly.utils.wrapScore_=function(a,b,c){for(var d=[0],e=[],f=0;f<a.length;f++)d[d.length-1]+=a[f].length,!0===b[f]?(d.push(0),e.push(a[f].charAt(a[f].length-1))):!1===b[f]&&d[d.length-1]++;a=Math.max.apply(Math,d);for(f=b=0;f<d.length;f++)b-=2*Math.pow(Math.abs(c-d[f]),1.5),b-=Math.pow(a-d[f],1.5),-1!=".?!".indexOf(e[f])?b+=c/3:-1!=",;)]}".indexOf(e[f])&&(b+=c/4);1<d.length&&d[d.length-1]<=d[d.length-2]&&(b+=.5);return b};
Blockly.utils.wrapMutate_=function(a,b,c){for(var d=Blockly.utils.wrapScore_(a,b,c),e,f=0;f<b.length-1;f++)if(b[f]!=b[f+1]){var g=[].concat(b);g[f]=!g[f];g[f+1]=!g[f+1];var h=Blockly.utils.wrapScore_(a,g,c);h>d&&(d=h,e=g)}return e?Blockly.utils.wrapMutate_(a,e,c):b};Blockly.utils.wrapToText_=function(a,b){for(var c=[],d=0;d<a.length;d++)c.push(a[d]),void 0!==b[d]&&c.push(b[d]?"\n":" ");return c.join("")};
Blockly.utils.is3dSupported=function(){if(void 0!==Blockly.utils.is3dSupported.cached_)return Blockly.utils.is3dSupported.cached_;if(!goog.global.getComputedStyle)return!1;var a=document.createElement("p"),b="none",c={webkitTransform:"-webkit-transform",OTransform:"-o-transform",msTransform:"-ms-transform",MozTransform:"-moz-transform",transform:"transform"};document.body.insertBefore(a,null);for(var d in c)if(void 0!==a.style[d]){a.style[d]="translate3d(1px,1px,1px)";b=goog.global.getComputedStyle(a);
if(!b)return document.body.removeChild(a),!1;b=b.getPropertyValue(c[d])}document.body.removeChild(a);Blockly.utils.is3dSupported.cached_="none"!==b;return Blockly.utils.is3dSupported.cached_};Blockly.utils.insertAfter_=function(a,b){var c=b.nextSibling;b=b.parentNode;if(!b)throw"Reference node has no parent.";c?b.insertBefore(a,c):b.appendChild(a)};
Blockly.utils.runAfterPageLoad=function(a){if(!document)throw Error("Blockly.utils.runAfterPageLoad() requires browser document.");if("complete"===document.readyState)a();else var b=setInterval(function(){"complete"===document.readyState&&(clearInterval(b),a())},10)};Blockly.utils.setCssTransform=function(a,b){a.style.transform=b;a.style["-webkit-transform"]=b};
Blockly.utils.getViewportBBox=function(){var a=goog.dom.getViewportSize(),b=goog.style.getViewportPageOffset(document);return{right:a.width+b.x,bottom:a.height+b.y,top:b.y,left:b.x}};Blockly.Grid=function(a,b){this.gridPattern_=a;this.spacing_=b.spacing;this.length_=b.length;this.line2_=(this.line1_=a.firstChild)&&this.line1_.nextSibling;this.snapToGrid_=b.snap};Blockly.Grid.prototype.scale_=1;Blockly.Grid.prototype.dispose=function(){this.gridPattern_=null};Blockly.Grid.prototype.shouldSnap=function(){return this.snapToGrid_};Blockly.Grid.prototype.getSpacing=function(){return this.spacing_};Blockly.Grid.prototype.getPatternId=function(){return this.gridPattern_.id};
Blockly.Grid.prototype.update=function(a){this.scale_=a;var b=this.spacing_*a||100;this.gridPattern_.setAttribute("width",b);this.gridPattern_.setAttribute("height",b);b=Math.floor(this.spacing_/2)+.5;var c=b-this.length_/2,d=b+this.length_/2;b*=a;c*=a;d*=a;this.setLineAttributes_(this.line1_,a,c,d,b,b);this.setLineAttributes_(this.line2_,a,b,b,c,d)};
Blockly.Grid.prototype.setLineAttributes_=function(a,b,c,d,e,f){a&&(a.setAttribute("stroke-width",b),a.setAttribute("x1",c),a.setAttribute("y1",e),a.setAttribute("x2",d),a.setAttribute("y2",f))};Blockly.Grid.prototype.moveTo=function(a,b){this.gridPattern_.setAttribute("x",a);this.gridPattern_.setAttribute("y",b);(goog.userAgent.IE||goog.userAgent.EDGE)&&this.update(this.scale_)};
Blockly.Grid.createDom=function(a,b,c){a=Blockly.utils.createSvgElement("pattern",{id:"blocklyGridPattern"+a,patternUnits:"userSpaceOnUse"},c);0<b.length&&0<b.spacing?(Blockly.utils.createSvgElement("line",{stroke:b.colour},a),1<b.length&&Blockly.utils.createSvgElement("line",{stroke:b.colour},a)):Blockly.utils.createSvgElement("line",{},a);return a};Blockly.Options=function(a){var b=!!a.readOnly;if(b)var c=null,d=!1,e=!1,f=!1,g=!1,h=!1,k=!1;else!a.toolbox&&Blockly.Blocks.defaultToolbox&&(c=(new DOMParser).parseFromString(Blockly.Blocks.defaultToolbox,"text/xml"),a.toolbox=c.documentElement),c=Blockly.Options.parseToolboxTree(a.toolbox),d=!(!c||!c.getElementsByTagName("category").length),e=a.trashcan,void 0===e&&(e=!1),f=a.collapse,void 0===f&&(f=d),g=a.comments,void 0===g&&(g=d),h=a.disable,void 0===h&&(h=d),k=a.sounds,void 0===k&&(k=!0);var m=
!!a.rtl,l=a.horizontalLayout;void 0===l&&(l=!1);var n=a.toolboxPosition;n="end"===n?!1:!0;n=l?n?Blockly.TOOLBOX_AT_TOP:Blockly.TOOLBOX_AT_BOTTOM:n==m?Blockly.TOOLBOX_AT_RIGHT:Blockly.TOOLBOX_AT_LEFT;var q=a.scrollbars;void 0===q&&(q=d);var p=a.css;void 0===p&&(p=!0);var r="https://blockly-demo.appspot.com/static/media/";a.media?r=a.media:a.path&&(r=a.path+"media/");var w=void 0===a.oneBasedIndex?!0:!!a.oneBasedIndex,v=!!a.realtime,x=v?a.realtimeOptions:void 0,t=a.colours;if(t)for(var u in t)t.hasOwnProperty(u)&&
Blockly.Colours.hasOwnProperty(u)&&(Blockly.Colours[u]=t[u]);this.RTL=m;this.oneBasedIndex=w;this.collapse=f;this.comments=g;this.disable=h;this.readOnly=b;this.pathToMedia=r;this.hasCategories=d;this.hasScrollbars=q;this.hasTrashcan=e;this.hasSounds=k;this.hasCss=p;this.horizontalLayout=l;this.languageTree=c;this.gridOptions=Blockly.Options.parseGridOptions_(a);this.zoomOptions=Blockly.Options.parseZoomOptions_(a);this.enableRealtime=v;this.realtimeOptions=x;this.toolboxPosition=n};
Blockly.Options.prototype.parentWorkspace=null;Blockly.Options.prototype.setMetrics=null;Blockly.Options.prototype.getMetrics=null;
Blockly.Options.parseZoomOptions_=function(a){a=a.zoom||{};var b={};b.controls=void 0===a.controls?!1:!!a.controls;b.wheel=void 0===a.wheel?!1:!!a.wheel;b.startScale=void 0===a.startScale?1:parseFloat(a.startScale);b.maxScale=void 0===a.maxScale?3:parseFloat(a.maxScale);b.minScale=void 0===a.minScale?.3:parseFloat(a.minScale);b.scaleSpeed=void 0===a.scaleSpeed?1.2:parseFloat(a.scaleSpeed);return b};
Blockly.Options.parseGridOptions_=function(a){a=a.grid||{};var b={};b.spacing=parseFloat(a.spacing)||0;b.colour=a.colour||"#888";b.length=parseFloat(a.length)||1;b.snap=0<b.spacing&&!!a.snap;return b};Blockly.Options.parseToolboxTree=function(a){a?("string"!=typeof a&&("undefined"==typeof XSLTProcessor&&a.outerHTML?a=a.outerHTML:a instanceof Element||(a=null)),"string"==typeof a&&(a=Blockly.Xml.textToDom(a))):a=null;return a};Blockly.ScrollbarPair=function(a){this.workspace_=a;this.hScroll=new Blockly.Scrollbar(a,!0,!0,"blocklyMainWorkspaceScrollbar");this.vScroll=new Blockly.Scrollbar(a,!1,!0,"blocklyMainWorkspaceScrollbar");this.corner_=Blockly.utils.createSvgElement("rect",{height:Blockly.Scrollbar.scrollbarThickness,width:Blockly.Scrollbar.scrollbarThickness,"class":"blocklyScrollbarBackground"},null);Blockly.utils.insertAfter_(this.corner_,a.getBubbleCanvas())};Blockly.ScrollbarPair.prototype.oldHostMetrics_=null;
Blockly.ScrollbarPair.prototype.dispose=function(){goog.dom.removeNode(this.corner_);this.oldHostMetrics_=this.workspace_=this.corner_=null;this.hScroll.dispose();this.hScroll=null;this.vScroll.dispose();this.vScroll=null};
Blockly.ScrollbarPair.prototype.resize=function(){var a=this.workspace_.getMetrics();if(a){var b=!1,c=!1;this.oldHostMetrics_&&this.oldHostMetrics_.viewWidth==a.viewWidth&&this.oldHostMetrics_.viewHeight==a.viewHeight&&this.oldHostMetrics_.absoluteTop==a.absoluteTop&&this.oldHostMetrics_.absoluteLeft==a.absoluteLeft?(this.oldHostMetrics_&&this.oldHostMetrics_.contentWidth==a.contentWidth&&this.oldHostMetrics_.viewLeft==a.viewLeft&&this.oldHostMetrics_.contentLeft==a.contentLeft||(b=!0),this.oldHostMetrics_&&
this.oldHostMetrics_.contentHeight==a.contentHeight&&this.oldHostMetrics_.viewTop==a.viewTop&&this.oldHostMetrics_.contentTop==a.contentTop||(c=!0)):c=b=!0;b&&this.hScroll.resize(a);c&&this.vScroll.resize(a);this.oldHostMetrics_&&this.oldHostMetrics_.viewWidth==a.viewWidth&&this.oldHostMetrics_.absoluteLeft==a.absoluteLeft||this.corner_.setAttribute("x",this.vScroll.position_.x);this.oldHostMetrics_&&this.oldHostMetrics_.viewHeight==a.viewHeight&&this.oldHostMetrics_.absoluteTop==a.absoluteTop||this.corner_.setAttribute("y",
this.hScroll.position_.y);this.oldHostMetrics_=a}};Blockly.ScrollbarPair.prototype.set=function(a,b){var c={};a*=this.hScroll.ratio_;b*=this.vScroll.ratio_;var d=this.vScroll.scrollViewSize_;c.x=this.getRatio_(a,this.hScroll.scrollViewSize_);c.y=this.getRatio_(b,d);this.workspace_.setMetrics(c);this.hScroll.setHandlePosition(a);this.vScroll.setHandlePosition(b)};Blockly.ScrollbarPair.prototype.getRatio_=function(a,b){a/=b;return isNaN(a)?0:a};
Blockly.Scrollbar=function(a,b,c,d){this.workspace_=a;this.pair_=c||!1;this.horizontal_=b;this.oldHostMetrics_=null;this.createDom_(d);this.position_=new goog.math.Coordinate(0,0);a=Blockly.Scrollbar.scrollbarThickness;b?(this.svgBackground_.setAttribute("height",a),this.outerSvg_.setAttribute("height",a),this.svgHandle_.setAttribute("height",a-5),this.svgHandle_.setAttribute("y",2.5),this.lengthAttribute_="width",this.positionAttribute_="x"):(this.svgBackground_.setAttribute("width",a),this.outerSvg_.setAttribute("width",
a),this.svgHandle_.setAttribute("width",a-5),this.svgHandle_.setAttribute("x",2.5),this.lengthAttribute_="height",this.positionAttribute_="y");this.onMouseDownBarWrapper_=Blockly.bindEventWithChecks_(this.svgBackground_,"mousedown",this,this.onMouseDownBar_);this.onMouseDownHandleWrapper_=Blockly.bindEventWithChecks_(this.svgHandle_,"mousedown",this,this.onMouseDownHandle_)};Blockly.Scrollbar.prototype.origin_=new goog.math.Coordinate(0,0);Blockly.Scrollbar.prototype.originHasChanged_=!0;
Blockly.Scrollbar.prototype.scrollViewSize_=0;Blockly.Scrollbar.prototype.handleLength_=0;Blockly.Scrollbar.prototype.handlePosition_=0;Blockly.Scrollbar.prototype.isVisible_=!0;Blockly.Scrollbar.prototype.containerVisible_=!0;Blockly.Scrollbar.scrollbarThickness=11;goog.events.BrowserFeature.TOUCH_ENABLED&&(Blockly.Scrollbar.scrollbarThickness=14);
Blockly.Scrollbar.metricsAreEquivalent_=function(a,b){return a&&b&&a.viewWidth==b.viewWidth&&a.viewHeight==b.viewHeight&&a.viewLeft==b.viewLeft&&a.viewTop==b.viewTop&&a.absoluteTop==b.absoluteTop&&a.absoluteLeft==b.absoluteLeft&&a.contentWidth==b.contentWidth&&a.contentHeight==b.contentHeight&&a.contentLeft==b.contentLeft&&a.contentTop==b.contentTop?!0:!1};
Blockly.Scrollbar.prototype.dispose=function(){this.cleanUp_();Blockly.unbindEvent_(this.onMouseDownBarWrapper_);this.onMouseDownBarWrapper_=null;Blockly.unbindEvent_(this.onMouseDownHandleWrapper_);this.onMouseDownHandleWrapper_=null;goog.dom.removeNode(this.outerSvg_);this.workspace_=this.svgHandle_=this.svgBackground_=this.svgGroup_=this.outerSvg_=null};Blockly.Scrollbar.prototype.setHandleLength_=function(a){this.handleLength_=a;this.svgHandle_.setAttribute(this.lengthAttribute_,this.handleLength_)};
Blockly.Scrollbar.prototype.setHandlePosition=function(a){this.handlePosition_=a;this.svgHandle_.setAttribute(this.positionAttribute_,this.handlePosition_)};Blockly.Scrollbar.prototype.setScrollViewSize_=function(a){this.scrollViewSize_=a;this.outerSvg_.setAttribute(this.lengthAttribute_,this.scrollViewSize_);this.svgBackground_.setAttribute(this.lengthAttribute_,this.scrollViewSize_)};Blockly.ScrollbarPair.prototype.setContainerVisible=function(a){this.hScroll.setContainerVisible(a);this.vScroll.setContainerVisible(a)};
Blockly.Scrollbar.prototype.setPosition_=function(a,b){this.position_.x=a;this.position_.y=b;Blockly.utils.setCssTransform(this.outerSvg_,"translate("+(this.position_.x+this.origin_.x)+"px,"+(this.position_.y+this.origin_.y)+"px)")};
Blockly.Scrollbar.prototype.resize=function(a){if(!a&&(a=this.workspace_.getMetrics(),!a))return;if(this.originHasChanged_)this.originHasChanged_=!1;else if(Blockly.Scrollbar.metricsAreEquivalent_(a,this.oldHostMetrics_))return;this.oldHostMetrics_=a;this.horizontal_?this.resizeHorizontal_(a):this.resizeVertical_(a);this.onScroll_()};Blockly.Scrollbar.prototype.resizeHorizontal_=function(a){this.resizeViewHorizontal(a)};
Blockly.Scrollbar.prototype.resizeViewHorizontal=function(a){var b=a.viewWidth-1;this.pair_&&(b-=Blockly.Scrollbar.scrollbarThickness);this.setScrollViewSize_(Math.max(0,b));b=a.absoluteLeft+.5;this.pair_&&this.workspace_.RTL&&(b+=Blockly.Scrollbar.scrollbarThickness);this.setPosition_(b,a.absoluteTop+a.viewHeight-Blockly.Scrollbar.scrollbarThickness-.5);this.resizeContentHorizontal(a)};
Blockly.Scrollbar.prototype.resizeContentHorizontal=function(a){this.pair_||this.setVisible(this.scrollViewSize_<a.contentWidth);this.ratio_=this.scrollViewSize_/a.contentWidth;if(-Infinity==this.ratio_||Infinity==this.ratio_||isNaN(this.ratio_))this.ratio_=0;this.setHandleLength_(Math.max(0,a.viewWidth*this.ratio_));this.setHandlePosition(this.constrainHandle_((a.viewLeft-a.contentLeft)*this.ratio_))};Blockly.Scrollbar.prototype.resizeVertical_=function(a){this.resizeViewVertical(a)};
Blockly.Scrollbar.prototype.resizeViewVertical=function(a){var b=a.viewHeight-1;this.pair_&&(b-=Blockly.Scrollbar.scrollbarThickness);this.setScrollViewSize_(Math.max(0,b));b=a.absoluteLeft+.5;this.workspace_.RTL||(b+=a.viewWidth-Blockly.Scrollbar.scrollbarThickness-1);this.setPosition_(b,a.absoluteTop+.5);this.resizeContentVertical(a)};
Blockly.Scrollbar.prototype.resizeContentVertical=function(a){this.pair_||this.setVisible(this.scrollViewSize_<a.contentHeight);this.ratio_=this.scrollViewSize_/a.contentHeight;if(-Infinity==this.ratio_||Infinity==this.ratio_||isNaN(this.ratio_))this.ratio_=0;this.setHandleLength_(Math.max(0,a.viewHeight*this.ratio_));this.setHandlePosition(this.constrainHandle_((a.viewTop-a.contentTop)*this.ratio_))};
Blockly.Scrollbar.prototype.createDom_=function(a){var b="blocklyScrollbar"+(this.horizontal_?"Horizontal":"Vertical");a&&(b+=" "+a);this.outerSvg_=Blockly.utils.createSvgElement("svg",{"class":b},null);this.svgGroup_=Blockly.utils.createSvgElement("g",{},this.outerSvg_);this.svgBackground_=Blockly.utils.createSvgElement("rect",{"class":"blocklyScrollbarBackground"},this.svgGroup_);a=Math.floor((Blockly.Scrollbar.scrollbarThickness-5)/2);this.svgHandle_=Blockly.utils.createSvgElement("rect",{"class":"blocklyScrollbarHandle",
rx:a,ry:a},this.svgGroup_);Blockly.utils.insertAfter_(this.outerSvg_,this.workspace_.getParentSvg())};Blockly.Scrollbar.prototype.isVisible=function(){return this.isVisible_};Blockly.Scrollbar.prototype.setContainerVisible=function(a){var b=a!=this.containerVisible_;this.containerVisible_=a;b&&this.updateDisplay_()};Blockly.Scrollbar.prototype.setVisible=function(a){var b=a!=this.isVisible();if(this.pair_)throw"Unable to toggle visibility of paired scrollbars.";this.isVisible_=a;b&&this.updateDisplay_()};
Blockly.Scrollbar.prototype.updateDisplay_=function(){this.containerVisible_&&this.isVisible()?this.outerSvg_.setAttribute("display","block"):this.outerSvg_.setAttribute("display","none")};
Blockly.Scrollbar.prototype.onMouseDownBar_=function(a){this.workspace_.markFocused();Blockly.Touch.clearTouchIdentifier();this.cleanUp_();if(Blockly.utils.isRightButton(a))a.stopPropagation();else{var b=Blockly.utils.mouseToSvg(a,this.workspace_.getParentSvg(),this.workspace_.getInverseScreenCTM());b=this.horizontal_?b.x:b.y;var c=Blockly.utils.getInjectionDivXY_(this.svgHandle_);c=this.horizontal_?c.x:c.y;var d=this.handlePosition_,e=.95*this.handleLength_;b<=c?d-=e:b>=c+this.handleLength_&&(d+=
e);Blockly.WidgetDiv.hide(!0);Blockly.DropDownDiv.hideWithoutAnimation();this.setHandlePosition(this.constrainHandle_(d));this.onScroll_();a.stopPropagation();a.preventDefault()}};
Blockly.Scrollbar.prototype.onMouseDownHandle_=function(a){this.workspace_.markFocused();this.cleanUp_();Blockly.utils.isRightButton(a)?a.stopPropagation():(this.startDragHandle=this.handlePosition_,this.workspace_.setupDragSurface(),this.startDragMouse_=this.horizontal_?a.clientX:a.clientY,Blockly.Scrollbar.onMouseUpWrapper_=Blockly.bindEventWithChecks_(document,"mouseup",this,this.onMouseUpHandle_),Blockly.Scrollbar.onMouseMoveWrapper_=Blockly.bindEventWithChecks_(document,"mousemove",this,this.onMouseMoveHandle_),
Blockly.WidgetDiv.hide(!0),Blockly.DropDownDiv.hideWithoutAnimation(),a.stopPropagation(),a.preventDefault())};Blockly.Scrollbar.prototype.onMouseMoveHandle_=function(a){this.setHandlePosition(this.constrainHandle_(this.startDragHandle+((this.horizontal_?a.clientX:a.clientY)-this.startDragMouse_)));this.onScroll_()};Blockly.Scrollbar.prototype.onMouseUpHandle_=function(){this.workspace_.resetDragSurface();Blockly.Touch.clearTouchIdentifier();this.cleanUp_()};
Blockly.Scrollbar.prototype.cleanUp_=function(){Blockly.hideChaff(!0);Blockly.Scrollbar.onMouseUpWrapper_&&(Blockly.unbindEvent_(Blockly.Scrollbar.onMouseUpWrapper_),Blockly.Scrollbar.onMouseUpWrapper_=null);Blockly.Scrollbar.onMouseMoveWrapper_&&(Blockly.unbindEvent_(Blockly.Scrollbar.onMouseMoveWrapper_),Blockly.Scrollbar.onMouseMoveWrapper_=null)};
Blockly.Scrollbar.prototype.constrainHandle_=function(a){return a=0>=a||isNaN(a)||this.scrollViewSize_<this.handleLength_?0:Math.min(a,this.scrollViewSize_-this.handleLength_)};Blockly.Scrollbar.prototype.onScroll_=function(){var a=this.handlePosition_/this.scrollViewSize_;isNaN(a)&&(a=0);var b={};this.horizontal_?b.x=a:b.y=a;this.workspace_.setMetrics(b)};Blockly.Scrollbar.prototype.set=function(a){this.setHandlePosition(this.constrainHandle_(a*this.ratio_));this.onScroll_()};
Blockly.Scrollbar.prototype.setOrigin=function(a,b){if(a!=this.origin_.x||b!=this.origin_.y)this.origin_=new goog.math.Coordinate(a,b),this.originHasChanged_=!0};Blockly.Trashcan=function(a){this.workspace_=a};Blockly.Trashcan.prototype.WIDTH_=47;Blockly.Trashcan.prototype.BODY_HEIGHT_=44;Blockly.Trashcan.prototype.LID_HEIGHT_=16;Blockly.Trashcan.prototype.MARGIN_BOTTOM_=20;Blockly.Trashcan.prototype.MARGIN_SIDE_=20;Blockly.Trashcan.prototype.MARGIN_HOTSPOT_=10;Blockly.Trashcan.prototype.SPRITE_LEFT_=0;Blockly.Trashcan.prototype.SPRITE_TOP_=32;Blockly.Trashcan.prototype.isOpen=!1;Blockly.Trashcan.prototype.svgGroup_=null;
Blockly.Trashcan.prototype.svgLid_=null;Blockly.Trashcan.prototype.lidTask_=0;Blockly.Trashcan.prototype.lidOpen_=0;Blockly.Trashcan.prototype.left_=0;Blockly.Trashcan.prototype.top_=0;
Blockly.Trashcan.prototype.createDom=function(){this.svgGroup_=Blockly.utils.createSvgElement("g",{"class":"blocklyTrash"},null);var a=String(Math.random()).substring(2);var b=Blockly.utils.createSvgElement("clipPath",{id:"blocklyTrashBodyClipPath"+a},this.svgGroup_);Blockly.utils.createSvgElement("rect",{width:this.WIDTH_,height:this.BODY_HEIGHT_,y:this.LID_HEIGHT_},b);Blockly.utils.createSvgElement("image",{width:Blockly.SPRITE.width,x:-this.SPRITE_LEFT_,height:Blockly.SPRITE.height,y:-this.SPRITE_TOP_,
"clip-path":"url(#blocklyTrashBodyClipPath"+a+")"},this.svgGroup_).setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.workspace_.options.pathToMedia+Blockly.SPRITE.url);b=Blockly.utils.createSvgElement("clipPath",{id:"blocklyTrashLidClipPath"+a},this.svgGroup_);Blockly.utils.createSvgElement("rect",{width:this.WIDTH_,height:this.LID_HEIGHT_},b);this.svgLid_=Blockly.utils.createSvgElement("image",{width:Blockly.SPRITE.width,x:-this.SPRITE_LEFT_,height:Blockly.SPRITE.height,y:-this.SPRITE_TOP_,
"clip-path":"url(#blocklyTrashLidClipPath"+a+")"},this.svgGroup_);this.svgLid_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.workspace_.options.pathToMedia+Blockly.SPRITE.url);Blockly.bindEventWithChecks_(this.svgGroup_,"mouseup",this,this.click);this.animateLid_();return this.svgGroup_};Blockly.Trashcan.prototype.init=function(a){this.bottom_=this.MARGIN_BOTTOM_+a;this.setOpen_(!1);return this.bottom_+this.BODY_HEIGHT_+this.LID_HEIGHT_};
Blockly.Trashcan.prototype.dispose=function(){this.svgGroup_&&(goog.dom.removeNode(this.svgGroup_),this.svgGroup_=null);this.workspace_=this.svgLid_=null;clearTimeout(this.lidTask_)};
Blockly.Trashcan.prototype.position=function(){var a=this.workspace_.getMetrics();a&&(this.workspace_.RTL?(this.left_=this.MARGIN_SIDE_+Blockly.Scrollbar.scrollbarThickness,a.toolboxPosition==Blockly.TOOLBOX_AT_LEFT&&(this.left_+=a.flyoutWidth,this.workspace_.toolbox_&&(this.left_+=a.absoluteLeft))):(this.left_=a.viewWidth+a.absoluteLeft-this.WIDTH_-this.MARGIN_SIDE_-Blockly.Scrollbar.scrollbarThickness,a.toolboxPosition==Blockly.TOOLBOX_AT_RIGHT&&(this.left_-=a.flyoutWidth)),this.top_=a.viewHeight+
a.absoluteTop-(this.BODY_HEIGHT_+this.LID_HEIGHT_)-this.bottom_,a.toolboxPosition==Blockly.TOOLBOX_AT_BOTTOM&&(this.top_-=a.flyoutHeight),this.svgGroup_.setAttribute("transform","translate("+this.left_+","+this.top_+")"))};
Blockly.Trashcan.prototype.getClientRect=function(){if(!this.svgGroup_)return null;var a=this.svgGroup_.getBoundingClientRect();return new goog.math.Rect(a.left+this.SPRITE_LEFT_-this.MARGIN_HOTSPOT_,a.top+this.SPRITE_TOP_-this.MARGIN_HOTSPOT_,this.WIDTH_+2*this.MARGIN_HOTSPOT_,this.LID_HEIGHT_+this.BODY_HEIGHT_+2*this.MARGIN_HOTSPOT_)};Blockly.Trashcan.prototype.setOpen_=function(a){this.isOpen!=a&&(clearTimeout(this.lidTask_),this.isOpen=a,this.animateLid_())};
Blockly.Trashcan.prototype.animateLid_=function(){this.lidOpen_+=this.isOpen?.2:-.2;this.lidOpen_=goog.math.clamp(this.lidOpen_,0,1);var a=45*this.lidOpen_;this.svgLid_.setAttribute("transform","rotate("+(this.workspace_.RTL?-a:a)+","+(this.workspace_.RTL?4:this.WIDTH_-4)+","+(this.LID_HEIGHT_-2)+")");a=goog.math.lerp(.4,.8,this.lidOpen_);this.svgGroup_.style.opacity=a;0<this.lidOpen_&&1>this.lidOpen_&&(this.lidTask_=setTimeout(this.animateLid_.bind(this),20))};Blockly.Trashcan.prototype.close=function(){this.setOpen_(!1)};
Blockly.Trashcan.prototype.click=function(){var a=this.workspace_.startScrollX-this.workspace_.scrollX,b=this.workspace_.startScrollY-this.workspace_.scrollY;Math.sqrt(a*a+b*b)>Blockly.DRAG_RADIUS||console.log("TODO: Inspect trash.")};Blockly.WorkspaceAudio=function(a){this.parentWorkspace_=a;this.SOUNDS_=Object.create(null)};Blockly.WorkspaceAudio.prototype.lastSound_=null;Blockly.WorkspaceAudio.prototype.dispose=function(){this.SOUNDS_=this.parentWorkspace_=null};Blockly.WorkspaceAudio.prototype.load=function(a,b){if(a.length){try{var c=new window.Audio}catch(h){return}for(var d,e=0;e<a.length;e++){var f=a[e],g=f.match(/\.(\w+)$/);if(g&&c.canPlayType("audio/"+g[1])){d=new window.Audio(f);break}}d&&d.play&&(this.SOUNDS_[b]=d)}};
Blockly.WorkspaceAudio.prototype.preload=function(){for(var a in this.SOUNDS_){var b=this.SOUNDS_[a];b.volume=.01;b.play();b.pause();if(goog.userAgent.IPAD||goog.userAgent.IPHONE)break}};
Blockly.WorkspaceAudio.prototype.play=function(a,b){var c=this.SOUNDS_[a];c?(a=new Date,null!=this.lastSound_&&a-this.lastSound_<Blockly.SOUND_LIMIT||(this.lastSound_=a,c=goog.userAgent.DOCUMENT_MODE&&9===goog.userAgent.DOCUMENT_MODE||goog.userAgent.IPAD||goog.userAgent.ANDROID?c:c.cloneNode(),c.volume=void 0===b?1:b,c.play())):this.parentWorkspace_&&this.parentWorkspace_.getAudioManager().play(a,b)};Blockly.WorkspaceCommentSvg.render={};Blockly.WorkspaceCommentSvg.BORDER_WIDTH=1;Blockly.WorkspaceCommentSvg.RESIZE_SIZE=12*Blockly.WorkspaceCommentSvg.BORDER_WIDTH;Blockly.WorkspaceCommentSvg.TEXTAREA_OFFSET=12;Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT=32;Blockly.WorkspaceCommentSvg.MINIMIZE_ICON_SIZE=16;Blockly.WorkspaceCommentSvg.DELETE_ICON_SIZE=12;Blockly.WorkspaceCommentSvg.TOP_BAR_ICON_INSET=6;Blockly.WorkspaceCommentSvg.MINIMIZE_WIDTH=200;
Blockly.WorkspaceCommentSvg.prototype.getHeightWidth=function(){return{width:this.getWidth(),height:this.getHeight()}};
Blockly.WorkspaceCommentSvg.prototype.render=function(){if(!this.rendered_){var a=this.getHeightWidth();this.commentEditor_=this.createEditor_();this.svgGroup_.appendChild(this.commentEditor_);this.createCommentTopBar_();this.svgRectTarget_=Blockly.utils.createSvgElement("rect",{"class":"blocklyDraggable scratchCommentTarget",x:0,y:0,rx:4*Blockly.WorkspaceCommentSvg.BORDER_WIDTH,ry:4*Blockly.WorkspaceCommentSvg.BORDER_WIDTH});this.svgGroup_.appendChild(this.svgRectTarget_);this.addResizeDom_();this.isMinimized()?
(this.minimizeArrow_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"comment-arrow-up.svg"),this.commentEditor_.setAttribute("display","none"),this.resizeGroup_.setAttribute("display","none")):(this.minimizeArrow_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"comment-arrow-down.svg"),this.topBarLabel_.setAttribute("display","none"));this.setSize(a.width,a.height);this.textarea_.value=this.content_;
this.rendered_=!0;this.resizeGroup_&&(Blockly.bindEventWithChecks_(this.resizeGroup_,"mousedown",this,this.resizeMouseDown_),Blockly.bindEventWithChecks_(this.resizeGroup_,"mouseup",this,this.resizeMouseUp_));Blockly.bindEventWithChecks_(this.minimizeArrow_,"mousedown",this,this.minimizeArrowMouseDown_);Blockly.bindEventWithChecks_(this.minimizeArrow_,"mouseout",this,this.minimizeArrowMouseOut_);Blockly.bindEventWithChecks_(this.minimizeArrow_,"mouseup",this,this.minimizeArrowMouseUp_);Blockly.bindEventWithChecks_(this.deleteIcon_,
"mousedown",this,this.deleteMouseDown_);Blockly.bindEventWithChecks_(this.deleteIcon_,"mouseout",this,this.deleteMouseOut_);Blockly.bindEventWithChecks_(this.deleteIcon_,"mouseup",this,this.deleteMouseUp_)}};
Blockly.WorkspaceCommentSvg.prototype.createEditor_=function(){this.foreignObject_=Blockly.utils.createSvgElement("foreignObject",{x:Blockly.WorkspaceCommentSvg.BORDER_WIDTH,y:Blockly.WorkspaceCommentSvg.BORDER_WIDTH+Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT,"class":"scratchCommentForeignObject"},null);var a=document.createElementNS(Blockly.HTML_NS,"body");a.setAttribute("xmlns",Blockly.HTML_NS);a.className="blocklyMinimalBody scratchCommentBody";var b=document.createElementNS(Blockly.HTML_NS,"textarea");
b.className="scratchCommentTextarea scratchCommentText";b.setAttribute("dir",this.RTL?"RTL":"LTR");b.setAttribute("maxlength",Blockly.WorkspaceComment.COMMENT_TEXT_LIMIT);a.appendChild(b);this.textarea_=b;this.textarea_.style.margin=Blockly.WorkspaceCommentSvg.TEXTAREA_OFFSET+"px";this.foreignObject_.appendChild(a);Blockly.bindEventWithChecks_(b,"wheel",this,function(a){a.stopPropagation()});Blockly.bindEventWithChecks_(b,"change",this,function(a){this.text_!=b.value&&this.setText(b.value)});this.labelText_=
this.getLabelText();return this.foreignObject_};
Blockly.WorkspaceCommentSvg.prototype.addResizeDom_=function(){this.resizeGroup_=Blockly.utils.createSvgElement("g",{"class":this.RTL?"scratchCommentResizeSW":"scratchCommentResizeSE"},this.svgGroup_);var a=Blockly.WorkspaceCommentSvg.RESIZE_SIZE;Blockly.utils.createSvgElement("polygon",{points:"0,x x,x x,0".replace(/x/g,a.toString())},this.resizeGroup_);Blockly.utils.createSvgElement("line",{"class":"blocklyResizeLine",x1:a/3,y1:a-1,x2:a-1,y2:a/3},this.resizeGroup_);Blockly.utils.createSvgElement("line",
{"class":"blocklyResizeLine",x1:2*a/3,y1:a-1,x2:a-1,y2:2*a/3},this.resizeGroup_)};Blockly.WorkspaceCommentSvg.prototype.createCommentTopBar_=function(){this.svgHandleTarget_=Blockly.utils.createSvgElement("rect",{"class":"blocklyDraggable scratchCommentTopBar",x:Blockly.WorkspaceCommentSvg.BORDER_WIDTH,y:Blockly.WorkspaceCommentSvg.BORDER_WIDTH,height:Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT},this.svgGroup_);this.createTopBarIcons_();this.createTopBarLabel_()};
Blockly.WorkspaceCommentSvg.prototype.createTopBarLabel_=function(){this.topBarLabel_=Blockly.utils.createSvgElement("text",{"class":"scratchCommentText",x:this.width_/2,y:Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT/2+Blockly.WorkspaceCommentSvg.BORDER_WIDTH,"text-anchor":"middle","dominant-baseline":"middle"},this.svgGroup_);var a=document.createTextNode(this.labelText_);this.topBarLabel_.appendChild(a)};
Blockly.WorkspaceCommentSvg.prototype.createTopBarIcons_=function(){var a=Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT/2+Blockly.WorkspaceCommentSvg.BORDER_WIDTH,b=Blockly.WorkspaceCommentSvg.TOP_BAR_ICON_INSET;this.minimizeArrow_=Blockly.utils.createSvgElement("image",{x:b,y:a-Blockly.WorkspaceCommentSvg.MINIMIZE_ICON_SIZE/2,width:Blockly.WorkspaceCommentSvg.MINIMIZE_ICON_SIZE,height:Blockly.WorkspaceCommentSvg.MINIMIZE_ICON_SIZE},this.svgGroup_);this.deleteIcon_=Blockly.utils.createSvgElement("image",
{x:b,y:a-Blockly.WorkspaceCommentSvg.DELETE_ICON_SIZE/2,width:Blockly.WorkspaceCommentSvg.DELETE_ICON_SIZE,height:Blockly.WorkspaceCommentSvg.DELETE_ICON_SIZE},this.svgGroup_);this.deleteIcon_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"delete-x.svg")};Blockly.WorkspaceCommentSvg.prototype.minimizeArrowMouseDown_=function(a){this.shouldToggleMinimize_=!0;a.stopPropagation()};
Blockly.WorkspaceCommentSvg.prototype.minimizeArrowMouseOut_=function(a){this.shouldToggleMinimize_=!1};Blockly.WorkspaceCommentSvg.prototype.minimizeArrowMouseUp_=function(a){this.shouldToggleMinimize_&&(this.shouldToggleMinimize=!1,this.toggleMinimize_());a.stopPropagation()};Blockly.WorkspaceCommentSvg.prototype.deleteMouseDown_=function(a){this.shouldDelete_=!0;a.stopPropagation()};Blockly.WorkspaceCommentSvg.prototype.deleteMouseOut_=function(a){this.shouldDelete_=!1};
Blockly.WorkspaceCommentSvg.prototype.deleteMouseUp_=function(a){this.shouldDelete_&&this.dispose();a.stopPropagation()};
Blockly.WorkspaceCommentSvg.prototype.resizeMouseDown_=function(a){this.resizeStartSize_={width:this.width_,height:this.height_};this.unbindDragEvents_();this.workspace.setResizesEnabled(!1);Blockly.utils.isRightButton(a)||(this.workspace.startDrag(a,new goog.math.Coordinate(this.workspace.RTL?-this.width_:this.width_,this.height_)),this.onMouseUpWrapper_=Blockly.bindEventWithChecks_(document,"mouseup",this,this.resizeMouseUp_),this.onMouseMoveWrapper_=Blockly.bindEventWithChecks_(document,"mousemove",
this,this.resizeMouseMove_),Blockly.hideChaff());a.stopPropagation()};
Blockly.WorkspaceCommentSvg.prototype.setRenderedMinimizeState_=function(a,b){a?(this.minimizeArrow_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"comment-arrow-up.svg"),this.commentEditor_.setAttribute("display","none"),this.resizeGroup_&&this.resizeGroup_.setAttribute("display","none"),b&&this.labelText_!=b&&(this.topBarLabel_.textContent=b),Blockly.utils.removeAttribute(this.topBarLabel_,"display")):(this.minimizeArrow_.setAttributeNS("http://www.w3.org/1999/xlink",
"xlink:href",Blockly.mainWorkspace.options.pathToMedia+"comment-arrow-down.svg"),this.topBarLabel_.setAttribute("display","none"),Blockly.utils.removeAttribute(this.commentEditor_,"display"),this.resizeGroup_&&Blockly.utils.removeAttribute(this.resizeGroup_,"display"))};
Blockly.WorkspaceCommentSvg.prototype.unbindDragEvents_=function(){this.onMouseUpWrapper_&&(Blockly.unbindEvent_(this.onMouseUpWrapper_),this.onMouseUpWrapper_=null);this.onMouseMoveWrapper_&&(Blockly.unbindEvent_(this.onMouseMoveWrapper_),this.onMouseMoveWrapper_=null)};
Blockly.WorkspaceCommentSvg.prototype.resizeMouseUp_=function(){Blockly.Touch.clearTouchIdentifier();this.unbindDragEvents_();var a=this.resizeStartSize_;this.resizeStartSize_=null;if(this.width_!=a.width||this.height_!=a.height)Blockly.Events.fire(new Blockly.Events.CommentChange(this,{width:a.width,height:a.height},{width:this.width_,height:this.height_})),this.workspace.setResizesEnabled(!0)};
Blockly.WorkspaceCommentSvg.prototype.resizeMouseMove_=function(a){this.autoLayout_=!1;a=this.workspace.moveDrag(a);var b=!1;Blockly.Events.isEnabled()&&(Blockly.Events.disable(),b=!0);this.setSize(this.RTL?-a.x:a.x,a.y);b&&Blockly.Events.enable()};
Blockly.WorkspaceCommentSvg.prototype.resizeComment_=function(){var a=2*Blockly.WorkspaceCommentSvg.BORDER_WIDTH,b=Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT,c=2*Blockly.WorkspaceCommentSvg.TEXTAREA_OFFSET;this.foreignObject_.setAttribute("width",this.width_-a);this.foreignObject_.setAttribute("height",this.height_-a-b);this.RTL&&this.foreignObject_.setAttribute("x",-this.width_);this.textarea_.style.width=this.width_-c+"px";this.textarea_.style.height=this.height_-a-c-b+"px"};
Blockly.WorkspaceCommentSvg.prototype.setSize=function(a,b){var c=this.width_,d=this.height_,e=2*Blockly.WorkspaceCommentSvg.BORDER_WIDTH;this.isMinimized_?(a=Blockly.WorkspaceCommentSvg.MINIMIZE_WIDTH,b=Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT):(a=Math.max(a,e+50),b=Math.max(b,e+20+Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT),this.width_=a,this.height_=b,Blockly.Events.fire(new Blockly.Events.CommentChange(this,{width:c,height:d},{width:this.width_,height:this.height_})));this.svgRect_.setAttribute("width",
a);this.svgRect_.setAttribute("height",b);this.svgRectTarget_.setAttribute("width",a);this.svgRectTarget_.setAttribute("height",b);this.svgHandleTarget_.setAttribute("width",a-e);this.svgHandleTarget_.setAttribute("height",Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT);this.RTL?(this.minimizeArrow_.setAttribute("x",a-Blockly.WorkspaceCommentSvg.MINIMIZE_ICON_SIZE-Blockly.WorkspaceCommentSvg.TOP_BAR_ICON_INSET),this.svgRect_.setAttribute("transform","scale(-1 1)")):this.deleteIcon_.setAttribute("x",a-
Blockly.WorkspaceCommentSvg.DELETE_ICON_SIZE-Blockly.WorkspaceCommentSvg.TOP_BAR_ICON_INSET);c=Blockly.WorkspaceCommentSvg.RESIZE_SIZE;this.resizeGroup_&&(this.RTL?this.resizeGroup_.setAttribute("transform","translate("+(-a+c)+","+(b-c)+") scale(-1 1)"):this.resizeGroup_.setAttribute("transform","translate("+(a-e-c)+","+(b-e-c)+")"));this.isMinimized_&&(this.topBarLabel_.setAttribute("x",a/2),this.topBarLabel_.setAttribute("y",b/2));this.resizeComment_()};
Blockly.WorkspaceComment.prototype.toggleMinimize_=function(){this.setMinimized(!this.isMinimized_)};
Blockly.WorkspaceComment.prototype.setMinimized=function(a){this.isMinimized_!=a&&(Blockly.Events.fire(new Blockly.Events.CommentChange(this,{minimized:this.isMinimized_},{minimized:a})),(this.isMinimized_=a)?(this.rendered_&&this.setRenderedMinimizeState_(!0,this.getLabelText()),this.setSize(Blockly.WorkspaceCommentSvg.MINIMIZE_WIDTH,Blockly.WorkspaceCommentSvg.TOP_BAR_HEIGHT)):(this.rendered_&&this.setRenderedMinimizeState_(!1),this.setText(this.content_),this.setSize(this.width_,this.height_)))};
Blockly.WorkspaceCommentSvg.prototype.disposeInternal_=function(){this.svgHandleTarget_=this.svgRectTarget_=this.svgRect_=this.foreignObject_=this.textarea_=null};Blockly.WorkspaceCommentSvg.prototype.setFocus=function(){var a=this;this.focused_=!0;setTimeout(function(){a.textarea_.focus();a.addFocus();Blockly.utils.addClass(a.svgRectTarget_,"scratchCommentTargetFocused");Blockly.utils.addClass(a.svgHandleTarget_,"scratchCommentHandleTargetFocused")},0)};
Blockly.WorkspaceCommentSvg.prototype.blurFocus=function(){var a=this;this.focused_=!1;setTimeout(function(){a.textarea_.blur();a.removeFocus();Blockly.utils.removeClass(a.svgRectTarget_,"scratchCommentTargetFocused");Blockly.utils.removeClass(a.svgHandleTarget_,"scratchCommentHandleTargetFocused")},0)};Blockly.WorkspaceDragSurfaceSvg=function(a){this.container_=a;this.createDom()};Blockly.WorkspaceDragSurfaceSvg.prototype.SVG_=null;Blockly.WorkspaceDragSurfaceSvg.prototype.dragGroup_=null;Blockly.WorkspaceDragSurfaceSvg.prototype.container_=null;
Blockly.WorkspaceDragSurfaceSvg.prototype.createDom=function(){this.SVG_||(this.SVG_=Blockly.utils.createSvgElement("svg",{xmlns:Blockly.SVG_NS,"xmlns:html":Blockly.HTML_NS,"xmlns:xlink":"http://www.w3.org/1999/xlink",version:"1.1","class":"blocklyWsDragSurface blocklyOverflowVisible"},null),this.container_.appendChild(this.SVG_))};
Blockly.WorkspaceDragSurfaceSvg.prototype.translateSurface=function(a,b){a=a.toFixed(0);b=b.toFixed(0);this.SVG_.style.display="block";Blockly.utils.setCssTransform(this.SVG_,"translate3d("+a+"px, "+b+"px, 0px)")};Blockly.WorkspaceDragSurfaceSvg.prototype.getSurfaceTranslation=function(){return Blockly.utils.getRelativeXY(this.SVG_)};
Blockly.WorkspaceDragSurfaceSvg.prototype.clearAndHide=function(a){if(!a)throw"Couldn't clear and hide the drag surface: missing new surface.";var b=this.SVG_.childNodes[0],c=this.SVG_.childNodes[1];if(!(b&&c&&Blockly.utils.hasClass(b,"blocklyBlockCanvas")&&Blockly.utils.hasClass(c,"blocklyBubbleCanvas")))throw"Couldn't clear and hide the drag surface.  A node was missing.";null!=this.previousSibling_?Blockly.utils.insertAfter_(b,this.previousSibling_):a.insertBefore(b,a.firstChild);Blockly.utils.insertAfter_(c,
b);this.SVG_.style.display="none";goog.asserts.assert(0==this.SVG_.childNodes.length,"Drag surface was not cleared.");Blockly.utils.setCssTransform(this.SVG_,"");this.previousSibling_=null};
Blockly.WorkspaceDragSurfaceSvg.prototype.setContentsAndShow=function(a,b,c,d,e,f){goog.asserts.assert(0==this.SVG_.childNodes.length,"Already dragging a block.");this.previousSibling_=c;a.setAttribute("transform","translate(0, 0) scale("+f+")");b.setAttribute("transform","translate(0, 0) scale("+f+")");this.SVG_.setAttribute("width",d);this.SVG_.setAttribute("height",e);this.SVG_.appendChild(a);this.SVG_.appendChild(b);this.SVG_.style.display="block"};Blockly.Xml={};Blockly.Xml.workspaceToDom=function(a,b){var c=goog.dom.createDom("xml");c.appendChild(Blockly.Xml.variablesToDom(a.getAllVariables()));for(var d=a.getTopComments(!0).filter(function(a){return a instanceof Blockly.WorkspaceComment}),e=0,f;f=d[e];e++)c.appendChild(f.toXmlWithXY(b));a=a.getTopBlocks(!0);for(e=0;d=a[e];e++)c.appendChild(Blockly.Xml.blockToDomWithXY(d,b));return c};
Blockly.Xml.variablesToDom=function(a){for(var b=goog.dom.createDom("variables"),c=0,d;d=a[c];c++){var e=goog.dom.createDom("variable",null,d.name);e.setAttribute("type",d.type);e.setAttribute("id",d.getId());e.setAttribute("islocal",d.isLocal);b.appendChild(e)}return b};
Blockly.Xml.blockToDomWithXY=function(a,b){var c;a.workspace.RTL&&(c=a.workspace.getWidth());b=Blockly.Xml.blockToDom(a,b);var d=a.getRelativeToSurfaceXY();b.setAttribute("x",Math.round(a.workspace.RTL?c-d.x:d.x));b.setAttribute("y",Math.round(d.y));return b};
Blockly.Xml.fieldToDomVariable_=function(a){null==a.getValue()&&(a.initModel(),a.getValue());var b=a.getVariable();if(!b)throw Error("Tried to serialize a variable field with no variable.");var c=goog.dom.createDom("field",null,b.name);c.setAttribute("name",a.name);c.setAttribute("id",b.getId());c.setAttribute("variabletype",b.type);return c};
Blockly.Xml.fieldToDom_=function(a){if(a.name&&a.SERIALIZABLE){if(a.referencesVariables())return Blockly.Xml.fieldToDomVariable_(a);var b=goog.dom.createDom("field",null,a.getValue());b.setAttribute("name",a.name);return b}return null};Blockly.Xml.allFieldsToDom_=function(a,b){for(var c=0,d;d=a.inputList[c];c++)for(var e=0,f;f=d.fieldRow[e];e++)(f=Blockly.Xml.fieldToDom_(f))&&b.appendChild(f)};
Blockly.Xml.blockToDom=function(a,b){var c=goog.dom.createDom(a.isShadow()?"shadow":"block");c.setAttribute("type",a.type);b||c.setAttribute("id",a.id);if(a.mutationToDom){var d=a.mutationToDom();d&&(d.hasChildNodes()||d.hasAttributes())&&c.appendChild(d)}Blockly.Xml.allFieldsToDom_(a,c);Blockly.Xml.scratchCommentToDom_(a,c);a.data&&(d=goog.dom.createDom("data",null,a.data),c.appendChild(d));for(var e=0,f;f=a.inputList[e];e++){var g,h=!0;if(f.type!=Blockly.DUMMY_INPUT){var k=f.connection.targetBlock();
f.type==Blockly.INPUT_VALUE?g=goog.dom.createDom("value"):f.type==Blockly.NEXT_STATEMENT&&(g=goog.dom.createDom("statement"));d=f.connection.getShadowDom();!d||k&&k.isShadow()||g.appendChild(Blockly.Xml.cloneShadow_(d));k&&(g.appendChild(Blockly.Xml.blockToDom(k,b)),h=!1);g.setAttribute("name",f.name);h||c.appendChild(g)}}a.inputsInlineDefault!=a.inputsInline&&c.setAttribute("inline",a.inputsInline);a.isCollapsed()&&c.setAttribute("collapsed",!0);a.disabled&&c.setAttribute("disabled",!0);a.isDeletable()||
a.isShadow()||c.setAttribute("deletable",!1);a.isMovable()||a.isShadow()||c.setAttribute("movable",!1);a.isEditable()||c.setAttribute("editable",!1);if(e=a.getNextBlock())g=goog.dom.createDom("next",null,Blockly.Xml.blockToDom(e,b)),c.appendChild(g);d=a.nextConnection&&a.nextConnection.getShadowDom();!d||e&&e.isShadow()||g.appendChild(Blockly.Xml.cloneShadow_(d));return c};
Blockly.Xml.scratchCommentToDom_=function(a,b){var c=a.getCommentText();if(c){c=goog.dom.createDom("comment",null,c);if("object"==typeof a.comment){c.setAttribute("id",a.comment.id);c.setAttribute("pinned",a.comment.isVisible());var d=a.comment.getXY();c.setAttribute("x",d.x);c.setAttribute("y",d.y);c.setAttribute("minimized",a.comment.isMinimized());a=a.comment instanceof Blockly.ScratchBlockComment?a.comment.getHeightWidth():a.comment.getBubbleSize();c.setAttribute("h",a.height);c.setAttribute("w",
a.width)}b.appendChild(c)}};Blockly.Xml.cloneShadow_=function(a){for(var b=a=a.cloneNode(!0),c;b;)if(b.firstChild)b=b.firstChild;else{for(;b&&!b.nextSibling;)c=b,b=b.parentNode,3==c.nodeType&&""==c.data.trim()&&b.firstChild!=c&&goog.dom.removeNode(c);b&&(c=b,b=b.nextSibling,3==c.nodeType&&""==c.data.trim()&&goog.dom.removeNode(c))}return a};Blockly.Xml.domToText=function(a){return(new XMLSerializer).serializeToString(a)};
Blockly.Xml.domToPrettyText=function(a){a=Blockly.Xml.domToText(a).split("<");for(var b="",c=1;c<a.length;c++){var d=a[c];"/"==d[0]&&(b=b.substring(2));a[c]=b+"<"+d;"/"!=d[0]&&"/>"!=d.slice(-2)&&(b+="  ")}a=a.join("\n");a=a.replace(/(<(\w+)\b[^>]*>[^\n]*)\n *<\/\2>/g,"$1</$2>");return a.replace(/^\n/,"")};
Blockly.Xml.textToDom=function(a){(a=(new DOMParser).parseFromString(a,"text/xml"))&&a.firstChild&&"xml"==a.firstChild.nodeName.toLowerCase()&&a.firstChild===a.lastChild||goog.asserts.fail("Blockly.Xml.textToDom did not obtain a valid XML tree.");return a.firstChild};Blockly.Xml.clearWorkspaceAndLoadFromXml=function(a,b){b.setResizesEnabled(!1);b.setToolboxRefreshEnabled(!1);b.clear();a=Blockly.Xml.domToWorkspace(a,b);b.setResizesEnabled(!0);b.setToolboxRefreshEnabled(!0);return a};
Blockly.Xml.domToWorkspace=function(a,b){if(a instanceof Blockly.Workspace){var c=a;a=b;b=c;console.warn("Deprecated call to Blockly.Xml.domToWorkspace, swap the arguments.")}var d;b.RTL&&(d=b.getWidth());c=[];Blockly.Field.startCache();var e=a.childNodes.length,f=Blockly.Events.getGroup();f||Blockly.Events.setGroup(!0);b.setResizesEnabled&&b.setResizesEnabled(!1);var g=!0;try{for(var h=0;h<e;h++){var k=a.childNodes[h],m=k.nodeName.toLowerCase();if("block"==m||"shadow"==m&&!Blockly.Events.recordUndo){var l=
Blockly.Xml.domToBlock(k,b);c.push(l.id);var n=k.hasAttribute("x")?parseInt(k.getAttribute("x"),10):10,q=k.hasAttribute("y")?parseInt(k.getAttribute("y"),10):10;isNaN(n)||isNaN(q)||l.moveBy(b.RTL?d-n:n,q);g=!1}else if("shadow"==m)goog.asserts.fail("Shadow block cannot be a top-level block."),g=!1;else if("comment"==m)b.rendered?Blockly.WorkspaceCommentSvg.fromXml(k,b,d):Blockly.WorkspaceComment.fromXml(k,b);else if("variables"==m){if(g)Blockly.Xml.domToVariables(k,b);else throw Error("'variables' tag must exist once before block and shadow tag elements in the workspace XML, but it was found in another location.");
g=!1}}}finally{f||Blockly.Events.setGroup(!1),Blockly.Field.stopCache()}b.setResizesEnabled&&b.setResizesEnabled(!0);return c};
Blockly.Xml.appendDomToWorkspace=function(a,b){if(b.hasOwnProperty("scale")){var c=Blockly.BlockSvg.TAB_WIDTH;try{Blockly.BlockSvg.TAB_WIDTH=0;var d=b.getBlocksBoundingBox()}finally{Blockly.BlockSvg.TAB_WIDTH=c}}a=Blockly.Xml.domToWorkspace(a,b);if(d&&d.height){c=d.y+d.height;var e=d.x;var f=Infinity,g=Infinity;for(d=0;d<a.length;d++){var h=b.getBlockById(a[d]).getRelativeToSurfaceXY();h.y<g&&(g=h.y);h.x<f&&(f=h.x)}c=c-g+Blockly.BlockSvg.SEP_SPACE_Y;e-=f;var k;b.RTL&&(k=b.getWidth());for(d=0;d<a.length;d++)b.getBlockById(a[d]).moveBy(b.RTL?
k-e:e,c)}return a};
Blockly.Xml.domToBlock=function(a,b){if(a instanceof Blockly.Workspace){var c=a;a=b;b=c;console.warn("Deprecated call to Blockly.Xml.domToBlock, swap the arguments.")}Blockly.Events.disable();c=b.getAllVariables();try{var d=Blockly.Xml.domToBlockHeadless_(a,b),e=d.getDescendants(!1);if(b.rendered){d.setConnectionsHidden(!0);for(var f=e.length-1;0<=f;f--)e[f].initSvg();for(f=e.length-1;0<=f;f--)e[f].render(!1);b.isFlyout||setTimeout(function(){d.workspace&&d.setConnectionsHidden(!1)},1);d.updateDisabled();
b.resizeContents()}else for(f=e.length-1;0<=f;f--)e[f].initModel()}finally{Blockly.Events.enable()}if(Blockly.Events.isEnabled()){a=Blockly.Variables.getAddedVariables(b,c);for(f=0;f<a.length;f++)Blockly.Events.fire(new Blockly.Events.VarCreate(a[f]));Blockly.Events.fire(new Blockly.Events.BlockCreate(d))}return d};
Blockly.Xml.domToVariables=function(a,b){for(var c=0,d;d=a.children[c];c++){var e=d.getAttribute("type"),f=d.getAttribute("id"),g="true"==d.getAttribute("islocal");d=d.textContent;if(null===e)throw Error("Variable with id, "+f+" is without a type");b.createVariable(d,e,f,g)}};
Blockly.Xml.domToBlockHeadless_=function(a,b){var c=null,d=a.getAttribute("type");goog.asserts.assert(d,"Block type unspecified: %s",a.outerHTML);var e=a.getAttribute("id");c=b.newBlock(d,e);var f=null;e=0;for(var g;g=a.childNodes[e];e++)if(3!=g.nodeType){for(var h=f=null,k=0,m;m=g.childNodes[k];k++)1==m.nodeType&&("block"==m.nodeName.toLowerCase()?f=m:"shadow"==m.nodeName.toLowerCase()&&(h=m));!f&&h&&(f=h);k=g.getAttribute("name");switch(g.nodeName.toLowerCase()){case "mutation":c.domToMutation&&
(c.domToMutation(g),c.initSvg&&c.initSvg());break;case "comment":f=g.getAttribute("id");h=parseInt(g.getAttribute("x"),10);k=parseInt(g.getAttribute("y"),10);m=g.getAttribute("minimized")||!1;c.setCommentText(g.textContent,f,h,k,"true"==m);var l=g.getAttribute("pinned");l&&!c.isInFlyout&&setTimeout(function(){c.comment&&c.comment.setVisible&&c.comment.setVisible("true"==l)},1);f=parseInt(g.getAttribute("w"),10);g=parseInt(g.getAttribute("h"),10);!isNaN(f)&&!isNaN(g)&&c.comment&&c.comment.setVisible&&
(c.comment instanceof Blockly.ScratchBlockComment?c.comment.setSize(f,g):c.comment.setBubbleSize(f,g));break;case "data":c.data=g.textContent;break;case "title":case "field":Blockly.Xml.domToField_(c,k,g);break;case "value":case "statement":g=c.getInput(k);if(!g){console.warn("Ignoring non-existent input "+k+" in block "+d);break}h&&g.connection.setShadowDom(h);f&&(f=Blockly.Xml.domToBlockHeadless_(f,b),f.outputConnection?g.connection.connect(f.outputConnection):f.previousConnection?g.connection.connect(f.previousConnection):
goog.asserts.fail("Child block does not have output or previous statement."));break;case "next":h&&c.nextConnection&&c.nextConnection.setShadowDom(h);f&&(goog.asserts.assert(c.nextConnection,"Next statement does not exist."),goog.asserts.assert(!c.nextConnection.isConnected(),"Next statement is already connected."),f=Blockly.Xml.domToBlockHeadless_(f,b),goog.asserts.assert(f.previousConnection,"Next block does not have previous statement."),c.nextConnection.connect(f.previousConnection));break;default:console.warn("Ignoring unknown tag: "+
g.nodeName)}}(e=a.getAttribute("inline"))&&c.setInputsInline("true"==e);(e=a.getAttribute("disabled"))&&c.setDisabled("true"==e||"disabled"==e);(e=a.getAttribute("deletable"))&&c.setDeletable("true"==e);(e=a.getAttribute("movable"))&&c.setMovable("true"==e);(e=a.getAttribute("editable"))&&c.setEditable("true"==e);(e=a.getAttribute("collapsed"))&&c.setCollapsed("true"==e);if("shadow"==a.nodeName.toLowerCase()){a=c.getChildren(!1);for(e=0;b=a[e];e++)goog.asserts.assert(b.isShadow(),"Shadow block not allowed non-shadow child.");
c.setShadow(!0)}return c};
Blockly.Xml.domToFieldVariable_=function(a,b,c,d){var e=b.getAttribute("variabletype")||"";"''"==e&&(e="");if(!a.getPotentialVariableMap()&&!a.isFlyout&&a.getFlyout()){var f=a.getFlyout().getWorkspace();f=Blockly.Variables.realizePotentialVar(c,e,f,!0)}f||(f=Blockly.Variables.getOrCreateVariablePackage(a,b.id,c,e));if(null!=e&&e!==f.type)throw Error("Serialized variable type with id '"+f.getId()+"' had type "+f.type+", and does not match variable field that references it: "+Blockly.Xml.domToText(b)+
".");d.setValue(f.getId())};Blockly.Xml.domToField_=function(a,b,c){var d=a.getField(b);d?(a=a.workspace,b=c.textContent,d.referencesVariables()?Blockly.Xml.domToFieldVariable_(a,c,b,d):d.setValue(b)):console.warn("Ignoring non-existent field "+b+" in block "+a.type)};Blockly.Xml.deleteNext=function(a){for(var b=0,c;c=a.childNodes[b];b++)if("next"==c.nodeName.toLowerCase()){a.removeChild(c);break}};goog.global.Blockly||(goog.global.Blockly={});goog.global.Blockly.Xml||(goog.global.Blockly.Xml={});
goog.global.Blockly.Xml.domToText=Blockly.Xml.domToText;goog.global.Blockly.Xml.domToWorkspace=Blockly.Xml.domToWorkspace;goog.global.Blockly.Xml.textToDom=Blockly.Xml.textToDom;goog.global.Blockly.Xml.workspaceToDom=Blockly.Xml.workspaceToDom;goog.global.Blockly.Xml.clearWorkspaceAndLoadFromXml=Blockly.Xml.clearWorkspaceAndLoadFromXml;
Blockly.ZoomControls=function(a){this.workspace_=a};Blockly.ZoomControls.prototype.ZOOM_IN_PATH_="zoom-in.svg";Blockly.ZoomControls.prototype.ZOOM_OUT_PATH_="zoom-out.svg";Blockly.ZoomControls.prototype.ZOOM_RESET_PATH_="zoom-reset.svg";Blockly.ZoomControls.prototype.WIDTH_=36;Blockly.ZoomControls.prototype.HEIGHT_=124;Blockly.ZoomControls.prototype.MARGIN_BETWEEN_=8;Blockly.ZoomControls.prototype.MARGIN_BOTTOM_=12;Blockly.ZoomControls.prototype.MARGIN_SIDE_=12;
Blockly.ZoomControls.prototype.svgGroup_=null;Blockly.ZoomControls.prototype.left_=0;Blockly.ZoomControls.prototype.top_=0;Blockly.ZoomControls.prototype.createDom=function(){this.svgGroup_=Blockly.utils.createSvgElement("g",{"class":"blocklyZoom"},null);this.createZoomOutSvg_();this.createZoomInSvg_();this.createZoomResetSvg_();return this.svgGroup_};Blockly.ZoomControls.prototype.init=function(a){this.bottom_=this.MARGIN_BOTTOM_+a;return this.bottom_+this.HEIGHT_};
Blockly.ZoomControls.prototype.dispose=function(){this.svgGroup_&&(goog.dom.removeNode(this.svgGroup_),this.svgGroup_=null);this.workspace_=null};
Blockly.ZoomControls.prototype.position=function(){var a=this.workspace_.getMetrics();a&&(this.workspace_.RTL?(this.left_=this.MARGIN_SIDE_+Blockly.Scrollbar.scrollbarThickness,a.toolboxPosition==Blockly.TOOLBOX_AT_LEFT&&(this.left_+=a.flyoutWidth,this.workspace_.toolbox_&&(this.left_+=a.absoluteLeft))):(this.left_=a.viewWidth+a.absoluteLeft-this.WIDTH_-this.MARGIN_SIDE_-Blockly.Scrollbar.scrollbarThickness,a.toolboxPosition==Blockly.TOOLBOX_AT_RIGHT&&(this.left_-=a.flyoutWidth)),this.top_=a.viewHeight+
a.absoluteTop-this.HEIGHT_-this.bottom_,a.toolboxPosition==Blockly.TOOLBOX_AT_BOTTOM&&(this.top_-=a.flyoutHeight),this.svgGroup_.setAttribute("transform","translate("+this.left_+","+this.top_+")"))};
Blockly.ZoomControls.prototype.createZoomOutSvg_=function(){var a=this.workspace_,b=Blockly.utils.createSvgElement("image",{width:this.WIDTH_,height:this.WIDTH_,y:1*this.WIDTH_+1*this.MARGIN_BETWEEN_},this.svgGroup_);b.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",a.options.pathToMedia+this.ZOOM_OUT_PATH_);Blockly.bindEventWithChecks_(b,"mousedown",null,function(b){a.markFocused();a.zoomCenter(-1);Blockly.Touch.clearTouchIdentifier();b.stopPropagation();b.preventDefault()})};
Blockly.ZoomControls.prototype.createZoomInSvg_=function(){var a=this.workspace_,b=Blockly.utils.createSvgElement("image",{width:this.WIDTH_,height:this.WIDTH_,y:0},this.svgGroup_);b.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",a.options.pathToMedia+this.ZOOM_IN_PATH_);Blockly.bindEventWithChecks_(b,"mousedown",null,function(b){a.markFocused();a.zoomCenter(1);Blockly.Touch.clearTouchIdentifier();b.stopPropagation();b.preventDefault()})};
Blockly.ZoomControls.prototype.createZoomResetSvg_=function(){var a=this.workspace_,b=Blockly.utils.createSvgElement("image",{width:this.WIDTH_,height:this.WIDTH_,y:2*this.WIDTH_+2*this.MARGIN_BETWEEN_},this.svgGroup_);b.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",a.options.pathToMedia+this.ZOOM_RESET_PATH_);Blockly.bindEventWithChecks_(b,"mousedown",null,function(b){a.markFocused();a.setScale(a.options.zoomOptions.startScale);a.scrollCenter();Blockly.Touch.clearTouchIdentifier();b.stopPropagation();
b.preventDefault()})};
Blockly.WorkspaceSvg=function(a,b,c){Blockly.WorkspaceSvg.superClass_.constructor.call(this,a);this.getMetrics=a.getMetrics||Blockly.WorkspaceSvg.getTopLevelWorkspaceMetrics_;this.setMetrics=a.setMetrics||Blockly.WorkspaceSvg.setTopLevelWorkspaceMetrics_;Blockly.ConnectionDB.init(this);b&&(this.blockDragSurface_=b);c&&(this.workspaceDragSurface_=c);this.useWorkspaceDragSurface_=this.workspaceDragSurface_&&Blockly.utils.is3dSupported();this.highlightedBlocks_=[];this.audioManager_=new Blockly.WorkspaceAudio(a.parentWorkspace);
this.grid_=this.options.gridPattern?new Blockly.Grid(a.gridPattern,a.gridOptions):null;this.registerToolboxCategoryCallback(Blockly.VARIABLE_CATEGORY_NAME,Blockly.DataCategory);this.registerToolboxCategoryCallback(Blockly.PROCEDURE_CATEGORY_NAME,Blockly.Procedures.flyoutCategory)};goog.inherits(Blockly.WorkspaceSvg,Blockly.Workspace);Blockly.WorkspaceSvg.prototype.resizeHandlerWrapper_=null;Blockly.WorkspaceSvg.prototype.rendered=!0;Blockly.WorkspaceSvg.prototype.isFlyout=!1;
Blockly.WorkspaceSvg.prototype.isMutator=!1;Blockly.WorkspaceSvg.prototype.resizesEnabled_=!0;Blockly.WorkspaceSvg.prototype.toolboxRefreshEnabled_=!0;Blockly.WorkspaceSvg.prototype.scrollX=0;Blockly.WorkspaceSvg.prototype.scrollY=0;Blockly.WorkspaceSvg.prototype.startScrollX=0;Blockly.WorkspaceSvg.prototype.startScrollY=0;Blockly.WorkspaceSvg.prototype.dragDeltaXY_=null;Blockly.WorkspaceSvg.prototype.scale=1;Blockly.WorkspaceSvg.prototype.trashcan=null;Blockly.WorkspaceSvg.prototype.scrollbar=null;
Blockly.WorkspaceSvg.prototype.currentGesture_=null;Blockly.WorkspaceSvg.prototype.blockDragSurface_=null;Blockly.WorkspaceSvg.prototype.workspaceDragSurface_=null;Blockly.WorkspaceSvg.prototype.useWorkspaceDragSurface_=!1;Blockly.WorkspaceSvg.prototype.isDragSurfaceActive_=!1;Blockly.WorkspaceSvg.prototype.injectionDiv_=null;Blockly.WorkspaceSvg.prototype.lastRecordedPageScroll_=null;Blockly.WorkspaceSvg.prototype.flyoutButtonCallbacks_={};
Blockly.WorkspaceSvg.prototype.toolboxCategoryCallbacks_={};Blockly.WorkspaceSvg.prototype.inverseScreenCTM_=null;Blockly.WorkspaceSvg.prototype.inverseScreenCTMDirty_=!0;Blockly.WorkspaceSvg.prototype.getInverseScreenCTM=function(){if(this.inverseScreenCTMDirty_){var a=this.getParentSvg().getScreenCTM();a&&(this.inverseScreenCTM_=a.inverse(),this.inverseScreenCTMDirty_=!1)}return this.inverseScreenCTM_};
Blockly.WorkspaceSvg.prototype.updateInverseScreenCTM=function(){this.inverseScreenCTMDirty_=!0};Blockly.WorkspaceSvg.prototype.getSvgXY=function(a){var b=0,c=0,d=1;if(goog.dom.contains(this.getCanvas(),a)||goog.dom.contains(this.getBubbleCanvas(),a))d=this.scale;do{var e=Blockly.utils.getRelativeXY(a);if(a==this.getCanvas()||a==this.getBubbleCanvas())d=1;b+=e.x*d;c+=e.y*d;a=a.parentNode}while(a&&a!=this.getParentSvg());return new goog.math.Coordinate(b,c)};
Blockly.WorkspaceSvg.prototype.getOriginOffsetInPixels=function(){return Blockly.utils.getInjectionDivXY_(this.svgBlockCanvas_)};Blockly.WorkspaceSvg.prototype.getInjectionDiv=function(){if(!this.injectionDiv_)for(var a=this.svgGroup_;a;){if(-1!=(" "+(a.getAttribute("class")||"")+" ").indexOf(" injectionDiv ")){this.injectionDiv_=a;break}a=a.parentNode}return this.injectionDiv_};Blockly.WorkspaceSvg.prototype.setResizeHandlerWrapper=function(a){this.resizeHandlerWrapper_=a};
Blockly.WorkspaceSvg.prototype.createDom=function(a){this.svgGroup_=Blockly.utils.createSvgElement("g",{"class":"blocklyWorkspace"},null);a&&(this.svgBackground_=Blockly.utils.createSvgElement("rect",{height:"100%",width:"100%","class":a},this.svgGroup_),"blocklyMainBackground"==a&&this.grid_&&(this.svgBackground_.style.fill="url(#"+this.grid_.getPatternId()+")"));this.svgBlockCanvas_=Blockly.utils.createSvgElement("g",{"class":"blocklyBlockCanvas"},this.svgGroup_,this);this.svgBubbleCanvas_=Blockly.utils.createSvgElement("g",
{"class":"blocklyBubbleCanvas"},this.svgGroup_,this);a=Blockly.Scrollbar.scrollbarThickness;this.options.hasTrashcan&&(a=this.addTrashcan_(a));this.options.zoomOptions&&this.options.zoomOptions.controls&&this.addZoomControls_(a);this.isFlyout||(Blockly.bindEventWithChecks_(this.svgGroup_,"mousedown",this,this.onMouseDown_),this.options.zoomOptions&&this.options.zoomOptions.wheel&&Blockly.bindEventWithChecks_(this.svgGroup_,"wheel",this,this.onMouseWheel_));this.options.hasCategories&&(this.toolbox_=
new Blockly.Toolbox(this));this.grid_&&this.grid_.update(this.scale);this.recordCachedAreas();return this.svgGroup_};
Blockly.WorkspaceSvg.prototype.dispose=function(){this.rendered=!1;this.currentGesture_&&this.currentGesture_.cancel();Blockly.WorkspaceSvg.superClass_.dispose.call(this);this.svgGroup_&&(goog.dom.removeNode(this.svgGroup_),this.svgGroup_=null);this.svgBubbleCanvas_=this.svgBlockCanvas_=null;this.toolbox_&&(this.toolbox_.dispose(),this.toolbox_=null);this.flyout_&&(this.flyout_.dispose(),this.flyout_=null);this.trashcan&&(this.trashcan.dispose(),this.trashcan=null);this.scrollbar&&(this.scrollbar.dispose(),
this.scrollbar=null);this.zoomControls_&&(this.zoomControls_.dispose(),this.zoomControls_=null);this.audioManager_&&(this.audioManager_.dispose(),this.audioManager_=null);this.grid_&&(this.grid_.dispose(),this.grid_=null);this.toolboxCategoryCallbacks_&&(this.toolboxCategoryCallbacks_=null);this.flyoutButtonCallbacks_&&(this.flyoutButtonCallbacks_=null);this.options.parentWorkspace||goog.dom.removeNode(this.getParentSvg().parentNode);this.resizeHandlerWrapper_&&(Blockly.unbindEvent_(this.resizeHandlerWrapper_),
this.resizeHandlerWrapper_=null)};Blockly.WorkspaceSvg.prototype.newBlock=function(a,b){return new Blockly.BlockSvg(this,a,b)};Blockly.WorkspaceSvg.prototype.addTrashcan_=function(a){this.trashcan=new Blockly.Trashcan(this);var b=this.trashcan.createDom();this.svgGroup_.insertBefore(b,this.svgBlockCanvas_);return this.trashcan.init(a)};
Blockly.WorkspaceSvg.prototype.addZoomControls_=function(a){this.zoomControls_=new Blockly.ZoomControls(this);var b=this.zoomControls_.createDom();this.svgGroup_.appendChild(b);return this.zoomControls_.init(a)};
Blockly.WorkspaceSvg.prototype.addFlyout_=function(a){var b={disabledPatternId:this.options.disabledPatternId,parentWorkspace:this,RTL:this.RTL,oneBasedIndex:this.options.oneBasedIndex,horizontalLayout:this.horizontalLayout,toolboxPosition:this.options.toolboxPosition,stackGlowFilterId:this.options.stackGlowFilterId};this.flyout_=this.horizontalLayout?new Blockly.HorizontalFlyout(b):new Blockly.VerticalFlyout(b);this.flyout_.autoClose=!1;return this.flyout_.createDom(a)};
Blockly.WorkspaceSvg.prototype.getFlyout=function(){return this.flyout_?this.flyout_:this.toolbox_?this.toolbox_.flyout_:null};Blockly.WorkspaceSvg.prototype.getToolbox=function(){return this.toolbox_};Blockly.WorkspaceSvg.prototype.updateScreenCalculations_=function(){this.updateInverseScreenCTM();this.recordCachedAreas()};Blockly.WorkspaceSvg.prototype.resizeContents=function(){this.resizesEnabled_&&this.rendered&&(this.scrollbar&&this.scrollbar.resize(),this.updateInverseScreenCTM())};
Blockly.WorkspaceSvg.prototype.resize=function(){this.toolbox_&&this.toolbox_.position();this.flyout_&&this.flyout_.position();this.trashcan&&this.trashcan.position();this.zoomControls_&&this.zoomControls_.position();this.scrollbar&&this.scrollbar.resize();this.updateScreenCalculations_()};Blockly.WorkspaceSvg.prototype.updateScreenCalculationsIfScrolled=function(){var a=goog.dom.getDocumentScroll();goog.math.Coordinate.equals(this.lastRecordedPageScroll_,a)||(this.lastRecordedPageScroll_=a,this.updateScreenCalculations_())};
Blockly.WorkspaceSvg.prototype.getCanvas=function(){return this.svgBlockCanvas_};Blockly.WorkspaceSvg.prototype.getBubbleCanvas=function(){return this.svgBubbleCanvas_};Blockly.WorkspaceSvg.prototype.getParentSvg=function(){if(this.cachedParentSvg_)return this.cachedParentSvg_;for(var a=this.svgGroup_;a;){if("svg"==a.tagName)return this.cachedParentSvg_=a;a=a.parentNode}return null};
Blockly.WorkspaceSvg.prototype.translate=function(a,b){if(this.useWorkspaceDragSurface_&&this.isDragSurfaceActive_)this.workspaceDragSurface_.translateSurface(a,b);else{var c="translate("+a+","+b+") scale("+this.scale+")";this.svgBlockCanvas_.setAttribute("transform",c);this.svgBubbleCanvas_.setAttribute("transform",c)}this.blockDragSurface_&&this.blockDragSurface_.translateAndScaleGroup(a,b,this.scale)};
Blockly.WorkspaceSvg.prototype.resetDragSurface=function(){if(this.useWorkspaceDragSurface_){this.isDragSurfaceActive_=!1;var a=this.workspaceDragSurface_.getSurfaceTranslation();this.workspaceDragSurface_.clearAndHide(this.svgGroup_);a="translate("+a.x+","+a.y+") scale("+this.scale+")";this.svgBlockCanvas_.setAttribute("transform",a);this.svgBubbleCanvas_.setAttribute("transform",a)}};
Blockly.WorkspaceSvg.prototype.setupDragSurface=function(){if(this.useWorkspaceDragSurface_&&!this.isDragSurfaceActive_){this.isDragSurfaceActive_=!0;var a=this.svgBlockCanvas_.previousSibling,b=parseInt(this.getParentSvg().getAttribute("width"),10),c=parseInt(this.getParentSvg().getAttribute("height"),10),d=Blockly.utils.getRelativeXY(this.svgBlockCanvas_);this.workspaceDragSurface_.setContentsAndShow(this.svgBlockCanvas_,this.svgBubbleCanvas_,a,b,c,this.scale);this.workspaceDragSurface_.translateSurface(d.x,
d.y)}};Blockly.WorkspaceSvg.prototype.getBlockDragSurface=function(){return this.blockDragSurface_};Blockly.WorkspaceSvg.prototype.getWidth=function(){var a=this.getMetrics();return a?a.viewWidth/this.scale:0};
Blockly.WorkspaceSvg.prototype.setVisible=function(a){this.scrollbar&&this.scrollbar.setContainerVisible(a);this.getFlyout()&&this.getFlyout().setContainerVisible(a);this.getParentSvg().style.display=a?"block":"none";this.toolbox_&&(this.toolbox_.HtmlDiv.style.display=a?"block":"none");a?(this.render(),this.resize()):(Blockly.hideChaff(!0),Blockly.DropDownDiv.hideWithoutAnimation())};Blockly.WorkspaceSvg.prototype.render=function(){for(var a=this.getAllBlocks(),b=a.length-1;0<=b;b--)a[b].render(!1)};
Blockly.WorkspaceSvg.prototype.traceOn=function(){console.warn("Deprecated call to traceOn, delete this.")};Blockly.WorkspaceSvg.prototype.highlightBlock=function(a,b){if(void 0===b){for(var c=0,d;d=this.highlightedBlocks_[c];c++)d.setHighlighted(!1);this.highlightedBlocks_.length=0}if(d=a?this.getBlockById(a):null)(a=void 0===b||b)?-1==this.highlightedBlocks_.indexOf(d)&&this.highlightedBlocks_.push(d):goog.array.remove(this.highlightedBlocks_,d),d.setHighlighted(a)};
Blockly.WorkspaceSvg.prototype.glowBlock=function(a,b){var c=null;if(a&&(c=this.getBlockById(a),!c))throw"Tried to glow block that does not exist.";c.setGlowBlock(b)};Blockly.WorkspaceSvg.prototype.glowStack=function(a,b){var c=null;if(a&&(c=this.getBlockById(a),!c))throw"Tried to glow stack on block that does not exist.";c.setGlowStack(b)};
Blockly.WorkspaceSvg.prototype.reportValue=function(a,b){a=this.getBlockById(a);if(!a)throw"Tried to report value on block that does not exist.";Blockly.DropDownDiv.hideWithoutAnimation();Blockly.DropDownDiv.clearContent();var c=Blockly.DropDownDiv.getContentDiv(),d=goog.dom.createElement("div");d.setAttribute("class","valueReportBox");d.innerHTML=Blockly.scratchBlocksUtils.encodeEntities(b);c.appendChild(d);Blockly.DropDownDiv.setColour(Blockly.Colours.valueReportBackground,Blockly.Colours.valueReportBorder);
Blockly.DropDownDiv.showPositionedByBlock(this,a)};Blockly.WorkspaceSvg.prototype.paste=function(a){this.rendered&&(this.currentGesture_&&this.currentGesture_.cancel(),"comment"==a.tagName.toLowerCase()?this.pasteWorkspaceComment_(a):this.pasteBlock_(a))};
Blockly.WorkspaceSvg.prototype.pasteBlock_=function(a){Blockly.Events.disable();try{var b=Blockly.Xml.domToBlock(a,this);Blockly.scratchBlocksUtils.changeObscuredShadowIds(b);var c=parseInt(a.getAttribute("x"),10),d=parseInt(a.getAttribute("y"),10);if(!isNaN(c)&&!isNaN(d)){this.RTL&&(c=-c);do{a=!1;for(var e=this.getAllBlocks(),f=0,g;g=e[f];f++){var h=g.getRelativeToSurfaceXY();if(1>=Math.abs(c-h.x)&&1>=Math.abs(d-h.y)){a=!0;break}}if(!a){var k=b.getConnections_(!1);f=0;for(var m;m=k[f];f++)if(m.closest(Blockly.SNAP_RADIUS,
new goog.math.Coordinate(c,d)).connection){a=!0;break}}a&&(c=this.RTL?c-Blockly.SNAP_RADIUS:c+Blockly.SNAP_RADIUS,d+=2*Blockly.SNAP_RADIUS)}while(a);b.moveBy(c,d)}}finally{Blockly.Events.enable()}Blockly.Events.isEnabled()&&!b.isShadow()&&Blockly.Events.fire(new Blockly.Events.BlockCreate(b));b.select()};
Blockly.WorkspaceSvg.prototype.pasteWorkspaceComment_=function(a){Blockly.Events.disable();try{var b=Blockly.WorkspaceCommentSvg.fromXml(a,this),c=parseInt(a.getAttribute("x"),10),d=parseInt(a.getAttribute("y"),10);isNaN(c)||isNaN(d)||(this.RTL&&(c=-c),b.moveBy(c+50,d+50))}finally{Blockly.Events.enable()}Blockly.Events.isEnabled()&&Blockly.WorkspaceComment.fireCreateEvent(b);b.select()};
Blockly.WorkspaceSvg.prototype.refreshToolboxSelection_=function(){if(this.toolbox_)this.toolbox_.flyout_&&!this.currentGesture_&&this.toolboxRefreshEnabled_&&this.toolbox_.refreshSelection();else{var a=this.targetWorkspace;a&&a.toolbox_&&a.toolbox_.flyout_&&!a.currentGesture_&&a.toolboxRefreshEnabled_&&a.toolbox_.refreshSelection()}};Blockly.WorkspaceSvg.prototype.renameVariableById=function(a,b){Blockly.WorkspaceSvg.superClass_.renameVariableById.call(this,a,b);this.refreshToolboxSelection_()};
Blockly.WorkspaceSvg.prototype.deleteVariableById=function(a){Blockly.WorkspaceSvg.superClass_.deleteVariableById.call(this,a);this.refreshToolboxSelection_()};Blockly.WorkspaceSvg.prototype.createVariable=function(a,b,c,d){var e=null!=this.getVariable(a,b);a=Blockly.WorkspaceSvg.superClass_.createVariable.call(this,a,b,c,d);e||b==Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE||this.refreshToolboxSelection_();return a};
Blockly.WorkspaceSvg.prototype.recordCachedAreas=function(){this.recordBlocksArea_();this.recordDeleteAreas_()};Blockly.WorkspaceSvg.prototype.recordDeleteAreas_=function(){this.deleteAreaTrash_=this.trashcan?this.trashcan.getClientRect():null;this.deleteAreaToolbox_=this.flyout_?this.flyout_.getClientRect():this.toolbox_?this.toolbox_.getClientRect():null};
Blockly.WorkspaceSvg.prototype.recordBlocksArea_=function(){var a=this.getParentSvg();a?(a=a.getBoundingClientRect(),this.blocksArea_=new goog.math.Rect(a.left,a.top,a.width,a.height)):this.blocksArea_=null};Blockly.WorkspaceSvg.prototype.isDeleteArea=function(a){a=new goog.math.Coordinate(a.clientX,a.clientY);return this.deleteAreaTrash_&&this.deleteAreaTrash_.contains(a)?Blockly.DELETE_AREA_TRASH:this.deleteAreaToolbox_&&this.deleteAreaToolbox_.contains(a)?Blockly.DELETE_AREA_TOOLBOX:Blockly.DELETE_AREA_NONE};
Blockly.WorkspaceSvg.prototype.isInsideBlocksArea=function(a){var b=new goog.math.Coordinate(a.clientX,a.clientY);return this.isDeleteArea(a)||this.blocksArea_&&this.blocksArea_.contains(b)?!0:!1};Blockly.WorkspaceSvg.prototype.onMouseDown_=function(a){var b=this.getGesture(a);b&&b.handleWsStart(a,this)};
Blockly.WorkspaceSvg.prototype.startDrag=function(a,b){a=Blockly.utils.mouseToSvg(a,this.getParentSvg(),this.getInverseScreenCTM());a.x/=this.scale;a.y/=this.scale;this.dragDeltaXY_=goog.math.Coordinate.difference(b,a)};Blockly.WorkspaceSvg.prototype.moveDrag=function(a){a=Blockly.utils.mouseToSvg(a,this.getParentSvg(),this.getInverseScreenCTM());a.x/=this.scale;a.y/=this.scale;return goog.math.Coordinate.sum(this.dragDeltaXY_,a)};
Blockly.WorkspaceSvg.prototype.isDragging=function(){return this.currentGesture_&&this.currentGesture_.isDragging()};Blockly.WorkspaceSvg.prototype.isDraggable=function(){return!!this.scrollbar};
Blockly.WorkspaceSvg.prototype.onMouseWheel_=function(a){this.currentGesture_&&this.currentGesture_.cancel();if(a.ctrlKey){var b=-a.deltaY/50,c=Blockly.utils.mouseToSvg(a,this.getParentSvg(),this.getInverseScreenCTM());this.zoom(c.x,c.y,b)}else Blockly.WidgetDiv.hide(!0),Blockly.DropDownDiv.hideWithoutAnimation(),b=this.scrollX-a.deltaX,c=this.scrollY-a.deltaY,this.startDragMetrics=this.getMetrics(),this.scroll(b,c);a.preventDefault()};
Blockly.WorkspaceSvg.prototype.getBlocksBoundingBox=function(){var a=this.getTopBlocks(!1),b=this.getTopComments(!1);a=a.concat(b);if(!a.length)return{x:0,y:0,width:0,height:0};b=a[0].getBoundingRectangle();for(var c=1;c<a.length;c++){var d=a[c].getBoundingRectangle();d.topLeft.x<b.topLeft.x&&(b.topLeft.x=d.topLeft.x);d.bottomRight.x>b.bottomRight.x&&(b.bottomRight.x=d.bottomRight.x);d.topLeft.y<b.topLeft.y&&(b.topLeft.y=d.topLeft.y);d.bottomRight.y>b.bottomRight.y&&(b.bottomRight.y=d.bottomRight.y)}return{x:b.topLeft.x,
y:b.topLeft.y,width:b.bottomRight.x-b.topLeft.x,height:b.bottomRight.y-b.topLeft.y}};Blockly.WorkspaceSvg.prototype.cleanUp=function(){this.setResizesEnabled(!1);Blockly.Events.setGroup(!0);for(var a=this.getTopBlocks(!0),b=0,c=0,d;d=a[c];c++){var e=d.getRelativeToSurfaceXY();d.moveBy(-e.x,b-e.y);d.snapToGrid();b=d.getRelativeToSurfaceXY().y+d.getHeightWidth().height+Blockly.BlockSvg.MIN_BLOCK_Y}Blockly.Events.setGroup(!1);this.setResizesEnabled(!0)};
Blockly.WorkspaceSvg.prototype.showContextMenu_=function(a){function b(){Blockly.Events.setGroup(e);var a=l.shift();a&&(a.workspace?(a.dispose(!1,!0),setTimeout(b,10)):b());Blockly.Events.setGroup(!1)}if(!this.options.readOnly&&!this.isFlyout){var c=[],d=this.getTopBlocks(!0),e=Blockly.utils.genUid(),f=this;c.push(Blockly.ContextMenu.wsUndoOption(this));c.push(Blockly.ContextMenu.wsRedoOption(this));this.scrollbar&&c.push(Blockly.ContextMenu.wsCleanupOption(this,d.length));if(this.options.collapse){for(var g=
!1,h=!1,k=0;k<d.length;k++)for(var m=d[k];m;)m.isCollapsed()?g=!0:h=!0,m=m.getNextBlock();c.push(Blockly.ContextMenu.wsCollapseOption(h,d));c.push(Blockly.ContextMenu.wsExpandOption(g,d))}this.options.comments&&c.push(Blockly.ContextMenu.workspaceCommentOption(f,a));var l=Blockly.WorkspaceSvg.buildDeleteList_(d),n=0;for(k=0;k<l.length;k++)l[k].isShadow()||n++;d={text:1==n?Blockly.Msg.DELETE_BLOCK:Blockly.Msg.DELETE_X_BLOCKS.replace("%1",String(n)),enabled:0<n,callback:function(){f.currentGesture_&&
f.currentGesture_.cancel();2>l.length?b():Blockly.confirm(Blockly.Msg.DELETE_ALL_BLOCKS.replace("%1",String(n)),function(a){a&&b()})}};c.push(d);Blockly.ContextMenu.show(a,c,this.RTL)}};Blockly.WorkspaceSvg.buildDeleteList_=function(a){function b(a){if(a.isDeletable())c=c.concat(a.getDescendants(!1));else{a=a.getChildren();for(var d=0;d<a.length;d++)b(a[d])}}for(var c=[],d=0;d<a.length;d++)b(a[d]);return c};
Blockly.WorkspaceSvg.prototype.updateToolbox=function(a){if(a=Blockly.Options.parseToolboxTree(a)){if(!this.options.languageTree)throw"Existing toolbox is null.  Can't create new toolbox.";if(a.getElementsByTagName("category").length){if(!this.toolbox_)throw"Existing toolbox has no categories.  Can't change mode.";this.options.languageTree=a;this.toolbox_.populate_(a);this.toolbox_.position()}else{if(!this.flyout_)throw"Existing toolbox has categories.  Can't change mode.";this.options.languageTree=
a;this.flyout_.show(a.childNodes)}}else if(this.options.languageTree)throw"Can't nullify an existing toolbox.";};Blockly.WorkspaceSvg.prototype.markFocused=function(){this.options.parentWorkspace?this.options.parentWorkspace.markFocused():(Blockly.mainWorkspace=this,this.setBrowserFocus())};Blockly.WorkspaceSvg.prototype.setBrowserFocus=function(){document.activeElement&&document.activeElement.blur();try{this.getParentSvg().focus()}catch(a){try{this.getParentSvg().parentNode.setActive()}catch(b){this.getParentSvg().parentNode.focus()}}};
Blockly.WorkspaceSvg.prototype.zoom=function(a,b,c){var d=this.options.zoomOptions.scaleSpeed,e=this.getMetrics(),f=this.getParentSvg().createSVGPoint();f.x=a;f.y=b;f=f.matrixTransform(this.getCanvas().getCTM().inverse());a=f.x;b=f.y;f=this.getCanvas();d=Math.pow(d,c);c=this.scale*d;c>this.options.zoomOptions.maxScale?d=this.options.zoomOptions.maxScale/this.scale:c<this.options.zoomOptions.minScale&&(d=this.options.zoomOptions.minScale/this.scale);this.scale!=c&&(this.scrollbar&&(a=f.getCTM().translate(a*
(1-d),b*(1-d)).scale(d),this.scrollX=a.e-e.absoluteLeft,this.scrollY=a.f-e.absoluteTop),this.setScale(c),Blockly.WidgetDiv.hide(!0),Blockly.DropDownDiv.hideWithoutAnimation())};Blockly.WorkspaceSvg.prototype.zoomCenter=function(a){var b=this.getMetrics();this.zoom(b.viewWidth/2,b.viewHeight/2,a)};
Blockly.WorkspaceSvg.prototype.zoomToFit=function(){var a=this.getMetrics(),b=this.getBlocksBoundingBox(),c=b.width;b=b.height;if(c){var d=a.viewWidth,e=a.viewHeight;this.flyout_&&(d-=this.flyout_.width_);this.scrollbar||(c+=a.contentLeft,b+=a.contentTop);this.setScale(Math.min(d/c,e/b));this.scrollCenter()}};
Blockly.WorkspaceSvg.prototype.scrollCenter=function(){if(this.scrollbar){Blockly.WidgetDiv.hide(!0);Blockly.DropDownDiv.hideWithoutAnimation();Blockly.hideChaff(!1);var a=this.getMetrics(),b=(a.contentWidth-a.viewWidth)/2;this.flyout_&&(b-=this.flyout_.width_/2);this.scrollbar.set(b,(a.contentHeight-a.viewHeight)/2)}else console.warn("Tried to scroll a non-scrollable workspace.")};
Blockly.WorkspaceSvg.prototype.centerOnBlock=function(a){if(this.scrollbar){if(a=this.getBlockById(a)){var b=a.getRelativeToSurfaceXY(),c=a.getHeightWidth(),d=this.scale;a=(b.x+(this.RTL?-1:1)*c.width/2)*d;b=(b.y+c.height/2)*d;c=this.getMetrics();a=a-c.contentLeft-c.viewWidth/2;b=b-c.contentTop-c.viewHeight/2;Blockly.hideChaff();this.scrollbar.set(a,b)}}else console.warn("Tried to scroll a non-scrollable workspace.")};
Blockly.WorkspaceSvg.prototype.setScale=function(a){this.options.zoomOptions.maxScale&&a>this.options.zoomOptions.maxScale?a=this.options.zoomOptions.maxScale:this.options.zoomOptions.minScale&&a<this.options.zoomOptions.minScale&&(a=this.options.zoomOptions.minScale);this.scale=a;this.grid_&&this.grid_.update(this.scale);this.scrollbar?this.scrollbar.resize():this.translate(this.scrollX,this.scrollY);Blockly.hideChaff(!1);this.flyout_&&this.flyout_.reflow()};
Blockly.WorkspaceSvg.prototype.scroll=function(a,b){var c=this.startDragMetrics;a=Math.min(a,-c.contentLeft);b=Math.min(b,-c.contentTop);a=Math.max(a,c.viewWidth-c.contentLeft-c.contentWidth);b=Math.max(b,c.viewHeight-c.contentTop-c.contentHeight);Blockly.WidgetDiv.hide(!0);Blockly.DropDownDiv.hideWithoutAnimation();this.scrollbar.set(-a-c.contentLeft,-b-c.contentTop)};
Blockly.WorkspaceSvg.prototype.updateStackGlowScale_=function(){this.options.stackGlowBlur&&this.options.stackGlowBlur.setAttribute("stdDeviation",Blockly.Colours.stackGlowSize/this.scale)};Blockly.WorkspaceSvg.getDimensionsPx_=function(a){var b=0,c=0;a&&(b=a.getWidth(),c=a.getHeight());return{width:b,height:c}};Blockly.WorkspaceSvg.getContentDimensions_=function(a,b){return a.scrollbar?Blockly.WorkspaceSvg.getContentDimensionsBounded_(a,b):Blockly.WorkspaceSvg.getContentDimensionsExact_(a)};
Blockly.WorkspaceSvg.getContentDimensionsExact_=function(a){var b=a.getBlocksBoundingBox(),c=a.scale;a=b.width*c;var d=b.height*c,e=b.x*c;b=b.y*c;return{left:e,top:b,right:e+a,bottom:b+d,width:a,height:d}};
Blockly.WorkspaceSvg.getContentDimensionsBounded_=function(a,b){a=Blockly.WorkspaceSvg.getContentDimensionsExact_(a);var c=b.width;b=b.height;var d=c/2,e=b/2,f=Math.min(a.left-d,a.right-c),g=Math.min(a.top-e,a.bottom-b);return{left:f,top:g,height:Math.max(a.bottom+e,a.top+b)-g,width:Math.max(a.right+d,a.left+c)-f}};
Blockly.WorkspaceSvg.getTopLevelWorkspaceMetrics_=function(){var a=Blockly.WorkspaceSvg.getDimensionsPx_(this.toolbox_),b=Blockly.WorkspaceSvg.getDimensionsPx_(this.flyout_),c=Blockly.svgSize(this.getParentSvg());if(this.toolbox_)if(this.toolboxPosition==Blockly.TOOLBOX_AT_TOP||this.toolboxPosition==Blockly.TOOLBOX_AT_BOTTOM)c.height-=a.height;else if(this.toolboxPosition==Blockly.TOOLBOX_AT_LEFT||this.toolboxPosition==Blockly.TOOLBOX_AT_RIGHT)c.width-=a.width;var d=Blockly.WorkspaceSvg.getContentDimensions_(this,
c),e=0;this.toolbox_&&this.toolboxPosition==Blockly.TOOLBOX_AT_LEFT&&(e=a.width);var f=0;this.toolbox_&&this.toolboxPosition==Blockly.TOOLBOX_AT_TOP&&(f=a.height);return{contentHeight:d.height,contentWidth:d.width,contentTop:d.top,contentLeft:d.left,viewHeight:c.height,viewWidth:c.width,viewTop:-this.scrollY,viewLeft:-this.scrollX,absoluteTop:f,absoluteLeft:e,toolboxWidth:a.width,toolboxHeight:a.height,flyoutWidth:b.width,flyoutHeight:b.height,toolboxPosition:this.toolboxPosition}};
Blockly.WorkspaceSvg.setTopLevelWorkspaceMetrics_=function(a){if(!this.scrollbar)throw"Attempt to set top level workspace scroll without scrollbars.";var b=this.getMetrics();goog.isNumber(a.x)&&(this.scrollX=-b.contentWidth*a.x-b.contentLeft);goog.isNumber(a.y)&&(this.scrollY=-b.contentHeight*a.y-b.contentTop);a=this.scrollX+b.absoluteLeft;b=this.scrollY+b.absoluteTop;this.translate(a,b);this.grid_&&this.grid_.moveTo(a,b)};
Blockly.WorkspaceSvg.prototype.setResizesEnabled=function(a){var b=!this.resizesEnabled_&&a;this.resizesEnabled_=a;b&&this.resizeContents()};Blockly.WorkspaceSvg.prototype.setToolboxRefreshEnabled=function(a){var b=!this.toolboxRefreshEnabled_&&a;this.toolboxRefreshEnabled_=a;b&&this.refreshToolboxSelection_()};Blockly.WorkspaceSvg.prototype.clear=function(){this.setResizesEnabled(!1);Blockly.WorkspaceSvg.superClass_.clear.call(this);this.setResizesEnabled(!0)};
Blockly.WorkspaceSvg.prototype.registerButtonCallback=function(a,b){goog.asserts.assert(goog.isFunction(b),"Button callbacks must be functions.");this.flyoutButtonCallbacks_[a]=b};Blockly.WorkspaceSvg.prototype.getButtonCallback=function(a){return(a=this.flyoutButtonCallbacks_[a])?a:null};Blockly.WorkspaceSvg.prototype.removeButtonCallback=function(a){this.flyoutButtonCallbacks_[a]=null};
Blockly.WorkspaceSvg.prototype.registerToolboxCategoryCallback=function(a,b){goog.asserts.assert(goog.isFunction(b),"Toolbox category callbacks must be functions.");this.toolboxCategoryCallbacks_[a]=b};Blockly.WorkspaceSvg.prototype.getToolboxCategoryCallback=function(a){return(a=this.toolboxCategoryCallbacks_[a])?a:null};Blockly.WorkspaceSvg.prototype.removeToolboxCategoryCallback=function(a){this.toolboxCategoryCallbacks_[a]=null};
Blockly.WorkspaceSvg.prototype.getGesture=function(a){var b="mousedown"==a.type||"touchstart"==a.type,c=this.currentGesture_;return c?b&&c.hasStarted()?(console.warn("tried to start the same gesture twice"),c.cancel(),null):c:b?this.currentGesture_=new Blockly.Gesture(a,this):null};Blockly.WorkspaceSvg.prototype.clearGesture=function(){this.currentGesture_=null};Blockly.WorkspaceSvg.prototype.cancelCurrentGesture=function(){this.currentGesture_&&this.currentGesture_.cancel()};
Blockly.WorkspaceSvg.prototype.startDragWithFakeEvent=function(a,b){Blockly.Touch.clearTouchIdentifier();Blockly.Touch.checkTouchIdentifier(a);b.workspace.getGesture(a).forceStartBlockDrag(a,b)};Blockly.WorkspaceSvg.prototype.getAudioManager=function(){return this.audioManager_};Blockly.WorkspaceSvg.prototype.getGrid=function(){return this.grid_};Blockly.WorkspaceSvg.prototype.setVisible=Blockly.WorkspaceSvg.prototype.setVisible;Blockly.Mutator=function(a){Blockly.Mutator.superClass_.constructor.call(this,null);this.quarkNames_=a};goog.inherits(Blockly.Mutator,Blockly.Icon);Blockly.Mutator.prototype.workspaceWidth_=0;Blockly.Mutator.prototype.workspaceHeight_=0;
Blockly.Mutator.prototype.drawIcon_=function(a){Blockly.utils.createSvgElement("rect",{"class":"blocklyIconShape",rx:"4",ry:"4",height:"16",width:"16"},a);Blockly.utils.createSvgElement("path",{"class":"blocklyIconSymbol",d:"m4.203,7.296 0,1.368 -0.92,0.677 -0.11,0.41 0.9,1.559 0.41,0.11 1.043,-0.457 1.187,0.683 0.127,1.134 0.3,0.3 1.8,0 0.3,-0.299 0.127,-1.138 1.185,-0.682 1.046,0.458 0.409,-0.11 0.9,-1.559 -0.11,-0.41 -0.92,-0.677 0,-1.366 0.92,-0.677 0.11,-0.41 -0.9,-1.559 -0.409,-0.109 -1.046,0.458 -1.185,-0.682 -0.127,-1.138 -0.3,-0.299 -1.8,0 -0.3,0.3 -0.126,1.135 -1.187,0.682 -1.043,-0.457 -0.41,0.11 -0.899,1.559 0.108,0.409z"},a);
Blockly.utils.createSvgElement("circle",{"class":"blocklyIconShape",r:"2.7",cx:"8",cy:"8"},a)};Blockly.Mutator.prototype.iconClick_=function(a){this.block_.isEditable()&&Blockly.Icon.prototype.iconClick_.call(this,a)};
Blockly.Mutator.prototype.createEditor_=function(){this.svgDialog_=Blockly.utils.createSvgElement("svg",{x:Blockly.Bubble.BORDER_WIDTH,y:Blockly.Bubble.BORDER_WIDTH},null);if(this.quarkNames_.length)for(var a=goog.dom.createDom("xml"),b=0,c;c=this.quarkNames_[b];b++)a.appendChild(goog.dom.createDom("block",{type:c}));else a=null;a={languageTree:a,parentWorkspace:this.block_.workspace,pathToMedia:this.block_.workspace.options.pathToMedia,RTL:this.block_.RTL,toolboxPosition:this.block_.RTL?Blockly.TOOLBOX_AT_RIGHT:
Blockly.TOOLBOX_AT_LEFT,horizontalLayout:!1,getMetrics:this.getFlyoutMetrics_.bind(this),setMetrics:null};this.workspace_=new Blockly.WorkspaceSvg(a,this.block_.workspace.dragSurface);this.workspace_.isMutator=!0;a=this.workspace_.addFlyout_("g");b=this.workspace_.createDom("blocklyMutatorBackground");b.insertBefore(a,this.workspace_.svgBlockCanvas_);this.svgDialog_.appendChild(b);return this.svgDialog_};
Blockly.Mutator.prototype.updateEditable=function(){this.block_.isInFlyout||(this.block_.isEditable()?this.iconGroup_&&Blockly.utils.removeClass(this.iconGroup_,"blocklyIconGroupReadonly"):(this.setVisible(!1),this.iconGroup_&&Blockly.utils.addClass(this.iconGroup_,"blocklyIconGroupReadonly")));Blockly.Icon.prototype.updateEditable.call(this)};
Blockly.Mutator.prototype.resizeBubble_=function(){var a=2*Blockly.Bubble.BORDER_WIDTH,b=this.workspace_.getCanvas().getBBox();var c=this.block_.RTL?-b.x:b.width+b.x;b=b.height+3*a;if(this.workspace_.flyout_){var d=this.workspace_.flyout_.getMetrics_();b=Math.max(b,d.contentHeight+20)}c+=3*a;if(Math.abs(this.workspaceWidth_-c)>a||Math.abs(this.workspaceHeight_-b)>a)this.workspaceWidth_=c,this.workspaceHeight_=b,this.bubble_.setBubbleSize(c+a,b+a),this.svgDialog_.setAttribute("width",this.workspaceWidth_),
this.svgDialog_.setAttribute("height",this.workspaceHeight_);this.block_.RTL&&(a="translate("+this.workspaceWidth_+",0)",this.workspace_.getCanvas().setAttribute("transform",a));this.workspace_.resize()};
Blockly.Mutator.prototype.setVisible=function(a){if(a!=this.isVisible())if(Blockly.Events.fire(new Blockly.Events.Ui(this.block_,"mutatorOpen",!a,a)),a){this.bubble_=new Blockly.Bubble(this.block_.workspace,this.createEditor_(),this.block_.svgPath_,this.iconXY_,null,null);if(a=this.workspace_.options.languageTree)this.workspace_.flyout_.init(this.workspace_),this.workspace_.flyout_.show(a.childNodes);this.rootBlock_=this.block_.decompose(this.workspace_);a=this.rootBlock_.getDescendants(!1);for(var b=
0,c;c=a[b];b++)c.render();this.rootBlock_.setMovable(!1);this.rootBlock_.setDeletable(!1);this.workspace_.flyout_?(a=2*this.workspace_.flyout_.CORNER_RADIUS,b=this.workspace_.flyout_.width_+a):b=a=16;this.block_.RTL&&(b=-b);this.rootBlock_.moveBy(b,a);if(this.block_.saveConnections){var d=this;this.block_.saveConnections(this.rootBlock_);this.sourceListener_=function(){d.block_.saveConnections(d.rootBlock_)};this.block_.workspace.addChangeListener(this.sourceListener_)}this.resizeBubble_();this.workspace_.addChangeListener(this.workspaceChanged_.bind(this));
this.updateColour()}else this.svgDialog_=null,this.workspace_.dispose(),this.rootBlock_=this.workspace_=null,this.bubble_.dispose(),this.bubble_=null,this.workspaceHeight_=this.workspaceWidth_=0,this.sourceListener_&&(this.block_.workspace.removeChangeListener(this.sourceListener_),this.sourceListener_=null)};
Blockly.Mutator.prototype.workspaceChanged_=function(){if(!this.workspace_.isDragging())for(var a=this.workspace_.getTopBlocks(!1),b=0,c;c=a[b];b++){var d=c.getRelativeToSurfaceXY(),e=c.getHeightWidth();20>d.y+e.height&&c.moveBy(0,20-e.height-d.y)}if(this.rootBlock_.workspace==this.workspace_){Blockly.Events.setGroup(!0);c=this.block_;a=(a=c.mutationToDom())&&Blockly.Xml.domToText(a);b=c.rendered;c.rendered=!1;c.compose(this.rootBlock_);c.rendered=b;c.initSvg();b=(b=c.mutationToDom())&&Blockly.Xml.domToText(b);
if(a!=b){Blockly.Events.fire(new Blockly.Events.BlockChange(c,"mutation",null,a,b));var f=Blockly.Events.getGroup();setTimeout(function(){Blockly.Events.setGroup(f);c.bumpNeighbours_();Blockly.Events.setGroup(!1)},Blockly.BUMP_DELAY)}c.rendered&&c.render();this.workspace_.isDragging()||this.resizeBubble_();Blockly.Events.setGroup(!1)}};Blockly.Mutator.prototype.getFlyoutMetrics_=function(){return{viewHeight:this.workspaceHeight_,viewWidth:this.workspaceWidth_,absoluteTop:0,absoluteLeft:0}};
Blockly.Mutator.prototype.dispose=function(){this.block_.mutator=null;Blockly.Icon.prototype.dispose.call(this)};Blockly.Mutator.reconnect=function(a,b,c){if(!a||!a.getSourceBlock().workspace)return!1;c=b.getInput(c).connection;var d=a.targetBlock();return d&&d!=b||c.targetConnection==a?!1:(c.isConnected()&&c.disconnect(),c.connect(a),!0)};goog.global.Blockly||(goog.global.Blockly={});goog.global.Blockly.Mutator||(goog.global.Blockly.Mutator={});goog.global.Blockly.Mutator.reconnect=Blockly.Mutator.reconnect;Blockly.Extensions={};Blockly.Extensions.ALL_={};Blockly.Extensions.register=function(a,b){if(!goog.isString(a)||goog.string.isEmptyOrWhitespace(a))throw Error('Error: Invalid extension name "'+a+'"');if(Blockly.Extensions.ALL_[a])throw Error('Error: Extension "'+a+'" is already registered.');if(!goog.isFunction(b))throw Error('Error: Extension "'+a+'" must be a function');Blockly.Extensions.ALL_[a]=b};
Blockly.Extensions.registerMixin=function(a,b){if(!goog.isObject(b))throw Error('Error: Mixin "'+a+'" must be a object');Blockly.Extensions.register(a,function(){this.mixin(b)})};
Blockly.Extensions.registerMutator=function(a,b,c,d){var e='Error when registering mutator "'+a+'": ';Blockly.Extensions.checkHasFunction_(e,b.domToMutation,"domToMutation");Blockly.Extensions.checkHasFunction_(e,b.mutationToDom,"mutationToDom");var f=Blockly.Extensions.checkMutatorDialog_(b,e);if(c&&!goog.isFunction(c))throw Error('Extension "'+a+'" is not a function');Blockly.Extensions.register(a,function(){f&&this.setMutator(new Blockly.Mutator(d));this.mixin(b);c&&c.apply(this)})};
Blockly.Extensions.apply=function(a,b,c){var d=Blockly.Extensions.ALL_[a];if(!goog.isFunction(d))throw Error('Error: Extension "'+a+'" not found.');if(c)Blockly.Extensions.checkNoMutatorProperties_(a,b);else var e=Blockly.Extensions.getMutatorProperties_(b);d.apply(b);if(c)Blockly.Extensions.checkBlockHasMutatorProperties_('Error after applying mutator "'+a+'": ',b);else if(!Blockly.Extensions.mutatorPropertiesMatch_(e,b))throw Error('Error when applying extension "'+a+'": mutation properties changed when applying a non-mutator extension.');
};Blockly.Extensions.checkHasFunction_=function(a,b,c){if(!b)throw Error(a+'missing required property "'+c+'"');if("function"!=typeof b)throw Error(a+'" required property "'+c+'" must be a function');};Blockly.Extensions.checkNoMutatorProperties_=function(a,b){if(Blockly.Extensions.getMutatorProperties_(b).length)throw Error('Error: tried to apply mutation "'+a+'" to a block that already has mutator functions.  Block id: '+b.id);};
Blockly.Extensions.checkMutatorDialog_=function(a,b){var c=void 0!==a.compose,d=void 0!==a.decompose;if(c&&d){if("function"!=typeof a.compose)throw Error(b+"compose must be a function.");if("function"!=typeof a.decompose)throw Error(b+"decompose must be a function.");return!0}if(c||d)throw Error(b+'Must have both or neither of "compose" and "decompose"');return!1};
Blockly.Extensions.checkBlockHasMutatorProperties_=function(a,b){if("function"!==typeof b.domToMutation)throw Error(a+'Applying a mutator didn\'t add "domToMutation"');if("function"!=typeof b.mutationToDom)throw Error(a+'Applying a mutator didn\'t add "mutationToDom"');Blockly.Extensions.checkMutatorDialog_(b,a)};
Blockly.Extensions.getMutatorProperties_=function(a){var b=[];void 0!==a.domToMutation&&b.push(a.domToMutation);void 0!==a.mutationToDom&&b.push(a.mutationToDom);void 0!==a.compose&&b.push(a.compose);void 0!==a.decompose&&b.push(a.decompose);return b};Blockly.Extensions.mutatorPropertiesMatch_=function(a,b){b=Blockly.Extensions.getMutatorProperties_(b);if(b.length!=a.length)return!1;for(var c=0;c<b.length;c++)if(a[c]!=b[c])return!1;return!0};
Blockly.Extensions.buildTooltipForDropdown=function(a,b){var c=[];document&&Blockly.utils.runAfterPageLoad(function(){for(var a in b)Blockly.utils.checkMessageReferences(b[a])});return function(){this.type&&-1===c.indexOf(this.type)&&(Blockly.Extensions.checkDropdownOptionsInTable_(this,a,b),c.push(this.type));this.setTooltip(function(){var d=this.getFieldValue(a),e=b[d];null==e?-1===c.indexOf(this.type)&&(d="No tooltip mapping for value "+d+" of field "+a,null!=this.type&&(d+=" of block type "+this.type),
console.warn(d+".")):e=Blockly.utils.replaceMessageReferences(e);return e}.bind(this))}};Blockly.Extensions.checkDropdownOptionsInTable_=function(a,b,c){var d=a.getField(b);if(!d.isOptionListDynamic()){d=d.getOptions();for(var e=0;e<d.length;++e){var f=d[e][1];null==c[f]&&console.warn("No tooltip mapping for value "+f+" of field "+b+" of block type "+a.type)}}};
Blockly.Extensions.buildTooltipWithFieldValue=function(a,b){document&&Blockly.utils.runAfterPageLoad(function(){Blockly.utils.checkMessageReferences(a)});return function(){this.setTooltip(function(){return Blockly.utils.replaceMessageReferences(a).replace("%1",this.getFieldValue(b))}.bind(this))}};Blockly.Extensions.extensionParentTooltip_=function(){this.tooltipWhenNotConnected_=this.tooltip;this.setTooltip(function(){var a=this.getParent();return a&&a.getInputsInline()&&a.tooltip||this.tooltipWhenNotConnected_}.bind(this))};
Blockly.Extensions.register("parent_tooltip_when_inline",Blockly.Extensions.extensionParentTooltip_);Blockly.Field=function(a,b){this.size_=new goog.math.Size(Blockly.BlockSvg.FIELD_WIDTH,Blockly.BlockSvg.FIELD_HEIGHT);this.setValue(a);this.setValidator(b);this.maxDisplayLength=Blockly.BlockSvg.MAX_DISPLAY_LENGTH};Blockly.Field.TYPE_MAP_={};
Blockly.Field.register=function(a,b){if(!goog.isString(a)||goog.string.isEmptyOrWhitespace(a))throw Error('Invalid field type "'+a+'"');if(!goog.isObject(b)||!goog.isFunction(b.fromJson))throw Error('Field "'+b+'" must have a fromJson function');Blockly.Field.TYPE_MAP_[a]=b};Blockly.Field.fromJson=function(a){var b=Blockly.Field.TYPE_MAP_[a.type];return b?b.fromJson(a):null};Blockly.Field.cacheWidths_=null;Blockly.Field.cacheReference_=0;Blockly.Field.prototype.name=void 0;
Blockly.Field.prototype.className_="blocklyText";Blockly.Field.prototype.text_="";Blockly.Field.prototype.sourceBlock_=null;Blockly.Field.prototype.visible_=!0;Blockly.Field.prototype.argType_=null;Blockly.Field.prototype.validator_=null;Blockly.Field.NBSP="\u00a0";Blockly.Field.IE_TEXT_OFFSET="0.3em";Blockly.Field.prototype.EDITABLE=!0;Blockly.Field.prototype.SERIALIZABLE=!0;
Blockly.Field.prototype.setSourceBlock=function(a){goog.asserts.assert(!this.sourceBlock_,"Field already bound to a block.");this.sourceBlock_=a};
Blockly.Field.prototype.init=function(){if(!this.fieldGroup_){this.fieldGroup_=Blockly.utils.createSvgElement("g",{},null);this.visible_||(this.fieldGroup_.style.display="none");null!==this.getArgTypes()&&(this.sourceBlock_.isShadow()?this.sourceBlock_.svgGroup_.setAttribute("data-argument-type",this.getArgTypes()):this.fieldGroup_.setAttribute("data-argument-type",this.getArgTypes()));var a=this.getSize();this.textElement_=Blockly.utils.createSvgElement("text",{"class":this.className_,x:this.sourceBlock_.RTL?
-a.width/2:a.width/2,y:a.height/2+Blockly.BlockSvg.FIELD_TOP_PADDING,"dominant-baseline":"middle",dy:goog.userAgent.EDGE_OR_IE?Blockly.Field.IE_TEXT_OFFSET:"0","text-anchor":"middle"},this.fieldGroup_);this.updateEditable();this.sourceBlock_.getSvgRoot().appendChild(this.fieldGroup_);this.render_();this.size_.width=0;this.mouseDownWrapper_=Blockly.bindEventWithChecks_(this.getClickTarget_(),"mousedown",this,this.onMouseDown_)}};Blockly.Field.prototype.initModel=function(){};
Blockly.Field.prototype.dispose=function(){this.mouseDownWrapper_&&(Blockly.unbindEvent_(this.mouseDownWrapper_),this.mouseDownWrapper_=null);this.sourceBlock_=null;goog.dom.removeNode(this.fieldGroup_);this.validator_=this.textElement_=this.fieldGroup_=null};
Blockly.Field.prototype.updateEditable=function(){var a=this.fieldGroup_;this.EDITABLE&&a&&(this.sourceBlock_.isEditable()?(Blockly.utils.addClass(a,"blocklyEditableText"),Blockly.utils.removeClass(a,"blocklyNonEditableText"),this.fieldGroup_.style.cursor=this.CURSOR):(Blockly.utils.addClass(a,"blocklyNonEditableText"),Blockly.utils.removeClass(a,"blocklyEditableText"),this.fieldGroup_.style.cursor=""))};
Blockly.Field.prototype.isCurrentlyEditable=function(){return this.EDITABLE&&!!this.sourceBlock_&&this.sourceBlock_.isEditable()};Blockly.Field.prototype.isVisible=function(){return this.visible_};Blockly.Field.prototype.setVisible=function(a){if(this.visible_!=a){this.visible_=a;var b=this.getSvgRoot();b&&(b.style.display=a?"block":"none",this.render_())}};Blockly.Field.prototype.addArgType=function(a){null==this.argType_&&(this.argType_=[]);this.argType_.push(a)};
Blockly.Field.prototype.getArgTypes=function(){return null===this.argType_||0===this.argType_.length?null:this.argType_.join(" ")};Blockly.Field.prototype.setValidator=function(a){this.validator_=a};Blockly.Field.prototype.getValidator=function(){return this.validator_};Blockly.Field.prototype.classValidator=function(a){return a};
Blockly.Field.prototype.callValidator=function(a){var b=this.classValidator(a);if(null===b)return null;void 0!==b&&(a=b);if(b=this.getValidator()){b=b.call(this,a);if(null===b)return null;void 0!==b&&(a=b)}return a};Blockly.Field.prototype.getSvgRoot=function(){return this.fieldGroup_};
Blockly.Field.prototype.render_=function(){if(this.visible_&&this.textElement_){this.textElement_.textContent=this.getDisplayText_();this.updateWidth();var a=(this.size_.width-this.arrowWidth_)/2;this.sourceBlock_.RTL&&(a+=this.arrowWidth_);if(this.sourceBlock_.isShadow()&&!this.positionArrow){var b=Blockly.BlockSvg.FIELD_WIDTH/2;a=this.sourceBlock_.RTL?Math.min(this.size_.width-b,a):Math.max(b,a)}this.textElement_.setAttribute("x",a)}this.box_&&(this.box_.setAttribute("width",this.size_.width),this.box_.setAttribute("height",
this.size_.height))};Blockly.Field.prototype.updateWidth=function(){var a=Blockly.Field.getCachedWidth(this.textElement_);this.EDITABLE&&(a+=Blockly.BlockSvg.EDITABLE_FIELD_PADDING);this.arrowWidth_=0;this.positionArrow&&(this.arrowWidth_=this.positionArrow(a),a+=this.arrowWidth_);this.box_&&(a+=2*Blockly.BlockSvg.BOX_FIELD_PADDING);this.size_.width=a};
Blockly.Field.getCachedWidth=function(a){var b=a.textContent+"\n"+a.className.baseVal,c;if(Blockly.Field.cacheWidths_&&(c=Blockly.Field.cacheWidths_[b]))return c;try{c=goog.userAgent.IE||goog.userAgent.EDGE?a.getBBox().width:a.getComputedTextLength()}catch(d){return 8*a.textContent.length}Blockly.Field.cacheWidths_&&(Blockly.Field.cacheWidths_[b]=c);return c};Blockly.Field.startCache=function(){Blockly.Field.cacheReference_++;Blockly.Field.cacheWidths_||(Blockly.Field.cacheWidths_={})};
Blockly.Field.stopCache=function(){Blockly.Field.cacheReference_--;Blockly.Field.cacheReference_||(Blockly.Field.cacheWidths_=null)};Blockly.Field.prototype.getSize=function(){this.size_.width||this.render_();return this.size_};Blockly.Field.prototype.getScaledBBox_=function(){var a=this.getSize(),b=a.height*this.sourceBlock_.workspace.scale;a=a.width*this.sourceBlock_.workspace.scale;var c=this.getAbsoluteXY_();return{top:c.y,bottom:c.y+b,left:c.x,right:c.x+a}};
Blockly.Field.prototype.getDisplayText_=function(){var a=this.text_;if(!a)return Blockly.Field.NBSP;a.length>this.maxDisplayLength&&(a=a.substring(0,this.maxDisplayLength-2)+"\u2026");a=a.replace(/\s/g,Blockly.Field.NBSP);this.sourceBlock_.RTL&&(a+="\u200f");return a};Blockly.Field.prototype.getText=function(){return this.text_};Blockly.Field.prototype.setText=function(a){null!==a&&(a=String(a),a!==this.text_&&(this.text_=a,this.forceRerender()))};
Blockly.Field.prototype.forceRerender=function(){this.size_.width=0;this.sourceBlock_&&this.sourceBlock_.rendered&&(this.sourceBlock_.render(),this.sourceBlock_.bumpNeighbours_())};
Blockly.Field.prototype.updateTextNode_=function(){if(this.textElement_){var a=this.text_;a.length>this.maxDisplayLength?(a=a.substring(0,this.maxDisplayLength-2)+"\u2026",this.textElement_.setAttribute("class",this.className_+" blocklyTextTruncated")):this.textElement_.setAttribute("class",this.className_);goog.dom.removeChildren(this.textElement_);a=a.replace(/\s/g,Blockly.Field.NBSP);this.sourceBlock_.RTL&&a&&(a+="\u200f");a||(a=Blockly.Field.NBSP);a=document.createTextNode(a);this.textElement_.appendChild(a);
this.size_.width=0}};Blockly.Field.prototype.getValue=function(){return this.getText()};Blockly.Field.prototype.setValue=function(a){if(null!==a){var b=this.getValue();b!=a&&(this.sourceBlock_&&Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.BlockChange(this.sourceBlock_,"field",this.name,b,a)),this.setText(a))}};Blockly.Field.prototype.onMouseDown_=function(a){this.sourceBlock_&&this.sourceBlock_.workspace&&(a=this.sourceBlock_.workspace.getGesture(a))&&a.setStartField(this)};
Blockly.Field.prototype.setTooltip=function(a){};Blockly.Field.prototype.getClickTarget_=function(){for(var a=0,b=0,c;c=this.sourceBlock_.inputList[b];b++)a+=c.fieldRow.length;return 1>=a&&this.sourceBlock_.outputConnection?this.sourceBlock_.getSvgRoot():this.getSvgRoot()};Blockly.Field.prototype.getAbsoluteXY_=function(){return goog.style.getPageOffset(this.getClickTarget_())};Blockly.Field.prototype.referencesVariables=function(){return!1};Blockly.FieldLabel=function(a,b){this.size_=new goog.math.Size(0,0);this.class_=b;this.setValue(a)};goog.inherits(Blockly.FieldLabel,Blockly.Field);Blockly.FieldLabel.fromJson=function(a){var b=Blockly.utils.replaceMessageReferences(a.text);return new Blockly.FieldLabel(b,a["class"])};Blockly.FieldLabel.prototype.EDITABLE=!1;Blockly.FieldLabel.prototype.SERIALIZABLE=!1;
Blockly.FieldLabel.prototype.init=function(){this.textElement_||(this.textElement_=Blockly.utils.createSvgElement("text",{"class":"blocklyText",y:Blockly.BlockSvg.FIELD_TOP_PADDING,"text-anchor":"middle","dominant-baseline":"middle",dy:goog.userAgent.EDGE_OR_IE?Blockly.Field.IE_TEXT_OFFSET:"0"},null),this.class_&&Blockly.utils.addClass(this.textElement_,this.class_),this.visible_||(this.textElement_.style.display="none"),this.sourceBlock_.getSvgRoot().appendChild(this.textElement_),this.textElement_.tooltip=
this.sourceBlock_,Blockly.Tooltip.bindMouseEvents(this.textElement_),this.render_())};Blockly.FieldLabel.prototype.dispose=function(){goog.dom.removeNode(this.textElement_);this.textElement_=null};Blockly.FieldLabel.prototype.getSvgRoot=function(){return this.textElement_};Blockly.FieldLabel.prototype.setTooltip=function(a){this.textElement_.tooltip=a};Blockly.Field.register("field_label",Blockly.FieldLabel);Blockly.FieldLabelSerializable=function(a,b){Blockly.FieldLabelSerializable.superClass_.constructor.call(this,a,b);this.arrowWidth_=0};goog.inherits(Blockly.FieldLabelSerializable,Blockly.FieldLabel);Blockly.FieldLabelSerializable.fromJson=function(a){var b=Blockly.utils.replaceMessageReferences(a.text);return new Blockly.FieldLabelSerializable(b,a["class"])};Blockly.FieldLabelSerializable.prototype.EDITABLE=!1;Blockly.FieldLabelSerializable.prototype.SERIALIZABLE=!0;
Blockly.FieldLabelSerializable.prototype.updateWidth=function(){this.size_.width=Blockly.Field.getCachedWidth(this.textElement_)};
Blockly.FieldLabelSerializable.prototype.render_=function(){if(this.visible_&&this.textElement_){goog.dom.removeChildren(this.textElement_);var a=document.createTextNode(this.getDisplayText_());this.textElement_.appendChild(a);this.updateWidth();a=this.size_.width/2;var b=Blockly.BlockSvg.FIELD_WIDTH/2;a=this.sourceBlock_.RTL?Math.min(this.size_.width-b,a):Math.max(b,a);this.textElement_.setAttribute("x",a)}};Blockly.Field.register("field_label_serializable",Blockly.FieldLabelSerializable);Blockly.FieldVariableGetter=function(a,b,c){this.size_=new goog.math.Size(Blockly.BlockSvg.FIELD_WIDTH,Blockly.BlockSvg.FIELD_HEIGHT);this.text_=a;this.maxDisplayLength=Blockly.BlockSvg.MAX_DISPLAY_LENGTH;this.name_=b;this.variableType_=c?c:""};goog.inherits(Blockly.FieldVariableGetter,Blockly.Field);Blockly.FieldVariableGetter.fromJson=function(a){var b=Blockly.utils.replaceMessageReferences(a.text);return new Blockly.FieldVariableGetter(b,a.name,a["class"],a.variableType)};
Blockly.FieldVariableGetter.prototype.EDITABLE=!1;Blockly.FieldVariableGetter.prototype.SERIALIZABLE=!0;Blockly.FieldVariableGetter.prototype.init=function(){if(!this.fieldGroup_&&(Blockly.FieldVariableGetter.superClass_.init.call(this),!this.variable_)){this.workspace_=this.sourceBlock_.workspace;var a=Blockly.Variables.getOrCreateVariablePackage(this.workspace_,null,this.text_,this.variableType_);this.setValue(a.getId())}};
Blockly.FieldVariableGetter.prototype.getValue=function(){return this.variable_?this.variable_.getId():""};Blockly.FieldVariableGetter.prototype.getText=function(){return this.variable_?this.variable_.name:""};Blockly.FieldVariableGetter.prototype.getVariable=function(){return this.variable_};
Blockly.FieldVariableGetter.prototype.setValue=function(a){var b=Blockly.Variables.getVariable(this.sourceBlock_.workspace,a);if(!b)throw Error("Variable id doesn't point to a real variable!  ID was "+a);if(this.sourceBlock_&&Blockly.Events.isEnabled()){var c=this.variable_?this.variable_.getId():null;Blockly.Events.fire(new Blockly.Events.BlockChange(this.sourceBlock_,"field",this.name,c,b.getId()))}this.variable_=b;this.value_=a;this.setText(b.name)};
Blockly.FieldVariableGetter.prototype.showEditor_=function(){};Blockly.FieldVariableGetter.prototype.updateEditable=function(){};Blockly.FieldVariableGetter.prototype.referencesVariables=function(){return!0};Blockly.Field.register("field_variable_getter",Blockly.FieldVariableGetter);Blockly.Input=function(a,b,c,d){if(a!=Blockly.DUMMY_INPUT&&!b)throw"Value inputs and statement inputs must have non-empty name.";this.type=a;this.name=b;this.sourceBlock_=c;this.connection=d;this.fieldRow=[];this.outlinePath=null};Blockly.Input.prototype.align=Blockly.ALIGN_LEFT;Blockly.Input.prototype.visible_=!0;Blockly.Input.prototype.appendField=function(a,b){this.insertFieldAt(this.fieldRow.length,a,b);return this};
Blockly.Input.prototype.insertFieldAt=function(a,b,c){if(0>a||a>this.fieldRow.length)throw Error("index "+a+" out of bounds.");if(!b&&!c)return this;goog.isString(b)&&(b=new Blockly.FieldLabel(b));b.setSourceBlock(this.sourceBlock_);this.sourceBlock_.rendered&&b.init();b.name=c;b.prefixField&&(a=this.insertFieldAt(a,b.prefixField));this.fieldRow.splice(a,0,b);++a;b.suffixField&&(a=this.insertFieldAt(a,b.suffixField));this.sourceBlock_.rendered&&(this.sourceBlock_.render(),this.sourceBlock_.bumpNeighbours_());
return a};Blockly.Input.prototype.removeField=function(a){for(var b=0,c;c=this.fieldRow[b];b++)if(c.name===a){c.dispose();this.fieldRow.splice(b,1);this.sourceBlock_.rendered&&(this.sourceBlock_.render(),this.sourceBlock_.bumpNeighbours_());return}goog.asserts.fail('Field "%s" not found.',a)};Blockly.Input.prototype.isVisible=function(){return this.visible_};
Blockly.Input.prototype.setVisible=function(a){var b=[];if(this.visible_==a)return b;for(var c=(this.visible_=a)?"block":"none",d=0,e;e=this.fieldRow[d];d++)e.setVisible(a);this.connection&&(a?b=this.connection.unhideAll():this.connection.hideAll(),d=this.connection.targetBlock())&&(d.getSvgRoot().style.display=c,a||(d.rendered=!1));return b};Blockly.Input.prototype.setCheck=function(a){if(!this.connection)throw"This input does not have a connection.";this.connection.setCheck(a);return this};
Blockly.Input.prototype.setAlign=function(a){this.align=a;this.sourceBlock_.rendered&&this.sourceBlock_.render();return this};Blockly.Input.prototype.init=function(){if(this.sourceBlock_.workspace.rendered)for(var a=0;a<this.fieldRow.length;a++)this.fieldRow[a].init(this.sourceBlock_)};Blockly.Input.prototype.dispose=function(){this.outlinePath&&goog.dom.removeNode(this.outlinePath);for(var a=0,b;b=this.fieldRow[a];a++)b.dispose();this.connection&&this.connection.dispose();this.sourceBlock_=null};
Blockly.Input.prototype.initOutlinePath=function(a){this.sourceBlock_.workspace.rendered&&!this.outlinePath&&this.type==Blockly.INPUT_VALUE&&(this.outlinePath=Blockly.utils.createSvgElement("path",{"class":"blocklyPath",style:"visibility: hidden",d:""},a))};Blockly.Warning=function(a){Blockly.Warning.superClass_.constructor.call(this,a);this.createIcon();this.text_={}};goog.inherits(Blockly.Warning,Blockly.Icon);Blockly.Warning.prototype.collapseHidden=!1;
Blockly.Warning.prototype.drawIcon_=function(a){Blockly.utils.createSvgElement("path",{"class":"blocklyIconShape",d:"M2,15Q-1,15 0.5,12L6.5,1.7Q8,-1 9.5,1.7L15.5,12Q17,15 14,15z"},a);Blockly.utils.createSvgElement("path",{"class":"blocklyIconSymbol",d:"m7,4.8v3.16l0.27,2.27h1.46l0.27,-2.27v-3.16z"},a);Blockly.utils.createSvgElement("rect",{"class":"blocklyIconSymbol",x:"7",y:"11",height:"2",width:"2"},a)};
Blockly.Warning.textToDom_=function(a){var b=Blockly.utils.createSvgElement("text",{"class":"blocklyText blocklyBubbleText",y:Blockly.Bubble.BORDER_WIDTH},null);a=a.split("\n");for(var c=0;c<a.length;c++){var d=Blockly.utils.createSvgElement("tspan",{dy:"1em",x:Blockly.Bubble.BORDER_WIDTH},b),e=document.createTextNode(a[c]);d.appendChild(e)}return b};
Blockly.Warning.prototype.setVisible=function(a){if(a!=this.isVisible())if(Blockly.Events.fire(new Blockly.Events.Ui(this.block_,"warningOpen",!a,a)),a){a=Blockly.Warning.textToDom_(this.getText());this.bubble_=new Blockly.Bubble(this.block_.workspace,a,this.block_.svgPath_,this.iconXY_,null,null);if(this.block_.RTL)for(var b=a.getBBox().width,c=0,d;d=a.childNodes[c];c++)d.setAttribute("text-anchor","end"),d.setAttribute("x",b+Blockly.Bubble.BORDER_WIDTH);this.updateColour();a=this.bubble_.getBubbleSize();
this.bubble_.setBubbleSize(a.width,a.height)}else this.bubble_.dispose(),this.body_=this.bubble_=null};Blockly.Warning.prototype.bodyFocus_=function(a){this.bubble_.promote_()};Blockly.Warning.prototype.setText=function(a,b){this.text_[b]!=a&&(a?this.text_[b]=a:delete this.text_[b],this.isVisible()&&(this.setVisible(!1),this.setVisible(!0)))};Blockly.Warning.prototype.getText=function(){var a=[],b;for(b in this.text_)a.push(this.text_[b]);return a.join("\n")};
Blockly.Warning.prototype.dispose=function(){this.block_.warning=null;Blockly.Icon.prototype.dispose.call(this)};Blockly.Block=function(a,b,c){var d=a&&a.getFlyout&&a.getFlyout()?a.getFlyout().getWorkspace():null;this.id=!c||a.getBlockById(c)||d&&d.getBlockById(c)?Blockly.utils.genUid():c;a.blockDB_[this.id]=this;this.previousConnection=this.nextConnection=this.outputConnection=null;this.inputList=[];this.inputsInline=!0;this.disabled=!1;this.tooltip="";this.contextMenu=!0;this.parentBlock_=null;this.childBlocks_=[];this.editable_=this.movable_=this.deletable_=!0;this.checkboxInFlyout_=this.collapsed_=this.isShadow_=
!1;this.category_=this.outputShape_=this.comment=null;this.xy_=new goog.math.Coordinate(0,0);this.workspace=a;this.isInFlyout=a.isFlyout;this.isInMutator=a.isMutator;this.RTL=a.RTL;this.isInsertionMarker_=!1;b&&(this.type=b,c=Blockly.Blocks[b],goog.asserts.assertObject(c,'Error: Unknown block type "%s".',b),goog.mixin(this,c));a.addTopBlock(this);goog.isFunction(this.init)&&this.init();this.inputsInlineDefault=this.inputsInline;if(Blockly.Events.isEnabled()){(a=Blockly.Events.getGroup())||Blockly.Events.setGroup(!0);
try{Blockly.Events.fire(new Blockly.Events.BlockCreate(this))}finally{a||Blockly.Events.setGroup(!1)}}goog.isFunction(this.onchange)&&this.setOnChange(this.onchange)};Blockly.Block.prototype.data=null;Blockly.Block.prototype.colour_="#FF0000";Blockly.Block.prototype.colourSecondary_="#FF0000";Blockly.Block.prototype.colourTertiary_="#FF0000";
Blockly.Block.prototype.dispose=function(a){if(this.workspace){this.onchangeWrapper_&&this.workspace.removeChangeListener(this.onchangeWrapper_);this.unplug(a);Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.BlockDelete(this));Blockly.Events.disable();try{this.workspace&&(this.workspace.removeTopBlock(this),delete this.workspace.blockDB_[this.id],this.workspace=null);Blockly.selected==this&&(Blockly.selected=null);for(var b=this.childBlocks_.length-1;0<=b;b--)this.childBlocks_[b].dispose(!1);
b=0;for(var c;c=this.inputList[b];b++)c.dispose();this.inputList.length=0;var d=this.getConnections_(!0);for(b=0;b<d.length;b++){var e=d[b];e.isConnected()&&e.disconnect();d[b].dispose()}}finally{Blockly.Events.enable()}}};Blockly.Block.prototype.initModel=function(){for(var a=0,b;b=this.inputList[a];a++)for(var c=0,d;d=b.fieldRow[c];c++)d.initModel&&d.initModel()};
Blockly.Block.prototype.unplug=function(a){if(this.outputConnection)this.outputConnection.isConnected()&&this.outputConnection.disconnect();else if(this.previousConnection){var b=null;this.previousConnection.isConnected()&&(b=this.previousConnection.targetConnection,this.previousConnection.disconnect());var c=this.getNextBlock();a&&c&&(a=this.nextConnection.targetConnection,a.disconnect(),b&&b.checkType_(a)&&b.connect(a))}};
Blockly.Block.prototype.getConnections_=function(){var a=[];this.outputConnection&&a.push(this.outputConnection);this.previousConnection&&a.push(this.previousConnection);this.nextConnection&&a.push(this.nextConnection);for(var b=0,c;c=this.inputList[b];b++)c.connection&&a.push(c.connection);return a};Blockly.Block.prototype.lastConnectionInStack=function(){for(var a=this.nextConnection;a;){var b=a.targetBlock();if(!b)return a;a=b.nextConnection}return null};
Blockly.Block.prototype.bumpNeighbours_=function(){console.warn("Not expected to reach this bumpNeighbours_ function. The BlockSvg function for bumpNeighbours_ was expected to be called instead.")};Blockly.Block.prototype.getParent=function(){return this.parentBlock_};Blockly.Block.prototype.getInputWithBlock=function(a){for(var b=0,c;c=this.inputList[b];b++)if(c.connection&&c.connection.targetBlock()==a)return c;return null};
Blockly.Block.prototype.getInputWithConnection=function(a){for(var b=0,c;c=this.inputList[b];b++)if(c.connection==a)return c;return null};Blockly.Block.prototype.getSurroundParent=function(){var a=this;do{var b=a;a=a.getParent();if(!a)return null}while(a.getNextBlock()==b);return a};Blockly.Block.prototype.getNextBlock=function(){return this.nextConnection&&this.nextConnection.targetBlock()};Blockly.Block.prototype.getPreviousBlock=function(){return this.previousConnection&&this.previousConnection.targetBlock()};
Blockly.Block.prototype.getFirstStatementConnection=function(){for(var a=0,b;b=this.inputList[a];a++)if(b.connection&&b.connection.type==Blockly.NEXT_STATEMENT)return b.connection;return null};Blockly.Block.prototype.getRootBlock=function(){var a=this;do{var b=a;a=b.parentBlock_}while(a);return b};
Blockly.Block.prototype.getChildren=function(a){if(!a)return this.childBlocks_;a=[];for(var b=0,c;c=this.inputList[b];b++)c.connection&&(c=c.connection.targetBlock())&&a.push(c);(b=this.getNextBlock())&&a.push(b);return a};
Blockly.Block.prototype.setParent=function(a){if(a!=this.parentBlock_){if(this.parentBlock_){goog.array.remove(this.parentBlock_.childBlocks_,this);if(this.previousConnection&&this.previousConnection.isConnected())throw"Still connected to previous block.";if(this.outputConnection&&this.outputConnection.isConnected())throw"Still connected to parent block.";this.parentBlock_=null}else this.workspace.removeTopBlock(this);(this.parentBlock_=a)?a.childBlocks_.push(this):this.workspace.addTopBlock(this)}};
Blockly.Block.prototype.getDescendants=function(a,b){for(var c=[this],d=this.getChildren(a),e,f=0;e=d[f];f++)b&&e.isShadow_||c.push.apply(c,e.getDescendants(a,b));return c};Blockly.Block.prototype.isDeletable=function(){return this.deletable_&&!this.isShadow_&&!(this.workspace&&this.workspace.options.readOnly)};Blockly.Block.prototype.setDeletable=function(a){this.deletable_=a};Blockly.Block.prototype.isMovable=function(){return this.movable_&&!this.isShadow_&&!(this.workspace&&this.workspace.options.readOnly)};
Blockly.Block.prototype.setMovable=function(a){this.movable_=a};Blockly.Block.prototype.isShadow=function(){return this.isShadow_};Blockly.Block.prototype.setShadow=function(a){this.isShadow_=a};Blockly.Block.prototype.isInsertionMarker=function(){return this.isInsertionMarker_};
Blockly.Block.prototype.setInsertionMarker=function(a){this.isInsertionMarker_!=a&&(this.isInsertionMarker_=a)&&(this.setColour(Blockly.Colours.insertionMarker),this.setOpacity(Blockly.Colours.insertionMarkerOpacity),Blockly.utils.addClass(this.svgGroup_,"blocklyInsertionMarker"))};Blockly.Block.prototype.isEditable=function(){return this.editable_&&!(this.workspace&&this.workspace.options.readOnly)};
Blockly.Block.prototype.setEditable=function(a){this.editable_=a;a=0;for(var b;b=this.inputList[a];a++)for(var c=0,d;d=b.fieldRow[c];c++)d.updateEditable()};
Blockly.Block.prototype.setConnectionsHidden=function(a){if(!a&&this.isCollapsed()){if(this.outputConnection&&this.outputConnection.setHidden(a),this.previousConnection&&this.previousConnection.setHidden(a),this.nextConnection){this.nextConnection.setHidden(a);var b=this.nextConnection.targetBlock();b&&b.setConnectionsHidden(a)}}else for(var c=this.getConnections_(!0),d=0;b=c[d];d++)b.setHidden(a),b.isSuperior()&&(b=b.targetBlock())&&b.setConnectionsHidden(a)};
Blockly.Block.prototype.getMatchingConnection=function(a,b){var c=this.getConnections_(!0);a=a.getConnections_(!0);if(c.length!=a.length)throw"Connection lists did not match in length.";for(var d=0;d<a.length;d++)if(a[d]==b)return c[d];return null};Blockly.Block.prototype.setHelpUrl=function(a){this.helpUrl=a};Blockly.Block.prototype.setTooltip=function(a){this.tooltip=a};Blockly.Block.prototype.getColour=function(){return this.colour_};Blockly.Block.prototype.getColourSecondary=function(){return this.colourSecondary_};
Blockly.Block.prototype.getColourTertiary=function(){return this.colourTertiary_};Blockly.Block.prototype.makeColour_=function(a){var b=Number(a);if(isNaN(b)){if(goog.isString(a)&&a.match(/^#[0-9a-fA-F]{6}$/))return a;throw"Invalid colour: "+a;}return Blockly.hueToRgb(b)};
Blockly.Block.prototype.setColour=function(a,b,c){this.colour_=this.makeColour_(a);this.colourSecondary_=void 0!==b?this.makeColour_(b):goog.color.rgbArrayToHex(goog.color.darken(goog.color.hexToRgb(this.colour_),.1));this.colourTertiary_=void 0!==c?this.makeColour_(c):goog.color.rgbArrayToHex(goog.color.darken(goog.color.hexToRgb(this.colour_),.2));this.rendered&&this.updateColour()};
Blockly.Block.prototype.setOnChange=function(a){if(a&&!goog.isFunction(a))throw Error("onchange must be a function.");this.onchangeWrapper_&&this.workspace.removeChangeListener(this.onchangeWrapper_);if(this.onchange=a)this.onchangeWrapper_=a.bind(this),this.workspace.addChangeListener(this.onchangeWrapper_)};Blockly.Block.prototype.getField=function(a){for(var b=0,c;c=this.inputList[b];b++)for(var d=0,e;e=c.fieldRow[d];d++)if(e.name===a)return e;return null};
Blockly.Block.prototype.getVars=function(){for(var a=[],b=0,c;c=this.inputList[b];b++)for(var d=0,e;e=c.fieldRow[d];d++)e.referencesVariables()&&a.push(e.getValue());return a};Blockly.Block.prototype.getVarModels=function(){for(var a=[],b=0,c;c=this.inputList[b];b++)for(var d=0,e;e=c.fieldRow[d];d++)e.referencesVariables()&&(e=this.workspace.getVariableById(e.getValue()))&&a.push(e);return a};
Blockly.Block.prototype.updateVarName=function(a){for(var b=0,c;c=this.inputList[b];b++)for(var d=0,e;e=c.fieldRow[d];d++)e.referencesVariables()&&a.getId()==e.getValue()&&e.setText(a.name)};Blockly.Block.prototype.renameVarById=function(a,b){for(var c=0,d;d=this.inputList[c];c++)for(var e=0,f;f=d.fieldRow[e];e++)f.referencesVariables()&&a==f.getValue()&&f.setValue(b)};Blockly.Block.prototype.getFieldValue=function(a){return(a=this.getField(a))?a.getValue():null};
Blockly.Block.prototype.setFieldValue=function(a,b){var c=this.getField(b);goog.asserts.assertObject(c,'Field "%s" not found.',b);c.setValue(a)};
Blockly.Block.prototype.setPreviousStatement=function(a,b){a?(void 0===b&&(b=null),this.previousConnection||(goog.asserts.assert(!this.outputConnection,"Remove output connection prior to adding previous connection."),this.previousConnection=this.makeConnection_(Blockly.PREVIOUS_STATEMENT)),this.previousConnection.setCheck(b)):this.previousConnection&&(goog.asserts.assert(!this.previousConnection.isConnected(),"Must disconnect previous statement before removing connection."),this.previousConnection.dispose(),
this.previousConnection=null)};Blockly.Block.prototype.setNextStatement=function(a,b){a?(void 0===b&&(b=null),this.nextConnection||(this.nextConnection=this.makeConnection_(Blockly.NEXT_STATEMENT)),this.nextConnection.setCheck(b)):this.nextConnection&&(goog.asserts.assert(!this.nextConnection.isConnected(),"Must disconnect next statement before removing connection."),this.nextConnection.dispose(),this.nextConnection=null)};
Blockly.Block.prototype.setOutput=function(a,b){a?(void 0===b&&(b=null),this.outputConnection||(goog.asserts.assert(!this.previousConnection,"Remove previous connection prior to adding output connection."),this.outputConnection=this.makeConnection_(Blockly.OUTPUT_VALUE)),this.outputConnection.setCheck(b)):this.outputConnection&&(goog.asserts.assert(!this.outputConnection.isConnected(),"Must disconnect output value before removing connection."),this.outputConnection.dispose(),this.outputConnection=
null)};Blockly.Block.prototype.setInputsInline=function(a){this.inputsInline!=a&&(Blockly.Events.fire(new Blockly.Events.BlockChange(this,"inline",null,this.inputsInline,a)),this.inputsInline=a)};
Blockly.Block.prototype.getInputsInline=function(){if(void 0!=this.inputsInline)return this.inputsInline;for(var a=1;a<this.inputList.length;a++)if(this.inputList[a-1].type==Blockly.DUMMY_INPUT&&this.inputList[a].type==Blockly.DUMMY_INPUT)return!1;for(a=1;a<this.inputList.length;a++)if(this.inputList[a-1].type==Blockly.INPUT_VALUE&&this.inputList[a].type==Blockly.DUMMY_INPUT)return!0;return!1};
Blockly.Block.prototype.setDisabled=function(a){this.disabled!=a&&(Blockly.Events.fire(new Blockly.Events.BlockChange(this,"disabled",null,this.disabled,a)),this.disabled=a)};Blockly.Block.prototype.getInheritedDisabled=function(){for(var a=this.getSurroundParent();a;){if(a.disabled)return!0;a=a.getSurroundParent()}return!1};Blockly.Block.prototype.isCollapsed=function(){return this.collapsed_};
Blockly.Block.prototype.setCollapsed=function(a){this.collapsed_!=a&&(Blockly.Events.fire(new Blockly.Events.BlockChange(this,"collapsed",null,this.collapsed_,a)),this.collapsed_=a)};
Blockly.Block.prototype.toString=function(a,b){var c=[],d=b||"?";if(this.collapsed_)c.push(this.getInput("_TEMP_COLLAPSED_INPUT").fieldRow[0].text_);else for(var e=0,f;f=this.inputList[e];e++){for(var g=0,h;h=f.fieldRow[g];g++)h instanceof Blockly.FieldDropdown&&!h.getValue()?c.push(d):c.push(h.getText());f.connection&&((f=f.connection.targetBlock())?c.push(f.toString(void 0,b)):c.push(d))}c=goog.string.trim(c.join(" "))||"???";a&&(c=goog.string.truncate(c,a));return c};
Blockly.Block.prototype.appendValueInput=function(a){return this.appendInput_(Blockly.INPUT_VALUE,a)};Blockly.Block.prototype.appendStatementInput=function(a){return this.appendInput_(Blockly.NEXT_STATEMENT,a)};Blockly.Block.prototype.appendDummyInput=function(a){return this.appendInput_(Blockly.DUMMY_INPUT,a||"")};
Blockly.Block.prototype.jsonInit=function(a){goog.asserts.assert(void 0==a.output||void 0==a.previousStatement,(a.type?'Block "'+a.type+'": ':"")+"Must not have both an output and a previousStatement.");void 0!==a.colour&&this.setColourFromJson_(a);for(var b=0;void 0!==a["message"+b];)this.interpolate_(a["message"+b],a["args"+b]||[],a["lastDummyAlign"+b]),b++;void 0!==a.inputsInline&&this.setInputsInline(a.inputsInline);void 0!==a.output&&this.setOutput(!0,a.output);void 0!==a.previousStatement&&
this.setPreviousStatement(!0,a.previousStatement);void 0!==a.nextStatement&&this.setNextStatement(!0,a.nextStatement);void 0!==a.tooltip&&(b=a.tooltip,b=Blockly.utils.replaceMessageReferences(b),this.setTooltip(b));void 0!==a.enableContextMenu&&(b=a.enableContextMenu,this.contextMenu=!!b);void 0!==a.helpUrl&&(b=a.helpUrl,b=Blockly.utils.replaceMessageReferences(b),this.setHelpUrl(b));goog.isString(a.extensions)&&(console.warn("JSON attribute 'extensions' should be an array of strings. Found raw string in JSON for '"+
a.type+"' block."),a.extensions=[a.extensions]);void 0!==a.mutator&&Blockly.Extensions.apply(a.mutator,this,!0);if(Array.isArray(a.extensions)){var c=a.extensions;for(b=0;b<c.length;++b)Blockly.Extensions.apply(c[b],this,!1)}void 0!==a.outputShape&&this.setOutputShape(a.outputShape);void 0!==a.checkboxInFlyout&&this.setCheckboxInFlyout(a.checkboxInFlyout);void 0!==a.category&&this.setCategory(a.category)};
Blockly.Block.prototype.mixin=function(a,b){if(goog.isDef(b)&&!goog.isBoolean(b))throw Error("opt_disableCheck must be a boolean if provided");if(!b){b=[];for(var c in a)void 0!==this[c]&&b.push(c);if(b.length)throw Error("Mixin will overwrite block members: "+JSON.stringify(b));}goog.mixin(this,a)};
Blockly.Block.prototype.setColourFromRawValues_=function(a,b,c){a=goog.isString(a)?Blockly.utils.replaceMessageReferences(a):a;b=goog.isString(b)?Blockly.utils.replaceMessageReferences(b):b;c=goog.isString(c)?Blockly.utils.replaceMessageReferences(c):c;this.setColour(a,b,c)};Blockly.Block.prototype.setColourFromJson_=function(a){this.setColourFromRawValues_(a.colour,a.colourSecondary,a.colourTertiary)};
Blockly.Block.prototype.interpolate_=function(a,b,c){var d=Blockly.utils.tokenizeInterpolation(a),e=[],f=0;a=[];for(var g=0;g<d.length;g++){var h=d[g];if("number"==typeof h){if(0>=h||h>b.length)throw Error('Block "'+this.type+'": Message index %'+h+" out of range.");if(e[h])throw Error('Block "'+this.type+'": Message index %'+h+" duplicated.");e[h]=!0;f++;a.push(b[h-1])}else(h=h.trim())&&a.push(h)}if(f!=b.length)throw Error('Block "'+this.type+'": Message does not reference all '+b.length+" arg(s).");
a.length&&("string"==typeof a[a.length-1]||goog.string.startsWith(a[a.length-1].type,"field_"))&&(g={type:"input_dummy"},c&&(g.align=c),a.push(g));c={LEFT:Blockly.ALIGN_LEFT,RIGHT:Blockly.ALIGN_RIGHT,CENTRE:Blockly.ALIGN_CENTRE};b=[];for(g=0;g<a.length;g++)if(e=a[g],"string"==typeof e)b.push([e,void 0]);else{d=f=null;do if(h=!1,"string"==typeof e)f=new Blockly.FieldLabel(e);else switch(e.type){case "input_value":d=this.appendValueInput(e.name);break;case "input_statement":d=this.appendStatementInput(e.name);
break;case "input_dummy":d=this.appendDummyInput(e.name);break;default:f=Blockly.Field.fromJson(e),f||(e.alt?(e=e.alt,h=!0):console.warn("Blockly could not create a field of type "+e.type+". You may need to register your custom field.  See github.com/google/blockly/issues/1584"))}while(h);if(f)b.push([f,e.name]);else if(d){e.check&&d.setCheck(e.check);e.align&&d.setAlign(c[e.align]);for(e=0;e<b.length;e++)d.appendField(b[e][0],b[e][1]);b.length=0}}};
Blockly.Block.prototype.appendInput_=function(a,b){var c=null;if(a==Blockly.INPUT_VALUE||a==Blockly.NEXT_STATEMENT)c=this.makeConnection_(a);a=new Blockly.Input(a,b,this,c);this.inputList.push(a);return a};
Blockly.Block.prototype.moveInputBefore=function(a,b){if(a!=b){for(var c=-1,d=b?-1:this.inputList.length,e=0,f;f=this.inputList[e];e++)if(f.name==a){if(c=e,-1!=d)break}else if(b&&f.name==b&&(d=e,-1!=c))break;goog.asserts.assert(-1!=c,'Named input "%s" not found.',a);goog.asserts.assert(-1!=d,'Reference input "%s" not found.',b);this.moveNumberedInputBefore(c,d)}};
Blockly.Block.prototype.moveNumberedInputBefore=function(a,b){goog.asserts.assert(a!=b,"Can't move input to itself.");goog.asserts.assert(a<this.inputList.length,"Input index "+a+" out of bounds.");goog.asserts.assert(b<=this.inputList.length,"Reference input "+b+" out of bounds.");var c=this.inputList[a];this.inputList.splice(a,1);a<b&&b--;this.inputList.splice(b,0,c)};
Blockly.Block.prototype.removeInput=function(a,b){for(var c=0,d;d=this.inputList[c];c++)if(d.name==a){d.connection&&d.connection.isConnected()&&(d.connection.setShadowDom(null),a=d.connection.targetBlock(),a.isShadow()?a.dispose():a.unplug());d.dispose();this.inputList.splice(c,1);return}b||goog.asserts.fail('Input "%s" not found.',a)};Blockly.Block.prototype.getInput=function(a){for(var b=0,c;c=this.inputList[b];b++)if(c.name==a)return c;return null};
Blockly.Block.prototype.getInputTargetBlock=function(a){return(a=this.getInput(a))&&a.connection&&a.connection.targetBlock()};Blockly.Block.prototype.getCommentText=function(){return this.comment||""};Blockly.Block.prototype.setCommentText=function(a){this.comment!=a&&(Blockly.Events.fire(new Blockly.Events.BlockChange(this,"comment",null,this.comment,a||"")),this.comment=a)};Blockly.Block.prototype.setOutputShape=function(a){this.outputShape_=a};Blockly.Block.prototype.getOutputShape=function(){return this.outputShape_};
Blockly.Block.prototype.setCategory=function(a){this.category_=a};Blockly.Block.prototype.getCategory=function(){return this.category_};Blockly.Block.prototype.setCheckboxInFlyout=function(a){this.checkboxInFlyout_=a};Blockly.Block.prototype.hasCheckboxInFlyout=function(){return this.checkboxInFlyout_};Blockly.Block.prototype.setWarningText=function(){};Blockly.Block.prototype.setMutator=function(){};Blockly.Block.prototype.getRelativeToSurfaceXY=function(){return this.xy_};
Blockly.Block.prototype.moveBy=function(a,b){goog.asserts.assert(!this.parentBlock_,"Block has parent.");var c=new Blockly.Events.BlockMove(this);this.xy_.translate(a,b);c.recordNew();Blockly.Events.fire(c)};Blockly.Block.prototype.makeConnection_=function(a){return new Blockly.Connection(this,a)};
Blockly.Block.prototype.allInputsFilled=function(a){void 0===a&&(a=!0);if(!a&&this.isShadow())return!1;for(var b=0,c;c=this.inputList[b];b++)if(c.connection&&(c=c.connection.targetBlock(),!c||!c.allInputsFilled(a)))return!1;return(b=this.getNextBlock())?b.allInputsFilled(a):!0};Blockly.Block.prototype.toDevString=function(){var a=this.type?'"'+this.type+'" block':"Block";this.id&&(a+=' (id="'+this.id+'")');return a};Blockly.BlockDragSurfaceSvg=function(a){this.container_=a;this.createDom()};Blockly.BlockDragSurfaceSvg.prototype.SVG_=null;Blockly.BlockDragSurfaceSvg.prototype.dragGroup_=null;Blockly.BlockDragSurfaceSvg.prototype.container_=null;Blockly.BlockDragSurfaceSvg.prototype.scale_=1;Blockly.BlockDragSurfaceSvg.prototype.surfaceXY_=null;Blockly.BlockDragSurfaceSvg.prototype.dragShadowFilterId_="";Blockly.BlockDragSurfaceSvg.SHADOW_STD_DEVIATION=6;
Blockly.BlockDragSurfaceSvg.prototype.createDom=function(){if(!this.SVG_){this.SVG_=Blockly.utils.createSvgElement("svg",{xmlns:Blockly.SVG_NS,"xmlns:html":Blockly.HTML_NS,"xmlns:xlink":"http://www.w3.org/1999/xlink",version:"1.1","class":"blocklyBlockDragSurface"},this.container_);this.dragGroup_=Blockly.utils.createSvgElement("g",{},this.SVG_);var a=Blockly.utils.createSvgElement("defs",{},this.SVG_);this.dragShadowFilterId_=this.createDropShadowDom_(a);this.dragGroup_.setAttribute("filter","url(#"+
this.dragShadowFilterId_+")")}};
Blockly.BlockDragSurfaceSvg.prototype.createDropShadowDom_=function(a){var b=String(Math.random()).substring(2);a=Blockly.utils.createSvgElement("filter",{id:"blocklyDragShadowFilter"+b,height:"140%",width:"140%",y:"-20%",x:"-20%"},a);Blockly.utils.createSvgElement("feGaussianBlur",{"in":"SourceAlpha",stdDeviation:Blockly.BlockDragSurfaceSvg.SHADOW_STD_DEVIATION},a);b=Blockly.utils.createSvgElement("feComponentTransfer",{result:"offsetBlur"},a);Blockly.utils.createSvgElement("feFuncA",{type:"linear",
slope:Blockly.Colours.dragShadowOpacity},b);Blockly.utils.createSvgElement("feComposite",{"in":"SourceGraphic",in2:"offsetBlur",operator:"over"},a);return a.id};Blockly.BlockDragSurfaceSvg.prototype.setBlocksAndShow=function(a){goog.asserts.assert(0==this.dragGroup_.childNodes.length,"Already dragging a block.");this.dragGroup_.appendChild(a);this.SVG_.style.display="block";this.surfaceXY_=new goog.math.Coordinate(0,0);document.getElementsByClassName("injectionDiv")[0].style.overflow="visible"};
Blockly.BlockDragSurfaceSvg.prototype.translateAndScaleGroup=function(a,b,c){this.scale_=c;a=a.toFixed(0);b=b.toFixed(0);this.dragGroup_.setAttribute("transform","translate("+a+","+b+") scale("+c+")")};Blockly.BlockDragSurfaceSvg.prototype.translateSurfaceInternal_=function(){var a=this.surfaceXY_.x,b=this.surfaceXY_.y;a=a.toFixed(0);b=b.toFixed(0);this.SVG_.style.display="block";Blockly.utils.setCssTransform(this.SVG_,"translate3d("+a+"px, "+b+"px, 0px)")};
Blockly.BlockDragSurfaceSvg.prototype.translateSurface=function(a,b){this.surfaceXY_=new goog.math.Coordinate(a*this.scale_,b*this.scale_);this.translateSurfaceInternal_()};Blockly.BlockDragSurfaceSvg.prototype.getSurfaceTranslation=function(){var a=Blockly.utils.getRelativeXY(this.SVG_);return new goog.math.Coordinate(a.x/this.scale_,a.y/this.scale_)};Blockly.BlockDragSurfaceSvg.prototype.getGroup=function(){return this.dragGroup_};Blockly.BlockDragSurfaceSvg.prototype.getCurrentBlock=function(){return this.dragGroup_.firstChild};
Blockly.BlockDragSurfaceSvg.prototype.clearAndHide=function(a){a?a.appendChild(this.getCurrentBlock()):this.dragGroup_.removeChild(this.getCurrentBlock());this.SVG_.style.display="none";goog.asserts.assert(0==this.dragGroup_.childNodes.length,"Drag group was not cleared.");this.surfaceXY_=null;document.getElementsByClassName("injectionDiv")[0].style.overflow="hidden"};Blockly.utils.uiMenu={};Blockly.utils.uiMenu.getSize=function(a){a=a.getElement();var b=goog.style.getSize(a);b.height=a.scrollHeight;return b};Blockly.utils.uiMenu.adjustBBoxesForRTL=function(a,b,c){b.left+=c.width;b.right+=c.width;a.left+=c.width;a.right+=c.width};goog.events.EventHandler=function(a){goog.Disposable.call(this);this.handler_=a;this.keys_={}};goog.inherits(goog.events.EventHandler,goog.Disposable);goog.events.EventHandler.typeArray_=[];goog.events.EventHandler.prototype.listen=function(a,b,c,d){return this.listen_(a,b,c,d)};goog.events.EventHandler.prototype.listenWithScope=function(a,b,c,d,e){return this.listen_(a,b,c,d,e)};
goog.events.EventHandler.prototype.listen_=function(a,b,c,d,e){goog.isArray(b)||(b&&(goog.events.EventHandler.typeArray_[0]=b.toString()),b=goog.events.EventHandler.typeArray_);for(var f=0;f<b.length;f++){var g=goog.events.listen(a,b[f],c||this.handleEvent,d||!1,e||this.handler_||this);if(!g)break;this.keys_[g.key]=g}return this};goog.events.EventHandler.prototype.listenOnce=function(a,b,c,d){return this.listenOnce_(a,b,c,d)};
goog.events.EventHandler.prototype.listenOnceWithScope=function(a,b,c,d,e){return this.listenOnce_(a,b,c,d,e)};goog.events.EventHandler.prototype.listenOnce_=function(a,b,c,d,e){if(goog.isArray(b))for(var f=0;f<b.length;f++)this.listenOnce_(a,b[f],c,d,e);else{a=goog.events.listenOnce(a,b,c||this.handleEvent,d,e||this.handler_||this);if(!a)return this;this.keys_[a.key]=a}return this};goog.events.EventHandler.prototype.listenWithWrapper=function(a,b,c,d){return this.listenWithWrapper_(a,b,c,d)};
goog.events.EventHandler.prototype.listenWithWrapperAndScope=function(a,b,c,d,e){return this.listenWithWrapper_(a,b,c,d,e)};goog.events.EventHandler.prototype.listenWithWrapper_=function(a,b,c,d,e){b.listen(a,c,d,e||this.handler_||this,this);return this};goog.events.EventHandler.prototype.getListenerCount=function(){var a=0,b;for(b in this.keys_)Object.prototype.hasOwnProperty.call(this.keys_,b)&&a++;return a};
goog.events.EventHandler.prototype.unlisten=function(a,b,c,d,e){if(goog.isArray(b))for(var f=0;f<b.length;f++)this.unlisten(a,b[f],c,d,e);else if(d=goog.isObject(d)?!!d.capture:!!d,a=goog.events.getListener(a,b,c||this.handleEvent,d,e||this.handler_||this))goog.events.unlistenByKey(a),delete this.keys_[a.key];return this};goog.events.EventHandler.prototype.unlistenWithWrapper=function(a,b,c,d,e){b.unlisten(a,c,d,e||this.handler_||this,this);return this};
goog.events.EventHandler.prototype.removeAll=function(){goog.object.forEach(this.keys_,function(a,b){this.keys_.hasOwnProperty(b)&&goog.events.unlistenByKey(a)},this);this.keys_={}};goog.events.EventHandler.prototype.disposeInternal=function(){goog.events.EventHandler.superClass_.disposeInternal.call(this);this.removeAll()};goog.events.EventHandler.prototype.handleEvent=function(a){throw Error("EventHandler.handleEvent not implemented");};goog.events.EventTarget=function(){goog.Disposable.call(this);this.eventTargetListeners_=new goog.events.ListenerMap(this);this.actualEventTarget_=this;this.parentEventTarget_=null};goog.inherits(goog.events.EventTarget,goog.Disposable);goog.events.Listenable.addImplementation(goog.events.EventTarget);goog.events.EventTarget.MAX_ANCESTORS_=1E3;goog.events.EventTarget.prototype.getParentEventTarget=function(){return this.parentEventTarget_};
goog.events.EventTarget.prototype.setParentEventTarget=function(a){this.parentEventTarget_=a};goog.events.EventTarget.prototype.addEventListener=function(a,b,c,d){goog.events.listen(this,a,b,c,d)};goog.events.EventTarget.prototype.removeEventListener=function(a,b,c,d){goog.events.unlisten(this,a,b,c,d)};
goog.events.EventTarget.prototype.dispatchEvent=function(a){this.assertInitialized_();var b=this.getParentEventTarget();if(b){var c=[];for(var d=1;b;b=b.getParentEventTarget())c.push(b),goog.asserts.assert(++d<goog.events.EventTarget.MAX_ANCESTORS_,"infinite loop")}return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_,a,c)};
goog.events.EventTarget.prototype.disposeInternal=function(){goog.events.EventTarget.superClass_.disposeInternal.call(this);this.removeAllListeners();this.parentEventTarget_=null};goog.events.EventTarget.prototype.listen=function(a,b,c,d){this.assertInitialized_();return this.eventTargetListeners_.add(String(a),b,!1,c,d)};goog.events.EventTarget.prototype.listenOnce=function(a,b,c,d){return this.eventTargetListeners_.add(String(a),b,!0,c,d)};
goog.events.EventTarget.prototype.unlisten=function(a,b,c,d){return this.eventTargetListeners_.remove(String(a),b,c,d)};goog.events.EventTarget.prototype.unlistenByKey=function(a){return this.eventTargetListeners_.removeByKey(a)};goog.events.EventTarget.prototype.removeAllListeners=function(a){return this.eventTargetListeners_?this.eventTargetListeners_.removeAll(a):0};
goog.events.EventTarget.prototype.fireListeners=function(a,b,c){a=this.eventTargetListeners_.listeners[String(a)];if(!a)return!0;a=a.concat();for(var d=!0,e=0;e<a.length;++e){var f=a[e];if(f&&!f.removed&&f.capture==b){var g=f.listener,h=f.handler||f.src;f.callOnce&&this.unlistenByKey(f);d=!1!==g.call(h,c)&&d}}return d&&0!=c.returnValue_};goog.events.EventTarget.prototype.getListeners=function(a,b){return this.eventTargetListeners_.getListeners(String(a),b)};
goog.events.EventTarget.prototype.getListener=function(a,b,c,d){return this.eventTargetListeners_.getListener(String(a),b,c,d)};goog.events.EventTarget.prototype.hasListener=function(a,b){a=goog.isDef(a)?String(a):void 0;return this.eventTargetListeners_.hasListener(a,b)};goog.events.EventTarget.prototype.setTargetForTesting=function(a){this.actualEventTarget_=a};goog.events.EventTarget.prototype.assertInitialized_=function(){goog.asserts.assert(this.eventTargetListeners_,"Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?")};
goog.events.EventTarget.dispatchEventInternal_=function(a,b,c){var d=b.type||b;if(goog.isString(b))b=new goog.events.Event(b,a);else if(b instanceof goog.events.Event)b.target=b.target||a;else{var e=b;b=new goog.events.Event(d,a);goog.object.extend(b,e)}e=!0;if(c)for(var f=c.length-1;!b.propagationStopped_&&0<=f;f--){var g=b.currentTarget=c[f];e=g.fireListeners(d,!0,b)&&e}b.propagationStopped_||(g=b.currentTarget=a,e=g.fireListeners(d,!0,b)&&e,b.propagationStopped_||(e=g.fireListeners(d,!1,b)&&e));
if(c)for(f=0;!b.propagationStopped_&&f<c.length;f++)g=b.currentTarget=c[f],e=g.fireListeners(d,!1,b)&&e;return e};goog.ui={};goog.ui.IdGenerator=function(){};goog.addSingletonGetter(goog.ui.IdGenerator);goog.ui.IdGenerator.prototype.nextId_=0;goog.ui.IdGenerator.prototype.getNextUniqueId=function(){return":"+(this.nextId_++).toString(36)};goog.ui.Component=function(a){goog.events.EventTarget.call(this);this.dom_=a||goog.dom.getDomHelper();this.rightToLeft_=goog.ui.Component.defaultRightToLeft_;this.id_=null;this.inDocument_=!1;this.element_=null;this.googUiComponentHandler_=void 0;this.childIndex_=this.children_=this.parent_=this.model_=null;this.wasDecorated_=!1};goog.inherits(goog.ui.Component,goog.events.EventTarget);goog.ui.Component.ALLOW_DETACHED_DECORATION=!1;goog.ui.Component.prototype.idGenerator_=goog.ui.IdGenerator.getInstance();
goog.ui.Component.DEFAULT_BIDI_DIR=0;goog.ui.Component.defaultRightToLeft_=1==goog.ui.Component.DEFAULT_BIDI_DIR?!1:-1==goog.ui.Component.DEFAULT_BIDI_DIR?!0:null;
goog.ui.Component.EventType={BEFORE_SHOW:"beforeshow",SHOW:"show",HIDE:"hide",DISABLE:"disable",ENABLE:"enable",HIGHLIGHT:"highlight",UNHIGHLIGHT:"unhighlight",ACTIVATE:"activate",DEACTIVATE:"deactivate",SELECT:"select",UNSELECT:"unselect",CHECK:"check",UNCHECK:"uncheck",FOCUS:"focus",BLUR:"blur",OPEN:"open",CLOSE:"close",ENTER:"enter",LEAVE:"leave",ACTION:"action",CHANGE:"change"};
goog.ui.Component.Error={NOT_SUPPORTED:"Method not supported",DECORATE_INVALID:"Invalid element to decorate",ALREADY_RENDERED:"Component already rendered",PARENT_UNABLE_TO_BE_SET:"Unable to set parent component",CHILD_INDEX_OUT_OF_BOUNDS:"Child component index out of bounds",NOT_OUR_CHILD:"Child is not in parent component",NOT_IN_DOCUMENT:"Operation not supported while component is not in document",STATE_INVALID:"Invalid component state"};
goog.ui.Component.State={ALL:255,DISABLED:1,HOVER:2,ACTIVE:4,SELECTED:8,CHECKED:16,FOCUSED:32,OPENED:64};
goog.ui.Component.getStateTransitionEvent=function(a,b){switch(a){case goog.ui.Component.State.DISABLED:return b?goog.ui.Component.EventType.DISABLE:goog.ui.Component.EventType.ENABLE;case goog.ui.Component.State.HOVER:return b?goog.ui.Component.EventType.HIGHLIGHT:goog.ui.Component.EventType.UNHIGHLIGHT;case goog.ui.Component.State.ACTIVE:return b?goog.ui.Component.EventType.ACTIVATE:goog.ui.Component.EventType.DEACTIVATE;case goog.ui.Component.State.SELECTED:return b?goog.ui.Component.EventType.SELECT:
goog.ui.Component.EventType.UNSELECT;case goog.ui.Component.State.CHECKED:return b?goog.ui.Component.EventType.CHECK:goog.ui.Component.EventType.UNCHECK;case goog.ui.Component.State.FOCUSED:return b?goog.ui.Component.EventType.FOCUS:goog.ui.Component.EventType.BLUR;case goog.ui.Component.State.OPENED:return b?goog.ui.Component.EventType.OPEN:goog.ui.Component.EventType.CLOSE}throw Error(goog.ui.Component.Error.STATE_INVALID);};
goog.ui.Component.setDefaultRightToLeft=function(a){goog.ui.Component.defaultRightToLeft_=a};goog.ui.Component.prototype.getId=function(){return this.id_||(this.id_=this.idGenerator_.getNextUniqueId())};goog.ui.Component.prototype.setId=function(a){this.parent_&&this.parent_.childIndex_&&(goog.object.remove(this.parent_.childIndex_,this.id_),goog.object.add(this.parent_.childIndex_,a,this));this.id_=a};goog.ui.Component.prototype.getElement=function(){return this.element_};
goog.ui.Component.prototype.getElementStrict=function(){var a=this.element_;goog.asserts.assert(a,"Can not call getElementStrict before rendering/decorating.");return a};goog.ui.Component.prototype.setElementInternal=function(a){this.element_=a};goog.ui.Component.prototype.getElementsByClass=function(a){return this.element_?this.dom_.getElementsByClass(a,this.element_):[]};goog.ui.Component.prototype.getElementByClass=function(a){return this.element_?this.dom_.getElementByClass(a,this.element_):null};
goog.ui.Component.prototype.getRequiredElementByClass=function(a){var b=this.getElementByClass(a);goog.asserts.assert(b,"Expected element in component with class: %s",a);return b};goog.ui.Component.prototype.getHandler=function(){this.googUiComponentHandler_||(this.googUiComponentHandler_=new goog.events.EventHandler(this));return goog.asserts.assert(this.googUiComponentHandler_)};
goog.ui.Component.prototype.setParent=function(a){if(this==a)throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);if(a&&this.parent_&&this.id_&&this.parent_.getChild(this.id_)&&this.parent_!=a)throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);this.parent_=a;goog.ui.Component.superClass_.setParentEventTarget.call(this,a)};goog.ui.Component.prototype.getParent=function(){return this.parent_};
goog.ui.Component.prototype.setParentEventTarget=function(a){if(this.parent_&&this.parent_!=a)throw Error(goog.ui.Component.Error.NOT_SUPPORTED);goog.ui.Component.superClass_.setParentEventTarget.call(this,a)};goog.ui.Component.prototype.getDomHelper=function(){return this.dom_};goog.ui.Component.prototype.isInDocument=function(){return this.inDocument_};goog.ui.Component.prototype.createDom=function(){this.element_=this.dom_.createElement("DIV")};goog.ui.Component.prototype.render=function(a){this.render_(a)};
goog.ui.Component.prototype.renderBefore=function(a){this.render_(a.parentNode,a)};goog.ui.Component.prototype.render_=function(a,b){if(this.inDocument_)throw Error(goog.ui.Component.Error.ALREADY_RENDERED);this.element_||this.createDom();a?a.insertBefore(this.element_,b||null):this.dom_.getDocument().body.appendChild(this.element_);this.parent_&&!this.parent_.isInDocument()||this.enterDocument()};
goog.ui.Component.prototype.decorate=function(a){if(this.inDocument_)throw Error(goog.ui.Component.Error.ALREADY_RENDERED);if(a&&this.canDecorate(a)){this.wasDecorated_=!0;var b=goog.dom.getOwnerDocument(a);this.dom_&&this.dom_.getDocument()==b||(this.dom_=goog.dom.getDomHelper(a));this.decorateInternal(a);goog.ui.Component.ALLOW_DETACHED_DECORATION&&!goog.dom.contains(b,a)||this.enterDocument()}else throw Error(goog.ui.Component.Error.DECORATE_INVALID);};goog.ui.Component.prototype.canDecorate=function(a){return!0};
goog.ui.Component.prototype.wasDecorated=function(){return this.wasDecorated_};goog.ui.Component.prototype.decorateInternal=function(a){this.element_=a};goog.ui.Component.prototype.enterDocument=function(){this.inDocument_=!0;this.forEachChild(function(a){!a.isInDocument()&&a.getElement()&&a.enterDocument()})};
goog.ui.Component.prototype.exitDocument=function(){this.forEachChild(function(a){a.isInDocument()&&a.exitDocument()});this.googUiComponentHandler_&&this.googUiComponentHandler_.removeAll();this.inDocument_=!1};
goog.ui.Component.prototype.disposeInternal=function(){this.inDocument_&&this.exitDocument();this.googUiComponentHandler_&&(this.googUiComponentHandler_.dispose(),delete this.googUiComponentHandler_);this.forEachChild(function(a){a.dispose()});!this.wasDecorated_&&this.element_&&goog.dom.removeNode(this.element_);this.parent_=this.model_=this.element_=this.childIndex_=this.children_=null;goog.ui.Component.superClass_.disposeInternal.call(this)};
goog.ui.Component.prototype.makeId=function(a){return this.getId()+"."+a};goog.ui.Component.prototype.makeIds=function(a){var b={},c;for(c in a)b[c]=this.makeId(a[c]);return b};goog.ui.Component.prototype.getModel=function(){return this.model_};goog.ui.Component.prototype.setModel=function(a){this.model_=a};goog.ui.Component.prototype.getFragmentFromId=function(a){return a.substring(this.getId().length+1)};
goog.ui.Component.prototype.getElementByFragment=function(a){if(!this.inDocument_)throw Error(goog.ui.Component.Error.NOT_IN_DOCUMENT);return this.dom_.getElement(this.makeId(a))};goog.ui.Component.prototype.addChild=function(a,b){this.addChildAt(a,this.getChildCount(),b)};
goog.ui.Component.prototype.addChildAt=function(a,b,c){goog.asserts.assert(!!a,"Provided element must not be null.");if(a.inDocument_&&(c||!this.inDocument_))throw Error(goog.ui.Component.Error.ALREADY_RENDERED);if(0>b||b>this.getChildCount())throw Error(goog.ui.Component.Error.CHILD_INDEX_OUT_OF_BOUNDS);this.childIndex_&&this.children_||(this.childIndex_={},this.children_=[]);a.getParent()==this?(goog.object.set(this.childIndex_,a.getId(),a),goog.array.remove(this.children_,a)):goog.object.add(this.childIndex_,
a.getId(),a);a.setParent(this);goog.array.insertAt(this.children_,a,b);a.inDocument_&&this.inDocument_&&a.getParent()==this?(c=this.getContentElement(),b=c.childNodes[b]||null,b!=a.getElement()&&c.insertBefore(a.getElement(),b)):c?(this.element_||this.createDom(),b=this.getChildAt(b+1),a.render_(this.getContentElement(),b?b.element_:null)):this.inDocument_&&!a.inDocument_&&a.element_&&a.element_.parentNode&&a.element_.parentNode.nodeType==goog.dom.NodeType.ELEMENT&&a.enterDocument()};
goog.ui.Component.prototype.getContentElement=function(){return this.element_};goog.ui.Component.prototype.isRightToLeft=function(){null==this.rightToLeft_&&(this.rightToLeft_=goog.style.isRightToLeft(this.inDocument_?this.element_:this.dom_.getDocument().body));return this.rightToLeft_};goog.ui.Component.prototype.setRightToLeft=function(a){if(this.inDocument_)throw Error(goog.ui.Component.Error.ALREADY_RENDERED);this.rightToLeft_=a};
goog.ui.Component.prototype.hasChildren=function(){return!!this.children_&&0!=this.children_.length};goog.ui.Component.prototype.getChildCount=function(){return this.children_?this.children_.length:0};goog.ui.Component.prototype.getChildIds=function(){var a=[];this.forEachChild(function(b){a.push(b.getId())});return a};goog.ui.Component.prototype.getChild=function(a){return this.childIndex_&&a?goog.object.get(this.childIndex_,a)||null:null};
goog.ui.Component.prototype.getChildAt=function(a){return this.children_?this.children_[a]||null:null};goog.ui.Component.prototype.forEachChild=function(a,b){this.children_&&goog.array.forEach(this.children_,a,b)};goog.ui.Component.prototype.indexOfChild=function(a){return this.children_&&a?goog.array.indexOf(this.children_,a):-1};
goog.ui.Component.prototype.removeChild=function(a,b){if(a){var c=goog.isString(a)?a:a.getId();a=this.getChild(c);c&&a&&(goog.object.remove(this.childIndex_,c),goog.array.remove(this.children_,a),b&&(a.exitDocument(),a.element_&&goog.dom.removeNode(a.element_)),a.setParent(null))}if(!a)throw Error(goog.ui.Component.Error.NOT_OUR_CHILD);return a};goog.ui.Component.prototype.removeChildAt=function(a,b){return this.removeChild(this.getChildAt(a),b)};
goog.ui.Component.prototype.removeChildren=function(a){for(var b=[];this.hasChildren();)b.push(this.removeChildAt(0,a));return b};goog.a11y={};goog.a11y.aria={};
goog.a11y.aria.Role={ALERT:"alert",ALERTDIALOG:"alertdialog",APPLICATION:"application",ARTICLE:"article",BANNER:"banner",BUTTON:"button",CHECKBOX:"checkbox",COLUMNHEADER:"columnheader",COMBOBOX:"combobox",COMPLEMENTARY:"complementary",CONTENTINFO:"contentinfo",DEFINITION:"definition",DIALOG:"dialog",DIRECTORY:"directory",DOCUMENT:"document",FORM:"form",GRID:"grid",GRIDCELL:"gridcell",GROUP:"group",HEADING:"heading",IMG:"img",LINK:"link",LIST:"list",LISTBOX:"listbox",LISTITEM:"listitem",LOG:"log",
MAIN:"main",MARQUEE:"marquee",MATH:"math",MENU:"menu",MENUBAR:"menubar",MENU_ITEM:"menuitem",MENU_ITEM_CHECKBOX:"menuitemcheckbox",MENU_ITEM_RADIO:"menuitemradio",NAVIGATION:"navigation",NOTE:"note",OPTION:"option",PRESENTATION:"presentation",PROGRESSBAR:"progressbar",RADIO:"radio",RADIOGROUP:"radiogroup",REGION:"region",ROW:"row",ROWGROUP:"rowgroup",ROWHEADER:"rowheader",SCROLLBAR:"scrollbar",SEARCH:"search",SEPARATOR:"separator",SLIDER:"slider",SPINBUTTON:"spinbutton",STATUS:"status",TAB:"tab",
TAB_LIST:"tablist",TAB_PANEL:"tabpanel",TEXTBOX:"textbox",TEXTINFO:"textinfo",TIMER:"timer",TOOLBAR:"toolbar",TOOLTIP:"tooltip",TREE:"tree",TREEGRID:"treegrid",TREEITEM:"treeitem"};goog.a11y.aria.State={ACTIVEDESCENDANT:"activedescendant",ATOMIC:"atomic",AUTOCOMPLETE:"autocomplete",BUSY:"busy",CHECKED:"checked",COLINDEX:"colindex",CONTROLS:"controls",DESCRIBEDBY:"describedby",DISABLED:"disabled",DROPEFFECT:"dropeffect",EXPANDED:"expanded",FLOWTO:"flowto",GRABBED:"grabbed",HASPOPUP:"haspopup",HIDDEN:"hidden",INVALID:"invalid",LABEL:"label",LABELLEDBY:"labelledby",LEVEL:"level",LIVE:"live",MULTILINE:"multiline",MULTISELECTABLE:"multiselectable",ORIENTATION:"orientation",OWNS:"owns",
POSINSET:"posinset",PRESSED:"pressed",READONLY:"readonly",RELEVANT:"relevant",REQUIRED:"required",ROWINDEX:"rowindex",SELECTED:"selected",SETSIZE:"setsize",SORT:"sort",VALUEMAX:"valuemax",VALUEMIN:"valuemin",VALUENOW:"valuenow",VALUETEXT:"valuetext"};goog.a11y.aria.AutoCompleteValues={INLINE:"inline",LIST:"list",BOTH:"both",NONE:"none"};goog.a11y.aria.DropEffectValues={COPY:"copy",MOVE:"move",LINK:"link",EXECUTE:"execute",POPUP:"popup",NONE:"none"};
goog.a11y.aria.LivePriority={OFF:"off",POLITE:"polite",ASSERTIVE:"assertive"};goog.a11y.aria.OrientationValues={VERTICAL:"vertical",HORIZONTAL:"horizontal"};goog.a11y.aria.RelevantValues={ADDITIONS:"additions",REMOVALS:"removals",TEXT:"text",ALL:"all"};goog.a11y.aria.SortValues={ASCENDING:"ascending",DESCENDING:"descending",NONE:"none",OTHER:"other"};goog.a11y.aria.CheckedValues={TRUE:"true",FALSE:"false",MIXED:"mixed",UNDEFINED:"undefined"};
goog.a11y.aria.ExpandedValues={TRUE:"true",FALSE:"false",UNDEFINED:"undefined"};goog.a11y.aria.GrabbedValues={TRUE:"true",FALSE:"false",UNDEFINED:"undefined"};goog.a11y.aria.InvalidValues={FALSE:"false",TRUE:"true",GRAMMAR:"grammar",SPELLING:"spelling"};goog.a11y.aria.PressedValues={TRUE:"true",FALSE:"false",MIXED:"mixed",UNDEFINED:"undefined"};goog.a11y.aria.SelectedValues={TRUE:"true",FALSE:"false",UNDEFINED:"undefined"};goog.a11y.aria.datatables={};
goog.a11y.aria.datatables.getDefaultValuesMap=function(){goog.a11y.aria.DefaultStateValueMap_||(goog.a11y.aria.DefaultStateValueMap_=goog.object.create(goog.a11y.aria.State.ATOMIC,!1,goog.a11y.aria.State.AUTOCOMPLETE,"none",goog.a11y.aria.State.DROPEFFECT,"none",goog.a11y.aria.State.HASPOPUP,!1,goog.a11y.aria.State.LIVE,"off",goog.a11y.aria.State.MULTILINE,!1,goog.a11y.aria.State.MULTISELECTABLE,!1,goog.a11y.aria.State.ORIENTATION,"vertical",goog.a11y.aria.State.READONLY,!1,goog.a11y.aria.State.RELEVANT,
"additions text",goog.a11y.aria.State.REQUIRED,!1,goog.a11y.aria.State.SORT,"none",goog.a11y.aria.State.BUSY,!1,goog.a11y.aria.State.DISABLED,!1,goog.a11y.aria.State.HIDDEN,!1,goog.a11y.aria.State.INVALID,"false"));return goog.a11y.aria.DefaultStateValueMap_};goog.a11y.aria.ARIA_PREFIX_="aria-";goog.a11y.aria.ROLE_ATTRIBUTE_="role";goog.a11y.aria.TAGS_WITH_ASSUMED_ROLES_=goog.object.createSet("A AREA BUTTON HEAD INPUT LINK MENU META OPTGROUP OPTION PROGRESS STYLE SELECT SOURCE TEXTAREA TITLE TRACK".split(" "));
goog.a11y.aria.CONTAINER_ROLES_=[goog.a11y.aria.Role.COMBOBOX,goog.a11y.aria.Role.GRID,goog.a11y.aria.Role.GROUP,goog.a11y.aria.Role.LISTBOX,goog.a11y.aria.Role.MENU,goog.a11y.aria.Role.MENUBAR,goog.a11y.aria.Role.RADIOGROUP,goog.a11y.aria.Role.ROW,goog.a11y.aria.Role.ROWGROUP,goog.a11y.aria.Role.TAB_LIST,goog.a11y.aria.Role.TEXTBOX,goog.a11y.aria.Role.TOOLBAR,goog.a11y.aria.Role.TREE,goog.a11y.aria.Role.TREEGRID];
goog.a11y.aria.setRole=function(a,b){b?(goog.asserts.ENABLE_ASSERTS&&goog.asserts.assert(goog.object.containsValue(goog.a11y.aria.Role,b),"No such ARIA role "+b),a.setAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_,b)):goog.a11y.aria.removeRole(a)};goog.a11y.aria.getRole=function(a){return a.getAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_)||null};goog.a11y.aria.removeRole=function(a){a.removeAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_)};
goog.a11y.aria.setState=function(a,b,c){goog.isArray(c)&&(c=c.join(" "));var d=goog.a11y.aria.getAriaAttributeName_(b);""===c||void 0==c?(c=goog.a11y.aria.datatables.getDefaultValuesMap(),b in c?a.setAttribute(d,c[b]):a.removeAttribute(d)):a.setAttribute(d,c)};goog.a11y.aria.toggleState=function(a,b){var c=goog.a11y.aria.getState(a,b);goog.string.isEmptyOrWhitespace(goog.string.makeSafe(c))||"true"==c||"false"==c?goog.a11y.aria.setState(a,b,"true"==c?"false":"true"):goog.a11y.aria.removeState(a,b)};
goog.a11y.aria.removeState=function(a,b){a.removeAttribute(goog.a11y.aria.getAriaAttributeName_(b))};goog.a11y.aria.getState=function(a,b){a=a.getAttribute(goog.a11y.aria.getAriaAttributeName_(b));return null==a||void 0==a?"":String(a)};goog.a11y.aria.getActiveDescendant=function(a){var b=goog.a11y.aria.getState(a,goog.a11y.aria.State.ACTIVEDESCENDANT);return goog.dom.getOwnerDocument(a).getElementById(b)};
goog.a11y.aria.setActiveDescendant=function(a,b){var c="";b&&(c=b.id,goog.asserts.assert(c,"The active element should have an id."));goog.a11y.aria.setState(a,goog.a11y.aria.State.ACTIVEDESCENDANT,c)};goog.a11y.aria.getLabel=function(a){return goog.a11y.aria.getState(a,goog.a11y.aria.State.LABEL)};goog.a11y.aria.setLabel=function(a,b){goog.a11y.aria.setState(a,goog.a11y.aria.State.LABEL,b)};
goog.a11y.aria.assertRoleIsSetInternalUtil=function(a,b){goog.a11y.aria.TAGS_WITH_ASSUMED_ROLES_[a.tagName]||(a=goog.a11y.aria.getRole(a),goog.asserts.assert(null!=a,"The element ARIA role cannot be null."),goog.asserts.assert(goog.array.contains(b,a),'Non existing or incorrect role set for element.The role set is "'+a+'". The role should be any of "'+b+'". Check the ARIA specification for more details http://www.w3.org/TR/wai-aria/roles.'))};
goog.a11y.aria.getStateBoolean=function(a,b){a=a.getAttribute(goog.a11y.aria.getAriaAttributeName_(b));goog.asserts.assert(goog.isBoolean(a)||null==a||"true"==a||"false"==a);return null==a?a:goog.isBoolean(a)?a:"true"==a};goog.a11y.aria.getStateNumber=function(a,b){a=a.getAttribute(goog.a11y.aria.getAriaAttributeName_(b));goog.asserts.assert((null==a||!isNaN(Number(a)))&&!goog.isBoolean(a));return null==a?null:Number(a)};
goog.a11y.aria.getStateString=function(a,b){a=a.getAttribute(goog.a11y.aria.getAriaAttributeName_(b));goog.asserts.assert((null==a||goog.isString(a))&&(""==a||isNaN(Number(a)))&&"true"!=a&&"false"!=a);return null==a||""==a?null:a};goog.a11y.aria.getStringArrayStateInternalUtil=function(a,b){a=a.getAttribute(goog.a11y.aria.getAriaAttributeName_(b));return goog.a11y.aria.splitStringOnWhitespace_(a)};goog.a11y.aria.hasState=function(a,b){return a.hasAttribute(goog.a11y.aria.getAriaAttributeName_(b))};
goog.a11y.aria.isContainerRole=function(a){a=goog.a11y.aria.getRole(a);return goog.array.contains(goog.a11y.aria.CONTAINER_ROLES_,a)};goog.a11y.aria.splitStringOnWhitespace_=function(a){return a?a.split(/\s+/):[]};goog.a11y.aria.getAriaAttributeName_=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.assert(a,"ARIA attribute cannot be empty."),goog.asserts.assert(goog.object.containsValue(goog.a11y.aria.State,a),"No such ARIA attribute "+a));return goog.a11y.aria.ARIA_PREFIX_+a};goog.events.KeyCodes={WIN_KEY_FF_LINUX:0,MAC_ENTER:3,BACKSPACE:8,TAB:9,NUM_CENTER:12,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,PLUS_SIGN:43,PRINT_SCREEN:44,INSERT:45,DELETE:46,ZERO:48,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,SIX:54,SEVEN:55,EIGHT:56,NINE:57,FF_SEMICOLON:59,FF_EQUALS:61,FF_DASH:173,QUESTION_MARK:63,AT_SIGN:64,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,
Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,META:91,WIN_KEY_RIGHT:92,CONTEXT_MENU:93,NUM_ZERO:96,NUM_ONE:97,NUM_TWO:98,NUM_THREE:99,NUM_FOUR:100,NUM_FIVE:101,NUM_SIX:102,NUM_SEVEN:103,NUM_EIGHT:104,NUM_NINE:105,NUM_MULTIPLY:106,NUM_PLUS:107,NUM_MINUS:109,NUM_PERIOD:110,NUM_DIVISION:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,NUMLOCK:144,SCROLL_LOCK:145,FIRST_MEDIA_KEY:166,LAST_MEDIA_KEY:183,SEMICOLON:186,DASH:189,EQUALS:187,COMMA:188,PERIOD:190,
SLASH:191,APOSTROPHE:192,TILDE:192,SINGLE_QUOTE:222,OPEN_SQUARE_BRACKET:219,BACKSLASH:220,CLOSE_SQUARE_BRACKET:221,WIN_KEY:224,MAC_FF_META:224,MAC_WK_CMD_LEFT:91,MAC_WK_CMD_RIGHT:93,WIN_IME:229,VK_NONAME:252,PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent=function(a){if(a.altKey&&!a.ctrlKey||a.metaKey||a.keyCode>=goog.events.KeyCodes.F1&&a.keyCode<=goog.events.KeyCodes.F12)return!1;switch(a.keyCode){case goog.events.KeyCodes.ALT:case goog.events.KeyCodes.CAPS_LOCK:case goog.events.KeyCodes.CONTEXT_MENU:case goog.events.KeyCodes.CTRL:case goog.events.KeyCodes.DOWN:case goog.events.KeyCodes.END:case goog.events.KeyCodes.ESC:case goog.events.KeyCodes.HOME:case goog.events.KeyCodes.INSERT:case goog.events.KeyCodes.LEFT:case goog.events.KeyCodes.MAC_FF_META:case goog.events.KeyCodes.META:case goog.events.KeyCodes.NUMLOCK:case goog.events.KeyCodes.NUM_CENTER:case goog.events.KeyCodes.PAGE_DOWN:case goog.events.KeyCodes.PAGE_UP:case goog.events.KeyCodes.PAUSE:case goog.events.KeyCodes.PHANTOM:case goog.events.KeyCodes.PRINT_SCREEN:case goog.events.KeyCodes.RIGHT:case goog.events.KeyCodes.SCROLL_LOCK:case goog.events.KeyCodes.SHIFT:case goog.events.KeyCodes.UP:case goog.events.KeyCodes.VK_NONAME:case goog.events.KeyCodes.WIN_KEY:case goog.events.KeyCodes.WIN_KEY_RIGHT:return!1;case goog.events.KeyCodes.WIN_KEY_FF_LINUX:return!goog.userAgent.GECKO;
default:return a.keyCode<goog.events.KeyCodes.FIRST_MEDIA_KEY||a.keyCode>goog.events.KeyCodes.LAST_MEDIA_KEY}};
goog.events.KeyCodes.firesKeyPressEvent=function(a,b,c,d,e,f){if(!(goog.userAgent.IE||goog.userAgent.EDGE||goog.userAgent.WEBKIT&&goog.userAgent.isVersionOrHigher("525")))return!0;if(goog.userAgent.MAC&&e)return goog.events.KeyCodes.isCharacterKey(a);if(e&&!d)return!1;goog.isNumber(b)&&(b=goog.events.KeyCodes.normalizeKeyCode(b));e=b==goog.events.KeyCodes.CTRL||b==goog.events.KeyCodes.ALT||goog.userAgent.MAC&&b==goog.events.KeyCodes.META;f=b==goog.events.KeyCodes.SHIFT&&(d||f);if((!c||goog.userAgent.MAC)&&
e||goog.userAgent.MAC&&f)return!1;if((goog.userAgent.WEBKIT||goog.userAgent.EDGE)&&d&&c)switch(a){case goog.events.KeyCodes.BACKSLASH:case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:case goog.events.KeyCodes.TILDE:case goog.events.KeyCodes.SEMICOLON:case goog.events.KeyCodes.DASH:case goog.events.KeyCodes.EQUALS:case goog.events.KeyCodes.COMMA:case goog.events.KeyCodes.PERIOD:case goog.events.KeyCodes.SLASH:case goog.events.KeyCodes.APOSTROPHE:case goog.events.KeyCodes.SINGLE_QUOTE:return!1}if(goog.userAgent.IE&&
d&&b==a)return!1;switch(a){case goog.events.KeyCodes.ENTER:return!0;case goog.events.KeyCodes.ESC:return!(goog.userAgent.WEBKIT||goog.userAgent.EDGE)}return goog.events.KeyCodes.isCharacterKey(a)};
goog.events.KeyCodes.isCharacterKey=function(a){if(a>=goog.events.KeyCodes.ZERO&&a<=goog.events.KeyCodes.NINE||a>=goog.events.KeyCodes.NUM_ZERO&&a<=goog.events.KeyCodes.NUM_MULTIPLY||a>=goog.events.KeyCodes.A&&a<=goog.events.KeyCodes.Z||(goog.userAgent.WEBKIT||goog.userAgent.EDGE)&&0==a)return!0;switch(a){case goog.events.KeyCodes.SPACE:case goog.events.KeyCodes.PLUS_SIGN:case goog.events.KeyCodes.QUESTION_MARK:case goog.events.KeyCodes.AT_SIGN:case goog.events.KeyCodes.NUM_PLUS:case goog.events.KeyCodes.NUM_MINUS:case goog.events.KeyCodes.NUM_PERIOD:case goog.events.KeyCodes.NUM_DIVISION:case goog.events.KeyCodes.SEMICOLON:case goog.events.KeyCodes.FF_SEMICOLON:case goog.events.KeyCodes.DASH:case goog.events.KeyCodes.EQUALS:case goog.events.KeyCodes.FF_EQUALS:case goog.events.KeyCodes.COMMA:case goog.events.KeyCodes.PERIOD:case goog.events.KeyCodes.SLASH:case goog.events.KeyCodes.APOSTROPHE:case goog.events.KeyCodes.SINGLE_QUOTE:case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:case goog.events.KeyCodes.BACKSLASH:case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:return!0;default:return!1}};
goog.events.KeyCodes.normalizeKeyCode=function(a){return goog.userAgent.GECKO?goog.events.KeyCodes.normalizeGeckoKeyCode(a):goog.userAgent.MAC&&goog.userAgent.WEBKIT?goog.events.KeyCodes.normalizeMacWebKitKeyCode(a):a};
goog.events.KeyCodes.normalizeGeckoKeyCode=function(a){switch(a){case goog.events.KeyCodes.FF_EQUALS:return goog.events.KeyCodes.EQUALS;case goog.events.KeyCodes.FF_SEMICOLON:return goog.events.KeyCodes.SEMICOLON;case goog.events.KeyCodes.FF_DASH:return goog.events.KeyCodes.DASH;case goog.events.KeyCodes.MAC_FF_META:return goog.events.KeyCodes.META;case goog.events.KeyCodes.WIN_KEY_FF_LINUX:return goog.events.KeyCodes.WIN_KEY;default:return a}};
goog.events.KeyCodes.normalizeMacWebKitKeyCode=function(a){switch(a){case goog.events.KeyCodes.MAC_WK_CMD_RIGHT:return goog.events.KeyCodes.META;default:return a}};goog.events.KeyHandler=function(a,b){goog.events.EventTarget.call(this);a&&this.attach(a,b)};goog.inherits(goog.events.KeyHandler,goog.events.EventTarget);goog.events.KeyHandler.prototype.element_=null;goog.events.KeyHandler.prototype.keyPressKey_=null;goog.events.KeyHandler.prototype.keyDownKey_=null;goog.events.KeyHandler.prototype.keyUpKey_=null;goog.events.KeyHandler.prototype.lastKey_=-1;goog.events.KeyHandler.prototype.keyCode_=-1;goog.events.KeyHandler.prototype.altKey_=!1;
goog.events.KeyHandler.EventType={KEY:"key"};
goog.events.KeyHandler.safariKey_={3:goog.events.KeyCodes.ENTER,12:goog.events.KeyCodes.NUMLOCK,63232:goog.events.KeyCodes.UP,63233:goog.events.KeyCodes.DOWN,63234:goog.events.KeyCodes.LEFT,63235:goog.events.KeyCodes.RIGHT,63236:goog.events.KeyCodes.F1,63237:goog.events.KeyCodes.F2,63238:goog.events.KeyCodes.F3,63239:goog.events.KeyCodes.F4,63240:goog.events.KeyCodes.F5,63241:goog.events.KeyCodes.F6,63242:goog.events.KeyCodes.F7,63243:goog.events.KeyCodes.F8,63244:goog.events.KeyCodes.F9,63245:goog.events.KeyCodes.F10,
63246:goog.events.KeyCodes.F11,63247:goog.events.KeyCodes.F12,63248:goog.events.KeyCodes.PRINT_SCREEN,63272:goog.events.KeyCodes.DELETE,63273:goog.events.KeyCodes.HOME,63275:goog.events.KeyCodes.END,63276:goog.events.KeyCodes.PAGE_UP,63277:goog.events.KeyCodes.PAGE_DOWN,63289:goog.events.KeyCodes.NUMLOCK,63302:goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.keyIdentifier_={Up:goog.events.KeyCodes.UP,Down:goog.events.KeyCodes.DOWN,Left:goog.events.KeyCodes.LEFT,Right:goog.events.KeyCodes.RIGHT,Enter:goog.events.KeyCodes.ENTER,F1:goog.events.KeyCodes.F1,F2:goog.events.KeyCodes.F2,F3:goog.events.KeyCodes.F3,F4:goog.events.KeyCodes.F4,F5:goog.events.KeyCodes.F5,F6:goog.events.KeyCodes.F6,F7:goog.events.KeyCodes.F7,F8:goog.events.KeyCodes.F8,F9:goog.events.KeyCodes.F9,F10:goog.events.KeyCodes.F10,F11:goog.events.KeyCodes.F11,F12:goog.events.KeyCodes.F12,
"U+007F":goog.events.KeyCodes.DELETE,Home:goog.events.KeyCodes.HOME,End:goog.events.KeyCodes.END,PageUp:goog.events.KeyCodes.PAGE_UP,PageDown:goog.events.KeyCodes.PAGE_DOWN,Insert:goog.events.KeyCodes.INSERT};goog.events.KeyHandler.USES_KEYDOWN_=goog.userAgent.IE||goog.userAgent.EDGE||goog.userAgent.WEBKIT&&goog.userAgent.isVersionOrHigher("525");goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_=goog.userAgent.MAC&&goog.userAgent.GECKO;
goog.events.KeyHandler.prototype.handleKeyDown_=function(a){(goog.userAgent.WEBKIT||goog.userAgent.EDGE)&&(this.lastKey_==goog.events.KeyCodes.CTRL&&!a.ctrlKey||this.lastKey_==goog.events.KeyCodes.ALT&&!a.altKey||goog.userAgent.MAC&&this.lastKey_==goog.events.KeyCodes.META&&!a.metaKey)&&this.resetState();-1==this.lastKey_&&(a.ctrlKey&&a.keyCode!=goog.events.KeyCodes.CTRL?this.lastKey_=goog.events.KeyCodes.CTRL:a.altKey&&a.keyCode!=goog.events.KeyCodes.ALT?this.lastKey_=goog.events.KeyCodes.ALT:a.metaKey&&
a.keyCode!=goog.events.KeyCodes.META&&(this.lastKey_=goog.events.KeyCodes.META));goog.events.KeyHandler.USES_KEYDOWN_&&!goog.events.KeyCodes.firesKeyPressEvent(a.keyCode,this.lastKey_,a.shiftKey,a.ctrlKey,a.altKey,a.metaKey)?this.handleEvent(a):(this.keyCode_=goog.events.KeyCodes.normalizeKeyCode(a.keyCode),goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_&&(this.altKey_=a.altKey))};goog.events.KeyHandler.prototype.resetState=function(){this.keyCode_=this.lastKey_=-1};
goog.events.KeyHandler.prototype.handleKeyup_=function(a){this.resetState();this.altKey_=a.altKey};
goog.events.KeyHandler.prototype.handleEvent=function(a){var b=a.getBrowserEvent(),c=b.altKey;if(goog.userAgent.IE&&a.type==goog.events.EventType.KEYPRESS){var d=this.keyCode_;var e=d!=goog.events.KeyCodes.ENTER&&d!=goog.events.KeyCodes.ESC?b.keyCode:0}else(goog.userAgent.WEBKIT||goog.userAgent.EDGE)&&a.type==goog.events.EventType.KEYPRESS?(d=this.keyCode_,e=0<=b.charCode&&63232>b.charCode&&goog.events.KeyCodes.isCharacterKey(d)?b.charCode:0):goog.userAgent.OPERA&&!goog.userAgent.WEBKIT?(d=this.keyCode_,
e=goog.events.KeyCodes.isCharacterKey(d)?b.keyCode:0):(d=b.keyCode||this.keyCode_,e=b.charCode||0,goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_&&(c=this.altKey_),goog.userAgent.MAC&&e==goog.events.KeyCodes.QUESTION_MARK&&d==goog.events.KeyCodes.WIN_KEY&&(d=goog.events.KeyCodes.SLASH));var f=d=goog.events.KeyCodes.normalizeKeyCode(d);d?63232<=d&&d in goog.events.KeyHandler.safariKey_?f=goog.events.KeyHandler.safariKey_[d]:25==d&&a.shiftKey&&(f=9):b.keyIdentifier&&b.keyIdentifier in goog.events.KeyHandler.keyIdentifier_&&
(f=goog.events.KeyHandler.keyIdentifier_[b.keyIdentifier]);a=f==this.lastKey_;this.lastKey_=f;b=new goog.events.KeyEvent(f,e,a,b);b.altKey=c;this.dispatchEvent(b)};goog.events.KeyHandler.prototype.getElement=function(){return this.element_};
goog.events.KeyHandler.prototype.attach=function(a,b){this.keyUpKey_&&this.detach();this.element_=a;this.keyPressKey_=goog.events.listen(this.element_,goog.events.EventType.KEYPRESS,this,b);this.keyDownKey_=goog.events.listen(this.element_,goog.events.EventType.KEYDOWN,this.handleKeyDown_,b,this);this.keyUpKey_=goog.events.listen(this.element_,goog.events.EventType.KEYUP,this.handleKeyup_,b,this)};
goog.events.KeyHandler.prototype.detach=function(){this.keyPressKey_&&(goog.events.unlistenByKey(this.keyPressKey_),goog.events.unlistenByKey(this.keyDownKey_),goog.events.unlistenByKey(this.keyUpKey_),this.keyUpKey_=this.keyDownKey_=this.keyPressKey_=null);this.element_=null;this.keyCode_=this.lastKey_=-1};goog.events.KeyHandler.prototype.disposeInternal=function(){goog.events.KeyHandler.superClass_.disposeInternal.call(this);this.detach()};
goog.events.KeyEvent=function(a,b,c,d){goog.events.BrowserEvent.call(this,d);this.type=goog.events.KeyHandler.EventType.KEY;this.keyCode=a;this.charCode=b;this.repeat=c};goog.inherits(goog.events.KeyEvent,goog.events.BrowserEvent);goog.dom.classlist={};goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST=!1;goog.dom.classlist.get=function(a){if(goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST||a.classList)return a.classList;a=a.className;return goog.isString(a)&&a.match(/\S+/g)||[]};goog.dom.classlist.set=function(a,b){a.className=b};goog.dom.classlist.contains=function(a,b){return goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST||a.classList?a.classList.contains(b):goog.array.contains(goog.dom.classlist.get(a),b)};
goog.dom.classlist.add=function(a,b){goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST||a.classList?a.classList.add(b):goog.dom.classlist.contains(a,b)||(a.className+=0<a.className.length?" "+b:b)};
goog.dom.classlist.addAll=function(a,b){if(goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST||a.classList)goog.array.forEach(b,function(b){goog.dom.classlist.add(a,b)});else{var c={};goog.array.forEach(goog.dom.classlist.get(a),function(a){c[a]=!0});goog.array.forEach(b,function(a){c[a]=!0});a.className="";for(var d in c)a.className+=0<a.className.length?" "+d:d}};
goog.dom.classlist.remove=function(a,b){goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST||a.classList?a.classList.remove(b):goog.dom.classlist.contains(a,b)&&(a.className=goog.array.filter(goog.dom.classlist.get(a),function(a){return a!=b}).join(" "))};
goog.dom.classlist.removeAll=function(a,b){goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST||a.classList?goog.array.forEach(b,function(b){goog.dom.classlist.remove(a,b)}):a.className=goog.array.filter(goog.dom.classlist.get(a),function(a){return!goog.array.contains(b,a)}).join(" ")};goog.dom.classlist.enable=function(a,b,c){c?goog.dom.classlist.add(a,b):goog.dom.classlist.remove(a,b)};goog.dom.classlist.enableAll=function(a,b,c){(c?goog.dom.classlist.addAll:goog.dom.classlist.removeAll)(a,b)};
goog.dom.classlist.swap=function(a,b,c){return goog.dom.classlist.contains(a,b)?(goog.dom.classlist.remove(a,b),goog.dom.classlist.add(a,c),!0):!1};goog.dom.classlist.toggle=function(a,b){var c=!goog.dom.classlist.contains(a,b);goog.dom.classlist.enable(a,b,c);return c};goog.dom.classlist.addRemove=function(a,b,c){goog.dom.classlist.remove(a,b);goog.dom.classlist.add(a,c)};goog.ui.registry={};goog.ui.registry.getDefaultRenderer=function(a){for(var b;a;){b=goog.getUid(a);if(b=goog.ui.registry.defaultRenderers_[b])break;a=a.superClass_?a.superClass_.constructor:null}return b?goog.isFunction(b.getInstance)?b.getInstance():new b:null};goog.ui.registry.setDefaultRenderer=function(a,b){if(!goog.isFunction(a))throw Error("Invalid component class "+a);if(!goog.isFunction(b))throw Error("Invalid renderer class "+b);a=goog.getUid(a);goog.ui.registry.defaultRenderers_[a]=b};
goog.ui.registry.getDecoratorByClassName=function(a){return a in goog.ui.registry.decoratorFunctions_?goog.ui.registry.decoratorFunctions_[a]():null};goog.ui.registry.setDecoratorByClassName=function(a,b){if(!a)throw Error("Invalid class name "+a);if(!goog.isFunction(b))throw Error("Invalid decorator function "+b);goog.ui.registry.decoratorFunctions_[a]=b};
goog.ui.registry.getDecorator=function(a){goog.asserts.assert(a);for(var b=goog.dom.classlist.get(a),c=0,d=b.length;c<d;c++)if(a=goog.ui.registry.getDecoratorByClassName(b[c]))return a;return null};goog.ui.registry.reset=function(){goog.ui.registry.defaultRenderers_={};goog.ui.registry.decoratorFunctions_={}};goog.ui.registry.defaultRenderers_={};goog.ui.registry.decoratorFunctions_={};goog.ui.ContainerRenderer=function(a){this.ariaRole_=a};goog.addSingletonGetter(goog.ui.ContainerRenderer);goog.ui.ContainerRenderer.getCustomRenderer=function(a,b){a=new a;a.getCssClass=function(){return b};return a};goog.ui.ContainerRenderer.CSS_CLASS="goog-container";goog.ui.ContainerRenderer.prototype.getAriaRole=function(){return this.ariaRole_};goog.ui.ContainerRenderer.prototype.enableTabIndex=function(a,b){a&&(a.tabIndex=b?0:-1)};
goog.ui.ContainerRenderer.prototype.createDom=function(a){return a.getDomHelper().createDom("DIV",this.getClassNames(a).join(" "))};goog.ui.ContainerRenderer.prototype.getContentElement=function(a){return a};goog.ui.ContainerRenderer.prototype.canDecorate=function(a){return"DIV"==a.tagName};
goog.ui.ContainerRenderer.prototype.decorate=function(a,b){b.id&&a.setId(b.id);var c=this.getCssClass(),d=!1,e=goog.dom.classlist.get(b);e&&goog.array.forEach(e,function(b){b==c?d=!0:b&&this.setStateFromClassName(a,b,c)},this);d||goog.dom.classlist.add(b,c);this.decorateChildren(a,this.getContentElement(b));return b};
goog.ui.ContainerRenderer.prototype.setStateFromClassName=function(a,b,c){b==c+"-disabled"?a.setEnabled(!1):b==c+"-horizontal"?a.setOrientation(goog.ui.Container.Orientation.HORIZONTAL):b==c+"-vertical"&&a.setOrientation(goog.ui.Container.Orientation.VERTICAL)};
goog.ui.ContainerRenderer.prototype.decorateChildren=function(a,b,c){if(b){c=c||b.firstChild;for(var d;c&&c.parentNode==b;){d=c.nextSibling;if(c.nodeType==goog.dom.NodeType.ELEMENT){var e=this.getDecoratorForChild(c);e&&(e.setElementInternal(c),a.isEnabled()||e.setEnabled(!1),a.addChild(e),e.decorate(c))}else c.nodeValue&&""!=goog.string.trim(c.nodeValue)||b.removeChild(c);c=d}}};goog.ui.ContainerRenderer.prototype.getDecoratorForChild=function(a){return goog.ui.registry.getDecorator(a)};
goog.ui.ContainerRenderer.prototype.initializeDom=function(a){a=a.getElement();goog.asserts.assert(a,"The container DOM element cannot be null.");goog.style.setUnselectable(a,!0,goog.userAgent.GECKO);goog.userAgent.IE&&(a.hideFocus=!0);var b=this.getAriaRole();b&&goog.a11y.aria.setRole(a,b)};goog.ui.ContainerRenderer.prototype.getKeyEventTarget=function(a){return a.getElement()};goog.ui.ContainerRenderer.prototype.getCssClass=function(){return goog.ui.ContainerRenderer.CSS_CLASS};
goog.ui.ContainerRenderer.prototype.getClassNames=function(a){var b=this.getCssClass(),c=a.getOrientation()==goog.ui.Container.Orientation.HORIZONTAL;c=[b,c?b+"-horizontal":b+"-vertical"];a.isEnabled()||c.push(b+"-disabled");return c};goog.ui.ContainerRenderer.prototype.getDefaultOrientation=function(){return goog.ui.Container.Orientation.VERTICAL};goog.ui.ControlRenderer=function(){};goog.addSingletonGetter(goog.ui.ControlRenderer);goog.tagUnsealableClass(goog.ui.ControlRenderer);goog.ui.ControlRenderer.getCustomRenderer=function(a,b){a=new a;a.getCssClass=function(){return b};return a};goog.ui.ControlRenderer.CSS_CLASS="goog-control";goog.ui.ControlRenderer.IE6_CLASS_COMBINATIONS=[];
goog.ui.ControlRenderer.TOGGLE_ARIA_STATE_MAP_=goog.object.create(goog.a11y.aria.Role.BUTTON,goog.a11y.aria.State.PRESSED,goog.a11y.aria.Role.CHECKBOX,goog.a11y.aria.State.CHECKED,goog.a11y.aria.Role.MENU_ITEM,goog.a11y.aria.State.SELECTED,goog.a11y.aria.Role.MENU_ITEM_CHECKBOX,goog.a11y.aria.State.CHECKED,goog.a11y.aria.Role.MENU_ITEM_RADIO,goog.a11y.aria.State.CHECKED,goog.a11y.aria.Role.RADIO,goog.a11y.aria.State.CHECKED,goog.a11y.aria.Role.TAB,goog.a11y.aria.State.SELECTED,goog.a11y.aria.Role.TREEITEM,
goog.a11y.aria.State.SELECTED);goog.ui.ControlRenderer.prototype.getAriaRole=function(){};goog.ui.ControlRenderer.prototype.createDom=function(a){return a.getDomHelper().createDom("DIV",this.getClassNames(a).join(" "),a.getContent())};goog.ui.ControlRenderer.prototype.getContentElement=function(a){return a};
goog.ui.ControlRenderer.prototype.enableClassName=function(a,b,c){if(a=a.getElement?a.getElement():a){var d=[b];goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("7")&&(d=this.getAppliedCombinedClassNames_(goog.dom.classlist.get(a),b),d.push(b));goog.dom.classlist.enableAll(a,d,c)}};goog.ui.ControlRenderer.prototype.enableExtraClassName=function(a,b,c){this.enableClassName(a,b,c)};goog.ui.ControlRenderer.prototype.canDecorate=function(a){return!0};
goog.ui.ControlRenderer.prototype.decorate=function(a,b){b.id&&a.setId(b.id);var c=this.getContentElement(b);c&&c.firstChild?a.setContentInternal(c.firstChild.nextSibling?goog.array.clone(c.childNodes):c.firstChild):a.setContentInternal(null);var d=0,e=this.getCssClass(),f=this.getStructuralCssClass(),g=!1,h=!1,k=!1,m=goog.array.toArray(goog.dom.classlist.get(b));goog.array.forEach(m,function(a){g||a!=e?h||a!=f?d|=this.getStateFromClass(a):h=!0:(g=!0,f==e&&(h=!0));this.getStateFromClass(a)==goog.ui.Component.State.DISABLED&&
(goog.asserts.assertElement(c),goog.dom.isFocusableTabIndex(c)&&goog.dom.setFocusableTabIndex(c,!1))},this);a.setStateInternal(d);g||(m.push(e),f==e&&(h=!0));h||m.push(f);(a=a.getExtraClassNames())&&m.push.apply(m,a);if(goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("7")){var l=this.getAppliedCombinedClassNames_(m);0<l.length&&(m.push.apply(m,l),k=!0)}g&&h&&!a&&!k||goog.dom.classlist.set(b,m.join(" "));return b};
goog.ui.ControlRenderer.prototype.initializeDom=function(a){a.isRightToLeft()&&this.setRightToLeft(a.getElement(),!0);a.isEnabled()&&this.setFocusable(a,a.isVisible())};goog.ui.ControlRenderer.prototype.setAriaRole=function(a,b){if(b=b||this.getAriaRole()){goog.asserts.assert(a,"The element passed as a first parameter cannot be null.");var c=goog.a11y.aria.getRole(a);b!=c&&goog.a11y.aria.setRole(a,b)}};
goog.ui.ControlRenderer.prototype.setAriaStates=function(a,b){goog.asserts.assert(a);goog.asserts.assert(b);var c=a.getAriaLabel();goog.isDefAndNotNull(c)&&this.setAriaLabel(b,c);a.isVisible()||goog.a11y.aria.setState(b,goog.a11y.aria.State.HIDDEN,!a.isVisible());a.isEnabled()||this.updateAriaState(b,goog.ui.Component.State.DISABLED,!a.isEnabled());a.isSupportedState(goog.ui.Component.State.SELECTED)&&this.updateAriaState(b,goog.ui.Component.State.SELECTED,a.isSelected());a.isSupportedState(goog.ui.Component.State.CHECKED)&&
this.updateAriaState(b,goog.ui.Component.State.CHECKED,a.isChecked());a.isSupportedState(goog.ui.Component.State.OPENED)&&this.updateAriaState(b,goog.ui.Component.State.OPENED,a.isOpen())};goog.ui.ControlRenderer.prototype.setAriaLabel=function(a,b){goog.a11y.aria.setLabel(a,b)};goog.ui.ControlRenderer.prototype.setAllowTextSelection=function(a,b){goog.style.setUnselectable(a,!b,!goog.userAgent.IE&&!goog.userAgent.OPERA)};
goog.ui.ControlRenderer.prototype.setRightToLeft=function(a,b){this.enableClassName(a,this.getStructuralCssClass()+"-rtl",b)};goog.ui.ControlRenderer.prototype.isFocusable=function(a){var b;return a.isSupportedState(goog.ui.Component.State.FOCUSED)&&(b=a.getKeyEventTarget())?goog.dom.isFocusableTabIndex(b):!1};
goog.ui.ControlRenderer.prototype.setFocusable=function(a,b){var c;if(a.isSupportedState(goog.ui.Component.State.FOCUSED)&&(c=a.getKeyEventTarget())){if(!b&&a.isFocused()){try{c.blur()}catch(d){}a.isFocused()&&a.handleBlur(null)}goog.dom.isFocusableTabIndex(c)!=b&&goog.dom.setFocusableTabIndex(c,b)}};goog.ui.ControlRenderer.prototype.setVisible=function(a,b){goog.style.setElementShown(a,b);a&&goog.a11y.aria.setState(a,goog.a11y.aria.State.HIDDEN,!b)};
goog.ui.ControlRenderer.prototype.setState=function(a,b,c){var d=a.getElement();if(d){var e=this.getClassForState(b);e&&this.enableClassName(a,e,c);this.updateAriaState(d,b,c)}};
goog.ui.ControlRenderer.prototype.updateAriaState=function(a,b,c){goog.ui.ControlRenderer.ariaAttributeMap_||(goog.ui.ControlRenderer.ariaAttributeMap_=goog.object.create(goog.ui.Component.State.DISABLED,goog.a11y.aria.State.DISABLED,goog.ui.Component.State.SELECTED,goog.a11y.aria.State.SELECTED,goog.ui.Component.State.CHECKED,goog.a11y.aria.State.CHECKED,goog.ui.Component.State.OPENED,goog.a11y.aria.State.EXPANDED));goog.asserts.assert(a,"The element passed as a first parameter cannot be null.");
(b=goog.ui.ControlRenderer.getAriaStateForAriaRole_(a,goog.ui.ControlRenderer.ariaAttributeMap_[b]))&&goog.a11y.aria.setState(a,b,c)};goog.ui.ControlRenderer.getAriaStateForAriaRole_=function(a,b){a=goog.a11y.aria.getRole(a);if(!a)return b;a=goog.ui.ControlRenderer.TOGGLE_ARIA_STATE_MAP_[a]||b;return goog.ui.ControlRenderer.isAriaState_(b)?a:b};goog.ui.ControlRenderer.isAriaState_=function(a){return a==goog.a11y.aria.State.CHECKED||a==goog.a11y.aria.State.SELECTED};
goog.ui.ControlRenderer.prototype.setContent=function(a,b){var c=this.getContentElement(a);c&&(goog.dom.removeChildren(c),b&&(goog.isString(b)?goog.dom.setTextContent(c,b):(a=function(a){if(a){var b=goog.dom.getOwnerDocument(c);c.appendChild(goog.isString(a)?b.createTextNode(a):a)}},goog.isArray(b)?goog.array.forEach(b,a):!goog.isArrayLike(b)||"nodeType"in b?a(b):goog.array.forEach(goog.array.clone(b),a))))};goog.ui.ControlRenderer.prototype.getKeyEventTarget=function(a){return a.getElement()};
goog.ui.ControlRenderer.prototype.getCssClass=function(){return goog.ui.ControlRenderer.CSS_CLASS};goog.ui.ControlRenderer.prototype.getIe6ClassCombinations=function(){return[]};goog.ui.ControlRenderer.prototype.getStructuralCssClass=function(){return this.getCssClass()};
goog.ui.ControlRenderer.prototype.getClassNames=function(a){var b=this.getCssClass(),c=[b],d=this.getStructuralCssClass();d!=b&&c.push(d);b=this.getClassNamesForState(a.getState());c.push.apply(c,b);(a=a.getExtraClassNames())&&c.push.apply(c,a);goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("7")&&c.push.apply(c,this.getAppliedCombinedClassNames_(c));return c};
goog.ui.ControlRenderer.prototype.getAppliedCombinedClassNames_=function(a,b){var c=[];b&&(a=goog.array.concat(a,[b]));goog.array.forEach(this.getIe6ClassCombinations(),function(d){!goog.array.every(d,goog.partial(goog.array.contains,a))||b&&!goog.array.contains(d,b)||c.push(d.join("_"))});return c};goog.ui.ControlRenderer.prototype.getClassNamesForState=function(a){for(var b=[];a;){var c=a&-a;b.push(this.getClassForState(c));a&=~c}return b};
goog.ui.ControlRenderer.prototype.getClassForState=function(a){this.classByState_||this.createClassByStateMap_();return this.classByState_[a]};goog.ui.ControlRenderer.prototype.getStateFromClass=function(a){this.stateByClass_||this.createStateByClassMap_();a=parseInt(this.stateByClass_[a],10);return isNaN(a)?0:a};
goog.ui.ControlRenderer.prototype.createClassByStateMap_=function(){var a=this.getStructuralCssClass(),b=!goog.string.contains(goog.string.normalizeWhitespace(a)," ");goog.asserts.assert(b,"ControlRenderer has an invalid css class: '"+a+"'");this.classByState_=goog.object.create(goog.ui.Component.State.DISABLED,a+"-disabled",goog.ui.Component.State.HOVER,a+"-hover",goog.ui.Component.State.ACTIVE,a+"-active",goog.ui.Component.State.SELECTED,a+"-selected",goog.ui.Component.State.CHECKED,a+"-checked",
goog.ui.Component.State.FOCUSED,a+"-focused",goog.ui.Component.State.OPENED,a+"-open")};goog.ui.ControlRenderer.prototype.createStateByClassMap_=function(){this.classByState_||this.createClassByStateMap_();this.stateByClass_=goog.object.transpose(this.classByState_)};goog.ui.Control=function(a,b,c){goog.ui.Component.call(this,c);this.renderer_=b||goog.ui.registry.getDefaultRenderer(this.constructor);this.setContentInternal(goog.isDef(a)?a:null);this.ariaLabel_=null};goog.inherits(goog.ui.Control,goog.ui.Component);goog.tagUnsealableClass(goog.ui.Control);goog.ui.Control.registerDecorator=goog.ui.registry.setDecoratorByClassName;goog.ui.Control.getDecorator=goog.ui.registry.getDecorator;goog.ui.Control.prototype.content_=null;goog.ui.Control.prototype.state_=0;
goog.ui.Control.prototype.supportedStates_=goog.ui.Component.State.DISABLED|goog.ui.Component.State.HOVER|goog.ui.Component.State.ACTIVE|goog.ui.Component.State.FOCUSED;goog.ui.Control.prototype.autoStates_=goog.ui.Component.State.ALL;goog.ui.Control.prototype.statesWithTransitionEvents_=0;goog.ui.Control.prototype.visible_=!0;goog.ui.Control.prototype.extraClassNames_=null;goog.ui.Control.prototype.handleMouseEvents_=!0;goog.ui.Control.prototype.allowTextSelection_=!1;
goog.ui.Control.prototype.preferredAriaRole_=null;goog.ui.Control.prototype.isHandleMouseEvents=function(){return this.handleMouseEvents_};goog.ui.Control.prototype.setHandleMouseEvents=function(a){this.isInDocument()&&a!=this.handleMouseEvents_&&this.enableMouseEventHandling_(a);this.handleMouseEvents_=a};goog.ui.Control.prototype.getKeyEventTarget=function(){return this.renderer_.getKeyEventTarget(this)};
goog.ui.Control.prototype.getKeyHandler=function(){return this.keyHandler_||(this.keyHandler_=new goog.events.KeyHandler)};goog.ui.Control.prototype.getRenderer=function(){return this.renderer_};goog.ui.Control.prototype.setRenderer=function(a){if(this.isInDocument())throw Error(goog.ui.Component.Error.ALREADY_RENDERED);this.getElement()&&this.setElementInternal(null);this.renderer_=a};goog.ui.Control.prototype.getExtraClassNames=function(){return this.extraClassNames_};
goog.ui.Control.prototype.addClassName=function(a){a&&(this.extraClassNames_?goog.array.contains(this.extraClassNames_,a)||this.extraClassNames_.push(a):this.extraClassNames_=[a],this.renderer_.enableExtraClassName(this,a,!0))};goog.ui.Control.prototype.removeClassName=function(a){a&&this.extraClassNames_&&goog.array.remove(this.extraClassNames_,a)&&(0==this.extraClassNames_.length&&(this.extraClassNames_=null),this.renderer_.enableExtraClassName(this,a,!1))};
goog.ui.Control.prototype.enableClassName=function(a,b){b?this.addClassName(a):this.removeClassName(a)};goog.ui.Control.prototype.createDom=function(){var a=this.renderer_.createDom(this);this.setElementInternal(a);this.renderer_.setAriaRole(a,this.getPreferredAriaRole());this.isAllowTextSelection()||this.renderer_.setAllowTextSelection(a,!1);this.isVisible()||this.renderer_.setVisible(a,!1)};goog.ui.Control.prototype.getPreferredAriaRole=function(){return this.preferredAriaRole_};
goog.ui.Control.prototype.setPreferredAriaRole=function(a){this.preferredAriaRole_=a};goog.ui.Control.prototype.getAriaLabel=function(){return this.ariaLabel_};goog.ui.Control.prototype.setAriaLabel=function(a){this.ariaLabel_=a;var b=this.getElement();b&&this.renderer_.setAriaLabel(b,a)};goog.ui.Control.prototype.getContentElement=function(){return this.renderer_.getContentElement(this.getElement())};goog.ui.Control.prototype.canDecorate=function(a){return this.renderer_.canDecorate(a)};
goog.ui.Control.prototype.decorateInternal=function(a){a=this.renderer_.decorate(this,a);this.setElementInternal(a);this.renderer_.setAriaRole(a,this.getPreferredAriaRole());this.isAllowTextSelection()||this.renderer_.setAllowTextSelection(a,!1);this.visible_="none"!=a.style.display};
goog.ui.Control.prototype.enterDocument=function(){goog.ui.Control.superClass_.enterDocument.call(this);this.renderer_.setAriaStates(this,this.getElementStrict());this.renderer_.initializeDom(this);if(this.supportedStates_&~goog.ui.Component.State.DISABLED&&(this.isHandleMouseEvents()&&this.enableMouseEventHandling_(!0),this.isSupportedState(goog.ui.Component.State.FOCUSED))){var a=this.getKeyEventTarget();if(a){var b=this.getKeyHandler();b.attach(a);this.getHandler().listen(b,goog.events.KeyHandler.EventType.KEY,
this.handleKeyEvent).listen(a,goog.events.EventType.FOCUS,this.handleFocus).listen(a,goog.events.EventType.BLUR,this.handleBlur)}}};
goog.ui.Control.prototype.enableMouseEventHandling_=function(a){var b=this.getHandler(),c=this.getElement();a?(b.listen(c,goog.events.EventType.MOUSEOVER,this.handleMouseOver).listen(c,goog.events.EventType.MOUSEDOWN,this.handleMouseDown).listen(c,goog.events.EventType.MOUSEUP,this.handleMouseUp).listen(c,goog.events.EventType.MOUSEOUT,this.handleMouseOut),this.handleContextMenu!=goog.nullFunction&&b.listen(c,goog.events.EventType.CONTEXTMENU,this.handleContextMenu),goog.userAgent.IE&&(goog.userAgent.isVersionOrHigher(9)||
b.listen(c,goog.events.EventType.DBLCLICK,this.handleDblClick),this.ieMouseEventSequenceSimulator_||(this.ieMouseEventSequenceSimulator_=new goog.ui.Control.IeMouseEventSequenceSimulator_(this),this.registerDisposable(this.ieMouseEventSequenceSimulator_)))):(b.unlisten(c,goog.events.EventType.MOUSEOVER,this.handleMouseOver).unlisten(c,goog.events.EventType.MOUSEDOWN,this.handleMouseDown).unlisten(c,goog.events.EventType.MOUSEUP,this.handleMouseUp).unlisten(c,goog.events.EventType.MOUSEOUT,this.handleMouseOut),
this.handleContextMenu!=goog.nullFunction&&b.unlisten(c,goog.events.EventType.CONTEXTMENU,this.handleContextMenu),goog.userAgent.IE&&(goog.userAgent.isVersionOrHigher(9)||b.unlisten(c,goog.events.EventType.DBLCLICK,this.handleDblClick),goog.dispose(this.ieMouseEventSequenceSimulator_),this.ieMouseEventSequenceSimulator_=null))};
goog.ui.Control.prototype.exitDocument=function(){goog.ui.Control.superClass_.exitDocument.call(this);this.keyHandler_&&this.keyHandler_.detach();this.isVisible()&&this.isEnabled()&&this.renderer_.setFocusable(this,!1)};goog.ui.Control.prototype.disposeInternal=function(){goog.ui.Control.superClass_.disposeInternal.call(this);this.keyHandler_&&(this.keyHandler_.dispose(),delete this.keyHandler_);delete this.renderer_;this.ieMouseEventSequenceSimulator_=this.extraClassNames_=this.content_=null};
goog.ui.Control.prototype.getContent=function(){return this.content_};goog.ui.Control.prototype.setContent=function(a){this.renderer_.setContent(this.getElement(),a);this.setContentInternal(a)};goog.ui.Control.prototype.setContentInternal=function(a){this.content_=a};goog.ui.Control.prototype.getCaption=function(){var a=this.getContent();if(!a)return"";a=goog.isString(a)?a:goog.isArray(a)?goog.array.map(a,goog.dom.getRawTextContent).join(""):goog.dom.getTextContent(a);return goog.string.collapseBreakingSpaces(a)};
goog.ui.Control.prototype.setCaption=function(a){this.setContent(a)};goog.ui.Control.prototype.setRightToLeft=function(a){goog.ui.Control.superClass_.setRightToLeft.call(this,a);var b=this.getElement();b&&this.renderer_.setRightToLeft(b,a)};goog.ui.Control.prototype.isAllowTextSelection=function(){return this.allowTextSelection_};goog.ui.Control.prototype.setAllowTextSelection=function(a){this.allowTextSelection_=a;var b=this.getElement();b&&this.renderer_.setAllowTextSelection(b,a)};
goog.ui.Control.prototype.isVisible=function(){return this.visible_};goog.ui.Control.prototype.setVisible=function(a,b){return b||this.visible_!=a&&this.dispatchEvent(a?goog.ui.Component.EventType.SHOW:goog.ui.Component.EventType.HIDE)?((b=this.getElement())&&this.renderer_.setVisible(b,a),this.isEnabled()&&this.renderer_.setFocusable(this,a),this.visible_=a,!0):!1};goog.ui.Control.prototype.isEnabled=function(){return!this.hasState(goog.ui.Component.State.DISABLED)};
goog.ui.Control.prototype.isParentDisabled_=function(){var a=this.getParent();return!!a&&"function"==typeof a.isEnabled&&!a.isEnabled()};goog.ui.Control.prototype.setEnabled=function(a){!this.isParentDisabled_()&&this.isTransitionAllowed(goog.ui.Component.State.DISABLED,!a)&&(a||(this.setActive(!1),this.setHighlighted(!1)),this.isVisible()&&this.renderer_.setFocusable(this,a),this.setState(goog.ui.Component.State.DISABLED,!a,!0))};goog.ui.Control.prototype.isHighlighted=function(){return this.hasState(goog.ui.Component.State.HOVER)};
goog.ui.Control.prototype.setHighlighted=function(a){this.isTransitionAllowed(goog.ui.Component.State.HOVER,a)&&this.setState(goog.ui.Component.State.HOVER,a)};goog.ui.Control.prototype.isActive=function(){return this.hasState(goog.ui.Component.State.ACTIVE)};goog.ui.Control.prototype.setActive=function(a){this.isTransitionAllowed(goog.ui.Component.State.ACTIVE,a)&&this.setState(goog.ui.Component.State.ACTIVE,a)};goog.ui.Control.prototype.isSelected=function(){return this.hasState(goog.ui.Component.State.SELECTED)};
goog.ui.Control.prototype.setSelected=function(a){this.isTransitionAllowed(goog.ui.Component.State.SELECTED,a)&&this.setState(goog.ui.Component.State.SELECTED,a)};goog.ui.Control.prototype.isChecked=function(){return this.hasState(goog.ui.Component.State.CHECKED)};goog.ui.Control.prototype.setChecked=function(a){this.isTransitionAllowed(goog.ui.Component.State.CHECKED,a)&&this.setState(goog.ui.Component.State.CHECKED,a)};goog.ui.Control.prototype.isFocused=function(){return this.hasState(goog.ui.Component.State.FOCUSED)};
goog.ui.Control.prototype.setFocused=function(a){this.isTransitionAllowed(goog.ui.Component.State.FOCUSED,a)&&this.setState(goog.ui.Component.State.FOCUSED,a)};goog.ui.Control.prototype.isOpen=function(){return this.hasState(goog.ui.Component.State.OPENED)};goog.ui.Control.prototype.setOpen=function(a){this.isTransitionAllowed(goog.ui.Component.State.OPENED,a)&&this.setState(goog.ui.Component.State.OPENED,a)};goog.ui.Control.prototype.getState=function(){return this.state_};
goog.ui.Control.prototype.hasState=function(a){return!!(this.state_&a)};goog.ui.Control.prototype.setState=function(a,b,c){c||a!=goog.ui.Component.State.DISABLED?this.isSupportedState(a)&&b!=this.hasState(a)&&(this.renderer_.setState(this,a,b),this.state_=b?this.state_|a:this.state_&~a):this.setEnabled(!b)};goog.ui.Control.prototype.setStateInternal=function(a){this.state_=a};goog.ui.Control.prototype.isSupportedState=function(a){return!!(this.supportedStates_&a)};
goog.ui.Control.prototype.setSupportedState=function(a,b){if(this.isInDocument()&&this.hasState(a)&&!b)throw Error(goog.ui.Component.Error.ALREADY_RENDERED);!b&&this.hasState(a)&&this.setState(a,!1);this.supportedStates_=b?this.supportedStates_|a:this.supportedStates_&~a};goog.ui.Control.prototype.isAutoState=function(a){return!!(this.autoStates_&a)&&this.isSupportedState(a)};goog.ui.Control.prototype.setAutoStates=function(a,b){this.autoStates_=b?this.autoStates_|a:this.autoStates_&~a};
goog.ui.Control.prototype.isDispatchTransitionEvents=function(a){return!!(this.statesWithTransitionEvents_&a)&&this.isSupportedState(a)};goog.ui.Control.prototype.setDispatchTransitionEvents=function(a,b){this.statesWithTransitionEvents_=b?this.statesWithTransitionEvents_|a:this.statesWithTransitionEvents_&~a};
goog.ui.Control.prototype.isTransitionAllowed=function(a,b){return this.isSupportedState(a)&&this.hasState(a)!=b&&(!(this.statesWithTransitionEvents_&a)||this.dispatchEvent(goog.ui.Component.getStateTransitionEvent(a,b)))&&!this.isDisposed()};goog.ui.Control.prototype.handleMouseOver=function(a){!goog.ui.Control.isMouseEventWithinElement_(a,this.getElement())&&this.dispatchEvent(goog.ui.Component.EventType.ENTER)&&this.isEnabled()&&this.isAutoState(goog.ui.Component.State.HOVER)&&this.setHighlighted(!0)};
goog.ui.Control.prototype.handleMouseOut=function(a){!goog.ui.Control.isMouseEventWithinElement_(a,this.getElement())&&this.dispatchEvent(goog.ui.Component.EventType.LEAVE)&&(this.isAutoState(goog.ui.Component.State.ACTIVE)&&this.setActive(!1),this.isAutoState(goog.ui.Component.State.HOVER)&&this.setHighlighted(!1))};goog.ui.Control.prototype.handleContextMenu=goog.nullFunction;goog.ui.Control.isMouseEventWithinElement_=function(a,b){return!!a.relatedTarget&&goog.dom.contains(b,a.relatedTarget)};
goog.ui.Control.prototype.handleMouseDown=function(a){this.isEnabled()&&(this.isAutoState(goog.ui.Component.State.HOVER)&&this.setHighlighted(!0),a.isMouseActionButton()&&(this.isAutoState(goog.ui.Component.State.ACTIVE)&&this.setActive(!0),this.renderer_&&this.renderer_.isFocusable(this)&&this.getKeyEventTarget().focus()));!this.isAllowTextSelection()&&a.isMouseActionButton()&&a.preventDefault()};
goog.ui.Control.prototype.handleMouseUp=function(a){this.isEnabled()&&(this.isAutoState(goog.ui.Component.State.HOVER)&&this.setHighlighted(!0),this.isActive()&&this.performActionInternal(a)&&this.isAutoState(goog.ui.Component.State.ACTIVE)&&this.setActive(!1))};goog.ui.Control.prototype.handleDblClick=function(a){this.isEnabled()&&this.performActionInternal(a)};
goog.ui.Control.prototype.performActionInternal=function(a){this.isAutoState(goog.ui.Component.State.CHECKED)&&this.setChecked(!this.isChecked());this.isAutoState(goog.ui.Component.State.SELECTED)&&this.setSelected(!0);this.isAutoState(goog.ui.Component.State.OPENED)&&this.setOpen(!this.isOpen());var b=new goog.events.Event(goog.ui.Component.EventType.ACTION,this);a&&(b.altKey=a.altKey,b.ctrlKey=a.ctrlKey,b.metaKey=a.metaKey,b.shiftKey=a.shiftKey,b.platformModifierKey=a.platformModifierKey);return this.dispatchEvent(b)};
goog.ui.Control.prototype.handleFocus=function(a){this.isAutoState(goog.ui.Component.State.FOCUSED)&&this.setFocused(!0)};goog.ui.Control.prototype.handleBlur=function(a){this.isAutoState(goog.ui.Component.State.ACTIVE)&&this.setActive(!1);this.isAutoState(goog.ui.Component.State.FOCUSED)&&this.setFocused(!1)};goog.ui.Control.prototype.handleKeyEvent=function(a){return this.isVisible()&&this.isEnabled()&&this.handleKeyEventInternal(a)?(a.preventDefault(),a.stopPropagation(),!0):!1};
goog.ui.Control.prototype.handleKeyEventInternal=function(a){return a.keyCode==goog.events.KeyCodes.ENTER&&this.performActionInternal(a)};goog.ui.registry.setDefaultRenderer(goog.ui.Control,goog.ui.ControlRenderer);goog.ui.registry.setDecoratorByClassName(goog.ui.ControlRenderer.CSS_CLASS,function(){return new goog.ui.Control(null)});
goog.ui.Control.IeMouseEventSequenceSimulator_=function(a){goog.Disposable.call(this);this.control_=a;this.clickExpected_=!1;this.handler_=new goog.events.EventHandler(this);this.registerDisposable(this.handler_);a=this.control_.getElementStrict();this.handler_.listen(a,goog.events.EventType.MOUSEDOWN,this.handleMouseDown_).listen(a,goog.events.EventType.MOUSEUP,this.handleMouseUp_).listen(a,goog.events.EventType.CLICK,this.handleClick_)};
goog.inherits(goog.ui.Control.IeMouseEventSequenceSimulator_,goog.Disposable);goog.ui.Control.IeMouseEventSequenceSimulator_.SYNTHETIC_EVENTS_=!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9);goog.ui.Control.IeMouseEventSequenceSimulator_.prototype.handleMouseDown_=function(){this.clickExpected_=!1};goog.ui.Control.IeMouseEventSequenceSimulator_.prototype.handleMouseUp_=function(){this.clickExpected_=!0};
goog.ui.Control.IeMouseEventSequenceSimulator_.makeLeftMouseEvent_=function(a,b){if(!goog.ui.Control.IeMouseEventSequenceSimulator_.SYNTHETIC_EVENTS_)return a.button=goog.events.BrowserEvent.MouseButton.LEFT,a.type=b,a;var c=document.createEvent("MouseEvents");c.initMouseEvent(b,a.bubbles,a.cancelable,a.view||null,a.detail,a.screenX,a.screenY,a.clientX,a.clientY,a.ctrlKey,a.altKey,a.shiftKey,a.metaKey,goog.events.BrowserEvent.MouseButton.LEFT,a.relatedTarget||null);return c};
goog.ui.Control.IeMouseEventSequenceSimulator_.prototype.handleClick_=function(a){if(this.clickExpected_)this.clickExpected_=!1;else{var b=a.getBrowserEvent(),c=b.button,d=b.type,e=goog.ui.Control.IeMouseEventSequenceSimulator_.makeLeftMouseEvent_(b,goog.events.EventType.MOUSEDOWN);this.control_.handleMouseDown(new goog.events.BrowserEvent(e,a.currentTarget));e=goog.ui.Control.IeMouseEventSequenceSimulator_.makeLeftMouseEvent_(b,goog.events.EventType.MOUSEUP);this.control_.handleMouseUp(new goog.events.BrowserEvent(e,
a.currentTarget));goog.ui.Control.IeMouseEventSequenceSimulator_.SYNTHETIC_EVENTS_||(b.button=c,b.type=d)}};goog.ui.Control.IeMouseEventSequenceSimulator_.prototype.disposeInternal=function(){this.control_=null;goog.ui.Control.IeMouseEventSequenceSimulator_.superClass_.disposeInternal.call(this)};goog.ui.Container=function(a,b,c){goog.ui.Component.call(this,c);this.renderer_=b||goog.ui.ContainerRenderer.getInstance();this.orientation_=a||this.renderer_.getDefaultOrientation()};goog.inherits(goog.ui.Container,goog.ui.Component);goog.tagUnsealableClass(goog.ui.Container);goog.ui.Container.EventType={AFTER_SHOW:"aftershow",AFTER_HIDE:"afterhide"};goog.ui.Container.Orientation={HORIZONTAL:"horizontal",VERTICAL:"vertical"};goog.ui.Container.prototype.keyEventTarget_=null;
goog.ui.Container.prototype.keyHandler_=null;goog.ui.Container.prototype.renderer_=null;goog.ui.Container.prototype.orientation_=null;goog.ui.Container.prototype.visible_=!0;goog.ui.Container.prototype.enabled_=!0;goog.ui.Container.prototype.focusable_=!0;goog.ui.Container.prototype.highlightedIndex_=-1;goog.ui.Container.prototype.openItem_=null;goog.ui.Container.prototype.mouseButtonPressed_=!1;goog.ui.Container.prototype.allowFocusableChildren_=!1;
goog.ui.Container.prototype.openFollowsHighlight_=!0;goog.ui.Container.prototype.childElementIdMap_=null;goog.ui.Container.prototype.getKeyEventTarget=function(){return this.keyEventTarget_||this.renderer_.getKeyEventTarget(this)};
goog.ui.Container.prototype.setKeyEventTarget=function(a){if(this.focusable_){var b=this.getKeyEventTarget(),c=this.isInDocument();this.keyEventTarget_=a;var d=this.getKeyEventTarget();c&&(this.keyEventTarget_=b,this.enableFocusHandling_(!1),this.keyEventTarget_=a,this.getKeyHandler().attach(d),this.enableFocusHandling_(!0))}else throw Error("Can't set key event target for container that doesn't support keyboard focus!");};
goog.ui.Container.prototype.getKeyHandler=function(){return this.keyHandler_||(this.keyHandler_=new goog.events.KeyHandler(this.getKeyEventTarget()))};goog.ui.Container.prototype.getRenderer=function(){return this.renderer_};goog.ui.Container.prototype.setRenderer=function(a){if(this.getElement())throw Error(goog.ui.Component.Error.ALREADY_RENDERED);this.renderer_=a};goog.ui.Container.prototype.createDom=function(){this.setElementInternal(this.renderer_.createDom(this))};
goog.ui.Container.prototype.getContentElement=function(){return this.renderer_.getContentElement(this.getElement())};goog.ui.Container.prototype.canDecorate=function(a){return this.renderer_.canDecorate(a)};goog.ui.Container.prototype.decorateInternal=function(a){this.setElementInternal(this.renderer_.decorate(this,a));"none"==a.style.display&&(this.visible_=!1)};
goog.ui.Container.prototype.enterDocument=function(){goog.ui.Container.superClass_.enterDocument.call(this);this.forEachChild(function(a){a.isInDocument()&&this.registerChildId_(a)},this);var a=this.getElement();this.renderer_.initializeDom(this);this.setVisible(this.visible_,!0);this.getHandler().listen(this,goog.ui.Component.EventType.ENTER,this.handleEnterItem).listen(this,goog.ui.Component.EventType.HIGHLIGHT,this.handleHighlightItem).listen(this,goog.ui.Component.EventType.UNHIGHLIGHT,this.handleUnHighlightItem).listen(this,
goog.ui.Component.EventType.OPEN,this.handleOpenItem).listen(this,goog.ui.Component.EventType.CLOSE,this.handleCloseItem).listen(a,goog.events.EventType.MOUSEDOWN,this.handleMouseDown).listen(goog.dom.getOwnerDocument(a),goog.events.EventType.MOUSEUP,this.handleDocumentMouseUp).listen(a,[goog.events.EventType.MOUSEDOWN,goog.events.EventType.MOUSEUP,goog.events.EventType.MOUSEOVER,goog.events.EventType.MOUSEOUT,goog.events.EventType.CONTEXTMENU],this.handleChildMouseEvents);this.isFocusable()&&this.enableFocusHandling_(!0)};
goog.ui.Container.prototype.enableFocusHandling_=function(a){var b=this.getHandler(),c=this.getKeyEventTarget();a?b.listen(c,goog.events.EventType.FOCUS,this.handleFocus).listen(c,goog.events.EventType.BLUR,this.handleBlur).listen(this.getKeyHandler(),goog.events.KeyHandler.EventType.KEY,this.handleKeyEvent):b.unlisten(c,goog.events.EventType.FOCUS,this.handleFocus).unlisten(c,goog.events.EventType.BLUR,this.handleBlur).unlisten(this.getKeyHandler(),goog.events.KeyHandler.EventType.KEY,this.handleKeyEvent)};
goog.ui.Container.prototype.exitDocument=function(){this.setHighlightedIndex(-1);this.openItem_&&this.openItem_.setOpen(!1);this.mouseButtonPressed_=!1;goog.ui.Container.superClass_.exitDocument.call(this)};goog.ui.Container.prototype.disposeInternal=function(){goog.ui.Container.superClass_.disposeInternal.call(this);this.keyHandler_&&(this.keyHandler_.dispose(),this.keyHandler_=null);this.renderer_=this.openItem_=this.childElementIdMap_=this.keyEventTarget_=null};
goog.ui.Container.prototype.handleEnterItem=function(a){return!0};
goog.ui.Container.prototype.handleHighlightItem=function(a){var b=this.indexOfChild(a.target);if(-1<b&&b!=this.highlightedIndex_){var c=this.getHighlighted();c&&c.setHighlighted(!1);this.highlightedIndex_=b;c=this.getHighlighted();this.isMouseButtonPressed()&&c.setActive(!0);this.openFollowsHighlight_&&this.openItem_&&c!=this.openItem_&&(c.isSupportedState(goog.ui.Component.State.OPENED)?c.setOpen(!0):this.openItem_.setOpen(!1))}b=this.getElement();goog.asserts.assert(b,"The DOM element for the container cannot be null.");
null!=a.target.getElement()&&goog.a11y.aria.setState(b,goog.a11y.aria.State.ACTIVEDESCENDANT,a.target.getElement().id)};goog.ui.Container.prototype.handleUnHighlightItem=function(a){a.target==this.getHighlighted()&&(this.highlightedIndex_=-1);a=this.getElement();goog.asserts.assert(a,"The DOM element for the container cannot be null.");goog.a11y.aria.removeState(a,goog.a11y.aria.State.ACTIVEDESCENDANT)};
goog.ui.Container.prototype.handleOpenItem=function(a){(a=a.target)&&a!=this.openItem_&&a.getParent()==this&&(this.openItem_&&this.openItem_.setOpen(!1),this.openItem_=a)};goog.ui.Container.prototype.handleCloseItem=function(a){a.target==this.openItem_&&(this.openItem_=null);var b=this.getElement(),c=a.target.getElement();b&&a.target.isHighlighted()&&c&&goog.a11y.aria.setActiveDescendant(b,c)};
goog.ui.Container.prototype.handleMouseDown=function(a){this.enabled_&&this.setMouseButtonPressed(!0);var b=this.getKeyEventTarget();b&&goog.dom.isFocusableTabIndex(b)?b.focus():a.preventDefault()};goog.ui.Container.prototype.handleDocumentMouseUp=function(a){this.setMouseButtonPressed(!1)};
goog.ui.Container.prototype.handleChildMouseEvents=function(a){var b=this.getOwnerControl(a.target);if(b)switch(a.type){case goog.events.EventType.MOUSEDOWN:b.handleMouseDown(a);break;case goog.events.EventType.MOUSEUP:b.handleMouseUp(a);break;case goog.events.EventType.MOUSEOVER:b.handleMouseOver(a);break;case goog.events.EventType.MOUSEOUT:b.handleMouseOut(a);break;case goog.events.EventType.CONTEXTMENU:b.handleContextMenu(a)}};
goog.ui.Container.prototype.getOwnerControl=function(a){if(this.childElementIdMap_)for(var b=this.getElement();a&&a!==b;){var c=a.id;if(c in this.childElementIdMap_)return this.childElementIdMap_[c];a=a.parentNode}return null};goog.ui.Container.prototype.handleFocus=function(a){};goog.ui.Container.prototype.handleBlur=function(a){this.setHighlightedIndex(-1);this.setMouseButtonPressed(!1);this.openItem_&&this.openItem_.setOpen(!1)};
goog.ui.Container.prototype.handleKeyEvent=function(a){return this.isEnabled()&&this.isVisible()&&(0!=this.getChildCount()||this.keyEventTarget_)&&this.handleKeyEventInternal(a)?(a.preventDefault(),a.stopPropagation(),!0):!1};
goog.ui.Container.prototype.handleKeyEventInternal=function(a){var b=this.getHighlighted();if(b&&"function"==typeof b.handleKeyEvent&&b.handleKeyEvent(a)||this.openItem_&&this.openItem_!=b&&"function"==typeof this.openItem_.handleKeyEvent&&this.openItem_.handleKeyEvent(a))return!0;if(a.shiftKey||a.ctrlKey||a.metaKey||a.altKey)return!1;switch(a.keyCode){case goog.events.KeyCodes.ESC:if(this.isFocusable())this.getKeyEventTarget().blur();else return!1;break;case goog.events.KeyCodes.HOME:this.highlightFirst();
break;case goog.events.KeyCodes.END:this.highlightLast();break;case goog.events.KeyCodes.UP:if(this.orientation_==goog.ui.Container.Orientation.VERTICAL)this.highlightPrevious();else return!1;break;case goog.events.KeyCodes.LEFT:if(this.orientation_==goog.ui.Container.Orientation.HORIZONTAL)this.isRightToLeft()?this.highlightNext():this.highlightPrevious();else return!1;break;case goog.events.KeyCodes.DOWN:if(this.orientation_==goog.ui.Container.Orientation.VERTICAL)this.highlightNext();else return!1;
break;case goog.events.KeyCodes.RIGHT:if(this.orientation_==goog.ui.Container.Orientation.HORIZONTAL)this.isRightToLeft()?this.highlightPrevious():this.highlightNext();else return!1;break;default:return!1}return!0};goog.ui.Container.prototype.registerChildId_=function(a){var b=a.getElement();b=b.id||(b.id=a.getId());this.childElementIdMap_||(this.childElementIdMap_={});this.childElementIdMap_[b]=a};
goog.ui.Container.prototype.addChild=function(a,b){goog.asserts.assertInstanceof(a,goog.ui.Control,"The child of a container must be a control");goog.ui.Container.superClass_.addChild.call(this,a,b)};
goog.ui.Container.prototype.addChildAt=function(a,b,c){goog.asserts.assertInstanceof(a,goog.ui.Control);a.setDispatchTransitionEvents(goog.ui.Component.State.HOVER,!0);a.setDispatchTransitionEvents(goog.ui.Component.State.OPENED,!0);!this.isFocusable()&&this.isFocusableChildrenAllowed()||a.setSupportedState(goog.ui.Component.State.FOCUSED,!1);a.setHandleMouseEvents(!1);var d=a.getParent()==this?this.indexOfChild(a):-1;goog.ui.Container.superClass_.addChildAt.call(this,a,b,c);a.isInDocument()&&this.isInDocument()&&
this.registerChildId_(a);this.updateHighlightedIndex_(d,b)};goog.ui.Container.prototype.updateHighlightedIndex_=function(a,b){-1==a&&(a=this.getChildCount());a==this.highlightedIndex_?this.highlightedIndex_=Math.min(this.getChildCount()-1,b):a>this.highlightedIndex_&&b<=this.highlightedIndex_?this.highlightedIndex_++:a<this.highlightedIndex_&&b>this.highlightedIndex_&&this.highlightedIndex_--};
goog.ui.Container.prototype.removeChild=function(a,b){a=goog.isString(a)?this.getChild(a):a;goog.asserts.assertInstanceof(a,goog.ui.Control);if(a){var c=this.indexOfChild(a);-1!=c&&(c==this.highlightedIndex_?(a.setHighlighted(!1),this.highlightedIndex_=-1):c<this.highlightedIndex_&&this.highlightedIndex_--);(c=a.getElement())&&c.id&&this.childElementIdMap_&&goog.object.remove(this.childElementIdMap_,c.id)}a=goog.ui.Container.superClass_.removeChild.call(this,a,b);a.setHandleMouseEvents(!0);return a};
goog.ui.Container.prototype.getOrientation=function(){return this.orientation_};goog.ui.Container.prototype.setOrientation=function(a){if(this.getElement())throw Error(goog.ui.Component.Error.ALREADY_RENDERED);this.orientation_=a};goog.ui.Container.prototype.isVisible=function(){return this.visible_};
goog.ui.Container.prototype.setVisible=function(a,b){if(b||this.visible_!=a&&this.dispatchEvent(a?goog.ui.Component.EventType.SHOW:goog.ui.Component.EventType.HIDE)){this.visible_=a;var c=this.getElement();c&&(goog.style.setElementShown(c,a),this.isFocusable()&&this.renderer_.enableTabIndex(this.getKeyEventTarget(),this.enabled_&&this.visible_),b||this.dispatchEvent(this.visible_?goog.ui.Container.EventType.AFTER_SHOW:goog.ui.Container.EventType.AFTER_HIDE));return!0}return!1};
goog.ui.Container.prototype.isEnabled=function(){return this.enabled_};
goog.ui.Container.prototype.setEnabled=function(a){this.enabled_!=a&&this.dispatchEvent(a?goog.ui.Component.EventType.ENABLE:goog.ui.Component.EventType.DISABLE)&&(a?(this.enabled_=!0,this.forEachChild(function(a){a.wasDisabled?delete a.wasDisabled:a.setEnabled(!0)})):(this.forEachChild(function(a){a.isEnabled()?a.setEnabled(!1):a.wasDisabled=!0}),this.enabled_=!1,this.setMouseButtonPressed(!1)),this.isFocusable()&&this.renderer_.enableTabIndex(this.getKeyEventTarget(),a&&this.visible_))};
goog.ui.Container.prototype.isFocusable=function(){return this.focusable_};goog.ui.Container.prototype.setFocusable=function(a){a!=this.focusable_&&this.isInDocument()&&this.enableFocusHandling_(a);this.focusable_=a;this.enabled_&&this.visible_&&this.renderer_.enableTabIndex(this.getKeyEventTarget(),a)};goog.ui.Container.prototype.isFocusableChildrenAllowed=function(){return this.allowFocusableChildren_};
goog.ui.Container.prototype.setFocusableChildrenAllowed=function(a){this.allowFocusableChildren_=a};goog.ui.Container.prototype.isOpenFollowsHighlight=function(){return this.openFollowsHighlight_};goog.ui.Container.prototype.setOpenFollowsHighlight=function(a){this.openFollowsHighlight_=a};goog.ui.Container.prototype.getHighlightedIndex=function(){return this.highlightedIndex_};
goog.ui.Container.prototype.setHighlightedIndex=function(a){(a=this.getChildAt(a))?a.setHighlighted(!0):-1<this.highlightedIndex_&&this.getHighlighted().setHighlighted(!1)};goog.ui.Container.prototype.setHighlighted=function(a){this.setHighlightedIndex(this.indexOfChild(a))};goog.ui.Container.prototype.getHighlighted=function(){return this.getChildAt(this.highlightedIndex_)};
goog.ui.Container.prototype.highlightFirst=function(){this.highlightHelper(function(a,b){return(a+1)%b},this.getChildCount()-1)};goog.ui.Container.prototype.highlightLast=function(){this.highlightHelper(function(a,b){a--;return 0>a?b-1:a},0)};goog.ui.Container.prototype.highlightNext=function(){this.highlightHelper(function(a,b){return(a+1)%b},this.highlightedIndex_)};goog.ui.Container.prototype.highlightPrevious=function(){this.highlightHelper(function(a,b){a--;return 0>a?b-1:a},this.highlightedIndex_)};
goog.ui.Container.prototype.highlightHelper=function(a,b){b=0>b?this.indexOfChild(this.openItem_):b;var c=this.getChildCount();b=a.call(this,b,c);for(var d=0;d<=c;){var e=this.getChildAt(b);if(e&&this.canHighlightItem(e))return this.setHighlightedIndexFromKeyEvent(b),!0;d++;b=a.call(this,b,c)}return!1};goog.ui.Container.prototype.canHighlightItem=function(a){return a.isVisible()&&a.isEnabled()&&a.isSupportedState(goog.ui.Component.State.HOVER)};
goog.ui.Container.prototype.setHighlightedIndexFromKeyEvent=function(a){this.setHighlightedIndex(a)};goog.ui.Container.prototype.getOpenItem=function(){return this.openItem_};goog.ui.Container.prototype.isMouseButtonPressed=function(){return this.mouseButtonPressed_};goog.ui.Container.prototype.setMouseButtonPressed=function(a){this.mouseButtonPressed_=a};goog.ui.MenuHeaderRenderer=function(){goog.ui.ControlRenderer.call(this)};goog.inherits(goog.ui.MenuHeaderRenderer,goog.ui.ControlRenderer);goog.addSingletonGetter(goog.ui.MenuHeaderRenderer);goog.ui.MenuHeaderRenderer.CSS_CLASS="goog-menuheader";goog.ui.MenuHeaderRenderer.prototype.getCssClass=function(){return goog.ui.MenuHeaderRenderer.CSS_CLASS};goog.ui.MenuHeader=function(a,b,c){goog.ui.Control.call(this,a,c||goog.ui.MenuHeaderRenderer.getInstance(),b);this.setSupportedState(goog.ui.Component.State.DISABLED,!1);this.setSupportedState(goog.ui.Component.State.HOVER,!1);this.setSupportedState(goog.ui.Component.State.ACTIVE,!1);this.setSupportedState(goog.ui.Component.State.FOCUSED,!1);this.setStateInternal(goog.ui.Component.State.DISABLED)};goog.inherits(goog.ui.MenuHeader,goog.ui.Control);
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuHeaderRenderer.CSS_CLASS,function(){return new goog.ui.MenuHeader(null)});goog.ui.MenuItemRenderer=function(){goog.ui.ControlRenderer.call(this);this.classNameCache_=[]};goog.inherits(goog.ui.MenuItemRenderer,goog.ui.ControlRenderer);goog.addSingletonGetter(goog.ui.MenuItemRenderer);goog.ui.MenuItemRenderer.CSS_CLASS="goog-menuitem";goog.ui.MenuItemRenderer.CompositeCssClassIndex_={HOVER:0,CHECKBOX:1,CONTENT:2};
goog.ui.MenuItemRenderer.prototype.getCompositeCssClass_=function(a){var b=this.classNameCache_[a];if(!b){switch(a){case goog.ui.MenuItemRenderer.CompositeCssClassIndex_.HOVER:b=this.getStructuralCssClass()+"-highlight";break;case goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CHECKBOX:b=this.getStructuralCssClass()+"-checkbox";break;case goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CONTENT:b=this.getStructuralCssClass()+"-content"}this.classNameCache_[a]=b}return b};
goog.ui.MenuItemRenderer.prototype.getAriaRole=function(){return goog.a11y.aria.Role.MENU_ITEM};goog.ui.MenuItemRenderer.prototype.createDom=function(a){var b=a.getDomHelper().createDom("DIV",this.getClassNames(a).join(" "),this.createContent(a.getContent(),a.getDomHelper()));this.setEnableCheckBoxStructure(a,b,a.isSupportedState(goog.ui.Component.State.SELECTED)||a.isSupportedState(goog.ui.Component.State.CHECKED));return b};
goog.ui.MenuItemRenderer.prototype.getContentElement=function(a){return a&&a.firstChild};goog.ui.MenuItemRenderer.prototype.decorate=function(a,b){goog.asserts.assert(b);this.hasContentStructure(b)||b.appendChild(this.createContent(b.childNodes,a.getDomHelper()));goog.dom.classlist.contains(b,"goog-option")&&(a.setCheckable(!0),this.setCheckable(a,b,!0));return goog.ui.MenuItemRenderer.superClass_.decorate.call(this,a,b)};
goog.ui.MenuItemRenderer.prototype.setContent=function(a,b){var c=this.getContentElement(a),d=this.hasCheckBoxStructure(a)?c.firstChild:null;goog.ui.MenuItemRenderer.superClass_.setContent.call(this,a,b);d&&!this.hasCheckBoxStructure(a)&&c.insertBefore(d,c.firstChild||null)};
goog.ui.MenuItemRenderer.prototype.hasContentStructure=function(a){a=goog.dom.getFirstElementChild(a);var b=this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CONTENT);return!!a&&goog.dom.classlist.contains(a,b)};goog.ui.MenuItemRenderer.prototype.createContent=function(a,b){var c=this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CONTENT);return b.createDom("DIV",c,a)};
goog.ui.MenuItemRenderer.prototype.setSelectable=function(a,b,c){a&&b&&this.setEnableCheckBoxStructure(a,b,c)};goog.ui.MenuItemRenderer.prototype.setCheckable=function(a,b,c){a&&b&&this.setEnableCheckBoxStructure(a,b,c)};goog.ui.MenuItemRenderer.prototype.hasCheckBoxStructure=function(a){if(a=this.getContentElement(a)){a=a.firstChild;var b=this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CHECKBOX);return!!a&&goog.dom.isElement(a)&&goog.dom.classlist.contains(a,b)}return!1};
goog.ui.MenuItemRenderer.prototype.setEnableCheckBoxStructure=function(a,b,c){this.setAriaRole(b,a.getPreferredAriaRole());this.setAriaStates(a,b);c!=this.hasCheckBoxStructure(b)&&(goog.dom.classlist.enable(b,"goog-option",c),b=this.getContentElement(b),c?(c=this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CHECKBOX),b.insertBefore(a.getDomHelper().createDom("DIV",c),b.firstChild||null)):b.removeChild(b.firstChild))};
goog.ui.MenuItemRenderer.prototype.getClassForState=function(a){switch(a){case goog.ui.Component.State.HOVER:return this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.HOVER);case goog.ui.Component.State.CHECKED:case goog.ui.Component.State.SELECTED:return"goog-option-selected";default:return goog.ui.MenuItemRenderer.superClass_.getClassForState.call(this,a)}};
goog.ui.MenuItemRenderer.prototype.getStateFromClass=function(a){var b=this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.HOVER);switch(a){case "goog-option-selected":return goog.ui.Component.State.CHECKED;case b:return goog.ui.Component.State.HOVER;default:return goog.ui.MenuItemRenderer.superClass_.getStateFromClass.call(this,a)}};goog.ui.MenuItemRenderer.prototype.getCssClass=function(){return goog.ui.MenuItemRenderer.CSS_CLASS};goog.ui.MenuItem=function(a,b,c,d){goog.ui.Control.call(this,a,d||goog.ui.MenuItemRenderer.getInstance(),c);this.setValue(b)};goog.inherits(goog.ui.MenuItem,goog.ui.Control);goog.tagUnsealableClass(goog.ui.MenuItem);goog.ui.MenuItem.MNEMONIC_WRAPPER_CLASS_="goog-menuitem-mnemonic-separator";goog.ui.MenuItem.ACCELERATOR_CLASS="goog-menuitem-accel";goog.ui.MenuItem.prototype.getValue=function(){var a=this.getModel();return null!=a?a:this.getCaption()};goog.ui.MenuItem.prototype.setValue=function(a){this.setModel(a)};
goog.ui.MenuItem.prototype.setSupportedState=function(a,b){goog.ui.MenuItem.superClass_.setSupportedState.call(this,a,b);switch(a){case goog.ui.Component.State.SELECTED:this.setSelectableInternal_(b);break;case goog.ui.Component.State.CHECKED:this.setCheckableInternal_(b)}};goog.ui.MenuItem.prototype.setSelectable=function(a){this.setSupportedState(goog.ui.Component.State.SELECTED,a)};
goog.ui.MenuItem.prototype.setSelectableInternal_=function(a){this.isChecked()&&!a&&this.setChecked(!1);var b=this.getElement();b&&this.getRenderer().setSelectable(this,b,a)};goog.ui.MenuItem.prototype.setCheckable=function(a){this.setSupportedState(goog.ui.Component.State.CHECKED,a)};goog.ui.MenuItem.prototype.setCheckableInternal_=function(a){var b=this.getElement();b&&this.getRenderer().setCheckable(this,b,a)};
goog.ui.MenuItem.prototype.getCaption=function(){var a=this.getContent();if(goog.isArray(a)){var b=goog.ui.MenuItem.ACCELERATOR_CLASS,c=goog.ui.MenuItem.MNEMONIC_WRAPPER_CLASS_;a=goog.array.map(a,function(a){return goog.dom.isElement(a)&&(goog.dom.classlist.contains(a,b)||goog.dom.classlist.contains(a,c))?"":goog.dom.getRawTextContent(a)}).join("");return goog.string.collapseBreakingSpaces(a)}return goog.ui.MenuItem.superClass_.getCaption.call(this)};
goog.ui.MenuItem.prototype.getAccelerator=function(){var a=this.getDomHelper(),b=this.getContent();return goog.isArray(b)&&(b=goog.array.find(b,function(a){return goog.dom.classlist.contains(a,goog.ui.MenuItem.ACCELERATOR_CLASS)}))?a.getTextContent(b):null};
goog.ui.MenuItem.prototype.handleMouseUp=function(a){var b=this.getParent();if(b){var c=b.openingCoords;b.openingCoords=null;if(c&&goog.isNumber(a.clientX)&&(b=new goog.math.Coordinate(a.clientX,a.clientY),goog.math.Coordinate.equals(c,b)))return}goog.ui.MenuItem.superClass_.handleMouseUp.call(this,a)};goog.ui.MenuItem.prototype.handleKeyEventInternal=function(a){return a.keyCode==this.getMnemonic()&&this.performActionInternal(a)?!0:goog.ui.MenuItem.superClass_.handleKeyEventInternal.call(this,a)};
goog.ui.MenuItem.prototype.setMnemonic=function(a){this.mnemonicKey_=a};goog.ui.MenuItem.prototype.getMnemonic=function(){return this.mnemonicKey_};goog.ui.registry.setDecoratorByClassName(goog.ui.MenuItemRenderer.CSS_CLASS,function(){return new goog.ui.MenuItem(null)});
goog.ui.MenuItem.prototype.getPreferredAriaRole=function(){return this.isSupportedState(goog.ui.Component.State.CHECKED)?goog.a11y.aria.Role.MENU_ITEM_CHECKBOX:this.isSupportedState(goog.ui.Component.State.SELECTED)?goog.a11y.aria.Role.MENU_ITEM_RADIO:goog.ui.MenuItem.superClass_.getPreferredAriaRole.call(this)};goog.ui.MenuItem.prototype.getParent=function(){return goog.ui.Control.prototype.getParent.call(this)};goog.ui.MenuItem.prototype.getParentEventTarget=function(){return goog.ui.Control.prototype.getParentEventTarget.call(this)};goog.ui.MenuSeparatorRenderer=function(){goog.ui.ControlRenderer.call(this)};goog.inherits(goog.ui.MenuSeparatorRenderer,goog.ui.ControlRenderer);goog.addSingletonGetter(goog.ui.MenuSeparatorRenderer);goog.ui.MenuSeparatorRenderer.CSS_CLASS="goog-menuseparator";goog.ui.MenuSeparatorRenderer.prototype.createDom=function(a){return a.getDomHelper().createDom("DIV",this.getCssClass())};
goog.ui.MenuSeparatorRenderer.prototype.decorate=function(a,b){b.id&&a.setId(b.id);if("HR"==b.tagName){var c=b;b=this.createDom(a);goog.dom.insertSiblingBefore(b,c);goog.dom.removeNode(c)}else goog.dom.classlist.add(b,this.getCssClass());return b};goog.ui.MenuSeparatorRenderer.prototype.setContent=function(a,b){};goog.ui.MenuSeparatorRenderer.prototype.getCssClass=function(){return goog.ui.MenuSeparatorRenderer.CSS_CLASS};goog.ui.Separator=function(a,b){goog.ui.Control.call(this,null,a||goog.ui.MenuSeparatorRenderer.getInstance(),b);this.setSupportedState(goog.ui.Component.State.DISABLED,!1);this.setSupportedState(goog.ui.Component.State.HOVER,!1);this.setSupportedState(goog.ui.Component.State.ACTIVE,!1);this.setSupportedState(goog.ui.Component.State.FOCUSED,!1);this.setStateInternal(goog.ui.Component.State.DISABLED)};goog.inherits(goog.ui.Separator,goog.ui.Control);
goog.ui.Separator.prototype.enterDocument=function(){goog.ui.Separator.superClass_.enterDocument.call(this);var a=this.getElement();goog.asserts.assert(a,"The DOM element for the separator cannot be null.");goog.a11y.aria.setRole(a,"separator")};goog.ui.registry.setDecoratorByClassName(goog.ui.MenuSeparatorRenderer.CSS_CLASS,function(){return new goog.ui.Separator});goog.ui.MenuRenderer=function(a){goog.ui.ContainerRenderer.call(this,a||goog.a11y.aria.Role.MENU)};goog.inherits(goog.ui.MenuRenderer,goog.ui.ContainerRenderer);goog.addSingletonGetter(goog.ui.MenuRenderer);goog.ui.MenuRenderer.CSS_CLASS="goog-menu";goog.ui.MenuRenderer.prototype.canDecorate=function(a){return"UL"==a.tagName||goog.ui.MenuRenderer.superClass_.canDecorate.call(this,a)};
goog.ui.MenuRenderer.prototype.getDecoratorForChild=function(a){return"HR"==a.tagName?new goog.ui.Separator:goog.ui.MenuRenderer.superClass_.getDecoratorForChild.call(this,a)};goog.ui.MenuRenderer.prototype.containsElement=function(a,b){return goog.dom.contains(a.getElement(),b)};goog.ui.MenuRenderer.prototype.getCssClass=function(){return goog.ui.MenuRenderer.CSS_CLASS};
goog.ui.MenuRenderer.prototype.initializeDom=function(a){goog.ui.MenuRenderer.superClass_.initializeDom.call(this,a);a=a.getElement();goog.asserts.assert(a,"The menu DOM element cannot be null.");goog.a11y.aria.setState(a,goog.a11y.aria.State.HASPOPUP,"true")};goog.ui.MenuSeparator=function(a){goog.ui.Separator.call(this,goog.ui.MenuSeparatorRenderer.getInstance(),a)};goog.inherits(goog.ui.MenuSeparator,goog.ui.Separator);goog.ui.registry.setDecoratorByClassName(goog.ui.MenuSeparatorRenderer.CSS_CLASS,function(){return new goog.ui.Separator});goog.ui.Menu=function(a,b){goog.ui.Container.call(this,goog.ui.Container.Orientation.VERTICAL,b||goog.ui.MenuRenderer.getInstance(),a);this.setFocusable(!1)};goog.inherits(goog.ui.Menu,goog.ui.Container);goog.tagUnsealableClass(goog.ui.Menu);goog.ui.Menu.EventType={BEFORE_SHOW:goog.ui.Component.EventType.BEFORE_SHOW,SHOW:goog.ui.Component.EventType.SHOW,BEFORE_HIDE:goog.ui.Component.EventType.HIDE,HIDE:goog.ui.Component.EventType.HIDE};goog.ui.Menu.CSS_CLASS=goog.ui.MenuRenderer.CSS_CLASS;
goog.ui.Menu.prototype.allowAutoFocus_=!0;goog.ui.Menu.prototype.allowHighlightDisabled_=!1;goog.ui.Menu.prototype.getCssClass=function(){return this.getRenderer().getCssClass()};goog.ui.Menu.prototype.containsElement=function(a){if(this.getRenderer().containsElement(this,a))return!0;for(var b=0,c=this.getChildCount();b<c;b++){var d=this.getChildAt(b);if("function"==typeof d.containsElement&&d.containsElement(a))return!0}return!1};goog.ui.Menu.prototype.addItem=function(a){this.addChild(a,!0)};
goog.ui.Menu.prototype.addItemAt=function(a,b){this.addChildAt(a,b,!0)};goog.ui.Menu.prototype.removeItem=function(a){(a=this.removeChild(a,!0))&&a.dispose()};goog.ui.Menu.prototype.removeItemAt=function(a){(a=this.removeChildAt(a,!0))&&a.dispose()};goog.ui.Menu.prototype.getItemAt=function(a){return this.getChildAt(a)};goog.ui.Menu.prototype.getItemCount=function(){return this.getChildCount()};goog.ui.Menu.prototype.getItems=function(){var a=[];this.forEachChild(function(b){a.push(b)});return a};
goog.ui.Menu.prototype.setPosition=function(a,b){var c=this.isVisible();c||goog.style.setElementShown(this.getElement(),!0);goog.style.setPageOffset(this.getElement(),a,b);c||goog.style.setElementShown(this.getElement(),!1)};goog.ui.Menu.prototype.getPosition=function(){return this.isVisible()?goog.style.getPageOffset(this.getElement()):null};goog.ui.Menu.prototype.setAllowAutoFocus=function(a){(this.allowAutoFocus_=a)&&this.setFocusable(!0)};goog.ui.Menu.prototype.getAllowAutoFocus=function(){return this.allowAutoFocus_};
goog.ui.Menu.prototype.setAllowHighlightDisabled=function(a){this.allowHighlightDisabled_=a};goog.ui.Menu.prototype.getAllowHighlightDisabled=function(){return this.allowHighlightDisabled_};goog.ui.Menu.prototype.setVisible=function(a,b,c){(b=goog.ui.Menu.superClass_.setVisible.call(this,a,b))&&a&&this.isInDocument()&&this.allowAutoFocus_&&this.getKeyEventTarget().focus();a&&c&&goog.isNumber(c.clientX)?this.openingCoords=new goog.math.Coordinate(c.clientX,c.clientY):this.openingCoords=null;return b};
goog.ui.Menu.prototype.handleEnterItem=function(a){this.allowAutoFocus_&&this.getKeyEventTarget().focus();return goog.ui.Menu.superClass_.handleEnterItem.call(this,a)};goog.ui.Menu.prototype.highlightNextPrefix=function(a){var b=new RegExp("^"+goog.string.regExpEscape(a),"i");return this.highlightHelper(function(a,d){var c=0>a?0:a,f=!1;do{++a;a==d&&(a=0,f=!0);var g=this.getChildAt(a).getCaption();if(g&&g.match(b))return a}while(!f||a!=c);return this.getHighlightedIndex()},this.getHighlightedIndex())};
goog.ui.Menu.prototype.canHighlightItem=function(a){return(this.allowHighlightDisabled_||a.isEnabled())&&a.isVisible()&&a.isSupportedState(goog.ui.Component.State.HOVER)};goog.ui.Menu.prototype.decorateInternal=function(a){this.decorateContent(a);goog.ui.Menu.superClass_.decorateInternal.call(this,a)};
goog.ui.Menu.prototype.handleKeyEventInternal=function(a){var b=goog.ui.Menu.superClass_.handleKeyEventInternal.call(this,a);b||this.forEachChild(function(c){!b&&c.getMnemonic&&c.getMnemonic()==a.keyCode&&(this.isEnabled()&&this.setHighlighted(c),b=c.handleKeyEvent(a))},this);return b};goog.ui.Menu.prototype.setHighlightedIndex=function(a){goog.ui.Menu.superClass_.setHighlightedIndex.call(this,a);(a=this.getChildAt(a))&&goog.style.scrollIntoContainerView(a.getElement(),this.getElement())};
goog.ui.Menu.prototype.decorateContent=function(a){var b=this.getRenderer();a=this.getDomHelper().getElementsByTagNameAndClass("DIV",b.getCssClass()+"-content",a);for(var c=a.length,d=0;d<c;d++)b.decorateChildren(this,a[d])};Blockly.ContextMenu={};Blockly.ContextMenu.currentBlock=null;Blockly.ContextMenu.eventWrapper_=null;Blockly.ContextMenu.show=function(a,b,c){Blockly.WidgetDiv.show(Blockly.ContextMenu,c,null);if(b.length){var d=Blockly.ContextMenu.populate_(b,c);goog.events.listen(d,goog.ui.Component.EventType.ACTION,Blockly.ContextMenu.hide);Blockly.ContextMenu.position_(d,a,c);setTimeout(function(){d.getElement().focus()},1);Blockly.ContextMenu.currentBlock=null}else Blockly.ContextMenu.hide()};
Blockly.ContextMenu.populate_=function(a,b){var c=new goog.ui.Menu;c.setRightToLeft(b);for(var d=0,e;e=a[d];d++){var f=new goog.ui.MenuItem(e.text);f.setRightToLeft(b);c.addChild(f,!0);f.setEnabled(e.enabled);e.enabled&&(goog.events.listen(f,goog.ui.Component.EventType.ACTION,e.callback),f.handleContextMenu=function(){goog.events.dispatchEvent(this,goog.ui.Component.EventType.ACTION)})}return c};
Blockly.ContextMenu.position_=function(a,b,c){var d=Blockly.utils.getViewportBBox();b={top:b.clientY+d.top,bottom:b.clientY+d.top,left:b.clientX+d.left,right:b.clientX+d.left};Blockly.ContextMenu.createWidget_(a);var e=Blockly.utils.uiMenu.getSize(a);c&&Blockly.utils.uiMenu.adjustBBoxesForRTL(d,b,e);Blockly.WidgetDiv.positionWithAnchor(d,b,e,c);a.getElement().focus()};
Blockly.ContextMenu.createWidget_=function(a){a.render(Blockly.WidgetDiv.DIV);var b=a.getElement();Blockly.utils.addClass(b,"blocklyContextMenu");Blockly.bindEventWithChecks_(b,"contextmenu",null,Blockly.utils.noEvent);a.setAllowAutoFocus(!0)};Blockly.ContextMenu.hide=function(){Blockly.WidgetDiv.hideIfOwner(Blockly.ContextMenu);Blockly.ContextMenu.currentBlock=null;Blockly.ContextMenu.eventWrapper_&&Blockly.unbindEvent_(Blockly.ContextMenu.eventWrapper_)};
Blockly.ContextMenu.callbackFactory=function(a,b){return function(){Blockly.Events.disable();try{var c=Blockly.Xml.domToBlock(b,a.workspace),d=a.getRelativeToSurfaceXY();d.x=a.RTL?d.x-Blockly.SNAP_RADIUS:d.x+Blockly.SNAP_RADIUS;d.y+=2*Blockly.SNAP_RADIUS;c.moveBy(d.x,d.y)}finally{Blockly.Events.enable()}Blockly.Events.isEnabled()&&!c.isShadow()&&Blockly.Events.fire(new Blockly.Events.BlockCreate(c));c.select()}};
Blockly.ContextMenu.blockDeleteOption=function(a){var b=a.getDescendants(!1,!0).length,c=a.getNextBlock();c&&(b-=c.getDescendants(!1,!0).length);return{text:1==b?Blockly.Msg.DELETE_BLOCK:Blockly.Msg.DELETE_X_BLOCKS.replace("%1",String(b)),enabled:!0,callback:function(){Blockly.Events.setGroup(!0);a.dispose(!0,!0);Blockly.Events.setGroup(!1)}}};Blockly.ContextMenu.blockHelpOption=function(a){return{enabled:!(goog.isFunction(a.helpUrl)?!a.helpUrl():!a.helpUrl),text:Blockly.Msg.HELP,callback:function(){a.showHelp_()}}};
Blockly.ContextMenu.blockDuplicateOption=function(a){return{text:Blockly.Msg.DUPLICATE,enabled:!0,callback:a.duplicateAndDragCallback_()}};Blockly.ContextMenu.blockCommentOption=function(a){var b={enabled:!goog.userAgent.IE};a.comment?(b.text=Blockly.Msg.REMOVE_COMMENT,b.callback=function(){a.setCommentText(null)}):(b.text=Blockly.Msg.ADD_COMMENT,b.callback=function(){a.setCommentText("")});return b};
Blockly.ContextMenu.wsUndoOption=function(a){return{text:Blockly.Msg.UNDO,enabled:a.hasUndoStack(),callback:a.undo.bind(a,!1)}};Blockly.ContextMenu.wsRedoOption=function(a){return{text:Blockly.Msg.REDO,enabled:a.hasRedoStack(),callback:a.undo.bind(a,!0)}};Blockly.ContextMenu.wsCleanupOption=function(a,b){return{text:Blockly.Msg.CLEAN_UP,enabled:1<b,callback:a.cleanUp.bind(a,!0)}};
Blockly.ContextMenu.toggleCollapseFn_=function(a,b){for(var c=0,d=0;d<a.length;d++)for(var e=a[d];e;)setTimeout(e.setCollapsed.bind(e,b),c),e=e.getNextBlock(),c+=10};Blockly.ContextMenu.wsCollapseOption=function(a,b){return{enabled:a,text:Blockly.Msg.COLLAPSE_ALL,callback:function(){Blockly.ContextMenu.toggleCollapseFn_(b,!0)}}};Blockly.ContextMenu.wsExpandOption=function(a,b){return{enabled:a,text:Blockly.Msg.EXPAND_ALL,callback:function(){Blockly.ContextMenu.toggleCollapseFn_(b,!1)}}};
Blockly.ContextMenu.commentDeleteOption=function(a){return{text:Blockly.Msg.DELETE,enabled:!0,callback:function(){Blockly.Events.setGroup(!0);a.dispose(!0,!0);Blockly.Events.setGroup(!1)}}};Blockly.ContextMenu.commentDuplicateOption=function(a){return{text:Blockly.Msg.DUPLICATE,enabled:!0,callback:function(){Blockly.duplicate_(a)}}};
Blockly.ContextMenu.workspaceCommentOption=function(a,b){var c={enabled:!0};c.text=Blockly.Msg.ADD_COMMENT;c.callback=function(){var c=!1;Blockly.Events.isEnabled()&&(Blockly.Events.disable(),c=!0);var e=new Blockly.WorkspaceCommentSvg(a,Blockly.Msg.WORKSPACE_COMMENT_DEFAULT_TEXT,Blockly.WorkspaceCommentSvg.DEFAULT_SIZE,Blockly.WorkspaceCommentSvg.DEFAULT_SIZE,!1),f=a.getInjectionDiv().getBoundingClientRect();f=new goog.math.Coordinate(b.clientX-f.left,b.clientY-f.top);var g=a.getOriginOffsetInPixels();
f=goog.math.Coordinate.difference(f,g).scale(1/a.scale);e.moveBy(f.x,f.y);a.rendered&&(e.initSvg(),e.render(!1),e.select());c&&Blockly.Events.enable();Blockly.WorkspaceComment.fireCreateEvent(e)};return c};goog.Thenable=function(){};goog.Thenable.prototype.then=function(a,b,c){};goog.Thenable.IMPLEMENTED_BY_PROP="$goog_Thenable";goog.Thenable.addImplementation=function(a){a.prototype.then=a.prototype.then;COMPILED?a.prototype[goog.Thenable.IMPLEMENTED_BY_PROP]=!0:a.prototype.$goog_Thenable=!0};goog.Thenable.isImplementedBy=function(a){if(!a)return!1;try{return COMPILED?!!a[goog.Thenable.IMPLEMENTED_BY_PROP]:!!a.$goog_Thenable}catch(b){return!1}};goog.async={};goog.async.FreeList=function(a,b,c){this.limit_=c;this.create_=a;this.reset_=b;this.occupants_=0;this.head_=null};goog.async.FreeList.prototype.get=function(){if(0<this.occupants_){this.occupants_--;var a=this.head_;this.head_=a.next;a.next=null}else a=this.create_();return a};goog.async.FreeList.prototype.put=function(a){this.reset_(a);this.occupants_<this.limit_&&(this.occupants_++,a.next=this.head_,this.head_=a)};goog.async.FreeList.prototype.occupants=function(){return this.occupants_};goog.async.WorkQueue=function(){this.workTail_=this.workHead_=null};goog.async.WorkQueue.DEFAULT_MAX_UNUSED=100;goog.async.WorkQueue.freelist_=new goog.async.FreeList(function(){return new goog.async.WorkItem},function(a){a.reset()},goog.async.WorkQueue.DEFAULT_MAX_UNUSED);goog.async.WorkQueue.prototype.add=function(a,b){var c=this.getUnusedItem_();c.set(a,b);this.workTail_?this.workTail_.next=c:(goog.asserts.assert(!this.workHead_),this.workHead_=c);this.workTail_=c};
goog.async.WorkQueue.prototype.remove=function(){var a=null;this.workHead_&&(a=this.workHead_,this.workHead_=this.workHead_.next,this.workHead_||(this.workTail_=null),a.next=null);return a};goog.async.WorkQueue.prototype.returnUnused=function(a){goog.async.WorkQueue.freelist_.put(a)};goog.async.WorkQueue.prototype.getUnusedItem_=function(){return goog.async.WorkQueue.freelist_.get()};goog.async.WorkItem=function(){this.next=this.scope=this.fn=null};
goog.async.WorkItem.prototype.set=function(a,b){this.fn=a;this.scope=b;this.next=null};goog.async.WorkItem.prototype.reset=function(){this.next=this.scope=this.fn=null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=goog.functions.constant(!1);goog.functions.TRUE=goog.functions.constant(!0);goog.functions.NULL=goog.functions.constant(null);goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};
goog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=Array.prototype.slice.call(arguments);b.push.apply(b,c);return a.apply(this,b)}};goog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};
goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){var c=arguments,d=c.length;return function(){var a;d&&(a=c[d-1].apply(this,arguments));for(var b=d-2;0<=b;b--)a=c[b].call(this,a);return a}};goog.functions.sequence=function(a){var b=arguments,c=b.length;return function(){for(var a,e=0;e<c;e++)a=b[e].apply(this,arguments);return a}};
goog.functions.and=function(a){var b=arguments,c=b.length;return function(){for(var a=0;a<c;a++)if(!b[a].apply(this,arguments))return!1;return!0}};goog.functions.or=function(a){var b=arguments,c=b.length;return function(){for(var a=0;a<c;a++)if(b[a].apply(this,arguments))return!0;return!1}};goog.functions.not=function(a){return function(){return!a.apply(this,arguments)}};
goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){var b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){var b=a;return function(){if(b){var a=b;b=null;a()}}};
goog.functions.debounce=function(a,b,c){var d=0;return function(e){goog.global.clearTimeout(d);var f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f)},b)}};goog.functions.throttle=function(a,b,c){var d=0,e=!1,f=[],g=function(){d=0;e&&(e=!1,h())},h=function(){d=goog.global.setTimeout(g,b);a.apply(c,f)};return function(a){f=arguments;d?e=!0:h()}};goog.functions.rateLimit=function(a,b,c){var d=0,e=function(){d=0};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments))}};goog.async.throwException=function(a){goog.global.setTimeout(function(){throw a;},0)};goog.async.nextTick=function(a,b,c){var d=a;b&&(d=goog.bind(a,b));d=goog.async.nextTick.wrapCallback_(d);goog.isFunction(goog.global.setImmediate)&&(c||goog.async.nextTick.useSetImmediate_())?goog.global.setImmediate(d):(goog.async.nextTick.setImmediate_||(goog.async.nextTick.setImmediate_=goog.async.nextTick.getSetImmediateEmulator_()),goog.async.nextTick.setImmediate_(d))};
goog.async.nextTick.useSetImmediate_=function(){return goog.global.Window&&goog.global.Window.prototype&&!goog.labs.userAgent.browser.isEdge()&&goog.global.Window.prototype.setImmediate==goog.global.setImmediate?!1:!0};
goog.async.nextTick.getSetImmediateEmulator_=function(){var a=goog.global.MessageChannel;"undefined"===typeof a&&"undefined"!==typeof window&&window.postMessage&&window.addEventListener&&!goog.labs.userAgent.engine.isPresto()&&(a=function(){var a=document.createElement("IFRAME");a.style.display="none";a.src="";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write("");a.close();var c="callImmediate"+Math.random(),d="file:"==b.location.protocol?"*":b.location.protocol+
"//"+b.location.host;a=goog.bind(function(a){if(("*"==d||a.origin==d)&&a.data==c)this.port1.onmessage()},this);b.addEventListener("message",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if("undefined"!==typeof a&&!goog.labs.userAgent.browser.isIE()){var b=new a,c={},d=c;b.port1.onmessage=function(){if(goog.isDef(c.next)){c=c.next;var a=c.cb;c.cb=null;a()}};return function(a){d.next={cb:a};d=d.next;b.port2.postMessage(0)}}return"undefined"!==typeof document&&"onreadystatechange"in
document.createElement("SCRIPT")?function(a){var b=document.createElement("SCRIPT");b.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){goog.global.setTimeout(a,0)}};goog.async.nextTick.wrapCallback_=goog.functions.identity;goog.debug.entryPointRegistry.register(function(a){goog.async.nextTick.wrapCallback_=a});goog.async.run=function(a,b){goog.async.run.schedule_||goog.async.run.initializeRunner_();goog.async.run.workQueueScheduled_||(goog.async.run.schedule_(),goog.async.run.workQueueScheduled_=!0);goog.async.run.workQueue_.add(a,b)};goog.async.run.initializeRunner_=function(){if(-1!=String(goog.global.Promise).indexOf("[native code]")){var a=goog.global.Promise.resolve(void 0);goog.async.run.schedule_=function(){a.then(goog.async.run.processWorkQueue)}}else goog.async.run.schedule_=function(){goog.async.nextTick(goog.async.run.processWorkQueue)}};
goog.async.run.forceNextTick=function(a){goog.async.run.schedule_=function(){goog.async.nextTick(goog.async.run.processWorkQueue);a&&a(goog.async.run.processWorkQueue)}};goog.async.run.workQueueScheduled_=!1;goog.async.run.workQueue_=new goog.async.WorkQueue;goog.DEBUG&&(goog.async.run.resetQueue=function(){goog.async.run.workQueueScheduled_=!1;goog.async.run.workQueue_=new goog.async.WorkQueue});
goog.async.run.processWorkQueue=function(){for(var a;a=goog.async.run.workQueue_.remove();){try{a.fn.call(a.scope)}catch(b){goog.async.throwException(b)}goog.async.run.workQueue_.returnUnused(a)}goog.async.run.workQueueScheduled_=!1};goog.promise={};goog.promise.Resolver=function(){};goog.Promise=function(a,b){this.state_=goog.Promise.State_.PENDING;this.result_=void 0;this.callbackEntriesTail_=this.callbackEntries_=this.parent_=null;this.executing_=!1;0<goog.Promise.UNHANDLED_REJECTION_DELAY?this.unhandledRejectionId_=0:0==goog.Promise.UNHANDLED_REJECTION_DELAY&&(this.hadUnhandledRejection_=!1);goog.Promise.LONG_STACK_TRACES&&(this.stack_=[],this.addStackTrace_(Error("created")),this.currentStep_=0);if(a!=goog.nullFunction)try{var c=this;a.call(b,function(a){c.resolve_(goog.Promise.State_.FULFILLED,
a)},function(a){if(goog.DEBUG&&!(a instanceof goog.Promise.CancellationError))try{if(a instanceof Error)throw a;throw Error("Promise rejected.");}catch(e){}c.resolve_(goog.Promise.State_.REJECTED,a)})}catch(d){this.resolve_(goog.Promise.State_.REJECTED,d)}};goog.Promise.LONG_STACK_TRACES=!1;goog.Promise.UNHANDLED_REJECTION_DELAY=0;goog.Promise.State_={PENDING:0,BLOCKED:1,FULFILLED:2,REJECTED:3};
goog.Promise.CallbackEntry_=function(){this.next=this.context=this.onRejected=this.onFulfilled=this.child=null;this.always=!1};goog.Promise.CallbackEntry_.prototype.reset=function(){this.context=this.onRejected=this.onFulfilled=this.child=null;this.always=!1};goog.Promise.DEFAULT_MAX_UNUSED=100;goog.Promise.freelist_=new goog.async.FreeList(function(){return new goog.Promise.CallbackEntry_},function(a){a.reset()},goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_=function(a,b,c){var d=goog.Promise.freelist_.get();d.onFulfilled=a;d.onRejected=b;d.context=c;return d};goog.Promise.returnEntry_=function(a){goog.Promise.freelist_.put(a)};goog.Promise.resolve=function(a){if(a instanceof goog.Promise)return a;var b=new goog.Promise(goog.nullFunction);b.resolve_(goog.Promise.State_.FULFILLED,a);return b};goog.Promise.reject=function(a){return new goog.Promise(function(b,c){c(a)})};
goog.Promise.resolveThen_=function(a,b,c){goog.Promise.maybeThen_(a,b,c,null)||goog.async.run(goog.partial(b,a))};goog.Promise.race=function(a){return new goog.Promise(function(b,c){a.length||b(void 0);for(var d=0,e;d<a.length;d++)e=a[d],goog.Promise.resolveThen_(e,b,c)})};
goog.Promise.all=function(a){return new goog.Promise(function(b,c){var d=a.length,e=[];if(d)for(var f=function(a,c){d--;e[a]=c;0==d&&b(e)},g=function(a){c(a)},h=0,k;h<a.length;h++)k=a[h],goog.Promise.resolveThen_(k,goog.partial(f,h),g);else b(e)})};
goog.Promise.allSettled=function(a){return new goog.Promise(function(b,c){var d=a.length,e=[];if(d){c=function(a,c,f){d--;e[a]=c?{fulfilled:!0,value:f}:{fulfilled:!1,reason:f};0==d&&b(e)};for(var f=0,g;f<a.length;f++)g=a[f],goog.Promise.resolveThen_(g,goog.partial(c,f,!0),goog.partial(c,f,!1))}else b(e)})};
goog.Promise.firstFulfilled=function(a){return new goog.Promise(function(b,c){var d=a.length,e=[];if(d)for(var f=function(a){b(a)},g=function(a,b){d--;e[a]=b;0==d&&c(e)},h=0,k;h<a.length;h++)k=a[h],goog.Promise.resolveThen_(k,f,goog.partial(g,h));else b(void 0)})};goog.Promise.withResolver=function(){var a,b,c=new goog.Promise(function(c,e){a=c;b=e});return new goog.Promise.Resolver_(c,a,b)};
goog.Promise.prototype.then=function(a,b,c){null!=a&&goog.asserts.assertFunction(a,"opt_onFulfilled should be a function.");null!=b&&goog.asserts.assertFunction(b,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");goog.Promise.LONG_STACK_TRACES&&this.addStackTrace_(Error("then"));return this.addChildPromise_(goog.isFunction(a)?a:null,goog.isFunction(b)?b:null,c)};goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid=function(a,b,c){null!=a&&goog.asserts.assertFunction(a,"opt_onFulfilled should be a function.");null!=b&&goog.asserts.assertFunction(b,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");goog.Promise.LONG_STACK_TRACES&&this.addStackTrace_(Error("then"));this.addCallbackEntry_(goog.Promise.getCallbackEntry_(a||goog.nullFunction,b||null,c))};
goog.Promise.prototype.thenAlways=function(a,b){goog.Promise.LONG_STACK_TRACES&&this.addStackTrace_(Error("thenAlways"));a=goog.Promise.getCallbackEntry_(a,a,b);a.always=!0;this.addCallbackEntry_(a);return this};goog.Promise.prototype.thenCatch=function(a,b){goog.Promise.LONG_STACK_TRACES&&this.addStackTrace_(Error("thenCatch"));return this.addChildPromise_(null,a,b)};
goog.Promise.prototype.cancel=function(a){this.state_==goog.Promise.State_.PENDING&&goog.async.run(function(){var b=new goog.Promise.CancellationError(a);this.cancelInternal_(b)},this)};goog.Promise.prototype.cancelInternal_=function(a){this.state_==goog.Promise.State_.PENDING&&(this.parent_?(this.parent_.cancelChild_(this,a),this.parent_=null):this.resolve_(goog.Promise.State_.REJECTED,a))};
goog.Promise.prototype.cancelChild_=function(a,b){if(this.callbackEntries_){for(var c=0,d=null,e=null,f=this.callbackEntries_;f&&(f.always||(c++,f.child==a&&(d=f),!(d&&1<c)));f=f.next)d||(e=f);d&&(this.state_==goog.Promise.State_.PENDING&&1==c?this.cancelInternal_(b):(e?this.removeEntryAfter_(e):this.popEntry_(),this.executeCallback_(d,goog.Promise.State_.REJECTED,b)))}};
goog.Promise.prototype.addCallbackEntry_=function(a){this.hasEntry_()||this.state_!=goog.Promise.State_.FULFILLED&&this.state_!=goog.Promise.State_.REJECTED||this.scheduleCallbacks_();this.queueEntry_(a)};
goog.Promise.prototype.addChildPromise_=function(a,b,c){var d=goog.Promise.getCallbackEntry_(null,null,null);d.child=new goog.Promise(function(e,f){d.onFulfilled=a?function(b){try{var d=a.call(c,b);e(d)}catch(k){f(k)}}:e;d.onRejected=b?function(a){try{var d=b.call(c,a);!goog.isDef(d)&&a instanceof goog.Promise.CancellationError?f(a):e(d)}catch(k){f(k)}}:f});d.child.parent_=this;this.addCallbackEntry_(d);return d.child};
goog.Promise.prototype.unblockAndFulfill_=function(a){goog.asserts.assert(this.state_==goog.Promise.State_.BLOCKED);this.state_=goog.Promise.State_.PENDING;this.resolve_(goog.Promise.State_.FULFILLED,a)};goog.Promise.prototype.unblockAndReject_=function(a){goog.asserts.assert(this.state_==goog.Promise.State_.BLOCKED);this.state_=goog.Promise.State_.PENDING;this.resolve_(goog.Promise.State_.REJECTED,a)};
goog.Promise.prototype.resolve_=function(a,b){this.state_==goog.Promise.State_.PENDING&&(this===b&&(a=goog.Promise.State_.REJECTED,b=new TypeError("Promise cannot resolve to itself")),this.state_=goog.Promise.State_.BLOCKED,goog.Promise.maybeThen_(b,this.unblockAndFulfill_,this.unblockAndReject_,this)||(this.result_=b,this.state_=a,this.parent_=null,this.scheduleCallbacks_(),a!=goog.Promise.State_.REJECTED||b instanceof goog.Promise.CancellationError||goog.Promise.addUnhandledRejection_(this,b)))};
goog.Promise.maybeThen_=function(a,b,c,d){if(a instanceof goog.Promise)return a.thenVoid(b,c,d),!0;if(goog.Thenable.isImplementedBy(a))return a.then(b,c,d),!0;if(goog.isObject(a))try{var e=a.then;if(goog.isFunction(e))return goog.Promise.tryThen_(a,e,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1};goog.Promise.tryThen_=function(a,b,c,d,e){var f=!1,g=function(a){f||(f=!0,c.call(e,a))},h=function(a){f||(f=!0,d.call(e,a))};try{b.call(a,g,h)}catch(k){h(k)}};
goog.Promise.prototype.scheduleCallbacks_=function(){this.executing_||(this.executing_=!0,goog.async.run(this.executeCallbacks_,this))};goog.Promise.prototype.hasEntry_=function(){return!!this.callbackEntries_};goog.Promise.prototype.queueEntry_=function(a){goog.asserts.assert(null!=a.onFulfilled);this.callbackEntriesTail_?this.callbackEntriesTail_.next=a:this.callbackEntries_=a;this.callbackEntriesTail_=a};
goog.Promise.prototype.popEntry_=function(){var a=null;this.callbackEntries_&&(a=this.callbackEntries_,this.callbackEntries_=a.next,a.next=null);this.callbackEntries_||(this.callbackEntriesTail_=null);null!=a&&goog.asserts.assert(null!=a.onFulfilled);return a};goog.Promise.prototype.removeEntryAfter_=function(a){goog.asserts.assert(this.callbackEntries_);goog.asserts.assert(null!=a);a.next==this.callbackEntriesTail_&&(this.callbackEntriesTail_=a);a.next=a.next.next};
goog.Promise.prototype.executeCallbacks_=function(){for(var a;a=this.popEntry_();)goog.Promise.LONG_STACK_TRACES&&this.currentStep_++,this.executeCallback_(a,this.state_,this.result_);this.executing_=!1};
goog.Promise.prototype.executeCallback_=function(a,b,c){b==goog.Promise.State_.REJECTED&&a.onRejected&&!a.always&&this.removeUnhandledRejection_();if(a.child)a.child.parent_=null,goog.Promise.invokeCallback_(a,b,c);else try{a.always?a.onFulfilled.call(a.context):goog.Promise.invokeCallback_(a,b,c)}catch(d){goog.Promise.handleRejection_.call(null,d)}goog.Promise.returnEntry_(a)};
goog.Promise.invokeCallback_=function(a,b,c){b==goog.Promise.State_.FULFILLED?a.onFulfilled.call(a.context,c):a.onRejected&&a.onRejected.call(a.context,c)};goog.Promise.prototype.addStackTrace_=function(a){if(goog.Promise.LONG_STACK_TRACES&&goog.isString(a.stack)){var b=a.stack.split("\n",4)[3];a=a.message;a+=Array(11-a.length).join(" ");this.stack_.push(a+b)}};
goog.Promise.prototype.appendLongStack_=function(a){if(goog.Promise.LONG_STACK_TRACES&&a&&goog.isString(a.stack)&&this.stack_.length){for(var b=["Promise trace:"],c=this;c;c=c.parent_){for(var d=this.currentStep_;0<=d;d--)b.push(c.stack_[d]);b.push("Value: ["+(c.state_==goog.Promise.State_.REJECTED?"REJECTED":"FULFILLED")+"] <"+String(c.result_)+">")}a.stack+="\n\n"+b.join("\n")}};
goog.Promise.prototype.removeUnhandledRejection_=function(){if(0<goog.Promise.UNHANDLED_REJECTION_DELAY)for(var a=this;a&&a.unhandledRejectionId_;a=a.parent_)goog.global.clearTimeout(a.unhandledRejectionId_),a.unhandledRejectionId_=0;else if(0==goog.Promise.UNHANDLED_REJECTION_DELAY)for(a=this;a&&a.hadUnhandledRejection_;a=a.parent_)a.hadUnhandledRejection_=!1};
goog.Promise.addUnhandledRejection_=function(a,b){0<goog.Promise.UNHANDLED_REJECTION_DELAY?a.unhandledRejectionId_=goog.global.setTimeout(function(){a.appendLongStack_(b);goog.Promise.handleRejection_.call(null,b)},goog.Promise.UNHANDLED_REJECTION_DELAY):0==goog.Promise.UNHANDLED_REJECTION_DELAY&&(a.hadUnhandledRejection_=!0,goog.async.run(function(){a.hadUnhandledRejection_&&(a.appendLongStack_(b),goog.Promise.handleRejection_.call(null,b))}))};goog.Promise.handleRejection_=goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler=function(a){goog.Promise.handleRejection_=a};goog.Promise.CancellationError=function(a){goog.debug.Error.call(this,a)};goog.inherits(goog.Promise.CancellationError,goog.debug.Error);goog.Promise.CancellationError.prototype.name="cancel";goog.Promise.Resolver_=function(a,b,c){this.promise=a;this.resolve=b;this.reject=c};goog.Timer=function(a,b){goog.events.EventTarget.call(this);this.interval_=a||1;this.timerObject_=b||goog.Timer.defaultTimerObject;this.boundTick_=goog.bind(this.tick_,this);this.last_=goog.now()};goog.inherits(goog.Timer,goog.events.EventTarget);goog.Timer.MAX_TIMEOUT_=2147483647;goog.Timer.INVALID_TIMEOUT_ID_=-1;goog.Timer.prototype.enabled=!1;goog.Timer.defaultTimerObject=goog.global;goog.Timer.intervalScale=.8;goog.Timer.prototype.timer_=null;goog.Timer.prototype.getInterval=function(){return this.interval_};
goog.Timer.prototype.setInterval=function(a){this.interval_=a;this.timer_&&this.enabled?(this.stop(),this.start()):this.timer_&&this.stop()};
goog.Timer.prototype.tick_=function(){if(this.enabled){var a=goog.now()-this.last_;0<a&&a<this.interval_*goog.Timer.intervalScale?this.timer_=this.timerObject_.setTimeout(this.boundTick_,this.interval_-a):(this.timer_&&(this.timerObject_.clearTimeout(this.timer_),this.timer_=null),this.dispatchTick(),this.enabled&&(this.timer_=this.timerObject_.setTimeout(this.boundTick_,this.interval_),this.last_=goog.now()))}};goog.Timer.prototype.dispatchTick=function(){this.dispatchEvent(goog.Timer.TICK)};
goog.Timer.prototype.start=function(){this.enabled=!0;this.timer_||(this.timer_=this.timerObject_.setTimeout(this.boundTick_,this.interval_),this.last_=goog.now())};goog.Timer.prototype.stop=function(){this.enabled=!1;this.timer_&&(this.timerObject_.clearTimeout(this.timer_),this.timer_=null)};goog.Timer.prototype.disposeInternal=function(){goog.Timer.superClass_.disposeInternal.call(this);this.stop();delete this.timerObject_};goog.Timer.TICK="tick";
goog.Timer.callOnce=function(a,b,c){if(goog.isFunction(a))c&&(a=goog.bind(a,c));else if(a&&"function"==typeof a.handleEvent)a=goog.bind(a.handleEvent,a);else throw Error("Invalid listener argument");return Number(b)>goog.Timer.MAX_TIMEOUT_?goog.Timer.INVALID_TIMEOUT_ID_:goog.Timer.defaultTimerObject.setTimeout(a,b||0)};goog.Timer.clear=function(a){goog.Timer.defaultTimerObject.clearTimeout(a)};
goog.Timer.promise=function(a,b){var c=null;return(new goog.Promise(function(d,e){c=goog.Timer.callOnce(function(){d(b)},a);c==goog.Timer.INVALID_TIMEOUT_ID_&&e(Error("Failed to schedule timer."))})).thenCatch(function(a){goog.Timer.clear(c);throw a;})};Blockly.BlockSvg=function(a,b,c){this.svgGroup_=Blockly.utils.createSvgElement("g",{},null);this.svgPath_=Blockly.utils.createSvgElement("path",{"class":"blocklyPath blocklyBlockBackground"},this.svgGroup_);this.svgPath_.tooltip=this;this.rendered=!1;this.useDragSurface_=Blockly.utils.is3dSupported()&&!!a.blockDragSurface_;Blockly.Tooltip.bindMouseEvents(this.svgPath_);Blockly.BlockSvg.superClass_.constructor.call(this,a,b,c)};goog.inherits(Blockly.BlockSvg,Blockly.Block);
Blockly.BlockSvg.prototype.height=0;Blockly.BlockSvg.prototype.width=0;Blockly.BlockSvg.prototype.insertionMarkerMinWidth_=0;Blockly.BlockSvg.prototype.opacity_=1;Blockly.BlockSvg.prototype.dragStartXY_=null;Blockly.BlockSvg.prototype.isGlowingBlock_=!1;Blockly.BlockSvg.prototype.isGlowingStack_=!1;Blockly.BlockSvg.INLINE=-1;
Blockly.BlockSvg.prototype.initSvg=function(){goog.asserts.assert(this.workspace.rendered,"Workspace is headless.");if(!this.isInsertionMarker()){for(var a=0,b;b=this.inputList[a];a++)b.init(),b.initOutlinePath(this.svgGroup_);b=this.getIcons();for(a=0;a<b.length;a++)b[a].createIcon()}this.updateColour();this.updateMovable();this.workspace.options.readOnly||this.eventsInit_||Blockly.bindEventWithChecks_(this.getSvgRoot(),"mousedown",this,this.onMouseDown_);this.eventsInit_=!0;this.getSvgRoot().parentNode||
this.workspace.getCanvas().appendChild(this.getSvgRoot())};Blockly.BlockSvg.prototype.select=function(){if(this.isShadow()&&this.getParent())this.getParent().select();else if(Blockly.selected!=this){var a=null;if(Blockly.selected){a=Blockly.selected.id;Blockly.Events.disable();try{Blockly.selected.unselect()}finally{Blockly.Events.enable()}}a=new Blockly.Events.Ui(null,"selected",a,this.id);a.workspaceId=this.workspace.id;Blockly.Events.fire(a);Blockly.selected=this;this.addSelect()}};
Blockly.BlockSvg.prototype.unselect=function(){if(Blockly.selected==this){var a=new Blockly.Events.Ui(null,"selected",this.id,null);a.workspaceId=this.workspace.id;Blockly.Events.fire(a);Blockly.selected=null;this.removeSelect()}};Blockly.BlockSvg.prototype.setGlowBlock=function(a){this.isGlowingBlock_=a;this.updateColour()};
Blockly.BlockSvg.prototype.setGlowStack=function(a){this.isGlowingStack_=a;a=this.getSvgRoot();this.isGlowingStack_&&!a.hasAttribute("filter")?a.setAttribute("filter","url(#"+(this.workspace.options.stackGlowFilterId||"blocklyStackGlowFilter")+")"):!this.isGlowingStack_&&a.hasAttribute("filter")&&a.removeAttribute("filter")};Blockly.BlockSvg.prototype.mutator=null;Blockly.BlockSvg.prototype.comment=null;Blockly.BlockSvg.prototype.warning=null;
Blockly.BlockSvg.prototype.getIcons=function(){var a=[];this.mutator&&a.push(this.mutator);this.comment&&a.push(this.comment);this.warning&&a.push(this.warning);return a};
Blockly.BlockSvg.prototype.setParent=function(a){var b=this.parentBlock_;if(a!=b){Blockly.Field.startCache();Blockly.BlockSvg.superClass_.setParent.call(this,a);Blockly.Field.stopCache();var c=this.getSvgRoot();if(!this.workspace.isClearing&&c){var d=this.getRelativeToSurfaceXY();a?(a.getSvgRoot().appendChild(c),b=this.getRelativeToSurfaceXY(),this.moveConnections_(b.x-d.x,b.y-d.y),this.isShadow()&&this.setColour(this.getColour(),this.getColourSecondary(),a.getColourTertiary())):b&&(this.workspace.getCanvas().appendChild(c),
this.translate(d.x,d.y))}}};Blockly.BlockSvg.prototype.getRelativeToSurfaceXY=function(){var a=0,b=0,c=this.useDragSurface_?this.workspace.blockDragSurface_.getGroup():null,d=this.getSvgRoot();if(d){do{var e=Blockly.utils.getRelativeXY(d);a+=e.x;b+=e.y;this.useDragSurface_&&this.workspace.blockDragSurface_.getCurrentBlock()==d&&(e=this.workspace.blockDragSurface_.getSurfaceTranslation(),a+=e.x,b+=e.y);d=d.parentNode}while(d&&d!=this.workspace.getCanvas()&&d!=c)}return new goog.math.Coordinate(a,b)};
Blockly.BlockSvg.prototype.moveBy=function(a,b){goog.asserts.assert(!this.parentBlock_,"Block has parent.");var c=Blockly.Events.isEnabled();if(c)var d=new Blockly.Events.BlockMove(this);var e=this.getRelativeToSurfaceXY();this.translate(e.x+a,e.y+b);this.moveConnections_(a,b);c&&(d.recordNew(),Blockly.Events.fire(d));this.workspace.resizeContents()};Blockly.BlockSvg.prototype.translate=function(a,b){this.getSvgRoot().setAttribute("transform","translate("+a+","+b+")")};
Blockly.BlockSvg.prototype.moveToDragSurface_=function(){if(this.useDragSurface_){var a=this.getRelativeToSurfaceXY();this.clearTransformAttributes_();this.workspace.blockDragSurface_.translateSurface(a.x,a.y);this.workspace.blockDragSurface_.setBlocksAndShow(this.getSvgRoot())}};Blockly.BlockSvg.prototype.moveOffDragSurface_=function(a){this.useDragSurface_&&(this.translate(a.x,a.y),this.workspace.blockDragSurface_.clearAndHide(this.workspace.getCanvas()))};
Blockly.BlockSvg.prototype.moveDuringDrag=function(a){this.useDragSurface_?this.workspace.blockDragSurface_.translateSurface(a.x,a.y):(this.svgGroup_.translate_="translate("+a.x+","+a.y+")",this.svgGroup_.setAttribute("transform",this.svgGroup_.translate_+this.svgGroup_.skew_))};Blockly.BlockSvg.prototype.clearTransformAttributes_=function(){Blockly.utils.removeAttribute(this.getSvgRoot(),"transform")};
Blockly.BlockSvg.prototype.snapToGrid=function(){if(this.workspace&&!this.workspace.isDragging()&&!this.getParent()&&!this.isInFlyout){var a=this.workspace.getGrid();if(a&&a.shouldSnap()){var b=a.getSpacing(),c=b/2,d=this.getRelativeToSurfaceXY();a=Math.round((d.x-c)/b)*b+c-d.x;b=Math.round((d.y-c)/b)*b+c-d.y;a=Math.round(a);b=Math.round(b);0==a&&0==b||this.moveBy(a,b)}}};
Blockly.BlockSvg.prototype.getBoundingRectangle=function(){var a=this.getRelativeToSurfaceXY(this),b=this.getHeightWidth();if(this.RTL){var c=new goog.math.Coordinate(a.x-b.width,a.y);a=new goog.math.Coordinate(a.x,a.y+b.height)}else c=new goog.math.Coordinate(a.x,a.y),a=new goog.math.Coordinate(a.x+b.width,a.y+b.height);return{topLeft:c,bottomRight:a}};Blockly.BlockSvg.prototype.setOpacity=function(a){this.opacity_=a;this.rendered&&this.updateColour()};Blockly.BlockSvg.prototype.getOpacity=function(){return this.opacity_};
Blockly.BlockSvg.prototype.setCollapsed=function(a){if(this.collapsed_!=a){for(var b=[],c=0,d;d=this.inputList[c];c++)b.push.apply(b,d.setVisible(!a));if(a){d=this.getIcons();for(c=0;c<d.length;c++)d[c].setVisible(!1);c=this.toString(Blockly.COLLAPSE_CHARS);this.appendDummyInput("_TEMP_COLLAPSED_INPUT").appendField(c).init()}else this.removeInput("_TEMP_COLLAPSED_INPUT"),this.setWarningText(null);Blockly.BlockSvg.superClass_.setCollapsed.call(this,a);b.length||(b[0]=this);if(this.rendered)for(c=0;a=
b[c];c++)a.render()}};Blockly.BlockSvg.prototype.tab=function(a,b){var c=this.createTabList_();a=c.indexOf(a);-1==a&&(a=b?-1:c.length);(c=c[b?a+1:a-1])?c instanceof Blockly.Field?c.showEditor_():c.tab(null,b):(c=this.outputConnection&&this.outputConnection.targetBlock())?c.tab(this,b):(c=b?this.getNextBlock():this.getPreviousBlock())&&c.tab(this,b)};
Blockly.BlockSvg.prototype.createTabList_=function(){for(var a=[],b=0,c;c=this.inputList[b];b++){for(var d=0,e;e=c.fieldRow[d];d++)e instanceof Blockly.FieldTextInput&&a.push(e);c.connection&&(c=c.connection.targetBlock())&&a.push(c)}return a};Blockly.BlockSvg.prototype.onMouseDown_=function(a){var b=this.workspace&&this.workspace.getGesture(a);b&&b.handleBlockStart(a,this)};Blockly.BlockSvg.prototype.showHelp_=function(){var a=goog.isFunction(this.helpUrl)?this.helpUrl():this.helpUrl;a&&alert(a)};
Blockly.BlockSvg.prototype.duplicateAndDragCallback_=function(){var a=this;return function(b){setTimeout(function(){var c=a.workspace;if(!a.getSvgRoot())throw Error("oldBlock is not rendered.");var d=Blockly.Xml.blockToDom(a);c.setResizesEnabled(!1);Blockly.Events.disable();try{var e=Blockly.Xml.domToBlock(d,c);Blockly.scratchBlocksUtils.changeObscuredShadowIds(e);if(!e.getSvgRoot())throw Error("newBlock is not rendered.");var f=a.getRelativeToSurfaceXY();e.moveBy(f.x,f.y)}finally{Blockly.Events.enable()}Blockly.Events.isEnabled()&&
Blockly.Events.fire(new Blockly.Events.BlockCreate(e));d=f.scale(c.scale);f=c.getOriginOffsetInPixels();d=goog.math.Coordinate.sum(f,d);f=c.getInjectionDiv().getBoundingClientRect();c.startDragWithFakeEvent({clientX:d.x+f.left,clientY:d.y+f.top,type:"mousedown",preventDefault:function(){b.preventDefault()},stopPropagation:function(){b.stopPropagation()},target:b.target},e)},0)}};
Blockly.BlockSvg.prototype.showContextMenu_=function(a){if(!this.workspace.options.readOnly&&this.contextMenu){var b=[];if(this.isDeletable()&&this.isMovable()&&!this.isInFlyout)b.push(Blockly.ContextMenu.blockDuplicateOption(this)),this.isEditable()&&this.workspace.options.comments&&b.push(Blockly.ContextMenu.blockCommentOption(this)),b.push(Blockly.ContextMenu.blockDeleteOption(this));else if(this.parentBlock_&&this.isShadow_){this.parentBlock_.showContextMenu_(a);return}this.customContextMenu&&
this.customContextMenu(b);Blockly.ContextMenu.show(a,b,this.RTL);Blockly.ContextMenu.currentBlock=this}};Blockly.BlockSvg.prototype.moveConnections_=function(a,b){if(this.rendered){for(var c=this.getConnections_(!1),d=0;d<c.length;d++)c[d].moveBy(a,b);c=this.getIcons();for(d=0;d<c.length;d++)c[d].computeIconLocation();for(d=0;d<this.childBlocks_.length;d++)this.childBlocks_[d].moveConnections_(a,b)}};
Blockly.BlockSvg.prototype.setDragging=function(a){if(a){var b=this.getSvgRoot();b.translate_="";b.skew_="";Blockly.draggingConnections_=Blockly.draggingConnections_.concat(this.getConnections_(!0));Blockly.utils.addClass(this.svgGroup_,"blocklyDragging")}else Blockly.draggingConnections_=[],Blockly.utils.removeClass(this.svgGroup_,"blocklyDragging");for(b=0;b<this.childBlocks_.length;b++)this.childBlocks_[b].setDragging(a)};
Blockly.BlockSvg.prototype.updateMovable=function(){this.isMovable()?Blockly.utils.addClass(this.svgGroup_,"blocklyDraggable"):Blockly.utils.removeClass(this.svgGroup_,"blocklyDraggable")};Blockly.BlockSvg.prototype.setMovable=function(a){Blockly.BlockSvg.superClass_.setMovable.call(this,a);this.updateMovable()};Blockly.BlockSvg.prototype.setEditable=function(a){Blockly.BlockSvg.superClass_.setEditable.call(this,a);a=this.getIcons();for(var b=0;b<a.length;b++)a[b].updateEditable()};
Blockly.BlockSvg.prototype.setShadow=function(a){Blockly.BlockSvg.superClass_.setShadow.call(this,a);this.updateColour()};Blockly.BlockSvg.prototype.setInsertionMarker=function(a,b){Blockly.BlockSvg.superClass_.setInsertionMarker.call(this,a);this.insertionMarkerMinWidth_=b;this.updateColour()};Blockly.BlockSvg.prototype.getSvgRoot=function(){return this.svgGroup_};
Blockly.BlockSvg.prototype.dispose=function(a,b){if(this.workspace){Blockly.Tooltip.hide();Blockly.Field.startCache();var c=this.workspace;Blockly.selected==this&&(this.unselect(),this.workspace.cancelCurrentGesture());Blockly.ContextMenu.currentBlock==this&&Blockly.ContextMenu.hide();b&&this.rendered&&(this.unplug(a),Blockly.BlockAnimations.disposeUiEffect(this));this.rendered=!1;Blockly.Events.disable();try{var d=this.getIcons();for(b=0;b<d.length;b++)d[b].dispose()}finally{Blockly.Events.enable()}Blockly.BlockSvg.superClass_.dispose.call(this,
a);goog.dom.removeNode(this.svgGroup_);c.resizeContents();this.svgPath_=this.svgGroup_=null;Blockly.Field.stopCache()}};Blockly.BlockSvg.prototype.updateDisabled=function(){};Blockly.BlockSvg.prototype.getCommentText=function(){return this.comment?this.comment.getText().replace(/\s+$/,"").replace(/ +\n/g,"\n"):""};
Blockly.BlockSvg.prototype.setCommentText=function(a,b,c,d,e){var f=!1;goog.isString(a)?this.comment?this.comment.setText(a):(this.comment=new Blockly.ScratchBlockComment(this,a,b,c,d,e),f=!0):this.comment&&(this.comment.dispose(),f=!0);f&&this.rendered&&(this.render(),goog.isString(a)&&this.comment.setVisible(!0),this.bumpNeighbours_())};
Blockly.BlockSvg.prototype.setWarningText=function(a,b){this.setWarningText.pid_||(this.setWarningText.pid_=Object.create(null));var c=b||"";if(c)this.setWarningText.pid_[c]&&(clearTimeout(this.setWarningText.pid_[c]),delete this.setWarningText.pid_[c]);else for(var d in this.setWarningText.pid_)clearTimeout(this.setWarningText.pid_[d]),delete this.setWarningText.pid_[d];if(this.workspace.isDragging()){var e=this;this.setWarningText.pid_[c]=setTimeout(function(){e.workspace&&(delete e.setWarningText.pid_[c],
e.setWarningText(a,c))},100)}else this.isInFlyout&&(a=null),b=!1,goog.isString(a)?(this.warning||(this.warning=new Blockly.Warning(this),b=!0),this.warning.setText(a,c)):this.warning&&!c?(this.warning.dispose(),b=!0):this.warning&&(b=this.warning.getText(),this.warning.setText("",c),(d=this.warning.getText())||this.warning.dispose(),b=b!=d),b&&this.rendered&&(this.render(),this.bumpNeighbours_())};
Blockly.BlockSvg.prototype.setMutator=function(a){this.mutator&&this.mutator!==a&&this.mutator.dispose();a&&(a.block_=this,this.mutator=a,a.createIcon())};Blockly.BlockSvg.prototype.addSelect=function(){Blockly.utils.addClass(this.svgGroup_,"blocklySelected")};Blockly.BlockSvg.prototype.removeSelect=function(){Blockly.utils.removeClass(this.svgGroup_,"blocklySelected")};
Blockly.BlockSvg.prototype.setMouseThroughStyle=function(a){a?Blockly.utils.addClass(this.svgGroup_,"blocklyDraggingMouseThrough"):Blockly.utils.removeClass(this.svgGroup_,"blocklyDraggingMouseThrough")};Blockly.BlockSvg.prototype.setDeleteStyle=function(a){a?Blockly.utils.addClass(this.svgGroup_,"blocklyDraggingDelete"):Blockly.utils.removeClass(this.svgGroup_,"blocklyDraggingDelete")};
Blockly.BlockSvg.prototype.setColour=function(a,b,c){Blockly.BlockSvg.superClass_.setColour.call(this,a,b,c);this.rendered&&this.updateColour()};Blockly.BlockSvg.prototype.bringToFront=function(){var a=this;do{var b=a.getSvgRoot();b.parentNode.appendChild(b);a=a.getParent()}while(a)};Blockly.BlockSvg.prototype.setPreviousStatement=function(a,b){Blockly.BlockSvg.superClass_.setPreviousStatement.call(this,a,b);this.rendered&&(this.render(),this.bumpNeighbours_())};
Blockly.BlockSvg.prototype.setNextStatement=function(a,b){Blockly.BlockSvg.superClass_.setNextStatement.call(this,a,b);this.rendered&&(this.render(),this.bumpNeighbours_())};Blockly.BlockSvg.prototype.setOutput=function(a,b){Blockly.BlockSvg.superClass_.setOutput.call(this,a,b);this.rendered&&(this.render(),this.bumpNeighbours_())};Blockly.BlockSvg.prototype.setInputsInline=function(a){Blockly.BlockSvg.superClass_.setInputsInline.call(this,a);this.rendered&&(this.render(),this.bumpNeighbours_())};
Blockly.BlockSvg.prototype.removeInput=function(a,b){Blockly.BlockSvg.superClass_.removeInput.call(this,a,b);this.rendered&&(this.render(),this.bumpNeighbours_())};Blockly.BlockSvg.prototype.moveNumberedInputBefore=function(a,b){Blockly.BlockSvg.superClass_.moveNumberedInputBefore.call(this,a,b);this.rendered&&(this.render(),this.bumpNeighbours_())};
Blockly.BlockSvg.prototype.appendInput_=function(a,b){a=Blockly.BlockSvg.superClass_.appendInput_.call(this,a,b);this.rendered&&(this.render(),this.bumpNeighbours_());return a};Blockly.BlockSvg.prototype.getConnections_=function(a){var b=[];if(a||this.rendered)if(this.outputConnection&&b.push(this.outputConnection),this.previousConnection&&b.push(this.previousConnection),this.nextConnection&&b.push(this.nextConnection),a||!this.collapsed_){a=0;for(var c;c=this.inputList[a];a++)c.connection&&b.push(c.connection)}return b};
Blockly.BlockSvg.prototype.makeConnection_=function(a){return new Blockly.RenderedConnection(this,a)};
Blockly.BlockSvg.prototype.bumpNeighbours_=function(){if(this.workspace&&!this.workspace.isDragging()){var a=this.getRootBlock();if(!a.isInFlyout)for(var b=this.getConnections_(!1),c=0,d;d=b[c];c++){d.isConnected()&&d.isSuperior()&&d.targetBlock().bumpNeighbours_();for(var e=d.neighbours_(Blockly.SNAP_RADIUS),f=0,g;g=e[f];f++)d.isConnected()&&g.isConnected()||g.getSourceBlock().getRootBlock()!=a&&(d.isSuperior()?g.bumpAwayFrom_(d):d.bumpAwayFrom_(g))}}};
Blockly.BlockSvg.prototype.scheduleSnapAndBump=function(){var a=this,b=Blockly.Events.getGroup();setTimeout(function(){Blockly.Events.setGroup(b);a.snapToGrid();Blockly.Events.setGroup(!1)},Blockly.BUMP_DELAY/2);setTimeout(function(){Blockly.Events.setGroup(b);a.bumpNeighbours_();Blockly.Events.setGroup(!1)},Blockly.BUMP_DELAY)};
Blockly.BlockSvg.prototype.isRecyclable=function(){if(this.mutationToDom&&this.domToMutation)return!1;for(var a=0;a<this.inputList.length;a++){for(var b=this.inputList[a],c=0;c<b.fieldRow.length;c++){var d=b.fieldRow[c];if(d instanceof Blockly.FieldVariable||d instanceof Blockly.FieldVariableGetter||(d instanceof Blockly.FieldDropdown||d instanceof Blockly.FieldNumberDropdown||d instanceof Blockly.FieldTextDropdown)&&d.isOptionListDynamic())return!1}if(b.connection&&(b=b.connection.targetBlock())&&
!b.isRecyclable())return!1}return!0};Blockly.BlockSvg.render={};Blockly.BlockSvg.GRID_UNIT=4;Blockly.BlockSvg.SEP_SPACE_X=2*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.SEP_SPACE_Y=2*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.MIN_BLOCK_X=16*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.MIN_BLOCK_X_OUTPUT=12*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.MIN_BLOCK_X_SHADOW_OUTPUT=10*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.MIN_BLOCK_Y=12*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.EXTRA_STATEMENT_ROW_Y=8*Blockly.BlockSvg.GRID_UNIT;
Blockly.BlockSvg.MIN_BLOCK_X_WITH_STATEMENT=40*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.MIN_BLOCK_Y_SINGLE_FIELD_OUTPUT=8*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.MIN_BLOCK_Y_REPORTER=10*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.MIN_STATEMENT_INPUT_HEIGHT=6*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.NOTCH_WIDTH=8*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.NOTCH_HEIGHT=2*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.CORNER_RADIUS=1*Blockly.BlockSvg.GRID_UNIT;
Blockly.BlockSvg.STATEMENT_INPUT_EDGE_WIDTH=4*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.STATEMENT_INPUT_INNER_SPACE=2*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.START_HAT_HEIGHT=16;Blockly.BlockSvg.ICON_SEPARATOR_HEIGHT=10*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.START_HAT_PATH="c 25,-22 71,-22 96,0";Blockly.BlockSvg.NOTCH_PATH_LEFT="c 2,0 3,1 4,2 l 4,4 c 1,1 2,2 4,2 h 12 c 2,0 3,-1 4,-2 l 4,-4 c 1,-1 2,-2 4,-2";Blockly.BlockSvg.NOTCH_PATH_RIGHT="c -2,0 -3,1 -4,2 l -4,4 c -1,1 -2,2 -4,2 h -12 c -2,0 -3,-1 -4,-2 l -4,-4 c -1,-1 -2,-2 -4,-2";
Blockly.BlockSvg.NOTCH_START_PADDING=3*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.TOP_LEFT_CORNER_START="m 0,"+Blockly.BlockSvg.CORNER_RADIUS;Blockly.BlockSvg.TOP_LEFT_CORNER="A "+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS+" 0 0,1 "+Blockly.BlockSvg.CORNER_RADIUS+",0";Blockly.BlockSvg.TOP_RIGHT_CORNER="a "+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS+" 0 0,1 "+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS;
Blockly.BlockSvg.BOTTOM_RIGHT_CORNER=" a "+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS+" 0 0,1 -"+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS;Blockly.BlockSvg.BOTTOM_LEFT_CORNER="a "+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS+" 0 0,1 -"+Blockly.BlockSvg.CORNER_RADIUS+",-"+Blockly.BlockSvg.CORNER_RADIUS;
Blockly.BlockSvg.INNER_TOP_LEFT_CORNER=" a "+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS+" 0 0,0 -"+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS;Blockly.BlockSvg.INNER_BOTTOM_LEFT_CORNER="a "+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS+" 0 0,0 "+Blockly.BlockSvg.CORNER_RADIUS+","+Blockly.BlockSvg.CORNER_RADIUS;
Blockly.BlockSvg.INPUT_SHAPE_HEXAGONAL="M "+4*Blockly.BlockSvg.GRID_UNIT+",0  h "+4*Blockly.BlockSvg.GRID_UNIT+" l "+4*Blockly.BlockSvg.GRID_UNIT+","+4*Blockly.BlockSvg.GRID_UNIT+" l "+-4*Blockly.BlockSvg.GRID_UNIT+","+4*Blockly.BlockSvg.GRID_UNIT+" h "+-4*Blockly.BlockSvg.GRID_UNIT+" l "+-4*Blockly.BlockSvg.GRID_UNIT+","+-4*Blockly.BlockSvg.GRID_UNIT+" l "+4*Blockly.BlockSvg.GRID_UNIT+","+-4*Blockly.BlockSvg.GRID_UNIT+" z";Blockly.BlockSvg.INPUT_SHAPE_HEXAGONAL_WIDTH=12*Blockly.BlockSvg.GRID_UNIT;
Blockly.BlockSvg.INPUT_SHAPE_SQUARE=Blockly.BlockSvg.TOP_LEFT_CORNER_START+Blockly.BlockSvg.TOP_LEFT_CORNER+" h "+(12*Blockly.BlockSvg.GRID_UNIT-2*Blockly.BlockSvg.CORNER_RADIUS)+Blockly.BlockSvg.TOP_RIGHT_CORNER+" v "+(8*Blockly.BlockSvg.GRID_UNIT-2*Blockly.BlockSvg.CORNER_RADIUS)+Blockly.BlockSvg.BOTTOM_RIGHT_CORNER+" h "+(-12*Blockly.BlockSvg.GRID_UNIT+2*Blockly.BlockSvg.CORNER_RADIUS)+Blockly.BlockSvg.BOTTOM_LEFT_CORNER+" z";Blockly.BlockSvg.INPUT_SHAPE_SQUARE_WIDTH=10*Blockly.BlockSvg.GRID_UNIT;
Blockly.BlockSvg.INPUT_SHAPE_ROUND="M "+4*Blockly.BlockSvg.GRID_UNIT+",0 h "+4*Blockly.BlockSvg.GRID_UNIT+" a "+4*Blockly.BlockSvg.GRID_UNIT+" "+4*Blockly.BlockSvg.GRID_UNIT+" 0 0 1 0 "+8*Blockly.BlockSvg.GRID_UNIT+" h "+-4*Blockly.BlockSvg.GRID_UNIT+" a "+4*Blockly.BlockSvg.GRID_UNIT+" "+4*Blockly.BlockSvg.GRID_UNIT+" 0 0 1 0 -"+8*Blockly.BlockSvg.GRID_UNIT+" z";Blockly.BlockSvg.INPUT_SHAPE_ROUND_WIDTH=12*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.INPUT_SHAPE_HEIGHT=8*Blockly.BlockSvg.GRID_UNIT;
Blockly.BlockSvg.FIELD_HEIGHT=8*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.FIELD_WIDTH=6*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.EDITABLE_FIELD_PADDING=6;Blockly.BlockSvg.BOX_FIELD_PADDING=2*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.DROPDOWN_ARROW_PADDING=2*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.FIELD_WIDTH_MIN_EDIT=8*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.FIELD_WIDTH_MAX_EDIT=Infinity;Blockly.BlockSvg.FIELD_HEIGHT_MAX_EDIT=Blockly.BlockSvg.FIELD_HEIGHT;
Blockly.BlockSvg.FIELD_TOP_PADDING=.5*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.NUMBER_FIELD_CORNER_RADIUS=4*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.TEXT_FIELD_CORNER_RADIUS=1*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.FIELD_DEFAULT_CORNER_RADIUS=4*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.MAX_DISPLAY_LENGTH=Infinity;Blockly.BlockSvg.INPUT_AND_FIELD_MIN_X=12*Blockly.BlockSvg.GRID_UNIT;Blockly.BlockSvg.INLINE_PADDING_Y=1*Blockly.BlockSvg.GRID_UNIT;
Blockly.BlockSvg.FIELD_TEXTINPUT_FONTSIZE_INITIAL=12;Blockly.BlockSvg.FIELD_TEXTINPUT_FONTSIZE_FINAL=12;Blockly.BlockSvg.FIELD_TEXTINPUT_EXPAND_PAST_TRUNCATION=!1;Blockly.BlockSvg.FIELD_TEXTINPUT_ANIMATE_POSITIONING=!1;
Blockly.BlockSvg.SHAPE_IN_SHAPE_PADDING={1:{0:5*Blockly.BlockSvg.GRID_UNIT,1:2*Blockly.BlockSvg.GRID_UNIT,2:5*Blockly.BlockSvg.GRID_UNIT,3:5*Blockly.BlockSvg.GRID_UNIT},2:{0:3*Blockly.BlockSvg.GRID_UNIT,1:3*Blockly.BlockSvg.GRID_UNIT,2:1*Blockly.BlockSvg.GRID_UNIT,3:2*Blockly.BlockSvg.GRID_UNIT},3:{0:2*Blockly.BlockSvg.GRID_UNIT,1:2*Blockly.BlockSvg.GRID_UNIT,2:2*Blockly.BlockSvg.GRID_UNIT,3:2*Blockly.BlockSvg.GRID_UNIT}};Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS=5*Blockly.BlockSvg.GRID_UNIT;
Blockly.BlockSvg.TOP_LEFT_CORNER_DEFINE_HAT="a "+Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS+","+Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS+" 0 0,1 "+Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS+",-"+Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS;Blockly.BlockSvg.TOP_RIGHT_CORNER_DEFINE_HAT="a "+Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS+","+Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS+" 0 0,1 "+Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS+","+Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS;
Blockly.BlockSvg.DEFINE_BLOCK_PADDING_RIGHT=2*Blockly.BlockSvg.GRID_UNIT;
Blockly.BlockSvg.prototype.updateColour=function(){var a=this.getColourTertiary(),b=this.isShadow()&&!Blockly.scratchBlocksUtils.isShadowArgumentReporter(this);b&&this.parentBlock_&&(a=this.parentBlock_.getColourTertiary(),this.inputList[0]&&this.inputList[0].fieldRow[0]&&(this.inputList[0].fieldRow[0]instanceof Blockly.FieldColour||this.inputList[0].fieldRow[0]instanceof Blockly.FieldColourSlider)&&(a=Blockly.Colours.colourPickerStroke));this.svgPath_.setAttribute("stroke",a);a=this.isGlowingBlock_||
b?this.getColourSecondary():this.getColour();this.svgPath_.setAttribute("fill",a);this.svgPath_.setAttribute("fill-opacity",this.getOpacity());for(b=0;a=this.inputList[b];b++)a.outlinePath&&a.outlinePath.setAttribute("fill",this.getColourTertiary());a=this.getIcons();for(b=0;b<a.length;b++)a[b].updateColour();for(b=0;a=this.inputList[b];b++)for(var c=0,d;d=a.fieldRow[c];c++)d.setText(null)};
Blockly.BlockSvg.prototype.highlightForReplacement=function(a){a?(this.svgPath_.setAttribute("filter","url(#"+(this.workspace.options.replacementGlowFilterId||"blocklyReplacementGlowFilter")+")"),Blockly.utils.addClass(this.svgGroup_,"blocklyReplaceable")):(this.svgPath_.removeAttribute("filter"),Blockly.utils.removeClass(this.svgGroup_,"blocklyReplaceable"))};
Blockly.BlockSvg.prototype.highlightShapeForInput=function(a,b){a=this.getInputWithConnection(a);if(!a)throw"No input found for the connection";a.outlinePath&&(b?(a.outlinePath.setAttribute("filter","url(#"+(this.workspace.options.replacementGlowFilterId||"blocklyReplacementGlowFilter")+")"),Blockly.utils.addClass(this.svgGroup_,"blocklyReplaceable")):(a.outlinePath.removeAttribute("filter"),Blockly.utils.removeClass(this.svgGroup_,"blocklyReplaceable")))};
Blockly.BlockSvg.prototype.getHeightWidth=function(){var a=this.height,b=this.width,c=this.getNextBlock();c&&(c=c.getHeightWidth(),a+=c.height,a-=Blockly.BlockSvg.NOTCH_HEIGHT,b=Math.max(b,c.width));return{height:a,width:b}};
Blockly.BlockSvg.prototype.render=function(a){Blockly.Field.startCache();this.rendered=!0;var b=Blockly.BlockSvg.SEP_SPACE_X;this.RTL&&(b=-b);for(var c=this.getIcons(),d=null,e=0;e<c.length;e++)c[e]instanceof Blockly.ScratchBlockComment?d=c[e]:b=c[e].renderIcon(b);b+=this.RTL?Blockly.BlockSvg.SEP_SPACE_X:-Blockly.BlockSvg.SEP_SPACE_X;this.isScratchExtension&&this.outputConnection&&(b+=this.RTL?-Blockly.BlockSvg.GRID_UNIT:Blockly.BlockSvg.GRID_UNIT);c=this.renderCompute_(b);this.renderDraw_(b,c);this.renderMoveConnections_();
this.renderClassify_();d&&d.renderIcon(this.RTL?-c.rightEdge:c.rightEdge,c[0].height/2);!1!==a&&((a=this.getParent())?a.render(!0):Blockly.resizeSvgContents(this.workspace));Blockly.Field.stopCache()};
Blockly.BlockSvg.prototype.renderFields_=function(a,b,c){this.RTL&&(b=-b);for(var d=0,e;e=a[d];d++){var f=e.getSvgRoot();if(f){!this.previousConnection||e instanceof Blockly.FieldLabel||e instanceof Blockly.FieldImage||(b=this.RTL?Math.min(b,-Blockly.BlockSvg.INPUT_AND_FIELD_MIN_X):Math.max(b,Blockly.BlockSvg.INPUT_AND_FIELD_MIN_X));var g=-e.getSize().height/2;this.isScratchExtension&&e===this.inputList[0].fieldRow[0]&&e instanceof Blockly.FieldImage&&this.previousConnection&&(g+=Blockly.BlockSvg.GRID_UNIT);
this.isScratchExtension&&!this.previousConnection&&this.nextConnection&&e instanceof Blockly.FieldVerticalSeparator&&e.setLineHeight(Blockly.BlockSvg.ICON_SEPARATOR_HEIGHT-Blockly.BlockSvg.GRID_UNIT);var h="";if(this.RTL){var k=b-=e.renderSep+e.renderWidth;g=c+g;e.renderWidth&&(b-=Blockly.BlockSvg.SEP_SPACE_X)}else k=b+e.renderSep,g=c+g,e.renderWidth&&(b+=e.renderSep+e.renderWidth+Blockly.BlockSvg.SEP_SPACE_X);this.RTL&&e instanceof Blockly.FieldImage&&e.getFlipRTL()&&(h="scale(-1 1)",k+=e.renderWidth);
f.setAttribute("transform","translate("+k+", "+g+") "+h);this.isInsertionMarker()&&f.setAttribute("display","none")}}return this.RTL?-b:b};
Blockly.BlockSvg.prototype.renderCompute_=function(a){var b=this.inputList,c=[];c.rightEdge=0;for(var d=c.bottomEdge=0,e=!1,f=!1,g=!1,h=void 0,k,m=0,l;l=b[m];m++)if(l.isVisible()){if(h&&h!=Blockly.NEXT_STATEMENT&&l.type!=Blockly.NEXT_STATEMENT)var n=c[c.length-1];else h=l.type,n=this.createRowForInput_(l),c.push(n);n.push(l);l.renderHeight=this.computeInputHeight_(l,n,k);l.renderWidth=this.computeInputWidth_(l);n.statementNotchAtBottom=!0;l.connection&&l.connection.type===Blockly.NEXT_STATEMENT&&
(k=l.connection.targetBlock())&&!k.lastConnectionInStack()&&(n.statementNotchAtBottom=!1);if(l.connection){k=l.connection.targetBlock();var q=0;k?(q=k.getHeightWidth(),k=q.height,q=q.width):k=Blockly.BlockSvg.INPUT_SHAPE_HEIGHT;l.connection.type===Blockly.INPUT_VALUE&&(k+=2*Blockly.BlockSvg.INLINE_PADDING_Y);l.connection.type===Blockly.NEXT_STATEMENT&&n.statementNotchAtBottom&&(k-=Blockly.BlockSvg.NOTCH_HEIGHT);l.renderHeight=Math.max(l.renderHeight,k);l.renderWidth=Math.max(l.renderWidth,q)}n.height=
Math.max(n.height,l.renderHeight);l.fieldWidth=0;1==c.length&&(l.fieldWidth+=this.RTL?-a:a);k=!1;q=0;for(var p;p=l.fieldRow[q];q++){0!=q&&(l.fieldWidth+=Blockly.BlockSvg.SEP_SPACE_X);var r=p.getSize();p.renderWidth=r.width;p.renderSep=k&&p.EDITABLE?Blockly.BlockSvg.SEP_SPACE_X:0;l.fieldWidth+=p.renderWidth+p.renderSep;n.height=Math.max(n.height,r.height);k=p.EDITABLE}n.type!=Blockly.BlockSvg.INLINE&&(n.type==Blockly.NEXT_STATEMENT?(f=!0,d=Math.max(d,l.fieldWidth)):n.type==Blockly.INPUT_VALUE?e=!0:
n.type==Blockly.DUMMY_INPUT&&(g=!0));k=n}this.computeOutputPadding_(c);c.statementEdge=Blockly.BlockSvg.STATEMENT_INPUT_EDGE_WIDTH+d;c.rightEdge=this.computeRightEdge_(c.rightEdge,f);for(m=0;m<c.length;m++)c.bottomEdge+=c[m].height;c.hasValue=e;c.hasStatement=f;c.hasDummy=g;return c};
Blockly.BlockSvg.prototype.computeInputWidth_=function(a){if(a.type!=Blockly.INPUT_VALUE||a.connection&&a.connection.isConnected())return 0;switch(a.connection.getOutputShape()){case Blockly.OUTPUT_SHAPE_SQUARE:return Blockly.BlockSvg.INPUT_SHAPE_SQUARE_WIDTH;case Blockly.OUTPUT_SHAPE_ROUND:return Blockly.BlockSvg.INPUT_SHAPE_ROUND_WIDTH;case Blockly.OUTPUT_SHAPE_HEXAGONAL:return Blockly.BlockSvg.INPUT_SHAPE_HEXAGONAL_WIDTH;default:return 0}};
Blockly.BlockSvg.prototype.computeInputHeight_=function(a,b,c){return 1===this.inputList.length&&this.outputConnection&&this.isShadow()&&!Blockly.scratchBlocksUtils.isShadowArgumentReporter(this)?Blockly.BlockSvg.MIN_BLOCK_Y_SINGLE_FIELD_OUTPUT:this.outputConnection?this.isScratchExtension?Blockly.BlockSvg.MIN_BLOCK_Y_REPORTER+2*Blockly.BlockSvg.GRID_UNIT:Blockly.BlockSvg.MIN_BLOCK_Y_REPORTER:b.type==Blockly.NEXT_STATEMENT?Blockly.BlockSvg.MIN_STATEMENT_INPUT_HEIGHT:c&&c.type==Blockly.NEXT_STATEMENT?
Blockly.BlockSvg.EXTRA_STATEMENT_ROW_Y:this.isScratchExtension&&this.previousConnection?Blockly.BlockSvg.MIN_BLOCK_Y+2*Blockly.BlockSvg.GRID_UNIT:Blockly.BlockSvg.MIN_BLOCK_Y};Blockly.BlockSvg.prototype.createRowForInput_=function(a){var b=[];b.type=a.type!=Blockly.NEXT_STATEMENT?Blockly.BlockSvg.INLINE:a.type;b.height=0;b.paddingStart=Blockly.BlockSvg.SEP_SPACE_X;b.paddingEnd=Blockly.BlockSvg.SEP_SPACE_X;return b};
Blockly.BlockSvg.prototype.computeRightEdge_=function(a,b){this.previousConnection||this.nextConnection?a=Math.max(a,Blockly.BlockSvg.MIN_BLOCK_X):this.outputConnection&&(a=this.isShadow()&&!Blockly.scratchBlocksUtils.isShadowArgumentReporter(this)?Math.max(a,Blockly.BlockSvg.MIN_BLOCK_X_SHADOW_OUTPUT):Math.max(a,Blockly.BlockSvg.MIN_BLOCK_X_OUTPUT));b&&(a=Math.max(a,Blockly.BlockSvg.MIN_BLOCK_X_WITH_STATEMENT));0<this.insertionMarkerMinWidth_&&(a=Math.max(a,this.insertionMarkerMinWidth_));return a};
Blockly.BlockSvg.prototype.computeOutputPadding_=function(a){if(this.getOutputShape()&&this.outputConnection&&(!this.isShadow()||Blockly.scratchBlocksUtils.isShadowArgumentReporter(this))&&!(1<a.length)){a=a[0];var b=this.getOutputShape();a.paddingStart=0;a.paddingEnd=0;var c=a[0];if(c.fieldRow[0])var d=0;else d=c.connection,d=d.targetConnection?d.targetConnection.getSourceBlock().getOutputShape():d.getOutputShape(),b==Blockly.OUTPUT_SHAPE_HEXAGONAL&&d!=Blockly.OUTPUT_SHAPE_HEXAGONAL&&(c=c.renderHeight-
Blockly.BlockSvg.MIN_BLOCK_Y_REPORTER,a.paddingStart+=c/2);a.paddingStart+=Blockly.BlockSvg.SHAPE_IN_SHAPE_PADDING[b][d];c=a[a.length-1];c.connection?(d=c.connection,d=d.targetConnection?d.targetConnection.getSourceBlock().getOutputShape():d.getOutputShape(),b==Blockly.OUTPUT_SHAPE_HEXAGONAL&&d!=Blockly.OUTPUT_SHAPE_HEXAGONAL&&(c=c.renderHeight-Blockly.BlockSvg.MIN_BLOCK_Y_REPORTER,a.paddingEnd+=c/2)):d=0;a.paddingEnd+=Blockly.BlockSvg.SHAPE_IN_SHAPE_PADDING[b][d]}};
Blockly.BlockSvg.prototype.renderDraw_=function(a,b){this.squareTopLeftCorner_=this.startHat_=!1;this.outputConnection||this.previousConnection||(this.startHat_=this.squareTopLeftCorner_=!0,b.rightEdge=Math.max(b.rightEdge,100));this.edgeShapeWidth_=0;this.edgeShape_=null;if(this.outputConnection){var c=this.getOutputShape();if(c===Blockly.OUTPUT_SHAPE_HEXAGONAL||c===Blockly.OUTPUT_SHAPE_ROUND)this.edgeShapeWidth_=b.bottomEdge/2,this.edgeShape_=c,this.squareTopLeftCorner_=!0}c=[];this.renderDrawTop_(c,
b.rightEdge);a=this.renderDrawRight_(c,b,a);this.renderDrawBottom_(c,a);this.renderDrawLeft_(c);a=c.join(" ");this.svgPath_.setAttribute("d",a);this.RTL&&this.svgPath_.setAttribute("transform","scale(-1 1)")};
Blockly.BlockSvg.prototype.renderClassify_=function(){var a=[];if(this.outputConnection)this.isShadow_?a.push("argument"):a.push("reporter"),this.edgeShape_===Blockly.OUTPUT_SHAPE_HEXAGONAL?a.push("boolean"):this.edgeShape_===Blockly.OUTPUT_SHAPE_ROUND&&a.push("round");else{for(var b=this.inputList,c=0,d=0,e;e=b[d];d++)e.connection&&e.connection.type===Blockly.NEXT_STATEMENT&&c++;c&&(a.push("c-block"),a.push("c-"+c));this.startHat_?a.push("hat"):c||a.push("stack");this.nextConnection||a.push("end")}this.svgGroup_.setAttribute("data-shapes",
a.join(" "));this.getCategory()&&this.svgGroup_.setAttribute("data-category",this.getCategory())};
Blockly.BlockSvg.prototype.renderDrawTop_=function(a,b){this.type==Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE?(a.push("m 0, 0"),a.push(Blockly.BlockSvg.TOP_LEFT_CORNER_DEFINE_HAT)):(this.squareTopLeftCorner_?(a.push("m 0,0"),this.startHat_&&a.push(Blockly.BlockSvg.START_HAT_PATH),this.edgeShapeWidth_&&a.push("m "+this.edgeShapeWidth_+",0")):(a.push(Blockly.BlockSvg.TOP_LEFT_CORNER_START),a.push(Blockly.BlockSvg.TOP_LEFT_CORNER)),this.previousConnection&&(a.push("H",Blockly.BlockSvg.NOTCH_START_PADDING),
a.push(Blockly.BlockSvg.NOTCH_PATH_LEFT),this.previousConnection.setOffsetInBlock(this.RTL?-Blockly.BlockSvg.NOTCH_WIDTH:Blockly.BlockSvg.NOTCH_WIDTH,0)));this.width=b};
Blockly.BlockSvg.prototype.renderDrawRight_=function(a,b,c){for(var d,e=0,f,g,h=0,k;k=b[h];h++){d=k.paddingStart;0==h&&(d+=this.RTL?-c:c);if(k.type==Blockly.BlockSvg.INLINE){for(var m=0,l;l=k[m];m++)if(f=e+k.height/2,d=Blockly.BlockSvg.getAlignedCursor_(d,l,b.rightEdge),d=this.renderFields_(l.fieldRow,d,f),l.type==Blockly.INPUT_VALUE){this.previousConnection&&(d=Math.max(d,Blockly.BlockSvg.INPUT_AND_FIELD_MIN_X));f=this.RTL?-d:d;var n=k.height/2;g=e+n;l.connection.setOffsetInBlock(f,g);this.renderInputShape_(l,
d,e+n);d+=l.renderWidth+Blockly.BlockSvg.SEP_SPACE_X}d-=Blockly.BlockSvg.SEP_SPACE_X;d+=k.paddingEnd;b.rightEdge=Math.max(d,b.rightEdge);d=Math.max(d,b.rightEdge);this.width=Math.max(this.width,d);this.edgeShape_?a.push("H",d-this.edgeShapeWidth_):(a.push("H",d-Blockly.BlockSvg.CORNER_RADIUS-this.edgeShapeWidth_),a.push(Blockly.BlockSvg.TOP_RIGHT_CORNER));this.edgeShape_||a.push("v",k.height-2*Blockly.BlockSvg.CORNER_RADIUS)}else k.type==Blockly.NEXT_STATEMENT&&(l=k[0],f=e,f+=Blockly.BlockSvg.MIN_STATEMENT_INPUT_HEIGHT,
this.renderFields_(l.fieldRow,d,f),d=b.statementEdge+Blockly.BlockSvg.NOTCH_WIDTH,this.type==Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE?this.renderDefineBlock_(a,b,l,k):Blockly.BlockSvg.drawStatementInputFromTopRight_(a,d,b.rightEdge,k),f=this.RTL?-d:d,l.connection.setOffsetInBlock(f,e),l.connection.isConnected()&&(this.width=Math.max(this.width,b.statementEdge+l.connection.targetBlock().getHeightWidth().width)),this.type==Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE||h!=b.length-1&&b[h+1].type!=Blockly.NEXT_STATEMENT||
(a.push(Blockly.BlockSvg.TOP_RIGHT_CORNER),a.push("v",Blockly.BlockSvg.EXTRA_STATEMENT_ROW_Y-2*Blockly.BlockSvg.CORNER_RADIUS),e+=Blockly.BlockSvg.EXTRA_STATEMENT_ROW_Y));e+=k.height}this.drawEdgeShapeRight_(a);b.length||(e=Blockly.BlockSvg.MIN_BLOCK_Y,a.push("V",e));return e};
Blockly.BlockSvg.prototype.renderInputShape_=function(a,b,c){var d=a.outlinePath;d&&(a.connection.targetConnection?d.setAttribute("style","visibility: hidden"):(a=Blockly.BlockSvg.getInputShapeInfo_(a.connection.getOutputShape()),b=this.RTL?-b-a.width:b,c-=Blockly.BlockSvg.INPUT_SHAPE_HEIGHT/2,d.setAttribute("d",a.path),d.setAttribute("transform","translate("+b+","+c+")"),d.setAttribute("data-argument-type",a.argType),d.setAttribute("style","visibility: visible")))};
Blockly.BlockSvg.prototype.renderDrawBottom_=function(a,b){this.height=b;this.edgeShape_||a.push(Blockly.BlockSvg.BOTTOM_RIGHT_CORNER);this.nextConnection&&(a.push("H",Blockly.BlockSvg.NOTCH_WIDTH+Blockly.BlockSvg.NOTCH_START_PADDING+Blockly.BlockSvg.CORNER_RADIUS," "),a.push(Blockly.BlockSvg.NOTCH_PATH_RIGHT),this.nextConnection.setOffsetInBlock(this.RTL?-Blockly.BlockSvg.NOTCH_WIDTH:Blockly.BlockSvg.NOTCH_WIDTH,b),this.height+=Blockly.BlockSvg.NOTCH_HEIGHT);this.edgeShape_?a.push("H",this.edgeShapeWidth_):
(a.push("H",Blockly.BlockSvg.CORNER_RADIUS),a.push(Blockly.BlockSvg.BOTTOM_LEFT_CORNER))};
Blockly.BlockSvg.prototype.renderDrawLeft_=function(a){this.outputConnection&&this.outputConnection.setOffsetInBlock(0,this.height/2);this.edgeShape_&&(this.edgeShape_===Blockly.OUTPUT_SHAPE_ROUND?a.push("a "+this.edgeShapeWidth_+" "+this.edgeShapeWidth_+" 0 0 1 0 -"+2*this.edgeShapeWidth_):this.edgeShape_===Blockly.OUTPUT_SHAPE_HEXAGONAL&&a.push("l "+-this.edgeShapeWidth_+" "+-this.edgeShapeWidth_+" l "+this.edgeShapeWidth_+" "+-this.edgeShapeWidth_));a.push("z")};
Blockly.BlockSvg.prototype.drawEdgeShapeRight_=function(a){this.edgeShape_&&(this.edgeShape_===Blockly.OUTPUT_SHAPE_ROUND?a.push("a "+this.edgeShapeWidth_+" "+this.edgeShapeWidth_+" 0 0 1 0 "+2*this.edgeShapeWidth_):this.edgeShape_===Blockly.OUTPUT_SHAPE_HEXAGONAL&&a.push("l "+this.edgeShapeWidth_+" "+this.edgeShapeWidth_+" l "+-this.edgeShapeWidth_+" "+this.edgeShapeWidth_))};Blockly.BlockSvg.prototype.positionNewBlock=function(a,b,c){b.type==Blockly.NEXT_STATEMENT&&a.moveBy(c.x_-b.x_,c.y_-b.y_)};
Blockly.BlockSvg.drawStatementInputFromTopRight_=function(a,b,c,d){Blockly.BlockSvg.drawStatementInputTop_(a,b);a.push("v",d.height-2*Blockly.BlockSvg.CORNER_RADIUS);Blockly.BlockSvg.drawStatementInputBottom_(a,c,d)};
Blockly.BlockSvg.drawStatementInputTop_=function(a,b){a.push(Blockly.BlockSvg.BOTTOM_RIGHT_CORNER);a.push("H",b+Blockly.BlockSvg.STATEMENT_INPUT_INNER_SPACE+2*Blockly.BlockSvg.CORNER_RADIUS);a.push(Blockly.BlockSvg.NOTCH_PATH_RIGHT);a.push("h","-"+Blockly.BlockSvg.STATEMENT_INPUT_INNER_SPACE);a.push(Blockly.BlockSvg.INNER_TOP_LEFT_CORNER)};
Blockly.BlockSvg.drawStatementInputBottom_=function(a,b,c){a.push(Blockly.BlockSvg.INNER_BOTTOM_LEFT_CORNER);c.statementNotchAtBottom&&(a.push("h ",Blockly.BlockSvg.STATEMENT_INPUT_INNER_SPACE),a.push(Blockly.BlockSvg.NOTCH_PATH_LEFT));a.push("H",b-Blockly.BlockSvg.CORNER_RADIUS)};
Blockly.BlockSvg.prototype.renderDefineBlock_=function(a,b,c,d){b=c.connection&&c.connection.targetBlock()?b.statementEdge+c.connection.targetBlock().getHeightWidth().width+Blockly.BlockSvg.DEFINE_BLOCK_PADDING_RIGHT:Blockly.BlockSvg.MIN_BLOCK_X_WITH_STATEMENT;b-=Blockly.BlockSvg.DEFINE_HAT_CORNER_RADIUS;a.push("H",b);a.push(Blockly.BlockSvg.TOP_RIGHT_CORNER_DEFINE_HAT);d.height+=3*Blockly.BlockSvg.GRID_UNIT;a.push("v",d.height);d.height+=Blockly.BlockSvg.GRID_UNIT};
Blockly.BlockSvg.getInputShapeInfo_=function(a){switch(a){case Blockly.OUTPUT_SHAPE_HEXAGONAL:a=Blockly.BlockSvg.INPUT_SHAPE_HEXAGONAL;var b=Blockly.BlockSvg.INPUT_SHAPE_HEXAGONAL_WIDTH;var c="boolean";break;case Blockly.OUTPUT_SHAPE_ROUND:a=Blockly.BlockSvg.INPUT_SHAPE_ROUND;b=Blockly.BlockSvg.INPUT_SHAPE_ROUND_WIDTH;c="round";break;default:a=Blockly.BlockSvg.INPUT_SHAPE_SQUARE,b=Blockly.BlockSvg.INPUT_SHAPE_SQUARE_WIDTH,c="square"}return{path:a,argType:c,width:b}};
Blockly.BlockSvg.getAlignedCursor_=function(a,b,c){b.align===Blockly.ALIGN_RIGHT?a+=c-b.fieldWidth-2*Blockly.BlockSvg.SEP_SPACE_X:b.align===Blockly.ALIGN_CENTRE&&(a=Math.max(a,c/2-b.fieldWidth/2));return a};
Blockly.BlockSvg.prototype.renderMoveConnections_=function(){var a=this.getRelativeToSurfaceXY();this.previousConnection&&this.previousConnection.moveToOffset(a);this.outputConnection&&this.outputConnection.moveToOffset(a);for(var b=0;b<this.inputList.length;b++){var c=this.inputList[b].connection;c&&(c.moveToOffset(a),c.isConnected()&&c.tighten_())}this.nextConnection&&(this.nextConnection.moveToOffset(a),this.nextConnection.isConnected()&&this.nextConnection.tighten_())};Blockly.Msg={};goog.getMsgOrig=goog.getMsg;goog.getMsg=function(a,b){var c=goog.getMsg.blocklyMsgMap[a];c&&(a=Blockly.Msg[c]);return goog.getMsgOrig(a,b)};goog.getMsg.blocklyMsgMap={Today:"TODAY"};Blockly.FieldTextInput=function(a,b,c){Blockly.FieldTextInput.superClass_.constructor.call(this,a,b);this.setRestrictor(c);this.addArgType("text")};goog.inherits(Blockly.FieldTextInput,Blockly.Field);Blockly.FieldTextInput.fromJson=function(a){var b=Blockly.utils.replaceMessageReferences(a.text);b=new Blockly.FieldTextInput(b,a["class"]);"boolean"===typeof a.spellcheck&&b.setSpellcheck(a.spellcheck);return b};Blockly.FieldTextInput.ANIMATION_TIME=.25;
Blockly.FieldTextInput.TEXT_MEASURE_PADDING_MAGIC=45;Blockly.FieldTextInput.htmlInput_=null;Blockly.FieldTextInput.prototype.CURSOR="text";Blockly.FieldTextInput.prototype.spellcheck_=!0;
Blockly.FieldTextInput.prototype.init=function(){if(!this.fieldGroup_){var a=!this.sourceBlock_.isShadow();a&&(this.className_+=" blocklyEditableLabel");Blockly.FieldTextInput.superClass_.init.call(this);a&&(this.box_=Blockly.utils.createSvgElement("rect",{x:0,y:0,width:this.size_.width,height:this.size_.height,fill:this.sourceBlock_.getColourTertiary()}),this.fieldGroup_.insertBefore(this.box_,this.textElement_))}};
Blockly.FieldTextInput.prototype.dispose=function(){Blockly.WidgetDiv.hideIfOwner(this);Blockly.FieldTextInput.superClass_.dispose.call(this)};Blockly.FieldTextInput.prototype.setValue=function(a){if(null!==a){if(this.sourceBlock_){var b=this.callValidator(a);null!==b&&(a=b)}Blockly.Field.prototype.setValue.call(this,a)}};
Blockly.FieldTextInput.prototype.setText=function(a){null!==a&&(a=String(a),a!==this.text_&&(this.sourceBlock_&&Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.BlockChange(this.sourceBlock_,"field",this.name,this.text_,a)),Blockly.Field.prototype.setText.call(this,a)))};Blockly.FieldTextInput.prototype.setSpellcheck=function(a){this.spellcheck_=a};Blockly.FieldTextInput.prototype.setRestrictor=function(a){this.restrictor_=a};
Blockly.FieldTextInput.prototype.showEditor_=function(a,b,c,d){this.workspace_=this.sourceBlock_.workspace;a=a||!1;var e=b||!1;Blockly.WidgetDiv.show(this,this.sourceBlock_.RTL,this.widgetDispose_(),this.widgetDisposeAnimationFinished_(),Blockly.FieldTextInput.ANIMATION_TIME);b=Blockly.WidgetDiv.DIV;b.className+=" fieldTextInput";var f=goog.dom.createDom("INPUT","blocklyHtmlInput");f.setAttribute("spellcheck",this.spellcheck_);e&&f.setAttribute("readonly","true");Blockly.FieldTextInput.htmlInput_=
f;b.appendChild(f);c&&(this.sourceBlock_.RTL?f.style.paddingLeft=this.arrowSize_+Blockly.BlockSvg.DROPDOWN_ARROW_PADDING+"px":f.style.paddingRight=this.arrowSize_+Blockly.BlockSvg.DROPDOWN_ARROW_PADDING+"px",c=goog.dom.createDom("IMG","blocklyTextDropDownArrow"),c.setAttribute("src",Blockly.mainWorkspace.options.pathToMedia+"dropdown-arrow-dark.svg"),c.style.width=this.arrowSize_+"px",c.style.height=this.arrowSize_+"px",c.style.top=this.arrowY_+"px",c.style.cursor="pointer",this.sourceBlock_.RTL?
c.style.left="11px":c.style.right="11px",d&&(f.dropDownArrowMouseWrapper_=Blockly.bindEvent_(c,"mousedown",this,d)),b.appendChild(c));f.value=f.defaultValue=this.text_;f.oldValue_=null;this.validate_();this.resizeEditor_();a||(f.focus(),f.select(),f.setSelectionRange(0,99999));this.bindEvents_(f);d="box-shadow "+Blockly.FieldTextInput.ANIMATION_TIME+"s";Blockly.BlockSvg.FIELD_TEXTINPUT_ANIMATE_POSITIONING&&(b.style.transition+=",padding "+Blockly.FieldTextInput.ANIMATION_TIME+"s,width "+Blockly.FieldTextInput.ANIMATION_TIME+
"s,height "+Blockly.FieldTextInput.ANIMATION_TIME+"s,margin-left "+Blockly.FieldTextInput.ANIMATION_TIME+"s");b.style.transition=d;f.style.transition="font-size "+Blockly.FieldTextInput.ANIMATION_TIME+"s";f.style.fontSize=Blockly.BlockSvg.FIELD_TEXTINPUT_FONTSIZE_FINAL+"pt";b.style.boxShadow="0px 0px 0px 4px "+Blockly.Colours.fieldShadow};
Blockly.FieldTextInput.prototype.bindEvents_=function(a){a.onKeyDownWrapper_=Blockly.bindEventWithChecks_(a,"keydown",this,this.onHtmlInputKeyDown_);a.onKeyUpWrapper_=Blockly.bindEventWithChecks_(a,"keyup",this,this.onHtmlInputChange_);a.onKeyPressWrapper_=Blockly.bindEventWithChecks_(a,"keypress",this,this.onHtmlInputChange_);a.onInputWrapper_=Blockly.bindEvent_(a,"input",this,this.onHtmlInputChange_);a.onWorkspaceChangeWrapper_=this.resizeEditor_.bind(this);this.workspace_.addChangeListener(a.onWorkspaceChangeWrapper_)};
Blockly.FieldTextInput.prototype.unbindEvents_=function(a){Blockly.unbindEvent_(a.onKeyDownWrapper_);Blockly.unbindEvent_(a.onKeyUpWrapper_);Blockly.unbindEvent_(a.onKeyPressWrapper_);Blockly.unbindEvent_(a.onInputWrapper_);this.workspace_.removeChangeListener(a.onWorkspaceChangeWrapper_)};
Blockly.FieldTextInput.prototype.onHtmlInputKeyDown_=function(a){var b=Blockly.FieldTextInput.htmlInput_;13==a.keyCode?(Blockly.WidgetDiv.hide(),Blockly.DropDownDiv.hideWithoutAnimation()):27==a.keyCode?(b.value=b.defaultValue,Blockly.WidgetDiv.hide(),Blockly.DropDownDiv.hideWithoutAnimation()):9==a.keyCode&&(Blockly.WidgetDiv.hide(),Blockly.DropDownDiv.hideWithoutAnimation(),this.sourceBlock_.tab(this,!a.shiftKey),a.preventDefault())};Blockly.FieldTextInput.GECKO_KEYCODE_WHITELIST=[97,99,118,120];
Blockly.FieldTextInput.prototype.onHtmlInputChange_=function(a){if("keypress"===a.type&&this.restrictor_){var b=!1;if(goog.userAgent.GECKO){var c=a.charCode;if(32>c||127==c)b=!0;else if(a.metaKey||a.ctrlKey)b=-1<Blockly.FieldTextInput.GECKO_KEYCODE_WHITELIST.indexOf(c)}else c=a.keyCode;c=String.fromCharCode(c);if(!b&&!this.restrictor_.test(c)&&a.preventDefault){a.preventDefault();return}}a=Blockly.FieldTextInput.htmlInput_;b=a.value;b!==a.oldValue_?(a.oldValue_=b,this.setText(b),this.validate_()):
goog.userAgent.WEBKIT&&this.sourceBlock_.render();this.resizeEditor_()};Blockly.FieldTextInput.prototype.validate_=function(){var a=!0;goog.asserts.assertObject(Blockly.FieldTextInput.htmlInput_);var b=Blockly.FieldTextInput.htmlInput_;this.sourceBlock_&&(a=this.callValidator(b.value));null===a?Blockly.utils.addClass(b,"blocklyInvalidInput"):Blockly.utils.removeClass(b,"blocklyInvalidInput")};
Blockly.FieldTextInput.prototype.resizeEditor_=function(){var a=this.sourceBlock_.workspace.scale,b=Blockly.WidgetDiv.DIV;var c=this.sourceBlock_.isShadow()?this.sourceBlock_.getHeightWidth().width*a:this.size_.width*a;if(Blockly.BlockSvg.FIELD_TEXTINPUT_EXPAND_PAST_TRUNCATION){var d=Blockly.scratchBlocksUtils.measureText(Blockly.FieldTextInput.htmlInput_.style.fontSize,Blockly.FieldTextInput.htmlInput_.style.fontFamily,Blockly.FieldTextInput.htmlInput_.style.fontWeight,Blockly.FieldTextInput.htmlInput_.value);
d+=Blockly.FieldTextInput.TEXT_MEASURE_PADDING_MAGIC;d*=a}else d=c;d=Math.max(d,Blockly.BlockSvg.FIELD_WIDTH_MIN_EDIT*a);d=Math.min(d,Blockly.BlockSvg.FIELD_WIDTH_MAX_EDIT*a);b.style.width=d/a+1+"px";b.style.height=Blockly.BlockSvg.FIELD_HEIGHT+1+"px";b.style.transform="scale("+a+")";b.style.marginLeft=-.5*(d-c)+"px";c=this.getBorderRadius()+.5;b.style.borderRadius=c+"px";Blockly.FieldTextInput.htmlInput_.style.borderRadius=c+"px";c=this.sourceBlock_.getColourTertiary();b.style.borderColor=c;c=this.getAbsoluteXY_();
c.x-=a/2;c.y-=a/2;this.sourceBlock_.RTL&&(c.x+=d,c.x-=b.offsetWidth*a,c.x+=1*a);c.y+=1*a;goog.userAgent.GECKO&&Blockly.WidgetDiv.DIV.style.top&&(c.x+=2*a,c.y+=1*a);goog.userAgent.WEBKIT&&(c.y-=1*a);b.style.left=c.x+"px";b.style.top=c.y+"px"};Blockly.FieldTextInput.prototype.getBorderRadius=function(){return this.sourceBlock_.getOutputShape()==Blockly.OUTPUT_SHAPE_ROUND?Blockly.BlockSvg.NUMBER_FIELD_CORNER_RADIUS:Blockly.BlockSvg.TEXT_FIELD_CORNER_RADIUS};
Blockly.FieldTextInput.prototype.widgetDispose_=function(){var a=this;return function(){var b=Blockly.WidgetDiv.DIV,c=Blockly.FieldTextInput.htmlInput_;a.maybeSaveEdit_();a.unbindEvents_(c);c.dropDownArrowMouseWrapper_&&Blockly.unbindEvent_(c.dropDownArrowMouseWrapper_);Blockly.Events.setGroup(!1);c.style.fontSize=Blockly.BlockSvg.FIELD_TEXTINPUT_FONTSIZE_INITIAL+"pt";b.style.boxShadow="";a.sourceBlock_&&(a.sourceBlock_.isShadow()?(c=a.sourceBlock_.getHeightWidth(),b.style.width=c.width+1+"px",b.style.height=
c.height+1+"px"):(b.style.width=a.size_.width+1+"px",b.style.height=Blockly.BlockSvg.FIELD_HEIGHT+1+"px"));b.style.marginLeft=0}};Blockly.FieldTextInput.prototype.widgetDisposeAnimationFinished_=function(){return function(){var a=Blockly.WidgetDiv.DIV.style;a.width="auto";a.height="auto";a.fontSize="";Blockly.WidgetDiv.DIV.className="blocklyWidgetDiv";Blockly.WidgetDiv.DIV.removeAttribute("style");Blockly.FieldTextInput.htmlInput_.style.transition="";Blockly.FieldTextInput.htmlInput_=null}};
Blockly.FieldTextInput.prototype.maybeSaveEdit_=function(){var a=Blockly.FieldTextInput.htmlInput_,b=a.value;if(this.sourceBlock_)if(b=this.callValidator(b),null===b)b=a.defaultValue;else if(this.onFinishEditing_)this.onFinishEditing_(b);this.setText(b);this.sourceBlock_.rendered&&this.sourceBlock_.render()};
Blockly.FieldTextInput.numberValidator=function(a){console.warn("Blockly.FieldTextInput.numberValidator is deprecated. Use Blockly.FieldNumber instead.");if(null===a)return null;a=String(a);a=a.replace(/O/ig,"0");a=a.replace(/,/g,"");a=parseFloat(a||0);return isNaN(a)?null:String(a)};Blockly.FieldTextInput.nonnegativeIntegerValidator=function(a){(a=Blockly.FieldTextInput.numberValidator(a))&&(a=String(Math.max(0,Math.floor(a))));return a};Blockly.Field.register("field_input",Blockly.FieldTextInput);Blockly.FieldAngle=function(a,b){this.symbol_=Blockly.utils.createSvgElement("tspan",{},null);this.symbol_.appendChild(document.createTextNode("\u00b0"));a=a&&!isNaN(a)?String(a):"0";Blockly.FieldAngle.superClass_.constructor.call(this,a,b);this.addArgType("angle")};goog.inherits(Blockly.FieldAngle,Blockly.FieldTextInput);Blockly.FieldAngle.fromJson=function(a){return new Blockly.FieldAngle(a.angle)};Blockly.FieldAngle.ROUND=15;Blockly.FieldAngle.HALF=60;Blockly.FieldAngle.CLOCKWISE=!0;
Blockly.FieldAngle.OFFSET=90;Blockly.FieldAngle.WRAP=180;Blockly.FieldAngle.HANDLE_RADIUS=10;Blockly.FieldAngle.ARROW_WIDTH=Blockly.FieldAngle.HANDLE_RADIUS;Blockly.FieldAngle.RADIUS=Blockly.FieldAngle.HALF-Blockly.FieldAngle.HANDLE_RADIUS-1;Blockly.FieldAngle.CENTER_RADIUS=2;Blockly.FieldAngle.ARROW_SVG_PATH="icons/arrow.svg";
Blockly.FieldAngle.prototype.dispose_=function(){var a=this;return function(){Blockly.FieldAngle.superClass_.dispose_.call(a)();a.gauge_=null;a.mouseDownWrapper_&&Blockly.unbindEvent_(a.mouseDownWrapper_);a.mouseUpWrapper_&&Blockly.unbindEvent_(a.mouseUpWrapper_);a.mouseMoveWrapper_&&Blockly.unbindEvent_(a.mouseMoveWrapper_)}};
Blockly.FieldAngle.prototype.showEditor_=function(){Blockly.FieldAngle.superClass_.showEditor_.call(this,goog.userAgent.MOBILE||goog.userAgent.ANDROID||goog.userAgent.IPAD);Blockly.DropDownDiv.hideWithoutAnimation();Blockly.DropDownDiv.clearContent();var a=Blockly.DropDownDiv.getContentDiv();a=Blockly.utils.createSvgElement("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:html":"http://www.w3.org/1999/xhtml","xmlns:xlink":"http://www.w3.org/1999/xlink",version:"1.1",height:2*Blockly.FieldAngle.HALF+
"px",width:2*Blockly.FieldAngle.HALF+"px"},a);Blockly.utils.createSvgElement("circle",{cx:Blockly.FieldAngle.HALF,cy:Blockly.FieldAngle.HALF,r:Blockly.FieldAngle.RADIUS,"class":"blocklyAngleCircle"},a);this.gauge_=Blockly.utils.createSvgElement("path",{"class":"blocklyAngleGauge"},a);this.line_=Blockly.utils.createSvgElement("line",{x1:Blockly.FieldAngle.HALF,y1:Blockly.FieldAngle.HALF,"class":"blocklyAngleLine"},a);var b=Math.PI*Blockly.FieldAngle.OFFSET/180;Blockly.utils.createSvgElement("line",
{x1:Blockly.FieldAngle.HALF,y1:Blockly.FieldAngle.HALF,x2:Blockly.FieldAngle.HALF+Blockly.FieldAngle.RADIUS*Math.cos(b),y2:Blockly.FieldAngle.HALF-Blockly.FieldAngle.RADIUS*Math.sin(b),"class":"blocklyAngleLine"},a);for(b=0;360>b;b+=15)Blockly.utils.createSvgElement("line",{x1:Blockly.FieldAngle.HALF+Blockly.FieldAngle.RADIUS-13,y1:Blockly.FieldAngle.HALF,x2:Blockly.FieldAngle.HALF+Blockly.FieldAngle.RADIUS-7,y2:Blockly.FieldAngle.HALF,"class":"blocklyAngleMarks",transform:"rotate("+b+","+Blockly.FieldAngle.HALF+
","+Blockly.FieldAngle.HALF+")"},a);Blockly.utils.createSvgElement("circle",{cx:Blockly.FieldAngle.HALF,cy:Blockly.FieldAngle.HALF,r:Blockly.FieldAngle.CENTER_RADIUS,"class":"blocklyAngleCenterPoint"},a);this.handle_=Blockly.utils.createSvgElement("g",{},a);Blockly.utils.createSvgElement("circle",{cx:0,cy:0,r:Blockly.FieldAngle.HANDLE_RADIUS,"class":"blocklyAngleDragHandle"},this.handle_);this.arrowSvg_=Blockly.utils.createSvgElement("image",{width:Blockly.FieldAngle.ARROW_WIDTH,height:Blockly.FieldAngle.ARROW_WIDTH,
x:-Blockly.FieldAngle.ARROW_WIDTH/2,y:-Blockly.FieldAngle.ARROW_WIDTH/2},this.handle_);this.arrowSvg_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+Blockly.FieldAngle.ARROW_SVG_PATH);Blockly.DropDownDiv.setColour(this.sourceBlock_.parentBlock_.getColour(),this.sourceBlock_.getColourTertiary());Blockly.DropDownDiv.setCategory(this.sourceBlock_.parentBlock_.getCategory());Blockly.DropDownDiv.showPositionedByBlock(this,this.sourceBlock_);this.mouseDownWrapper_=
Blockly.bindEvent_(this.handle_,"mousedown",this,this.onMouseDown);this.updateGraph_()};Blockly.FieldAngle.prototype.onMouseDown=function(){this.mouseMoveWrapper_=Blockly.bindEvent_(document.body,"mousemove",this,this.onMouseMove);this.mouseUpWrapper_=Blockly.bindEvent_(document.body,"mouseup",this,this.onMouseUp)};Blockly.FieldAngle.prototype.onMouseUp=function(){Blockly.unbindEvent_(this.mouseMoveWrapper_);Blockly.unbindEvent_(this.mouseUpWrapper_)};
Blockly.FieldAngle.prototype.onMouseMove=function(a){a.preventDefault();var b=this.gauge_.ownerSVGElement.getBoundingClientRect(),c=a.clientX-b.left-Blockly.FieldAngle.HALF;a=a.clientY-b.top-Blockly.FieldAngle.HALF;b=Math.atan(-a/c);isNaN(b)||(b=goog.math.toDegrees(b),0>c?b+=180:0<a&&(b+=360),b=Blockly.FieldAngle.CLOCKWISE?Blockly.FieldAngle.OFFSET+360-b:b-Blockly.FieldAngle.OFFSET,Blockly.FieldAngle.ROUND&&(b=Math.round(b/Blockly.FieldAngle.ROUND)*Blockly.FieldAngle.ROUND),b=this.callValidator(b),
Blockly.FieldTextInput.htmlInput_.value=b,this.setValue(b),this.validate_(),this.resizeEditor_())};Blockly.FieldAngle.prototype.setText=function(a){Blockly.FieldAngle.superClass_.setText.call(this,a);this.textElement_&&(this.updateGraph_(),this.size_.width=0)};
Blockly.FieldAngle.prototype.updateGraph_=function(){if(this.gauge_){var a=Number(this.getText())%360+Blockly.FieldAngle.OFFSET,b=goog.math.toRadians(a),c=["M ",Blockly.FieldAngle.HALF,",",Blockly.FieldAngle.HALF],d=Blockly.FieldAngle.HALF,e=Blockly.FieldAngle.HALF;if(!isNaN(b)){var f=goog.math.toRadians(Blockly.FieldAngle.OFFSET),g=Math.cos(f)*Blockly.FieldAngle.RADIUS,h=Math.sin(f)*-Blockly.FieldAngle.RADIUS;Blockly.FieldAngle.CLOCKWISE&&(b=2*f-b);d+=Math.cos(b)*Blockly.FieldAngle.RADIUS;e-=Math.sin(b)*
Blockly.FieldAngle.RADIUS;b=180<Math.abs(a-Blockly.FieldAngle.OFFSET)?1:0;f=Number(Blockly.FieldAngle.CLOCKWISE);a<Blockly.FieldAngle.OFFSET&&(f=1-f);c.push(" l ",g,",",h," A ",Blockly.FieldAngle.RADIUS,",",Blockly.FieldAngle.RADIUS," 0 ",b," ",f," ",d,",",e," z");this.arrowSvg_.setAttribute("transform","rotate("+(Blockly.FieldAngle.CLOCKWISE?a+2*Blockly.FieldAngle.OFFSET:-a)+")")}this.gauge_.setAttribute("d",c.join(""));this.line_.setAttribute("x2",d);this.line_.setAttribute("y2",e);this.handle_.setAttribute("transform",
"translate("+d+","+e+")")}};Blockly.FieldAngle.prototype.classValidator=function(a){if(null===a)return null;a=parseFloat(a||0);if(isNaN(a))return null;a%=360;0>a&&(a+=360);a>Blockly.FieldAngle.WRAP&&(a-=360);return String(a)};Blockly.Field.register("field_angle",Blockly.FieldAngle);Blockly.FieldCheckbox=function(a,b){Blockly.FieldCheckbox.superClass_.constructor.call(this,"",b);this.setValue(a);this.addArgType("checkbox")};goog.inherits(Blockly.FieldCheckbox,Blockly.Field);Blockly.FieldCheckbox.fromJson=function(a){return new Blockly.FieldCheckbox(a.checked?"TRUE":"FALSE")};Blockly.FieldCheckbox.CHECK_CHAR="\u2713";Blockly.FieldCheckbox.prototype.CURSOR="default";
Blockly.FieldCheckbox.prototype.init=function(){if(!this.fieldGroup_){Blockly.FieldCheckbox.superClass_.init.call(this);this.checkElement_=Blockly.utils.createSvgElement("text",{"class":"blocklyText blocklyCheckbox",x:-3,y:14},this.fieldGroup_);var a=document.createTextNode(Blockly.FieldCheckbox.CHECK_CHAR);this.checkElement_.appendChild(a);this.checkElement_.style.display=this.state_?"block":"none"}};Blockly.FieldCheckbox.prototype.getValue=function(){return String(this.state_).toUpperCase()};
Blockly.FieldCheckbox.prototype.setValue=function(a){a="string"==typeof a?"TRUE"==a.toUpperCase():!!a;this.state_!==a&&(this.sourceBlock_&&Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.BlockChange(this.sourceBlock_,"field",this.name,this.state_,a)),this.state_=a,this.checkElement_&&(this.checkElement_.style.display=a?"block":"none"))};Blockly.FieldCheckbox.prototype.showEditor_=function(){var a=!this.state_;this.sourceBlock_&&(a=this.callValidator(a));null!==a&&this.setValue(String(a).toUpperCase())};
Blockly.Field.register("field_checkbox",Blockly.FieldCheckbox);goog.color={};
goog.color.names={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",
darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",
ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",
lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",
moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",
seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};goog.color.parse=function(a){var b={};a=String(a);var c=goog.color.prependHashIfNecessaryHelper(a);if(goog.color.isValidHexColor_(c))return b.hex=goog.color.normalizeHex(c),b.type="hex",b;c=goog.color.isValidRgbColor_(a);if(c.length)return b.hex=goog.color.rgbArrayToHex(c),b.type="rgb",b;if(goog.color.names&&(c=goog.color.names[a.toLowerCase()]))return b.hex=c,b.type="named",b;throw Error(a+" is not a valid color string");};
goog.color.isValidColor=function(a){var b=goog.color.prependHashIfNecessaryHelper(a);return!!(goog.color.isValidHexColor_(b)||goog.color.isValidRgbColor_(a).length||goog.color.names&&goog.color.names[a.toLowerCase()])};goog.color.parseRgb=function(a){var b=goog.color.isValidRgbColor_(a);if(!b.length)throw Error(a+" is not a valid RGB color");return b};goog.color.hexToRgbStyle=function(a){return goog.color.rgbStyle_(goog.color.hexToRgb(a))};goog.color.hexTripletRe_=/#(.)(.)(.)/;
goog.color.normalizeHex=function(a){if(!goog.color.isValidHexColor_(a))throw Error("'"+a+"' is not a valid hex color");4==a.length&&(a=a.replace(goog.color.hexTripletRe_,"#$1$1$2$2$3$3"));return a.toLowerCase()};goog.color.hexToRgb=function(a){a=goog.color.normalizeHex(a);var b=parseInt(a.substr(1,2),16),c=parseInt(a.substr(3,2),16);a=parseInt(a.substr(5,2),16);return[b,c,a]};
goog.color.rgbToHex=function(a,b,c){a=Number(a);b=Number(b);c=Number(c);if(a!=(a&255)||b!=(b&255)||c!=(c&255))throw Error('"('+a+","+b+","+c+'") is not a valid RGB color');a=goog.color.prependZeroIfNecessaryHelper(a.toString(16));b=goog.color.prependZeroIfNecessaryHelper(b.toString(16));c=goog.color.prependZeroIfNecessaryHelper(c.toString(16));return"#"+a+b+c};goog.color.rgbArrayToHex=function(a){return goog.color.rgbToHex(a[0],a[1],a[2])};
goog.color.rgbToHsl=function(a,b,c){a/=255;b/=255;c/=255;var d=Math.max(a,b,c),e=Math.min(a,b,c),f=0,g=0,h=.5*(d+e);d!=e&&(d==a?f=60*(b-c)/(d-e):d==b?f=60*(c-a)/(d-e)+120:d==c&&(f=60*(a-b)/(d-e)+240),g=0<h&&.5>=h?(d-e)/(2*h):(d-e)/(2-2*h));return[Math.round(f+360)%360,g,h]};goog.color.rgbArrayToHsl=function(a){return goog.color.rgbToHsl(a[0],a[1],a[2])};goog.color.hueToRgb_=function(a,b,c){0>c?c+=1:1<c&&--c;return 1>6*c?a+6*(b-a)*c:1>2*c?b:2>3*c?a+(b-a)*(2/3-c)*6:a};
goog.color.hslToRgb=function(a,b,c){a/=360;if(0==b)c=b=a=255*c;else{var d=.5>c?c*(1+b):c+b-b*c;var e=2*c-d;c=255*goog.color.hueToRgb_(e,d,a+1/3);b=255*goog.color.hueToRgb_(e,d,a);a=255*goog.color.hueToRgb_(e,d,a-1/3)}return[Math.round(c),Math.round(b),Math.round(a)]};goog.color.hslArrayToRgb=function(a){return goog.color.hslToRgb(a[0],a[1],a[2])};goog.color.validHexColorRe_=/^#(?:[0-9a-f]{3}){1,2}$/i;goog.color.isValidHexColor_=function(a){return goog.color.validHexColorRe_.test(a)};
goog.color.normalizedHexColorRe_=/^#[0-9a-f]{6}$/;goog.color.isNormalizedHexColor_=function(a){return goog.color.normalizedHexColorRe_.test(a)};goog.color.rgbColorRe_=/^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;goog.color.isValidRgbColor_=function(a){var b=a.match(goog.color.rgbColorRe_);if(b){a=Number(b[1]);var c=Number(b[2]);b=Number(b[3]);if(0<=a&&255>=a&&0<=c&&255>=c&&0<=b&&255>=b)return[a,c,b]}return[]};
goog.color.prependZeroIfNecessaryHelper=function(a){return 1==a.length?"0"+a:a};goog.color.prependHashIfNecessaryHelper=function(a){return"#"==a.charAt(0)?a:"#"+a};goog.color.rgbStyle_=function(a){return"rgb("+a.join(",")+")"};
goog.color.hsvToRgb=function(a,b,c){var d=0,e=0,f=0;if(0==b)f=e=d=c;else{var g=Math.floor(a/60),h=a/60-g;a=c*(1-b);var k=c*(1-b*h);b=c*(1-b*(1-h));switch(g){case 1:d=k;e=c;f=a;break;case 2:d=a;e=c;f=b;break;case 3:d=a;e=k;f=c;break;case 4:d=b;e=a;f=c;break;case 5:d=c;e=a;f=k;break;case 6:case 0:d=c,e=b,f=a}}return[Math.floor(d),Math.floor(e),Math.floor(f)]};
goog.color.rgbToHsv=function(a,b,c){var d=Math.max(Math.max(a,b),c),e=Math.min(Math.min(a,b),c);if(e==d)e=a=0;else{var f=d-e;e=f/d;a=60*(a==d?(b-c)/f:b==d?2+(c-a)/f:4+(a-b)/f);0>a&&(a+=360);360<a&&(a-=360)}return[a,e,d]};goog.color.rgbArrayToHsv=function(a){return goog.color.rgbToHsv(a[0],a[1],a[2])};goog.color.hsvArrayToRgb=function(a){return goog.color.hsvToRgb(a[0],a[1],a[2])};goog.color.hexToHsl=function(a){a=goog.color.hexToRgb(a);return goog.color.rgbToHsl(a[0],a[1],a[2])};
goog.color.hslToHex=function(a,b,c){return goog.color.rgbArrayToHex(goog.color.hslToRgb(a,b,c))};goog.color.hslArrayToHex=function(a){return goog.color.rgbArrayToHex(goog.color.hslToRgb(a[0],a[1],a[2]))};goog.color.hexToHsv=function(a){return goog.color.rgbArrayToHsv(goog.color.hexToRgb(a))};goog.color.hsvToHex=function(a,b,c){return goog.color.rgbArrayToHex(goog.color.hsvToRgb(a,b,c))};goog.color.hsvArrayToHex=function(a){return goog.color.hsvToHex(a[0],a[1],a[2])};
goog.color.hslDistance=function(a,b){var c=.5>=a[2]?a[1]*a[2]:a[1]*(1-a[2]);var d=.5>=b[2]?b[1]*b[2]:b[1]*(1-b[2]);return(a[2]-b[2])*(a[2]-b[2])+c*c+d*d-2*c*d*Math.cos(2*(a[0]/360-b[0]/360)*Math.PI)};goog.color.blend=function(a,b,c){c=goog.math.clamp(c,0,1);return[Math.round(c*a[0]+(1-c)*b[0]),Math.round(c*a[1]+(1-c)*b[1]),Math.round(c*a[2]+(1-c)*b[2])]};goog.color.darken=function(a,b){return goog.color.blend([0,0,0],a,b)};goog.color.lighten=function(a,b){return goog.color.blend([255,255,255],a,b)};
goog.color.highContrast=function(a,b){for(var c=[],d=0;d<b.length;d++)c.push({color:b[d],diff:goog.color.yiqBrightnessDiff_(b[d],a)+goog.color.colorDiff_(b[d],a)});c.sort(function(a,b){return b.diff-a.diff});return c[0].color};goog.color.yiqBrightness_=function(a){return Math.round((299*a[0]+587*a[1]+114*a[2])/1E3)};goog.color.yiqBrightnessDiff_=function(a,b){return Math.abs(goog.color.yiqBrightness_(a)-goog.color.yiqBrightness_(b))};
goog.color.colorDiff_=function(a,b){return Math.abs(a[0]-b[0])+Math.abs(a[1]-b[1])+Math.abs(a[2]-b[2])};goog.iter={};goog.iter.StopIteration="StopIteration"in goog.global?goog.global.StopIteration:{message:"StopIteration",stack:""};goog.iter.Iterator=function(){};goog.iter.Iterator.prototype.next=function(){throw goog.iter.StopIteration;};goog.iter.Iterator.prototype.__iterator__=function(a){return this};
goog.iter.toIterator=function(a){if(a instanceof goog.iter.Iterator)return a;if("function"==typeof a.__iterator__)return a.__iterator__(!1);if(goog.isArrayLike(a)){var b=0,c=new goog.iter.Iterator;c.next=function(){for(;;){if(b>=a.length)throw goog.iter.StopIteration;if(b in a)return a[b++];b++}};return c}throw Error("Not implemented");};
goog.iter.forEach=function(a,b,c){if(goog.isArrayLike(a))try{goog.array.forEach(a,b,c)}catch(d){if(d!==goog.iter.StopIteration)throw d;}else{a=goog.iter.toIterator(a);try{for(;;)b.call(c,a.next(),void 0,a)}catch(d){if(d!==goog.iter.StopIteration)throw d;}}};goog.iter.filter=function(a,b,c){var d=goog.iter.toIterator(a);a=new goog.iter.Iterator;a.next=function(){for(;;){var a=d.next();if(b.call(c,a,void 0,d))return a}};return a};
goog.iter.filterFalse=function(a,b,c){return goog.iter.filter(a,goog.functions.not(b),c)};goog.iter.range=function(a,b,c){var d=0,e=a,f=c||1;1<arguments.length&&(d=a,e=b);if(0==f)throw Error("Range step argument must not be zero");var g=new goog.iter.Iterator;g.next=function(){if(0<f&&d>=e||0>f&&d<=e)throw goog.iter.StopIteration;var a=d;d+=f;return a};return g};goog.iter.join=function(a,b){return goog.iter.toArray(a).join(b)};
goog.iter.map=function(a,b,c){var d=goog.iter.toIterator(a);a=new goog.iter.Iterator;a.next=function(){var a=d.next();return b.call(c,a,void 0,d)};return a};goog.iter.reduce=function(a,b,c,d){var e=c;goog.iter.forEach(a,function(a){e=b.call(d,e,a)});return e};goog.iter.some=function(a,b,c){a=goog.iter.toIterator(a);try{for(;;)if(b.call(c,a.next(),void 0,a))return!0}catch(d){if(d!==goog.iter.StopIteration)throw d;}return!1};
goog.iter.every=function(a,b,c){a=goog.iter.toIterator(a);try{for(;;)if(!b.call(c,a.next(),void 0,a))return!1}catch(d){if(d!==goog.iter.StopIteration)throw d;}return!0};goog.iter.chain=function(a){return goog.iter.chainFromIterable(arguments)};
goog.iter.chainFromIterable=function(a){var b=goog.iter.toIterator(a);a=new goog.iter.Iterator;var c=null;a.next=function(){for(;;){if(null==c){var a=b.next();c=goog.iter.toIterator(a)}try{return c.next()}catch(e){if(e!==goog.iter.StopIteration)throw e;c=null}}};return a};goog.iter.dropWhile=function(a,b,c){var d=goog.iter.toIterator(a);a=new goog.iter.Iterator;var e=!0;a.next=function(){for(;;){var a=d.next();if(!e||!b.call(c,a,void 0,d))return e=!1,a}};return a};
goog.iter.takeWhile=function(a,b,c){var d=goog.iter.toIterator(a);a=new goog.iter.Iterator;a.next=function(){var a=d.next();if(b.call(c,a,void 0,d))return a;throw goog.iter.StopIteration;};return a};goog.iter.toArray=function(a){if(goog.isArrayLike(a))return goog.array.toArray(a);a=goog.iter.toIterator(a);var b=[];goog.iter.forEach(a,function(a){b.push(a)});return b};
goog.iter.equals=function(a,b,c){a=goog.iter.zipLongest({},a,b);var d=c||goog.array.defaultCompareEquality;return goog.iter.every(a,function(a){return d(a[0],a[1])})};goog.iter.nextOrValue=function(a,b){try{return goog.iter.toIterator(a).next()}catch(c){if(c!=goog.iter.StopIteration)throw c;return b}};
goog.iter.product=function(a){if(goog.array.some(arguments,function(a){return!a.length})||!arguments.length)return new goog.iter.Iterator;var b=new goog.iter.Iterator,c=arguments,d=goog.array.repeat(0,c.length);b.next=function(){if(d){for(var a=goog.array.map(d,function(a,b){return c[b][a]}),b=d.length-1;0<=b;b--){goog.asserts.assert(d);if(d[b]<c[b].length-1){d[b]++;break}if(0==b){d=null;break}d[b]=0}return a}throw goog.iter.StopIteration;};return b};
goog.iter.cycle=function(a){var b=goog.iter.toIterator(a),c=[],d=0;a=new goog.iter.Iterator;var e=!1;a.next=function(){var a=null;if(!e)try{return a=b.next(),c.push(a),a}catch(g){if(g!=goog.iter.StopIteration||goog.array.isEmpty(c))throw g;e=!0}a=c[d];d=(d+1)%c.length;return a};return a};goog.iter.count=function(a,b){var c=a||0,d=goog.isDef(b)?b:1;a=new goog.iter.Iterator;a.next=function(){var a=c;c+=d;return a};return a};
goog.iter.repeat=function(a){var b=new goog.iter.Iterator;b.next=goog.functions.constant(a);return b};goog.iter.accumulate=function(a){var b=goog.iter.toIterator(a),c=0;a=new goog.iter.Iterator;a.next=function(){return c+=b.next()};return a};goog.iter.zip=function(a){var b=arguments,c=new goog.iter.Iterator;if(0<b.length){var d=goog.array.map(b,goog.iter.toIterator);c.next=function(){return goog.array.map(d,function(a){return a.next()})}}return c};
goog.iter.zipLongest=function(a,b){var c=goog.array.slice(arguments,1),d=new goog.iter.Iterator;if(0<c.length){var e=goog.array.map(c,goog.iter.toIterator);d.next=function(){var b=!1,c=goog.array.map(e,function(c){try{var d=c.next();b=!0}catch(m){if(m!==goog.iter.StopIteration)throw m;d=a}return d});if(!b)throw goog.iter.StopIteration;return c}}return d};goog.iter.compress=function(a,b){var c=goog.iter.toIterator(b);return goog.iter.filter(a,function(){return!!c.next()})};
goog.iter.GroupByIterator_=function(a,b){this.iterator=goog.iter.toIterator(a);this.keyFunc=b||goog.functions.identity};goog.inherits(goog.iter.GroupByIterator_,goog.iter.Iterator);goog.iter.GroupByIterator_.prototype.next=function(){for(;this.currentKey==this.targetKey;)this.currentValue=this.iterator.next(),this.currentKey=this.keyFunc(this.currentValue);this.targetKey=this.currentKey;return[this.currentKey,this.groupItems_(this.targetKey)]};
goog.iter.GroupByIterator_.prototype.groupItems_=function(a){for(var b=[];this.currentKey==a;){b.push(this.currentValue);try{this.currentValue=this.iterator.next()}catch(c){if(c!==goog.iter.StopIteration)throw c;break}this.currentKey=this.keyFunc(this.currentValue)}return b};goog.iter.groupBy=function(a,b){return new goog.iter.GroupByIterator_(a,b)};
goog.iter.starMap=function(a,b,c){var d=goog.iter.toIterator(a);a=new goog.iter.Iterator;a.next=function(){var a=goog.iter.toArray(d.next());return b.apply(c,goog.array.concat(a,void 0,d))};return a};
goog.iter.tee=function(a,b){var c=goog.iter.toIterator(a);a=goog.isNumber(b)?b:2;var d=goog.array.map(goog.array.range(a),function(){return[]}),e=function(){var a=c.next();goog.array.forEach(d,function(b){b.push(a)})};return goog.array.map(d,function(a){var b=new goog.iter.Iterator;b.next=function(){goog.array.isEmpty(a)&&e();goog.asserts.assert(!goog.array.isEmpty(a));return a.shift()};return b})};goog.iter.enumerate=function(a,b){return goog.iter.zip(goog.iter.count(b),a)};
goog.iter.limit=function(a,b){goog.asserts.assert(goog.math.isInt(b)&&0<=b);var c=goog.iter.toIterator(a);a=new goog.iter.Iterator;var d=b;a.next=function(){if(0<d--)return c.next();throw goog.iter.StopIteration;};return a};goog.iter.consume=function(a,b){goog.asserts.assert(goog.math.isInt(b)&&0<=b);for(a=goog.iter.toIterator(a);0<b--;)goog.iter.nextOrValue(a,null);return a};
goog.iter.slice=function(a,b,c){goog.asserts.assert(goog.math.isInt(b)&&0<=b);a=goog.iter.consume(a,b);goog.isNumber(c)&&(goog.asserts.assert(goog.math.isInt(c)&&c>=b),a=goog.iter.limit(a,c-b));return a};goog.iter.hasDuplicates_=function(a){var b=[];goog.array.removeDuplicates(a,b);return a.length!=b.length};goog.iter.permutations=function(a,b){a=goog.iter.toArray(a);b=goog.isNumber(b)?b:a.length;b=goog.array.repeat(a,b);b=goog.iter.product.apply(void 0,b);return goog.iter.filter(b,function(a){return!goog.iter.hasDuplicates_(a)})};
goog.iter.combinations=function(a,b){function c(a){return d[a]}var d=goog.iter.toArray(a);a=goog.iter.range(d.length);b=goog.iter.permutations(a,b);var e=goog.iter.filter(b,function(a){return goog.array.isSorted(a)});b=new goog.iter.Iterator;b.next=function(){return goog.array.map(e.next(),c)};return b};
goog.iter.combinationsWithReplacement=function(a,b){function c(a){return d[a]}var d=goog.iter.toArray(a);a=goog.array.range(d.length);b=goog.array.repeat(a,b);b=goog.iter.product.apply(void 0,b);var e=goog.iter.filter(b,function(a){return goog.array.isSorted(a)});b=new goog.iter.Iterator;b.next=function(){return goog.array.map(e.next(),c)};return b};goog.dom.TagWalkType={START_TAG:1,OTHER:0,END_TAG:-1};goog.dom.TagIterator=function(a,b,c,d,e){this.reversed=!!b;this.node=null;this.tagType=goog.dom.TagWalkType.OTHER;this.started_=!1;this.constrained=!c;a&&this.setPosition(a,d);this.depth=void 0!=e?e:this.tagType||0;this.reversed&&(this.depth*=-1)};goog.inherits(goog.dom.TagIterator,goog.iter.Iterator);
goog.dom.TagIterator.prototype.setPosition=function(a,b,c){if(this.node=a)goog.isNumber(b)?this.tagType=b:this.tagType=this.node.nodeType!=goog.dom.NodeType.ELEMENT?goog.dom.TagWalkType.OTHER:this.reversed?goog.dom.TagWalkType.END_TAG:goog.dom.TagWalkType.START_TAG;goog.isNumber(c)&&(this.depth=c)};goog.dom.TagIterator.prototype.copyFrom=function(a){this.node=a.node;this.tagType=a.tagType;this.depth=a.depth;this.reversed=a.reversed;this.constrained=a.constrained};
goog.dom.TagIterator.prototype.clone=function(){return new goog.dom.TagIterator(this.node,this.reversed,!this.constrained,this.tagType,this.depth)};goog.dom.TagIterator.prototype.skipTag=function(){var a=this.reversed?goog.dom.TagWalkType.END_TAG:goog.dom.TagWalkType.START_TAG;this.tagType==a&&(this.tagType=-1*a,this.depth+=this.tagType*(this.reversed?-1:1))};
goog.dom.TagIterator.prototype.restartTag=function(){var a=this.reversed?goog.dom.TagWalkType.START_TAG:goog.dom.TagWalkType.END_TAG;this.tagType==a&&(this.tagType=-1*a,this.depth+=this.tagType*(this.reversed?-1:1))};
goog.dom.TagIterator.prototype.next=function(){if(this.started_){if(!this.node||this.constrained&&0==this.depth)throw goog.iter.StopIteration;var a=this.node;var b=this.reversed?goog.dom.TagWalkType.END_TAG:goog.dom.TagWalkType.START_TAG;if(this.tagType==b){var c=this.reversed?a.lastChild:a.firstChild;c?this.setPosition(c):this.setPosition(a,-1*b)}else(c=this.reversed?a.previousSibling:a.nextSibling)?this.setPosition(c):this.setPosition(a.parentNode,-1*b);this.depth+=this.tagType*(this.reversed?-1:
1)}else this.started_=!0;a=this.node;if(!this.node)throw goog.iter.StopIteration;return a};goog.dom.TagIterator.prototype.isStarted=function(){return this.started_};goog.dom.TagIterator.prototype.isStartTag=function(){return this.tagType==goog.dom.TagWalkType.START_TAG};goog.dom.TagIterator.prototype.isEndTag=function(){return this.tagType==goog.dom.TagWalkType.END_TAG};goog.dom.TagIterator.prototype.isNonElement=function(){return this.tagType==goog.dom.TagWalkType.OTHER};
goog.dom.TagIterator.prototype.equals=function(a){return a.node==this.node&&(!this.node||a.tagType==this.tagType)};goog.dom.TagIterator.prototype.splice=function(a){var b=this.node;this.restartTag();this.reversed=!this.reversed;goog.dom.TagIterator.prototype.next.call(this);this.reversed=!this.reversed;for(var c=goog.isArrayLike(arguments[0])?arguments[0]:arguments,d=c.length-1;0<=d;d--)goog.dom.insertSiblingAfter(c[d],b);goog.dom.removeNode(b)};goog.dom.NodeIterator=function(a,b,c,d){goog.dom.TagIterator.call(this,a,b,c,null,d)};goog.inherits(goog.dom.NodeIterator,goog.dom.TagIterator);goog.dom.NodeIterator.prototype.next=function(){do goog.dom.NodeIterator.superClass_.next.call(this);while(this.isEndTag());return this.node};goog.ui.PaletteRenderer=function(){goog.ui.ControlRenderer.call(this)};goog.inherits(goog.ui.PaletteRenderer,goog.ui.ControlRenderer);goog.addSingletonGetter(goog.ui.PaletteRenderer);goog.ui.PaletteRenderer.cellId_=0;goog.ui.PaletteRenderer.CSS_CLASS="goog-palette";goog.ui.PaletteRenderer.prototype.createDom=function(a){var b=this.getClassNames(a);a=a.getDomHelper().createDom("DIV",b,this.createGrid(a.getContent(),a.getSize(),a.getDomHelper()));goog.a11y.aria.setRole(a,goog.a11y.aria.Role.GRID);return a};
goog.ui.PaletteRenderer.prototype.createGrid=function(a,b,c){for(var d=[],e=0,f=0;e<b.height;e++){for(var g=[],h=0;h<b.width;h++){var k=a&&a[f++];g.push(this.createCell(k,c))}d.push(this.createRow(g,c))}return this.createTable(d,c)};goog.ui.PaletteRenderer.prototype.createTable=function(a,b){a=b.createDom("TABLE",this.getCssClass()+"-table",b.createDom("TBODY",this.getCssClass()+"-body",a));a.cellSpacing="0";a.cellPadding="0";return a};
goog.ui.PaletteRenderer.prototype.createRow=function(a,b){a=b.createDom("TR",this.getCssClass()+"-row",a);goog.a11y.aria.setRole(a,goog.a11y.aria.Role.ROW);return a};
goog.ui.PaletteRenderer.prototype.createCell=function(a,b){a=b.createDom("TD",{"class":this.getCssClass()+"-cell",id:this.getCssClass()+"-cell-"+goog.ui.PaletteRenderer.cellId_++},a);goog.a11y.aria.setRole(a,goog.a11y.aria.Role.GRIDCELL);goog.a11y.aria.setState(a,goog.a11y.aria.State.SELECTED,!1);goog.dom.getTextContent(a)||goog.a11y.aria.getLabel(a)||(b=this.findAriaLabelForCell_(a))&&goog.a11y.aria.setLabel(a,b);return a};
goog.ui.PaletteRenderer.prototype.findAriaLabelForCell_=function(a){a=new goog.dom.NodeIterator(a);for(var b="",c;!b&&(c=goog.iter.nextOrValue(a,null));)c.nodeType==goog.dom.NodeType.ELEMENT&&(b=goog.a11y.aria.getLabel(c)||c.title);return b};goog.ui.PaletteRenderer.prototype.canDecorate=function(a){return!1};goog.ui.PaletteRenderer.prototype.decorate=function(a,b){return null};
goog.ui.PaletteRenderer.prototype.setContent=function(a,b){if(a){var c=goog.dom.getElementsByTagNameAndClass("TBODY",this.getCssClass()+"-body",a)[0];if(c){var d=0;goog.array.forEach(c.rows,function(a){goog.array.forEach(a.cells,function(a){goog.dom.removeChildren(a);if(b){var c=b[d++];c&&goog.dom.appendChild(a,c)}})});if(d<b.length){for(var e=[],f=goog.dom.getDomHelper(a),g=c.rows[0].cells.length;d<b.length;){var h=b[d++];e.push(this.createCell(h,f));e.length==g&&(h=this.createRow(e,f),goog.dom.appendChild(c,
h),e.length=0)}if(0<e.length){for(;e.length<g;)e.push(this.createCell("",f));h=this.createRow(e,f);goog.dom.appendChild(c,h)}}}goog.style.setUnselectable(a,!0,goog.userAgent.GECKO)}};goog.ui.PaletteRenderer.prototype.getContainingItem=function(a,b){for(a=a.getElement();b&&b.nodeType==goog.dom.NodeType.ELEMENT&&b!=a;){if("TD"==b.tagName&&goog.dom.classlist.contains(b,this.getCssClass()+"-cell"))return b.firstChild;b=b.parentNode}return null};
goog.ui.PaletteRenderer.prototype.highlightCell=function(a,b,c){b&&(b=this.getCellForItem(b),goog.asserts.assert(b),goog.dom.classlist.enable(b,this.getCssClass()+"-cell-hover",c),c?goog.a11y.aria.setState(a.getElementStrict(),goog.a11y.aria.State.ACTIVEDESCENDANT,b.id):b.id==goog.a11y.aria.getState(a.getElementStrict(),goog.a11y.aria.State.ACTIVEDESCENDANT)&&goog.a11y.aria.removeState(a.getElementStrict(),goog.a11y.aria.State.ACTIVEDESCENDANT))};
goog.ui.PaletteRenderer.prototype.getCellForItem=function(a){return a?a.parentNode:null};goog.ui.PaletteRenderer.prototype.selectCell=function(a,b,c){b&&(a=b.parentNode,goog.dom.classlist.enable(a,this.getCssClass()+"-cell-selected",c),goog.a11y.aria.setState(a,goog.a11y.aria.State.SELECTED,c))};goog.ui.PaletteRenderer.prototype.getCssClass=function(){return goog.ui.PaletteRenderer.CSS_CLASS};goog.ui.SelectionModel=function(a){goog.events.EventTarget.call(this);this.items_=[];this.addItems(a)};goog.inherits(goog.ui.SelectionModel,goog.events.EventTarget);goog.tagUnsealableClass(goog.ui.SelectionModel);goog.ui.SelectionModel.prototype.selectedItem_=null;goog.ui.SelectionModel.prototype.selectionHandler_=null;goog.ui.SelectionModel.prototype.getSelectionHandler=function(){return this.selectionHandler_};
goog.ui.SelectionModel.prototype.setSelectionHandler=function(a){this.selectionHandler_=a};goog.ui.SelectionModel.prototype.getItemCount=function(){return this.items_.length};goog.ui.SelectionModel.prototype.indexOfItem=function(a){return a?goog.array.indexOf(this.items_,a):-1};goog.ui.SelectionModel.prototype.getFirst=function(){return this.items_[0]};goog.ui.SelectionModel.prototype.getLast=function(){return this.items_[this.items_.length-1]};
goog.ui.SelectionModel.prototype.getItemAt=function(a){return this.items_[a]||null};goog.ui.SelectionModel.prototype.addItems=function(a){a&&(goog.array.forEach(a,function(a){this.selectItem_(a,!1)},this),goog.array.extend(this.items_,a))};goog.ui.SelectionModel.prototype.addItem=function(a){this.addItemAt(a,this.getItemCount())};goog.ui.SelectionModel.prototype.addItemAt=function(a,b){a&&(this.selectItem_(a,!1),goog.array.insertAt(this.items_,a,b))};
goog.ui.SelectionModel.prototype.removeItem=function(a){a&&goog.array.remove(this.items_,a)&&a==this.selectedItem_&&(this.selectedItem_=null,this.dispatchEvent(goog.events.EventType.SELECT))};goog.ui.SelectionModel.prototype.removeItemAt=function(a){this.removeItem(this.getItemAt(a))};goog.ui.SelectionModel.prototype.getSelectedItem=function(){return this.selectedItem_};goog.ui.SelectionModel.prototype.getItems=function(){return goog.array.clone(this.items_)};
goog.ui.SelectionModel.prototype.setSelectedItem=function(a){a!=this.selectedItem_&&(this.selectItem_(this.selectedItem_,!1),this.selectedItem_=a,this.selectItem_(a,!0));this.dispatchEvent(goog.events.EventType.SELECT)};goog.ui.SelectionModel.prototype.getSelectedIndex=function(){return this.indexOfItem(this.selectedItem_)};goog.ui.SelectionModel.prototype.setSelectedIndex=function(a){this.setSelectedItem(this.getItemAt(a))};
goog.ui.SelectionModel.prototype.clear=function(){goog.array.clear(this.items_);this.selectedItem_=null};goog.ui.SelectionModel.prototype.disposeInternal=function(){goog.ui.SelectionModel.superClass_.disposeInternal.call(this);delete this.items_;this.selectedItem_=null};goog.ui.SelectionModel.prototype.selectItem_=function(a,b){a&&("function"==typeof this.selectionHandler_?this.selectionHandler_(a,b):"function"==typeof a.setSelected&&a.setSelected(b))};goog.ui.Palette=function(a,b,c){goog.ui.Control.call(this,a,b||goog.ui.PaletteRenderer.getInstance(),c);this.setAutoStates(goog.ui.Component.State.CHECKED|goog.ui.Component.State.SELECTED|goog.ui.Component.State.OPENED,!1);this.currentCellControl_=new goog.ui.Palette.CurrentCell_;this.currentCellControl_.setParentEventTarget(this);this.lastHighlightedIndex_=-1};goog.inherits(goog.ui.Palette,goog.ui.Control);goog.tagUnsealableClass(goog.ui.Palette);goog.ui.Palette.EventType={AFTER_HIGHLIGHT:goog.events.getUniqueId("afterhighlight")};
goog.ui.Palette.prototype.size_=null;goog.ui.Palette.prototype.highlightedIndex_=-1;goog.ui.Palette.prototype.selectionModel_=null;goog.ui.Palette.prototype.disposeInternal=function(){goog.ui.Palette.superClass_.disposeInternal.call(this);this.selectionModel_&&(this.selectionModel_.dispose(),this.selectionModel_=null);this.size_=null;this.currentCellControl_.dispose()};
goog.ui.Palette.prototype.setContentInternal=function(a){goog.ui.Palette.superClass_.setContentInternal.call(this,a);this.adjustSize_();this.selectionModel_?(this.selectionModel_.clear(),this.selectionModel_.addItems(a)):(this.selectionModel_=new goog.ui.SelectionModel(a),this.selectionModel_.setSelectionHandler(goog.bind(this.selectItem_,this)),this.getHandler().listen(this.selectionModel_,goog.events.EventType.SELECT,this.handleSelectionChange));this.highlightedIndex_=-1};
goog.ui.Palette.prototype.getCaption=function(){return""};goog.ui.Palette.prototype.setCaption=function(a){};goog.ui.Palette.prototype.handleMouseOver=function(a){goog.ui.Palette.superClass_.handleMouseOver.call(this,a);var b=this.getRenderer().getContainingItem(this,a.target);b&&a.relatedTarget&&goog.dom.contains(b,a.relatedTarget)||b!=this.getHighlightedItem()&&this.setHighlightedItem(b)};
goog.ui.Palette.prototype.handleMouseDown=function(a){goog.ui.Palette.superClass_.handleMouseDown.call(this,a);this.isActive()&&(a=this.getRenderer().getContainingItem(this,a.target),a!=this.getHighlightedItem()&&this.setHighlightedItem(a))};goog.ui.Palette.prototype.performActionInternal=function(a){var b=this.getHighlightedItem();return b?(a&&this.shouldSelectHighlightedItem_(a)&&this.setSelectedItem(b),goog.ui.Palette.superClass_.performActionInternal.call(this,a)):!1};
goog.ui.Palette.prototype.shouldSelectHighlightedItem_=function(a){return this.getSelectedItem()?"mouseup"!=a.type?!0:!!this.getRenderer().getContainingItem(this,a.target):!0};
goog.ui.Palette.prototype.handleKeyEvent=function(a){var b=this.getContent();b=b?b.length:0;var c=this.size_.width;if(0==b||!this.isEnabled())return!1;if(a.keyCode==goog.events.KeyCodes.ENTER||a.keyCode==goog.events.KeyCodes.SPACE)return this.performActionInternal(a);if(a.keyCode==goog.events.KeyCodes.HOME)return this.setHighlightedIndex(0),!0;if(a.keyCode==goog.events.KeyCodes.END)return this.setHighlightedIndex(b-1),!0;var d=0>this.highlightedIndex_?this.getSelectedIndex():this.highlightedIndex_;
switch(a.keyCode){case goog.events.KeyCodes.LEFT:if(-1==d||0==d)d=b;this.setHighlightedIndex(d-1);a.preventDefault();return!0;case goog.events.KeyCodes.RIGHT:return d==b-1&&(d=-1),this.setHighlightedIndex(d+1),a.preventDefault(),!0;case goog.events.KeyCodes.UP:-1==d&&(d=b+c-1);if(d>=c)return this.setHighlightedIndex(d-c),a.preventDefault(),!0;break;case goog.events.KeyCodes.DOWN:if(-1==d&&(d=-c),d<b-c)return this.setHighlightedIndex(d+c),a.preventDefault(),!0}return!1};
goog.ui.Palette.prototype.handleSelectionChange=function(a){};goog.ui.Palette.prototype.getSize=function(){return this.size_};goog.ui.Palette.prototype.setSize=function(a,b){if(this.getElement())throw Error(goog.ui.Component.Error.ALREADY_RENDERED);this.size_=goog.isNumber(a)?new goog.math.Size(a,b):a;this.adjustSize_()};goog.ui.Palette.prototype.getHighlightedIndex=function(){return this.highlightedIndex_};
goog.ui.Palette.prototype.getHighlightedItem=function(){var a=this.getContent();return a&&a[this.highlightedIndex_]};goog.ui.Palette.prototype.getHighlightedCellElement_=function(){return this.getRenderer().getCellForItem(this.getHighlightedItem())};goog.ui.Palette.prototype.setHighlightedIndex=function(a){a!=this.highlightedIndex_&&(this.highlightIndex_(this.highlightedIndex_,!1),this.lastHighlightedIndex_=this.highlightedIndex_,this.highlightedIndex_=a,this.highlightIndex_(a,!0),this.dispatchEvent(goog.ui.Palette.EventType.AFTER_HIGHLIGHT))};
goog.ui.Palette.prototype.setHighlightedItem=function(a){var b=this.getContent();this.setHighlightedIndex(b&&a?goog.array.indexOf(b,a):-1)};goog.ui.Palette.prototype.getSelectedIndex=function(){return this.selectionModel_?this.selectionModel_.getSelectedIndex():-1};goog.ui.Palette.prototype.getSelectedItem=function(){return this.selectionModel_?this.selectionModel_.getSelectedItem():null};goog.ui.Palette.prototype.setSelectedIndex=function(a){this.selectionModel_&&this.selectionModel_.setSelectedIndex(a)};
goog.ui.Palette.prototype.setSelectedItem=function(a){this.selectionModel_&&this.selectionModel_.setSelectedItem(a)};goog.ui.Palette.prototype.highlightIndex_=function(a,b){if(this.getElement()){var c=this.getContent();if(c&&0<=a&&a<c.length){var d=this.getHighlightedCellElement_();this.currentCellControl_.getElement()!=d&&this.currentCellControl_.setElementInternal(d);this.currentCellControl_.tryHighlight(b)&&this.getRenderer().highlightCell(this,c[a],b)}}};
goog.ui.Palette.prototype.setHighlighted=function(a){a&&-1==this.highlightedIndex_?this.setHighlightedIndex(-1<this.lastHighlightedIndex_?this.lastHighlightedIndex_:0):a||this.setHighlightedIndex(-1);goog.ui.Palette.superClass_.setHighlighted.call(this,a)};goog.ui.Palette.prototype.selectItem_=function(a,b){this.getElement()&&this.getRenderer().selectCell(this,a,b)};
goog.ui.Palette.prototype.adjustSize_=function(){var a=this.getContent();if(a)if(this.size_&&this.size_.width){if(a=Math.ceil(a.length/this.size_.width),!goog.isNumber(this.size_.height)||this.size_.height<a)this.size_.height=a}else a=Math.ceil(Math.sqrt(a.length)),this.size_=new goog.math.Size(a,a);else this.size_=new goog.math.Size(0,0)};goog.ui.Palette.CurrentCell_=function(){goog.ui.Control.call(this,null);this.setDispatchTransitionEvents(goog.ui.Component.State.HOVER,!0)};
goog.inherits(goog.ui.Palette.CurrentCell_,goog.ui.Control);goog.ui.Palette.CurrentCell_.prototype.tryHighlight=function(a){this.setHighlighted(a);return this.isHighlighted()==a};goog.ui.ColorPalette=function(a,b,c){this.colors_=a||[];goog.ui.Palette.call(this,null,b||goog.ui.PaletteRenderer.getInstance(),c);this.setColors(this.colors_)};goog.inherits(goog.ui.ColorPalette,goog.ui.Palette);goog.tagUnsealableClass(goog.ui.ColorPalette);goog.ui.ColorPalette.prototype.normalizedColors_=null;goog.ui.ColorPalette.prototype.labels_=null;goog.ui.ColorPalette.prototype.getColors=function(){return this.colors_};
goog.ui.ColorPalette.prototype.setColors=function(a,b){this.colors_=a;this.labels_=b||null;this.normalizedColors_=null;this.setContent(this.createColorNodes())};goog.ui.ColorPalette.prototype.getSelectedColor=function(){var a=this.getSelectedItem();return a?(a=goog.style.getStyle(a,"background-color"),goog.ui.ColorPalette.parseColor_(a)):null};
goog.ui.ColorPalette.prototype.setSelectedColor=function(a){a=goog.ui.ColorPalette.parseColor_(a);this.normalizedColors_||(this.normalizedColors_=goog.array.map(this.colors_,function(a){return goog.ui.ColorPalette.parseColor_(a)}));this.setSelectedIndex(a?goog.array.indexOf(this.normalizedColors_,a):-1)};
goog.ui.ColorPalette.prototype.createColorNodes=function(){return goog.array.map(this.colors_,function(a,b){var c=this.getDomHelper().createDom("DIV",{"class":this.getRenderer().getCssClass()+"-colorswatch",style:"background-color:"+a});c.title=this.labels_&&this.labels_[b]?this.labels_[b]:"#"==a.charAt(0)?"RGB ("+goog.color.hexToRgb(a).join(", ")+")":a;return c},this)};goog.ui.ColorPalette.parseColor_=function(a){if(a)try{return goog.color.parse(a).hex}catch(b){}return null};goog.ui.ColorPicker=function(a,b){goog.ui.Component.call(this,a);this.colorPalette_=b||null;this.getHandler().listen(this,goog.ui.Component.EventType.ACTION,this.onColorPaletteAction_)};goog.inherits(goog.ui.ColorPicker,goog.ui.Component);goog.ui.ColorPicker.DEFAULT_NUM_COLS=5;goog.ui.ColorPicker.EventType={CHANGE:"change"};goog.ui.ColorPicker.prototype.focusable_=!0;goog.ui.ColorPicker.prototype.getColors=function(){return this.colorPalette_?this.colorPalette_.getColors():null};
goog.ui.ColorPicker.prototype.setColors=function(a){this.colorPalette_?this.colorPalette_.setColors(a):this.createColorPalette_(a)};goog.ui.ColorPicker.prototype.addColors=function(a){this.setColors(a)};goog.ui.ColorPicker.prototype.setSize=function(a){this.colorPalette_||this.createColorPalette_([]);this.colorPalette_.setSize(a)};goog.ui.ColorPicker.prototype.getSize=function(){return this.colorPalette_?this.colorPalette_.getSize():null};goog.ui.ColorPicker.prototype.setColumnCount=function(a){this.setSize(a)};
goog.ui.ColorPicker.prototype.getSelectedIndex=function(){return this.colorPalette_?this.colorPalette_.getSelectedIndex():-1};goog.ui.ColorPicker.prototype.setSelectedIndex=function(a){this.colorPalette_&&this.colorPalette_.setSelectedIndex(a)};goog.ui.ColorPicker.prototype.getSelectedColor=function(){return this.colorPalette_?this.colorPalette_.getSelectedColor():null};goog.ui.ColorPicker.prototype.setSelectedColor=function(a){this.colorPalette_&&this.colorPalette_.setSelectedColor(a)};
goog.ui.ColorPicker.prototype.isFocusable=function(){return this.focusable_};goog.ui.ColorPicker.prototype.setFocusable=function(a){this.focusable_=a;this.colorPalette_&&this.colorPalette_.setSupportedState(goog.ui.Component.State.FOCUSED,a)};goog.ui.ColorPicker.prototype.canDecorate=function(a){return!1};
goog.ui.ColorPicker.prototype.enterDocument=function(){goog.ui.ColorPicker.superClass_.enterDocument.call(this);this.colorPalette_&&this.colorPalette_.render(this.getElement());this.getElement().unselectable="on"};goog.ui.ColorPicker.prototype.disposeInternal=function(){goog.ui.ColorPicker.superClass_.disposeInternal.call(this);this.colorPalette_&&(this.colorPalette_.dispose(),this.colorPalette_=null)};goog.ui.ColorPicker.prototype.focus=function(){this.colorPalette_&&this.colorPalette_.getElement().focus()};
goog.ui.ColorPicker.prototype.onColorPaletteAction_=function(a){a.stopPropagation();this.dispatchEvent(goog.ui.ColorPicker.EventType.CHANGE)};goog.ui.ColorPicker.prototype.createColorPalette_=function(a){a=new goog.ui.ColorPalette(a,null,this.getDomHelper());a.setSize(goog.ui.ColorPicker.DEFAULT_NUM_COLS);a.setSupportedState(goog.ui.Component.State.FOCUSED,this.focusable_);this.addChild(a);this.colorPalette_=a;this.isInDocument()&&this.colorPalette_.render(this.getElement())};
goog.ui.ColorPicker.createSimpleColorGrid=function(a){a=new goog.ui.ColorPicker(a);a.setSize(7);a.setColors(goog.ui.ColorPicker.SIMPLE_GRID_COLORS);return a};goog.ui.ColorPicker.SIMPLE_GRID_COLORS="#ffffff #cccccc #c0c0c0 #999999 #666666 #333333 #000000 #ffcccc #ff6666 #ff0000 #cc0000 #990000 #660000 #330000 #ffcc99 #ff9966 #ff9900 #ff6600 #cc6600 #993300 #663300 #ffff99 #ffff66 #ffcc66 #ffcc33 #cc9933 #996633 #663333 #ffffcc #ffff33 #ffff00 #ffcc00 #999900 #666600 #333300 #99ff99 #66ff99 #33ff33 #33cc00 #009900 #006600 #003300 #99ffff #33ffff #66cccc #00cccc #339999 #336666 #003333 #ccffff #66ffff #33ccff #3366ff #3333ff #000099 #000066 #ccccff #9999ff #6666cc #6633ff #6600cc #333399 #330099 #ffccff #ff99ff #cc66cc #cc33cc #993399 #663366 #330033".split(" ");Blockly.FieldColour=function(a,b){Blockly.FieldColour.superClass_.constructor.call(this,a,b);this.addArgType("colour")};goog.inherits(Blockly.FieldColour,Blockly.Field);Blockly.FieldColour.fromJson=function(a){return new Blockly.FieldColour(a.colour)};Blockly.FieldColour.prototype.colours_=null;Blockly.FieldColour.prototype.columns_=0;Blockly.FieldColour.prototype.init=function(a){this.fieldGroup_||(Blockly.FieldColour.superClass_.init.call(this,a),this.setValue(this.getValue()))};
Blockly.FieldColour.prototype.CURSOR="default";Blockly.FieldColour.prototype.dispose=function(){Blockly.WidgetDiv.hideIfOwner(this);Blockly.FieldColour.superClass_.dispose.call(this)};Blockly.FieldColour.prototype.getValue=function(){return this.colour_};
Blockly.FieldColour.prototype.setValue=function(a){this.sourceBlock_&&Blockly.Events.isEnabled()&&this.colour_!=a&&Blockly.Events.fire(new Blockly.Events.BlockChange(this.sourceBlock_,"field",this.name,this.colour_,a));this.colour_=a;this.sourceBlock_&&this.sourceBlock_.setColour(a,a,a)};Blockly.FieldColour.prototype.getText=function(){var a=this.colour_,b=a.match(/^#(.)\1(.)\2(.)\3$/);b&&(a="#"+b[1]+b[2]+b[3]);return a};
Blockly.FieldColour.prototype.getSize=function(){return new goog.math.Size(Blockly.BlockSvg.FIELD_WIDTH,Blockly.BlockSvg.FIELD_HEIGHT)};Blockly.FieldColour.COLOURS=goog.ui.ColorPicker.SIMPLE_GRID_COLORS;Blockly.FieldColour.COLUMNS=7;Blockly.FieldColour.prototype.setColours=function(a){this.colours_=a;return this};Blockly.FieldColour.prototype.setColumns=function(a){this.columns_=a;return this};
Blockly.FieldColour.prototype.showEditor_=function(){Blockly.WidgetDiv.show(this,this.sourceBlock_.RTL,Blockly.FieldColour.widgetDispose_);var a=Blockly.utils.getViewportBBox(),b=this.getScaledBBox_(),c=this.createWidget_(),d=goog.style.getSize(c.getElement());Blockly.WidgetDiv.positionWithAnchor(a,b,d,this.sourceBlock_.RTL);var e=this;Blockly.FieldColour.changeEventKey_=goog.events.listen(c,goog.ui.ColorPicker.EventType.CHANGE,function(a){a=a.target.getSelectedColor()||"#000000";Blockly.WidgetDiv.hide();
e.sourceBlock_&&(a=e.callValidator(a));null!==a&&e.setValue(a)})};Blockly.FieldColour.prototype.createWidget_=function(){var a=new goog.ui.ColorPicker;a.setSize(this.columns_||Blockly.FieldColour.COLUMNS);a.setColors(this.colours_||Blockly.FieldColour.COLOURS);a.render(Blockly.WidgetDiv.DIV);a.setSelectedColor(this.getValue());return a};Blockly.FieldColour.widgetDispose_=function(){Blockly.FieldColour.changeEventKey_&&goog.events.unlistenByKey(Blockly.FieldColour.changeEventKey_);Blockly.Events.setGroup(!1)};
Blockly.Field.register("field_colour",Blockly.FieldColour);goog.events.MouseWheelHandler=function(a,b){goog.events.EventTarget.call(this);this.element_=a;a=goog.dom.isElement(this.element_)?this.element_:this.element_?this.element_.body:null;this.isRtl_=!!a&&goog.style.isRightToLeft(a);this.listenKey_=goog.events.listen(this.element_,goog.userAgent.GECKO?"DOMMouseScroll":"mousewheel",this,b)};goog.inherits(goog.events.MouseWheelHandler,goog.events.EventTarget);goog.events.MouseWheelHandler.EventType={MOUSEWHEEL:"mousewheel"};
goog.events.MouseWheelHandler.prototype.setMaxDeltaX=function(a){this.maxDeltaX_=a};goog.events.MouseWheelHandler.prototype.setMaxDeltaY=function(a){this.maxDeltaY_=a};
goog.events.MouseWheelHandler.prototype.handleEvent=function(a){var b=0,c=0,d=a.getBrowserEvent();"mousewheel"==d.type?(a=goog.events.MouseWheelHandler.smartScale_(-d.wheelDelta,40),goog.isDef(d.wheelDeltaX)?(b=goog.events.MouseWheelHandler.smartScale_(-d.wheelDeltaX,40),c=goog.events.MouseWheelHandler.smartScale_(-d.wheelDeltaY,40)):c=a):(a=d.detail,100<a?a=3:-100>a&&(a=-3),goog.isDef(d.axis)&&d.axis===d.HORIZONTAL_AXIS?b=a:c=a);goog.isNumber(this.maxDeltaX_)&&(b=goog.math.clamp(b,-this.maxDeltaX_,
this.maxDeltaX_));goog.isNumber(this.maxDeltaY_)&&(c=goog.math.clamp(c,-this.maxDeltaY_,this.maxDeltaY_));this.isRtl_&&(b=-b);b=new goog.events.MouseWheelEvent(a,d,b,c);this.dispatchEvent(b)};goog.events.MouseWheelHandler.smartScale_=function(a,b){return goog.userAgent.WEBKIT&&(goog.userAgent.MAC||goog.userAgent.LINUX)&&0!=a%b?a:a/b};
goog.events.MouseWheelHandler.prototype.disposeInternal=function(){goog.events.MouseWheelHandler.superClass_.disposeInternal.call(this);goog.events.unlistenByKey(this.listenKey_);this.listenKey_=null};goog.events.MouseWheelEvent=function(a,b,c,d){goog.events.BrowserEvent.call(this,b);this.type=goog.events.MouseWheelHandler.EventType.MOUSEWHEEL;this.detail=a;this.deltaX=c;this.deltaY=d};goog.inherits(goog.events.MouseWheelEvent,goog.events.BrowserEvent);goog.fx={};goog.fx.Transition=function(){};goog.fx.Transition.EventType={PLAY:"play",BEGIN:"begin",RESUME:"resume",END:"end",STOP:"stop",FINISH:"finish",PAUSE:"pause"};goog.fx.TransitionBase=function(){goog.events.EventTarget.call(this);this.state_=goog.fx.TransitionBase.State.STOPPED;this.endTime=this.startTime=null};goog.inherits(goog.fx.TransitionBase,goog.events.EventTarget);goog.fx.TransitionBase.State={STOPPED:0,PAUSED:-1,PLAYING:1};goog.fx.TransitionBase.prototype.play=goog.abstractMethod;goog.fx.TransitionBase.prototype.stop=goog.abstractMethod;goog.fx.TransitionBase.prototype.pause=goog.abstractMethod;goog.fx.TransitionBase.prototype.getStateInternal=function(){return this.state_};
goog.fx.TransitionBase.prototype.setStatePlaying=function(){this.state_=goog.fx.TransitionBase.State.PLAYING};goog.fx.TransitionBase.prototype.setStatePaused=function(){this.state_=goog.fx.TransitionBase.State.PAUSED};goog.fx.TransitionBase.prototype.setStateStopped=function(){this.state_=goog.fx.TransitionBase.State.STOPPED};goog.fx.TransitionBase.prototype.isPlaying=function(){return this.state_==goog.fx.TransitionBase.State.PLAYING};
goog.fx.TransitionBase.prototype.isPaused=function(){return this.state_==goog.fx.TransitionBase.State.PAUSED};goog.fx.TransitionBase.prototype.isStopped=function(){return this.state_==goog.fx.TransitionBase.State.STOPPED};goog.fx.TransitionBase.prototype.onBegin=function(){this.dispatchAnimationEvent(goog.fx.Transition.EventType.BEGIN)};goog.fx.TransitionBase.prototype.onEnd=function(){this.dispatchAnimationEvent(goog.fx.Transition.EventType.END)};goog.fx.TransitionBase.prototype.onFinish=function(){this.dispatchAnimationEvent(goog.fx.Transition.EventType.FINISH)};
goog.fx.TransitionBase.prototype.onPause=function(){this.dispatchAnimationEvent(goog.fx.Transition.EventType.PAUSE)};goog.fx.TransitionBase.prototype.onPlay=function(){this.dispatchAnimationEvent(goog.fx.Transition.EventType.PLAY)};goog.fx.TransitionBase.prototype.onResume=function(){this.dispatchAnimationEvent(goog.fx.Transition.EventType.RESUME)};goog.fx.TransitionBase.prototype.onStop=function(){this.dispatchAnimationEvent(goog.fx.Transition.EventType.STOP)};
goog.fx.TransitionBase.prototype.dispatchAnimationEvent=function(a){this.dispatchEvent(a)};goog.async.AnimationDelay=function(a,b,c){goog.Disposable.call(this);this.id_=null;this.usingListeners_=!1;this.listener_=a;this.handler_=c;this.win_=b||window;this.callback_=goog.bind(this.doAction_,this)};goog.inherits(goog.async.AnimationDelay,goog.Disposable);goog.async.AnimationDelay.TIMEOUT=20;goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_="MozBeforePaint";
goog.async.AnimationDelay.prototype.start=function(){this.stop();this.usingListeners_=!1;var a=this.getRaf_(),b=this.getCancelRaf_();a&&!b&&this.win_.mozRequestAnimationFrame?(this.id_=goog.events.listen(this.win_,goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_,this.callback_),this.win_.mozRequestAnimationFrame(null),this.usingListeners_=!0):this.id_=a&&b?a.call(this.win_,this.callback_):this.win_.setTimeout(goog.functions.lock(this.callback_),goog.async.AnimationDelay.TIMEOUT)};
goog.async.AnimationDelay.prototype.startIfNotActive=function(){this.isActive()||this.start()};goog.async.AnimationDelay.prototype.stop=function(){if(this.isActive()){var a=this.getRaf_(),b=this.getCancelRaf_();a&&!b&&this.win_.mozRequestAnimationFrame?goog.events.unlistenByKey(this.id_):a&&b?b.call(this.win_,this.id_):this.win_.clearTimeout(this.id_)}this.id_=null};goog.async.AnimationDelay.prototype.fire=function(){this.stop();this.doAction_()};
goog.async.AnimationDelay.prototype.fireIfActive=function(){this.isActive()&&this.fire()};goog.async.AnimationDelay.prototype.isActive=function(){return null!=this.id_};goog.async.AnimationDelay.prototype.doAction_=function(){this.usingListeners_&&this.id_&&goog.events.unlistenByKey(this.id_);this.id_=null;this.listener_.call(this.handler_,goog.now())};goog.async.AnimationDelay.prototype.disposeInternal=function(){this.stop();goog.async.AnimationDelay.superClass_.disposeInternal.call(this)};
goog.async.AnimationDelay.prototype.getRaf_=function(){var a=this.win_;return a.requestAnimationFrame||a.webkitRequestAnimationFrame||a.mozRequestAnimationFrame||a.oRequestAnimationFrame||a.msRequestAnimationFrame||null};goog.async.AnimationDelay.prototype.getCancelRaf_=function(){var a=this.win_;return a.cancelAnimationFrame||a.cancelRequestAnimationFrame||a.webkitCancelRequestAnimationFrame||a.mozCancelRequestAnimationFrame||a.oCancelRequestAnimationFrame||a.msCancelRequestAnimationFrame||null};goog.async.Delay=function(a,b,c){goog.Disposable.call(this);this.listener_=a;this.interval_=b||0;this.handler_=c;this.callback_=goog.bind(this.doAction_,this)};goog.inherits(goog.async.Delay,goog.Disposable);goog.Delay=goog.async.Delay;goog.async.Delay.prototype.id_=0;goog.async.Delay.prototype.disposeInternal=function(){goog.async.Delay.superClass_.disposeInternal.call(this);this.stop();delete this.listener_;delete this.handler_};
goog.async.Delay.prototype.start=function(a){this.stop();this.id_=goog.Timer.callOnce(this.callback_,goog.isDef(a)?a:this.interval_)};goog.async.Delay.prototype.startIfNotActive=function(a){this.isActive()||this.start(a)};goog.async.Delay.prototype.stop=function(){this.isActive()&&goog.Timer.clear(this.id_);this.id_=0};goog.async.Delay.prototype.fire=function(){this.stop();this.doAction_()};goog.async.Delay.prototype.fireIfActive=function(){this.isActive()&&this.fire()};
goog.async.Delay.prototype.isActive=function(){return 0!=this.id_};goog.async.Delay.prototype.doAction_=function(){this.id_=0;this.listener_&&this.listener_.call(this.handler_)};goog.fx.anim={};goog.fx.anim.Animated=function(){};goog.fx.anim.TIMEOUT=goog.async.AnimationDelay.TIMEOUT;goog.fx.anim.activeAnimations_={};goog.fx.anim.animationWindow_=null;goog.fx.anim.animationDelay_=null;goog.fx.anim.registerAnimation=function(a){var b=goog.getUid(a);b in goog.fx.anim.activeAnimations_||(goog.fx.anim.activeAnimations_[b]=a);goog.fx.anim.requestAnimationFrame_()};
goog.fx.anim.unregisterAnimation=function(a){a=goog.getUid(a);delete goog.fx.anim.activeAnimations_[a];goog.object.isEmpty(goog.fx.anim.activeAnimations_)&&goog.fx.anim.cancelAnimationFrame_()};goog.fx.anim.tearDown=function(){goog.fx.anim.animationWindow_=null;goog.dispose(goog.fx.anim.animationDelay_);goog.fx.anim.animationDelay_=null;goog.fx.anim.activeAnimations_={}};
goog.fx.anim.setAnimationWindow=function(a){var b=goog.fx.anim.animationDelay_&&goog.fx.anim.animationDelay_.isActive();goog.dispose(goog.fx.anim.animationDelay_);goog.fx.anim.animationDelay_=null;goog.fx.anim.animationWindow_=a;b&&goog.fx.anim.requestAnimationFrame_()};
goog.fx.anim.requestAnimationFrame_=function(){goog.fx.anim.animationDelay_||(goog.fx.anim.animationDelay_=goog.fx.anim.animationWindow_?new goog.async.AnimationDelay(function(a){goog.fx.anim.cycleAnimations_(a)},goog.fx.anim.animationWindow_):new goog.async.Delay(function(){goog.fx.anim.cycleAnimations_(goog.now())},goog.fx.anim.TIMEOUT));var a=goog.fx.anim.animationDelay_;a.isActive()||a.start()};goog.fx.anim.cancelAnimationFrame_=function(){goog.fx.anim.animationDelay_&&goog.fx.anim.animationDelay_.stop()};
goog.fx.anim.cycleAnimations_=function(a){goog.object.forEach(goog.fx.anim.activeAnimations_,function(b){b.onAnimationFrame(a)});goog.object.isEmpty(goog.fx.anim.activeAnimations_)||goog.fx.anim.requestAnimationFrame_()};goog.fx.Animation=function(a,b,c,d){goog.fx.TransitionBase.call(this);if(!goog.isArray(a)||!goog.isArray(b))throw Error("Start and end parameters must be arrays");if(a.length!=b.length)throw Error("Start and end points must be the same length");this.startPoint=a;this.endPoint=b;this.duration=c;this.accel_=d;this.coords=[];this.useRightPositioningForRtl_=!1;this.progress=this.fps_=0;this.lastFrame=null};goog.inherits(goog.fx.Animation,goog.fx.TransitionBase);
goog.fx.Animation.prototype.getDuration=function(){return this.duration};goog.fx.Animation.prototype.enableRightPositioningForRtl=function(a){this.useRightPositioningForRtl_=a};goog.fx.Animation.prototype.isRightPositioningForRtlEnabled=function(){return this.useRightPositioningForRtl_};
goog.fx.Animation.EventType={PLAY:goog.fx.Transition.EventType.PLAY,BEGIN:goog.fx.Transition.EventType.BEGIN,RESUME:goog.fx.Transition.EventType.RESUME,END:goog.fx.Transition.EventType.END,STOP:goog.fx.Transition.EventType.STOP,FINISH:goog.fx.Transition.EventType.FINISH,PAUSE:goog.fx.Transition.EventType.PAUSE,ANIMATE:"animate",DESTROY:"destroy"};goog.fx.Animation.TIMEOUT=goog.fx.anim.TIMEOUT;goog.fx.Animation.State=goog.fx.TransitionBase.State;goog.fx.Animation.setAnimationWindow=function(a){goog.fx.anim.setAnimationWindow(a)};
goog.fx.Animation.prototype.play=function(a){if(a||this.isStopped())this.progress=0,this.coords=this.startPoint;else if(this.isPlaying())return!1;goog.fx.anim.unregisterAnimation(this);this.startTime=a=goog.now();this.isPaused()&&(this.startTime-=this.duration*this.progress);this.endTime=this.startTime+this.duration;this.lastFrame=this.startTime;if(!this.progress)this.onBegin();this.onPlay();if(this.isPaused())this.onResume();this.setStatePlaying();goog.fx.anim.registerAnimation(this);this.cycle(a);
return!0};goog.fx.Animation.prototype.stop=function(a){goog.fx.anim.unregisterAnimation(this);this.setStateStopped();a&&(this.progress=1);this.updateCoords_(this.progress);this.onStop();this.onEnd()};goog.fx.Animation.prototype.pause=function(){this.isPlaying()&&(goog.fx.anim.unregisterAnimation(this),this.setStatePaused(),this.onPause())};goog.fx.Animation.prototype.getProgress=function(){return this.progress};
goog.fx.Animation.prototype.setProgress=function(a){this.progress=a;this.isPlaying()&&(this.startTime=goog.now()-this.duration*this.progress,this.endTime=this.startTime+this.duration)};goog.fx.Animation.prototype.disposeInternal=function(){this.isStopped()||this.stop(!1);this.onDestroy();goog.fx.Animation.superClass_.disposeInternal.call(this)};goog.fx.Animation.prototype.destroy=function(){this.dispose()};goog.fx.Animation.prototype.onAnimationFrame=function(a){this.cycle(a)};
goog.fx.Animation.prototype.cycle=function(a){goog.asserts.assertNumber(this.startTime);goog.asserts.assertNumber(this.endTime);goog.asserts.assertNumber(this.lastFrame);a<this.startTime&&(this.endTime=a+this.endTime-this.startTime,this.startTime=a);this.progress=(a-this.startTime)/(this.endTime-this.startTime);1<this.progress&&(this.progress=1);this.fps_=1E3/(a-this.lastFrame);this.lastFrame=a;this.updateCoords_(this.progress);if(1==this.progress)this.setStateStopped(),goog.fx.anim.unregisterAnimation(this),
this.onFinish(),this.onEnd();else if(this.isPlaying())this.onAnimate()};goog.fx.Animation.prototype.updateCoords_=function(a){goog.isFunction(this.accel_)&&(a=this.accel_(a));this.coords=Array(this.startPoint.length);for(var b=0;b<this.startPoint.length;b++)this.coords[b]=(this.endPoint[b]-this.startPoint[b])*a+this.startPoint[b]};goog.fx.Animation.prototype.onAnimate=function(){this.dispatchAnimationEvent(goog.fx.Animation.EventType.ANIMATE)};goog.fx.Animation.prototype.onDestroy=function(){this.dispatchAnimationEvent(goog.fx.Animation.EventType.DESTROY)};
goog.fx.Animation.prototype.dispatchAnimationEvent=function(a){this.dispatchEvent(new goog.fx.AnimationEvent(a,this))};goog.fx.AnimationEvent=function(a,b){goog.events.Event.call(this,a);this.coords=b.coords;this.x=b.coords[0];this.y=b.coords[1];this.z=b.coords[2];this.duration=b.duration;this.progress=b.getProgress();this.fps=b.fps_;this.state=b.getStateInternal();this.anim=b};goog.inherits(goog.fx.AnimationEvent,goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts=function(){return goog.array.map(this.coords,Math.round)};goog.fx.AnimationQueue=function(){goog.fx.TransitionBase.call(this);this.queue=[]};goog.inherits(goog.fx.AnimationQueue,goog.fx.TransitionBase);goog.fx.AnimationQueue.prototype.add=function(a){goog.asserts.assert(this.isStopped(),"Not allowed to add animations to a running animation queue.");goog.array.contains(this.queue,a)||(this.queue.push(a),goog.events.listen(a,goog.fx.Transition.EventType.FINISH,this.onAnimationFinish,!1,this))};
goog.fx.AnimationQueue.prototype.remove=function(a){goog.asserts.assert(this.isStopped(),"Not allowed to remove animations from a running animation queue.");goog.array.remove(this.queue,a)&&goog.events.unlisten(a,goog.fx.Transition.EventType.FINISH,this.onAnimationFinish,!1,this)};goog.fx.AnimationQueue.prototype.onAnimationFinish=goog.abstractMethod;goog.fx.AnimationQueue.prototype.disposeInternal=function(){goog.array.forEach(this.queue,function(a){a.dispose()});this.queue.length=0;goog.fx.AnimationQueue.superClass_.disposeInternal.call(this)};
goog.fx.AnimationParallelQueue=function(){goog.fx.AnimationQueue.call(this);this.finishedCounter_=0};goog.inherits(goog.fx.AnimationParallelQueue,goog.fx.AnimationQueue);
goog.fx.AnimationParallelQueue.prototype.play=function(a){if(0==this.queue.length)return!1;if(a||this.isStopped())this.finishedCounter_=0,this.onBegin();else if(this.isPlaying())return!1;this.onPlay();if(this.isPaused())this.onResume();var b=this.isPaused()&&!a;this.startTime=goog.now();this.endTime=null;this.setStatePlaying();goog.array.forEach(this.queue,function(c){b&&!c.isPaused()||c.play(a)});return!0};
goog.fx.AnimationParallelQueue.prototype.pause=function(){this.isPlaying()&&(goog.array.forEach(this.queue,function(a){a.isPlaying()&&a.pause()}),this.setStatePaused(),this.onPause())};goog.fx.AnimationParallelQueue.prototype.stop=function(a){goog.array.forEach(this.queue,function(b){b.isStopped()||b.stop(a)});this.setStateStopped();this.endTime=goog.now();this.onStop();this.onEnd()};
goog.fx.AnimationParallelQueue.prototype.onAnimationFinish=function(a){this.finishedCounter_++;this.finishedCounter_==this.queue.length&&(this.endTime=goog.now(),this.setStateStopped(),this.onFinish(),this.onEnd())};goog.fx.AnimationSerialQueue=function(){goog.fx.AnimationQueue.call(this);this.current_=0};goog.inherits(goog.fx.AnimationSerialQueue,goog.fx.AnimationQueue);
goog.fx.AnimationSerialQueue.prototype.play=function(a){if(0==this.queue.length)return!1;if(a||this.isStopped())this.current_<this.queue.length&&!this.queue[this.current_].isStopped()&&this.queue[this.current_].stop(!1),this.current_=0,this.onBegin();else if(this.isPlaying())return!1;this.onPlay();if(this.isPaused())this.onResume();this.startTime=goog.now();this.endTime=null;this.setStatePlaying();this.queue[this.current_].play(a);return!0};
goog.fx.AnimationSerialQueue.prototype.pause=function(){this.isPlaying()&&(this.queue[this.current_].pause(),this.setStatePaused(),this.onPause())};goog.fx.AnimationSerialQueue.prototype.stop=function(a){this.setStateStopped();this.endTime=goog.now();if(a)for(a=this.current_;a<this.queue.length;++a){var b=this.queue[a];b.isStopped()&&b.play();b.isStopped()||b.stop(!0)}else this.current_<this.queue.length&&this.queue[this.current_].stop(!1);this.onStop();this.onEnd()};
goog.fx.AnimationSerialQueue.prototype.onAnimationFinish=function(a){this.isPlaying()&&(this.current_++,this.current_<this.queue.length?this.queue[this.current_].play():(this.endTime=goog.now(),this.setStateStopped(),this.onFinish(),this.onEnd()))};goog.userAgent.platform={};
goog.userAgent.platform.determineVersion_=function(){if(goog.userAgent.WINDOWS){var a=/Windows NT ([0-9.]+)/;return(a=a.exec(goog.userAgent.getUserAgentString()))?a[1]:"0"}return goog.userAgent.MAC?(a=/10[_.][0-9_.]+/,(a=a.exec(goog.userAgent.getUserAgentString()))?a[0].replace(/_/g,"."):"10"):goog.userAgent.ANDROID?(a=/Android\s+([^\);]+)(\)|;)/,(a=a.exec(goog.userAgent.getUserAgentString()))?a[1]:""):goog.userAgent.IPHONE||goog.userAgent.IPAD||goog.userAgent.IPOD?(a=/(?:iPhone|CPU)\s+OS\s+(\S+)/,(a=
a.exec(goog.userAgent.getUserAgentString()))?a[1].replace(/_/g,"."):""):""};goog.userAgent.platform.VERSION=goog.userAgent.platform.determineVersion_();goog.userAgent.platform.isVersion=function(a){return 0<=goog.string.compareVersions(goog.userAgent.platform.VERSION,a)};goog.userAgent.product={};goog.userAgent.product.ASSUME_FIREFOX=!1;goog.userAgent.product.ASSUME_IPHONE=!1;goog.userAgent.product.ASSUME_IPAD=!1;goog.userAgent.product.ASSUME_ANDROID=!1;goog.userAgent.product.ASSUME_CHROME=!1;goog.userAgent.product.ASSUME_SAFARI=!1;
goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI;goog.userAgent.product.OPERA=goog.userAgent.OPERA;goog.userAgent.product.IE=goog.userAgent.IE;goog.userAgent.product.EDGE=goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox();goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()};goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser();goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()};goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_();goog.userAgent.product.determineVersion_=function(){if(goog.userAgent.product.FIREFOX)return goog.userAgent.product.getFirstRegExpGroup_(/Firefox\/([0-9.]+)/);if(goog.userAgent.product.IE||goog.userAgent.product.EDGE||goog.userAgent.product.OPERA)return goog.userAgent.VERSION;if(goog.userAgent.product.CHROME)return goog.labs.userAgent.platform.isIos()?goog.userAgent.product.getFirstRegExpGroup_(/CriOS\/([0-9.]+)/):goog.userAgent.product.getFirstRegExpGroup_(/Chrome\/([0-9.]+)/);if(goog.userAgent.product.SAFARI&&
!goog.labs.userAgent.platform.isIos())return goog.userAgent.product.getFirstRegExpGroup_(/Version\/([0-9.]+)/);if(goog.userAgent.product.IPHONE||goog.userAgent.product.IPAD){var a=goog.userAgent.product.execRegExp_(/Version\/(\S+).*Mobile\/(\S+)/);if(a)return a[1]+"."+a[2]}else if(goog.userAgent.product.ANDROID)return(a=goog.userAgent.product.getFirstRegExpGroup_(/Android\s+([0-9.]+)/))?a:goog.userAgent.product.getFirstRegExpGroup_(/Version\/([0-9.]+)/);return""};
goog.userAgent.product.getFirstRegExpGroup_=function(a){return(a=goog.userAgent.product.execRegExp_(a))?a[1]:""};goog.userAgent.product.execRegExp_=function(a){return a.exec(goog.userAgent.getUserAgentString())};goog.userAgent.product.VERSION=goog.userAgent.product.determineVersion_();goog.userAgent.product.isVersion=function(a){return 0<=goog.string.compareVersions(goog.userAgent.product.VERSION,a)};goog.style.bidi={};goog.style.bidi.getScrollLeft=function(a){var b=goog.style.isRightToLeft(a);return b&&goog.style.bidi.usesNegativeScrollLeftInRtl_()?-a.scrollLeft:!b||goog.userAgent.EDGE_OR_IE&&goog.userAgent.isVersionOrHigher("8")||"visible"==goog.style.getComputedOverflowX(a)?a.scrollLeft:a.scrollWidth-a.clientWidth-a.scrollLeft};
goog.style.bidi.getOffsetStart=function(a){var b=a.offsetLeft,c=a.offsetParent;c||"fixed"!=goog.style.getComputedPosition(a)||(c=goog.dom.getOwnerDocument(a).documentElement);if(!c)return b;if(goog.userAgent.GECKO&&!goog.userAgent.isVersionOrHigher(58)){var d=goog.style.getBorderBox(c);b+=d.left}else goog.userAgent.isDocumentModeOrHigher(8)&&!goog.userAgent.isDocumentModeOrHigher(9)&&(d=goog.style.getBorderBox(c),b-=d.left);return goog.style.isRightToLeft(c)?c.clientWidth-(b+a.offsetWidth):b};
goog.style.bidi.setScrollOffset=function(a,b){b=Math.max(b,0);goog.style.isRightToLeft(a)?goog.style.bidi.usesNegativeScrollLeftInRtl_()?a.scrollLeft=-b:goog.userAgent.EDGE_OR_IE&&goog.userAgent.isVersionOrHigher("8")?a.scrollLeft=b:a.scrollLeft=a.scrollWidth-b-a.clientWidth:a.scrollLeft=b};
goog.style.bidi.usesNegativeScrollLeftInRtl_=function(){var a=goog.userAgent.product.SAFARI&&goog.userAgent.product.isVersion(10),b=goog.userAgent.IOS&&goog.userAgent.platform.isVersion(10);return goog.userAgent.GECKO||a||b};goog.style.bidi.setPosition=function(a,b,c,d){goog.isNull(c)||(a.style.top=c+"px");d?(a.style.right=b+"px",a.style.left=""):(a.style.left=b+"px",a.style.right="")};goog.fx.Dragger=function(a,b,c){goog.events.EventTarget.call(this);this.target=a;this.handle=b||a;this.limits=c||new goog.math.Rect(NaN,NaN,NaN,NaN);this.document_=goog.dom.getOwnerDocument(a);this.eventHandler_=new goog.events.EventHandler(this);this.registerDisposable(this.eventHandler_);this.deltaY=this.deltaX=this.startY=this.startX=this.screenY=this.screenX=this.clientY=this.clientX=0;this.enabled_=!0;this.dragging_=!1;this.preventMouseDown_=!0;this.hysteresisDistanceSquared_=0;this.useRightPositioningForRtl_=
this.ieDragStartCancellingOn_=!1;goog.events.listen(this.handle,[goog.events.EventType.TOUCHSTART,goog.events.EventType.MOUSEDOWN],this.startDrag,!1,this);this.useSetCapture_=goog.fx.Dragger.HAS_SET_CAPTURE_};goog.inherits(goog.fx.Dragger,goog.events.EventTarget);goog.tagUnsealableClass(goog.fx.Dragger);goog.fx.Dragger.HAS_SET_CAPTURE_=goog.global.document&&goog.global.document.documentElement&&!!goog.global.document.documentElement.setCapture&&!!goog.global.document.releaseCapture;
goog.fx.Dragger.cloneNode=function(a){for(var b=a.cloneNode(!0),c=goog.dom.getElementsByTagName("TEXTAREA",a),d=goog.dom.getElementsByTagName("TEXTAREA",b),e=0;e<c.length;e++)d[e].value=c[e].value;switch(a.tagName){case "TR":return goog.dom.createDom("TABLE",null,goog.dom.createDom("TBODY",null,b));case "TD":case "TH":return goog.dom.createDom("TABLE",null,goog.dom.createDom("TBODY",null,goog.dom.createDom("TR",null,b)));case "TEXTAREA":b.value=a.value;default:return b}};
goog.fx.Dragger.EventType={EARLY_CANCEL:"earlycancel",START:"start",BEFOREDRAG:"beforedrag",DRAG:"drag",END:"end"};goog.fx.Dragger.prototype.setAllowSetCapture=function(a){this.useSetCapture_=a&&goog.fx.Dragger.HAS_SET_CAPTURE_};goog.fx.Dragger.prototype.enableRightPositioningForRtl=function(a){this.useRightPositioningForRtl_=a};goog.fx.Dragger.prototype.getHandler=function(){return this.eventHandler_};goog.fx.Dragger.prototype.setLimits=function(a){this.limits=a||new goog.math.Rect(NaN,NaN,NaN,NaN)};
goog.fx.Dragger.prototype.setHysteresis=function(a){this.hysteresisDistanceSquared_=Math.pow(a,2)};goog.fx.Dragger.prototype.getHysteresis=function(){return Math.sqrt(this.hysteresisDistanceSquared_)};goog.fx.Dragger.prototype.setScrollTarget=function(a){this.scrollTarget_=a};goog.fx.Dragger.prototype.setCancelIeDragStart=function(a){this.ieDragStartCancellingOn_=a};goog.fx.Dragger.prototype.getEnabled=function(){return this.enabled_};
goog.fx.Dragger.prototype.setEnabled=function(a){this.enabled_=a};goog.fx.Dragger.prototype.setPreventMouseDown=function(a){this.preventMouseDown_=a};goog.fx.Dragger.prototype.disposeInternal=function(){goog.fx.Dragger.superClass_.disposeInternal.call(this);goog.events.unlisten(this.handle,[goog.events.EventType.TOUCHSTART,goog.events.EventType.MOUSEDOWN],this.startDrag,!1,this);this.cleanUpAfterDragging_();this.handle=this.target=null};
goog.fx.Dragger.prototype.isRightToLeft_=function(){goog.isDef(this.rightToLeft_)||(this.rightToLeft_=goog.style.isRightToLeft(this.target));return this.rightToLeft_};
goog.fx.Dragger.prototype.startDrag=function(a){var b=a.type==goog.events.EventType.MOUSEDOWN;if(!this.enabled_||this.dragging_||b&&!a.isMouseActionButton())this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL);else{if(0==this.hysteresisDistanceSquared_)if(this.fireDragStart_(a))this.dragging_=!0,this.preventMouseDown_&&b&&a.preventDefault();else return;else this.preventMouseDown_&&b&&a.preventDefault();this.setupDragHandlers();this.clientX=this.startX=a.clientX;this.clientY=this.startY=a.clientY;
this.screenX=a.screenX;this.screenY=a.screenY;this.computeInitialPosition();this.pageScroll=goog.dom.getDomHelper(this.document_).getDocumentScroll()}};
goog.fx.Dragger.prototype.setupDragHandlers=function(){var a=this.document_,b=a.documentElement,c=!this.useSetCapture_;this.eventHandler_.listen(a,[goog.events.EventType.TOUCHMOVE,goog.events.EventType.MOUSEMOVE],this.handleMove_,{capture:c,passive:!1});this.eventHandler_.listen(a,[goog.events.EventType.TOUCHEND,goog.events.EventType.MOUSEUP],this.endDrag,c);this.useSetCapture_?(b.setCapture(!1),this.eventHandler_.listen(b,goog.events.EventType.LOSECAPTURE,this.endDrag)):this.eventHandler_.listen(goog.dom.getWindow(a),
goog.events.EventType.BLUR,this.endDrag);goog.userAgent.IE&&this.ieDragStartCancellingOn_&&this.eventHandler_.listen(a,goog.events.EventType.DRAGSTART,goog.events.Event.preventDefault);this.scrollTarget_&&this.eventHandler_.listen(this.scrollTarget_,goog.events.EventType.SCROLL,this.onScroll_,c)};goog.fx.Dragger.prototype.fireDragStart_=function(a){return this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START,this,a.clientX,a.clientY,a))};
goog.fx.Dragger.prototype.cleanUpAfterDragging_=function(){this.eventHandler_.removeAll();this.useSetCapture_&&this.document_.releaseCapture()};goog.fx.Dragger.prototype.endDrag=function(a,b){this.cleanUpAfterDragging_();if(this.dragging_){this.dragging_=!1;var c=this.limitX(this.deltaX),d=this.limitY(this.deltaY);this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END,this,a.clientX,a.clientY,a,c,d,b||a.type==goog.events.EventType.TOUCHCANCEL))}else this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)};
goog.fx.Dragger.prototype.endDragCancel=function(a){this.endDrag(a,!0)};
goog.fx.Dragger.prototype.handleMove_=function(a){if(this.enabled_){var b=(this.useRightPositioningForRtl_&&this.isRightToLeft_()?-1:1)*(a.clientX-this.clientX),c=a.clientY-this.clientY;this.clientX=a.clientX;this.clientY=a.clientY;this.screenX=a.screenX;this.screenY=a.screenY;if(!this.dragging_){var d=this.startX-this.clientX,e=this.startY-this.clientY;if(d*d+e*e>this.hysteresisDistanceSquared_)if(this.fireDragStart_(a))this.dragging_=!0;else{this.isDisposed()||this.endDrag(a);return}}c=this.calculatePosition_(b,
c);b=c.x;c=c.y;this.dragging_&&this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG,this,a.clientX,a.clientY,a,b,c))&&(this.doDrag(a,b,c,!1),a.preventDefault())}};goog.fx.Dragger.prototype.calculatePosition_=function(a,b){var c=goog.dom.getDomHelper(this.document_).getDocumentScroll();a+=c.x-this.pageScroll.x;b+=c.y-this.pageScroll.y;this.pageScroll=c;this.deltaX+=a;this.deltaY+=b;a=this.limitX(this.deltaX);b=this.limitY(this.deltaY);return new goog.math.Coordinate(a,b)};
goog.fx.Dragger.prototype.onScroll_=function(a){var b=this.calculatePosition_(0,0);a.clientX=this.clientX;a.clientY=this.clientY;this.doDrag(a,b.x,b.y,!0)};goog.fx.Dragger.prototype.doDrag=function(a,b,c,d){this.defaultAction(b,c);this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG,this,a.clientX,a.clientY,a,b,c))};
goog.fx.Dragger.prototype.limitX=function(a){var b=this.limits,c=isNaN(b.left)?null:b.left;b=isNaN(b.width)?0:b.width;return Math.min(null!=c?c+b:Infinity,Math.max(null!=c?c:-Infinity,a))};goog.fx.Dragger.prototype.limitY=function(a){var b=this.limits,c=isNaN(b.top)?null:b.top;b=isNaN(b.height)?0:b.height;return Math.min(null!=c?c+b:Infinity,Math.max(null!=c?c:-Infinity,a))};
goog.fx.Dragger.prototype.computeInitialPosition=function(){this.deltaX=this.useRightPositioningForRtl_?goog.style.bidi.getOffsetStart(this.target):this.target.offsetLeft;this.deltaY=this.target.offsetTop};goog.fx.Dragger.prototype.defaultAction=function(a,b){this.useRightPositioningForRtl_&&this.isRightToLeft_()?this.target.style.right=a+"px":this.target.style.left=a+"px";this.target.style.top=b+"px"};goog.fx.Dragger.prototype.isDragging=function(){return this.dragging_};
goog.fx.DragEvent=function(a,b,c,d,e,f,g,h){goog.events.Event.call(this,a);this.clientX=c;this.clientY=d;this.browserEvent=e;this.left=goog.isDef(f)?f:b.deltaX;this.top=goog.isDef(g)?g:b.deltaY;this.dragger=b;this.dragCanceled=!!h};goog.inherits(goog.fx.DragEvent,goog.events.Event);goog.fx.dom={};goog.fx.dom.PredefinedEffect=function(a,b,c,d,e){goog.fx.Animation.call(this,b,c,d,e);this.element=a};goog.inherits(goog.fx.dom.PredefinedEffect,goog.fx.Animation);goog.fx.dom.PredefinedEffect.prototype.updateStyle=goog.nullFunction;goog.fx.dom.PredefinedEffect.prototype.isRightToLeft=function(){goog.isDef(this.rightToLeft_)||(this.rightToLeft_=goog.style.isRightToLeft(this.element));return this.rightToLeft_};
goog.fx.dom.PredefinedEffect.prototype.onAnimate=function(){this.updateStyle();goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)};goog.fx.dom.PredefinedEffect.prototype.onEnd=function(){this.updateStyle();goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)};goog.fx.dom.PredefinedEffect.prototype.onBegin=function(){this.updateStyle();goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)};
goog.fx.dom.Slide=function(a,b,c,d,e){if(2!=b.length||2!=c.length)throw Error("Start and end points must be 2D");goog.fx.dom.PredefinedEffect.apply(this,arguments)};goog.inherits(goog.fx.dom.Slide,goog.fx.dom.PredefinedEffect);goog.fx.dom.Slide.prototype.updateStyle=function(){var a=this.isRightPositioningForRtlEnabled()&&this.isRightToLeft()?"right":"left";this.element.style[a]=Math.round(this.coords[0])+"px";this.element.style.top=Math.round(this.coords[1])+"px"};
goog.fx.dom.SlideFrom=function(a,b,c,d){var e=[this.isRightPositioningForRtlEnabled()?goog.style.bidi.getOffsetStart(a):a.offsetLeft,a.offsetTop];goog.fx.dom.Slide.call(this,a,e,b,c,d)};goog.inherits(goog.fx.dom.SlideFrom,goog.fx.dom.Slide);goog.fx.dom.SlideFrom.prototype.onBegin=function(){this.startPoint=[this.isRightPositioningForRtlEnabled()?goog.style.bidi.getOffsetStart(this.element):this.element.offsetLeft,this.element.offsetTop];goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)};
goog.fx.dom.Swipe=function(a,b,c,d,e){if(2!=b.length||2!=c.length)throw Error("Start and end points must be 2D");goog.fx.dom.PredefinedEffect.apply(this,arguments);this.maxWidth_=Math.max(this.endPoint[0],this.startPoint[0]);this.maxHeight_=Math.max(this.endPoint[1],this.startPoint[1])};goog.inherits(goog.fx.dom.Swipe,goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle=function(){var a=this.coords[0],b=this.coords[1];this.clip_(Math.round(a),Math.round(b),this.maxWidth_,this.maxHeight_);this.element.style.width=Math.round(a)+"px";var c=this.isRightPositioningForRtlEnabled()&&this.isRightToLeft()?"marginRight":"marginLeft";this.element.style[c]=Math.round(a)-this.maxWidth_+"px";this.element.style.marginTop=Math.round(b)-this.maxHeight_+"px"};
goog.fx.dom.Swipe.prototype.clip_=function(a,b,c,d){this.element.style.clip="rect("+(d-b)+"px "+c+"px "+d+"px "+(c-a)+"px)"};goog.fx.dom.Scroll=function(a,b,c,d,e){if(2!=b.length||2!=c.length)throw Error("Start and end points must be 2D");goog.fx.dom.PredefinedEffect.apply(this,arguments)};goog.inherits(goog.fx.dom.Scroll,goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle=function(){this.isRightPositioningForRtlEnabled()?goog.style.bidi.setScrollOffset(this.element,Math.round(this.coords[0])):this.element.scrollLeft=Math.round(this.coords[0]);this.element.scrollTop=Math.round(this.coords[1])};goog.fx.dom.Resize=function(a,b,c,d,e){if(2!=b.length||2!=c.length)throw Error("Start and end points must be 2D");goog.fx.dom.PredefinedEffect.apply(this,arguments)};goog.inherits(goog.fx.dom.Resize,goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle=function(){this.element.style.width=Math.round(this.coords[0])+"px";this.element.style.height=Math.round(this.coords[1])+"px"};goog.fx.dom.ResizeWidth=function(a,b,c,d,e){goog.fx.dom.PredefinedEffect.call(this,a,[b],[c],d,e)};goog.inherits(goog.fx.dom.ResizeWidth,goog.fx.dom.PredefinedEffect);goog.fx.dom.ResizeWidth.prototype.updateStyle=function(){this.element.style.width=Math.round(this.coords[0])+"px"};
goog.fx.dom.ResizeHeight=function(a,b,c,d,e){goog.fx.dom.PredefinedEffect.call(this,a,[b],[c],d,e)};goog.inherits(goog.fx.dom.ResizeHeight,goog.fx.dom.PredefinedEffect);goog.fx.dom.ResizeHeight.prototype.updateStyle=function(){this.element.style.height=Math.round(this.coords[0])+"px"};
goog.fx.dom.Fade=function(a,b,c,d,e){goog.isNumber(b)&&(b=[b]);goog.isNumber(c)&&(c=[c]);goog.fx.dom.PredefinedEffect.call(this,a,b,c,d,e);if(1!=b.length||1!=c.length)throw Error("Start and end points must be 1D");this.lastOpacityUpdate_=goog.fx.dom.Fade.OPACITY_UNSET_};goog.inherits(goog.fx.dom.Fade,goog.fx.dom.PredefinedEffect);goog.fx.dom.Fade.TOLERANCE_=1/1024;goog.fx.dom.Fade.OPACITY_UNSET_=-1;
goog.fx.dom.Fade.prototype.updateStyle=function(){var a=this.coords[0];Math.abs(a-this.lastOpacityUpdate_)>=goog.fx.dom.Fade.TOLERANCE_&&(goog.style.setOpacity(this.element,a),this.lastOpacityUpdate_=a)};goog.fx.dom.Fade.prototype.onBegin=function(){this.lastOpacityUpdate_=goog.fx.dom.Fade.OPACITY_UNSET_;goog.fx.dom.Fade.superClass_.onBegin.call(this)};goog.fx.dom.Fade.prototype.onEnd=function(){this.lastOpacityUpdate_=goog.fx.dom.Fade.OPACITY_UNSET_;goog.fx.dom.Fade.superClass_.onEnd.call(this)};
goog.fx.dom.Fade.prototype.show=function(){this.element.style.display=""};goog.fx.dom.Fade.prototype.hide=function(){this.element.style.display="none"};goog.fx.dom.FadeOut=function(a,b,c){goog.fx.dom.Fade.call(this,a,1,0,b,c)};goog.inherits(goog.fx.dom.FadeOut,goog.fx.dom.Fade);goog.fx.dom.FadeIn=function(a,b,c){goog.fx.dom.Fade.call(this,a,0,1,b,c)};goog.inherits(goog.fx.dom.FadeIn,goog.fx.dom.Fade);goog.fx.dom.FadeOutAndHide=function(a,b,c){goog.fx.dom.Fade.call(this,a,1,0,b,c)};
goog.inherits(goog.fx.dom.FadeOutAndHide,goog.fx.dom.Fade);goog.fx.dom.FadeOutAndHide.prototype.onBegin=function(){this.show();goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)};goog.fx.dom.FadeOutAndHide.prototype.onEnd=function(){this.hide();goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)};goog.fx.dom.FadeInAndShow=function(a,b,c){goog.fx.dom.Fade.call(this,a,0,1,b,c)};goog.inherits(goog.fx.dom.FadeInAndShow,goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin=function(){this.show();goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)};goog.fx.dom.BgColorTransform=function(a,b,c,d,e){if(3!=b.length||3!=c.length)throw Error("Start and end points must be 3D");goog.fx.dom.PredefinedEffect.apply(this,arguments)};goog.inherits(goog.fx.dom.BgColorTransform,goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor=function(){for(var a=[],b=0;b<this.coords.length;b++)a[b]=Math.round(this.coords[b]);a="rgb("+a.join(",")+")";this.element.style.backgroundColor=a};goog.fx.dom.BgColorTransform.prototype.updateStyle=function(){this.setColor()};
goog.fx.dom.bgColorFadeIn=function(a,b,c,d){function e(){a.style.backgroundColor=f}var f=a.style.backgroundColor||"",g=goog.style.getBackgroundColor(a);g=g&&"transparent"!=g&&"rgba(0, 0, 0, 0)"!=g?goog.color.hexToRgb(goog.color.parse(g).hex):[255,255,255];b=new goog.fx.dom.BgColorTransform(a,b,g,c);d?d.listen(b,goog.fx.Transition.EventType.END,e):goog.events.listen(b,goog.fx.Transition.EventType.END,e);b.play()};
goog.fx.dom.ColorTransform=function(a,b,c,d,e){if(3!=b.length||3!=c.length)throw Error("Start and end points must be 3D");goog.fx.dom.PredefinedEffect.apply(this,arguments)};goog.inherits(goog.fx.dom.ColorTransform,goog.fx.dom.PredefinedEffect);goog.fx.dom.ColorTransform.prototype.updateStyle=function(){for(var a=[],b=0;b<this.coords.length;b++)a[b]=Math.round(this.coords[b]);a="rgb("+a.join(",")+")";this.element.style.color=a};goog.ui.RangeModel=function(){goog.events.EventTarget.call(this)};goog.inherits(goog.ui.RangeModel,goog.events.EventTarget);goog.tagUnsealableClass(goog.ui.RangeModel);goog.ui.RangeModel.prototype.value_=0;goog.ui.RangeModel.prototype.minimum_=0;goog.ui.RangeModel.prototype.maximum_=100;goog.ui.RangeModel.prototype.extent_=0;goog.ui.RangeModel.prototype.step_=1;goog.ui.RangeModel.prototype.isChanging_=!1;goog.ui.RangeModel.prototype.mute_=!1;
goog.ui.RangeModel.prototype.setMute=function(a){this.mute_=a};goog.ui.RangeModel.prototype.setValue=function(a){a=this.roundToStepWithMin(a);this.value_!=a&&(this.value_=a+this.extent_>this.maximum_?this.maximum_-this.extent_:a<this.minimum_?this.minimum_:a,this.isChanging_||this.mute_||this.dispatchEvent(goog.ui.Component.EventType.CHANGE))};goog.ui.RangeModel.prototype.getValue=function(){return this.roundToStepWithMin(this.value_)};
goog.ui.RangeModel.prototype.setExtent=function(a){a=this.roundToStepWithMin(a);this.extent_!=a&&(this.extent_=0>a?0:this.value_+a>this.maximum_?this.maximum_-this.value_:a,this.isChanging_||this.mute_||this.dispatchEvent(goog.ui.Component.EventType.CHANGE))};goog.ui.RangeModel.prototype.getExtent=function(){return this.roundToStep(this.extent_)};
goog.ui.RangeModel.prototype.setMinimum=function(a){if(this.minimum_!=a){var b=this.isChanging_;this.isChanging_=!0;this.minimum_=a;a+this.extent_>this.maximum_&&(this.extent_=this.maximum_-this.minimum_);a>this.value_&&this.setValue(a);a>this.maximum_&&(this.extent_=0,this.setMaximum(a),this.setValue(a));(this.isChanging_=b)||this.mute_||this.dispatchEvent(goog.ui.Component.EventType.CHANGE)}};goog.ui.RangeModel.prototype.getMinimum=function(){return this.roundToStepWithMin(this.minimum_)};
goog.ui.RangeModel.prototype.setMaximum=function(a){a=this.roundToStepWithMin(a);if(this.maximum_!=a){var b=this.isChanging_;this.isChanging_=!0;this.maximum_=a;a<this.value_+this.extent_&&this.setValue(a-this.extent_);a<this.minimum_&&(this.extent_=0,this.setMinimum(a),this.setValue(this.maximum_));a<this.minimum_+this.extent_&&(this.extent_=this.maximum_-this.minimum_);(this.isChanging_=b)||this.mute_||this.dispatchEvent(goog.ui.Component.EventType.CHANGE)}};
goog.ui.RangeModel.prototype.getMaximum=function(){return this.roundToStepWithMin(this.maximum_)};goog.ui.RangeModel.prototype.getStep=function(){return this.step_};goog.ui.RangeModel.prototype.setStep=function(a){this.step_!=a&&(this.step_=a,a=this.isChanging_,this.isChanging_=!0,this.setMaximum(this.getMaximum()),this.setExtent(this.getExtent()),this.setValue(this.getValue()),(this.isChanging_=a)||this.mute_||this.dispatchEvent(goog.ui.Component.EventType.CHANGE))};
goog.ui.RangeModel.prototype.roundToStepWithMin=function(a){return null==this.step_?a:this.minimum_+Math.round((a-this.minimum_)/this.step_)*this.step_};goog.ui.RangeModel.prototype.roundToStep=function(a){return null==this.step_?a:Math.round(a/this.step_)*this.step_};goog.ui.SliderBase=function(a,b){goog.ui.Component.call(this,a);this.additionalAnimations_=null;this.rangeModel=new goog.ui.RangeModel;this.labelFn_=b||goog.functions.NULL;goog.events.listen(this.rangeModel,goog.ui.Component.EventType.CHANGE,this.handleRangeModelChange,!1,this)};goog.inherits(goog.ui.SliderBase,goog.ui.Component);goog.tagUnsealableClass(goog.ui.SliderBase);
goog.ui.SliderBase.EventType={DRAG_VALUE_START:goog.events.getUniqueId("dragvaluestart"),DRAG_VALUE_END:goog.events.getUniqueId("dragvalueend"),DRAG_EXTENT_START:goog.events.getUniqueId("dragextentstart"),DRAG_EXTENT_END:goog.events.getUniqueId("dragextentend"),DRAG_START:goog.events.getUniqueId("dragstart"),DRAG_END:goog.events.getUniqueId("dragend"),ANIMATION_END:goog.events.getUniqueId("animationend")};goog.ui.SliderBase.Orientation={VERTICAL:"vertical",HORIZONTAL:"horizontal"};
goog.ui.SliderBase.prototype.orientation_=goog.ui.SliderBase.Orientation.HORIZONTAL;goog.ui.SliderBase.MOUSE_DOWN_INCREMENT_INTERVAL_=200;goog.ui.SliderBase.ANIMATION_INTERVAL_=100;goog.ui.SliderBase.prototype.isAnimating_=!1;goog.ui.SliderBase.prototype.moveToPointEnabled_=!1;goog.ui.SliderBase.prototype.blockIncrement_=10;goog.ui.SliderBase.prototype.minExtent_=0;goog.ui.SliderBase.prototype.isHandleMouseWheel_=!0;goog.ui.SliderBase.prototype.mouseDownTime_=0;
goog.ui.SliderBase.prototype.MOUSE_DOWN_DELAY_=1E3;goog.ui.SliderBase.prototype.enabled_=!0;goog.ui.SliderBase.prototype.flipForRtl_=!1;goog.ui.SliderBase.prototype.enableFlipForRtl=function(a){this.flipForRtl_=a};goog.ui.SliderBase.prototype.getCssClass=goog.abstractMethod;goog.ui.SliderBase.prototype.createDom=function(){goog.ui.SliderBase.superClass_.createDom.call(this);var a=this.getDomHelper().createDom("DIV",this.getCssClass(this.orientation_));this.decorateInternal(a)};
goog.ui.SliderBase.prototype.createThumbs=goog.abstractMethod;goog.ui.SliderBase.SLIDER_DRAGGING_CSS_CLASS_="goog-slider-dragging";goog.ui.SliderBase.THUMB_DRAGGING_CSS_CLASS_="goog-slider-thumb-dragging";goog.ui.SliderBase.DISABLED_CSS_CLASS_="goog-slider-disabled";goog.ui.SliderBase.prototype.decorateInternal=function(a){goog.ui.SliderBase.superClass_.decorateInternal.call(this,a);goog.asserts.assert(a);goog.dom.classlist.add(a,this.getCssClass(this.orientation_));this.createThumbs();this.setAriaRoles()};
goog.ui.SliderBase.prototype.enterDocument=function(){goog.ui.SliderBase.superClass_.enterDocument.call(this);this.valueDragger_=new goog.fx.Dragger(this.valueThumb);this.extentDragger_=new goog.fx.Dragger(this.extentThumb);this.valueDragger_.enableRightPositioningForRtl(this.flipForRtl_);this.extentDragger_.enableRightPositioningForRtl(this.flipForRtl_);this.valueDragger_.defaultAction=this.extentDragger_.defaultAction=goog.nullFunction;this.keyHandler_=new goog.events.KeyHandler(this.getElement());
this.enableEventHandlers_(!0);this.getElement().tabIndex=0;this.updateUi_()};
goog.ui.SliderBase.prototype.enableEventHandlers_=function(a){a?(this.getHandler().listen(this.valueDragger_,goog.fx.Dragger.EventType.BEFOREDRAG,this.handleBeforeDrag_).listen(this.extentDragger_,goog.fx.Dragger.EventType.BEFOREDRAG,this.handleBeforeDrag_).listen(this.valueDragger_,[goog.fx.Dragger.EventType.START,goog.fx.Dragger.EventType.END],this.handleThumbDragStartEnd_).listen(this.extentDragger_,[goog.fx.Dragger.EventType.START,goog.fx.Dragger.EventType.END],this.handleThumbDragStartEnd_).listen(this.keyHandler_,
goog.events.KeyHandler.EventType.KEY,this.handleKeyDown_).listen(this.getElement(),goog.events.EventType.CLICK,this.handleMouseDownAndClick_).listen(this.getElement(),goog.events.EventType.MOUSEDOWN,this.handleMouseDownAndClick_),this.isHandleMouseWheel()&&this.enableMouseWheelHandling_(!0)):(this.getHandler().unlisten(this.valueDragger_,goog.fx.Dragger.EventType.BEFOREDRAG,this.handleBeforeDrag_).unlisten(this.extentDragger_,goog.fx.Dragger.EventType.BEFOREDRAG,this.handleBeforeDrag_).unlisten(this.valueDragger_,
[goog.fx.Dragger.EventType.START,goog.fx.Dragger.EventType.END],this.handleThumbDragStartEnd_).unlisten(this.extentDragger_,[goog.fx.Dragger.EventType.START,goog.fx.Dragger.EventType.END],this.handleThumbDragStartEnd_).unlisten(this.keyHandler_,goog.events.KeyHandler.EventType.KEY,this.handleKeyDown_).unlisten(this.getElement(),goog.events.EventType.CLICK,this.handleMouseDownAndClick_).unlisten(this.getElement(),goog.events.EventType.MOUSEDOWN,this.handleMouseDownAndClick_),this.isHandleMouseWheel()&&
this.enableMouseWheelHandling_(!1))};goog.ui.SliderBase.prototype.exitDocument=function(){goog.ui.SliderBase.superClass_.exitDocument.call(this);goog.disposeAll(this.valueDragger_,this.extentDragger_,this.keyHandler_,this.mouseWheelHandler_)};
goog.ui.SliderBase.prototype.handleBeforeDrag_=function(a){var b=a.dragger==this.valueDragger_?this.valueThumb:this.extentThumb;if(this.orientation_==goog.ui.SliderBase.Orientation.VERTICAL){var c=this.getElement().clientHeight-b.offsetHeight;c=(c-a.top)/c*(this.getMaximum()-this.getMinimum())+this.getMinimum()}else c=this.getElement().clientWidth-b.offsetWidth,c=a.left/c,this.flipForRtl_&&this.isRightToLeft()&&(c=1-c),c=c*(this.getMaximum()-this.getMinimum())+this.getMinimum();c=a.dragger==this.valueDragger_?
Math.min(Math.max(c,this.getMinimum()),this.getValue()+this.getExtent()):Math.min(Math.max(c,this.getValue()),this.getMaximum());this.setThumbPosition_(b,c)};
goog.ui.SliderBase.prototype.handleThumbDragStartEnd_=function(a){var b=a.type==goog.fx.Dragger.EventType.START;goog.dom.classlist.enable(goog.asserts.assertElement(this.getElement()),goog.ui.SliderBase.SLIDER_DRAGGING_CSS_CLASS_,b);goog.dom.classlist.enable(goog.asserts.assertElement(a.target.handle),goog.ui.SliderBase.THUMB_DRAGGING_CSS_CLASS_,b);a=a.dragger==this.valueDragger_;b?(this.dispatchEvent(goog.ui.SliderBase.EventType.DRAG_START),this.dispatchEvent(a?goog.ui.SliderBase.EventType.DRAG_VALUE_START:
goog.ui.SliderBase.EventType.DRAG_EXTENT_START)):(this.dispatchEvent(goog.ui.SliderBase.EventType.DRAG_END),this.dispatchEvent(a?goog.ui.SliderBase.EventType.DRAG_VALUE_END:goog.ui.SliderBase.EventType.DRAG_EXTENT_END))};
goog.ui.SliderBase.prototype.handleKeyDown_=function(a){var b=!0;switch(a.keyCode){case goog.events.KeyCodes.HOME:this.animatedSetValue(this.getMinimum());break;case goog.events.KeyCodes.END:this.animatedSetValue(this.getMaximum());break;case goog.events.KeyCodes.PAGE_UP:this.moveThumbs(this.getBlockIncrement());break;case goog.events.KeyCodes.PAGE_DOWN:this.moveThumbs(-this.getBlockIncrement());break;case goog.events.KeyCodes.LEFT:var c=this.flipForRtl_&&this.isRightToLeft()?1:-1;this.moveThumbs(a.shiftKey?
c*this.getBlockIncrement():c*this.getUnitIncrement());break;case goog.events.KeyCodes.DOWN:this.moveThumbs(a.shiftKey?-this.getBlockIncrement():-this.getUnitIncrement());break;case goog.events.KeyCodes.RIGHT:c=this.flipForRtl_&&this.isRightToLeft()?-1:1;this.moveThumbs(a.shiftKey?c*this.getBlockIncrement():c*this.getUnitIncrement());break;case goog.events.KeyCodes.UP:this.moveThumbs(a.shiftKey?this.getBlockIncrement():this.getUnitIncrement());break;default:b=!1}b&&a.preventDefault()};
goog.ui.SliderBase.prototype.handleMouseDownAndClick_=function(a){this.getElement().focus&&this.getElement().focus();var b=a.target;goog.dom.contains(this.valueThumb,b)||goog.dom.contains(this.extentThumb,b)||(b=a.type==goog.events.EventType.CLICK,b&&goog.now()<this.mouseDownTime_+this.MOUSE_DOWN_DELAY_||(b||(this.mouseDownTime_=goog.now()),this.moveToPointEnabled_?this.animatedSetValue(this.getValueFromMousePosition(a)):this.startBlockIncrementing_(a)))};
goog.ui.SliderBase.prototype.handleMouseWheel_=function(a){this.moveThumbs((0<a.detail?-1:1)*this.getUnitIncrement());a.preventDefault()};
goog.ui.SliderBase.prototype.startBlockIncrementing_=function(a){this.storeMousePos_(a);this.thumbToMove_=this.getClosestThumb_(this.getValueFromMousePosition(a));this.incrementing_=this.orientation_==goog.ui.SliderBase.Orientation.VERTICAL?this.lastMousePosition_<this.thumbToMove_.offsetTop:this.lastMousePosition_>this.getOffsetStart_(this.thumbToMove_)+this.thumbToMove_.offsetWidth;a=goog.dom.getOwnerDocument(this.getElement());this.getHandler().listen(a,goog.events.EventType.MOUSEUP,this.stopBlockIncrementing_,
!0).listen(this.getElement(),goog.events.EventType.MOUSEMOVE,this.storeMousePos_);this.incTimer_||(this.incTimer_=new goog.Timer(goog.ui.SliderBase.MOUSE_DOWN_INCREMENT_INTERVAL_),this.getHandler().listen(this.incTimer_,goog.Timer.TICK,this.handleTimerTick_));this.handleTimerTick_();this.incTimer_.start()};
goog.ui.SliderBase.prototype.handleTimerTick_=function(){var a;if(this.orientation_==goog.ui.SliderBase.Orientation.VERTICAL){var b=this.lastMousePosition_,c=this.thumbToMove_.offsetTop;this.incrementing_?b<c&&(a=this.getThumbPosition_(this.thumbToMove_)+this.getBlockIncrement()):b>c+this.thumbToMove_.offsetHeight&&(a=this.getThumbPosition_(this.thumbToMove_)-this.getBlockIncrement())}else b=this.lastMousePosition_,c=this.getOffsetStart_(this.thumbToMove_),this.incrementing_?b>c+this.thumbToMove_.offsetWidth&&
(a=this.getThumbPosition_(this.thumbToMove_)+this.getBlockIncrement()):b<c&&(a=this.getThumbPosition_(this.thumbToMove_)-this.getBlockIncrement());goog.isDef(a)&&this.setThumbPosition_(this.thumbToMove_,a)};
goog.ui.SliderBase.prototype.stopBlockIncrementing_=function(){this.incTimer_&&this.incTimer_.stop();var a=goog.dom.getOwnerDocument(this.getElement());this.getHandler().unlisten(a,goog.events.EventType.MOUSEUP,this.stopBlockIncrementing_,!0).unlisten(this.getElement(),goog.events.EventType.MOUSEMOVE,this.storeMousePos_)};
goog.ui.SliderBase.prototype.getRelativeMousePos_=function(a){a=goog.style.getRelativePosition(a,this.getElement());return this.orientation_==goog.ui.SliderBase.Orientation.VERTICAL?a.y:this.flipForRtl_&&this.isRightToLeft()?this.getElement().clientWidth-a.x:a.x};goog.ui.SliderBase.prototype.storeMousePos_=function(a){this.lastMousePosition_=this.getRelativeMousePos_(a)};
goog.ui.SliderBase.prototype.getValueFromMousePosition=function(a){var b=this.getMinimum(),c=this.getMaximum();if(this.orientation_==goog.ui.SliderBase.Orientation.VERTICAL){var d=this.valueThumb.offsetHeight,e=this.getElement().clientHeight-d;a=this.getRelativeMousePos_(a)-d/2;return(c-b)*(e-a)/e+b}d=this.valueThumb.offsetWidth;e=this.getElement().clientWidth-d;a=this.getRelativeMousePos_(a)-d/2;return(c-b)*a/e+b};
goog.ui.SliderBase.prototype.getThumbPosition_=function(a){if(a==this.valueThumb)return this.rangeModel.getValue();if(a==this.extentThumb)return this.rangeModel.getValue()+this.rangeModel.getExtent();throw Error("Illegal thumb element. Neither minThumb nor maxThumb");};goog.ui.SliderBase.prototype.isDragging=function(){return this.valueDragger_.isDragging()||this.extentDragger_.isDragging()};
goog.ui.SliderBase.prototype.moveThumbs=function(a){Math.abs(a)<this.getStep()&&(a=goog.math.sign(a)*this.getStep());var b=this.getThumbPosition_(this.valueThumb)+a;a=this.getThumbPosition_(this.extentThumb)+a;b=goog.math.clamp(b,this.getMinimum(),this.getMaximum()-this.minExtent_);a=goog.math.clamp(a,this.getMinimum()+this.minExtent_,this.getMaximum());this.setValueAndExtent(b,a-b)};
goog.ui.SliderBase.prototype.setThumbPosition_=function(a,b){var c=this.rangeModel.roundToStepWithMin(b);b=a==this.valueThumb?c:this.rangeModel.getValue();a=a==this.extentThumb?c:this.rangeModel.getValue()+this.rangeModel.getExtent();b>=this.getMinimum()&&a>=b+this.minExtent_&&this.getMaximum()>=a&&this.setValueAndExtent(b,a-b)};
goog.ui.SliderBase.prototype.setValueAndExtent=function(a,b){this.getMinimum()<=a&&a<=this.getMaximum()-b&&this.minExtent_<=b&&b<=this.getMaximum()-a&&(a!=this.getValue()||b!=this.getExtent())&&(this.rangeModel.setMute(!0),this.rangeModel.setExtent(0),this.rangeModel.setValue(a),this.rangeModel.setExtent(b),this.rangeModel.setMute(!1),this.handleRangeModelChange(null))};goog.ui.SliderBase.prototype.getMinimum=function(){return this.rangeModel.getMinimum()};
goog.ui.SliderBase.prototype.setMinimum=function(a){this.rangeModel.setMinimum(a)};goog.ui.SliderBase.prototype.getMaximum=function(){return this.rangeModel.getMaximum()};goog.ui.SliderBase.prototype.setMaximum=function(a){this.rangeModel.setMaximum(a)};goog.ui.SliderBase.prototype.getValueThumb=function(){return this.valueThumb};goog.ui.SliderBase.prototype.getExtentThumb=function(){return this.extentThumb};
goog.ui.SliderBase.prototype.getClosestThumb_=function(a){return a<=this.rangeModel.getValue()+this.rangeModel.getExtent()/2?this.valueThumb:this.extentThumb};goog.ui.SliderBase.prototype.handleRangeModelChange=function(a){this.updateUi_();this.updateAriaStates();this.dispatchEvent(goog.ui.Component.EventType.CHANGE)};
goog.ui.SliderBase.prototype.updateUi_=function(){if(this.valueThumb&&!this.isAnimating_){var a=this.getThumbCoordinateForValue(this.getThumbPosition_(this.valueThumb)),b=this.getThumbCoordinateForValue(this.getThumbPosition_(this.extentThumb));if(this.orientation_==goog.ui.SliderBase.Orientation.VERTICAL)this.valueThumb.style.top=a.y+"px",this.extentThumb.style.top=b.y+"px",this.rangeHighlight&&(a=this.calculateRangeHighlightPositioning_(b.y,a.y,this.valueThumb.offsetHeight),this.rangeHighlight.style.top=
a.offset+"px",this.rangeHighlight.style.height=a.size+"px");else{var c=this.flipForRtl_&&this.isRightToLeft()?"right":"left";this.valueThumb.style[c]=a.x+"px";this.extentThumb.style[c]=b.x+"px";this.rangeHighlight&&(a=this.calculateRangeHighlightPositioning_(a.x,b.x,this.valueThumb.offsetWidth),this.rangeHighlight.style[c]=a.offset+"px",this.rangeHighlight.style.width=a.size+"px")}}};
goog.ui.SliderBase.prototype.calculateRangeHighlightPositioning_=function(a,b,c){var d=Math.ceil(c/2);return{offset:a+d,size:Math.max(b-a+c-2*d,0)}};
goog.ui.SliderBase.prototype.getThumbCoordinateForValue=function(a){var b=new goog.math.Coordinate;if(this.valueThumb){var c=this.getMinimum(),d=this.getMaximum();a=a==c&&c==d?0:(a-c)/(d-c);this.orientation_==goog.ui.SliderBase.Orientation.VERTICAL?(c=this.valueThumb.offsetHeight,c=this.getElement().clientHeight-c,a=Math.round(a*c),b.x=this.getOffsetStart_(this.valueThumb),b.y=c-a):(c=this.getElement().clientWidth-this.valueThumb.offsetWidth,b.x=Math.round(a*c),b.y=this.valueThumb.offsetTop)}return b};
goog.ui.SliderBase.prototype.animatedSetValue=function(a){a=goog.math.clamp(a,this.getMinimum(),this.getMaximum());this.isAnimating_&&(this.currentAnimation_.stop(!0),this.currentAnimation_.dispose());var b=new goog.fx.AnimationParallelQueue,c=this.getClosestThumb_(a),d=this.getValue(),e=this.getExtent(),f=this.getThumbPosition_(c),g=this.getThumbCoordinateForValue(f);var h=this.getStep();Math.abs(a-f)<h&&(a=goog.math.clamp(f+(a>f?h:-h),this.getMinimum(),this.getMaximum()));this.setThumbPosition_(c,
a);f=this.getThumbCoordinateForValue(this.getThumbPosition_(c));h=this.orientation_==goog.ui.SliderBase.Orientation.VERTICAL?[this.getOffsetStart_(c),f.y]:[f.x,c.offsetTop];g=new goog.fx.dom.Slide(c,[g.x,g.y],h,goog.ui.SliderBase.ANIMATION_INTERVAL_);g.enableRightPositioningForRtl(this.flipForRtl_);b.add(g);this.rangeHighlight&&this.addRangeHighlightAnimations_(c,d,e,f,b);this.additionalAnimations_&&(a=this.additionalAnimations_.createAnimations(d,a,goog.ui.SliderBase.ANIMATION_INTERVAL_),goog.array.forEach(a,
function(a){b.add(a)}));this.currentAnimation_=b;this.getHandler().listen(b,goog.fx.Transition.EventType.END,this.endAnimation_);this.isAnimating_=!0;b.play(!1)};goog.ui.SliderBase.prototype.isAnimating=function(){return this.isAnimating_};goog.ui.SliderBase.prototype.setAdditionalAnimations=function(a){this.additionalAnimations_=a};
goog.ui.SliderBase.prototype.addRangeHighlightAnimations_=function(a,b,c,d,e){var f=this.getThumbCoordinateForValue(b),g=this.getThumbCoordinateForValue(b+c);b=f;c=g;a==this.valueThumb?b=d:c=d;this.orientation_==goog.ui.SliderBase.Orientation.VERTICAL?(a=this.calculateRangeHighlightPositioning_(g.y,f.y,this.valueThumb.offsetHeight),f=this.calculateRangeHighlightPositioning_(c.y,b.y,this.valueThumb.offsetHeight),d=new goog.fx.dom.Slide(this.rangeHighlight,[this.getOffsetStart_(this.rangeHighlight),
a.offset],[this.getOffsetStart_(this.rangeHighlight),f.offset],goog.ui.SliderBase.ANIMATION_INTERVAL_),a=new goog.fx.dom.ResizeHeight(this.rangeHighlight,a.size,f.size,goog.ui.SliderBase.ANIMATION_INTERVAL_),d.enableRightPositioningForRtl(this.flipForRtl_),a.enableRightPositioningForRtl(this.flipForRtl_),e.add(d),e.add(a)):(a=this.calculateRangeHighlightPositioning_(f.x,g.x,this.valueThumb.offsetWidth),f=this.calculateRangeHighlightPositioning_(b.x,c.x,this.valueThumb.offsetWidth),d=new goog.fx.dom.Slide(this.rangeHighlight,
[a.offset,this.rangeHighlight.offsetTop],[f.offset,this.rangeHighlight.offsetTop],goog.ui.SliderBase.ANIMATION_INTERVAL_),a=new goog.fx.dom.ResizeWidth(this.rangeHighlight,a.size,f.size,goog.ui.SliderBase.ANIMATION_INTERVAL_),d.enableRightPositioningForRtl(this.flipForRtl_),a.enableRightPositioningForRtl(this.flipForRtl_),e.add(d),e.add(a))};goog.ui.SliderBase.prototype.endAnimation_=function(a){this.isAnimating_=!1;this.dispatchEvent(goog.ui.SliderBase.EventType.ANIMATION_END)};
goog.ui.SliderBase.prototype.setOrientation=function(a){if(this.orientation_!=a){var b=this.getCssClass(this.orientation_),c=this.getCssClass(a);this.orientation_=a;this.getElement()&&(goog.dom.classlist.swap(goog.asserts.assert(this.getElement()),b,c),a=this.flipForRtl_&&this.isRightToLeft()?"right":"left",this.valueThumb.style[a]=this.valueThumb.style.top="",this.extentThumb.style[a]=this.extentThumb.style.top="",this.rangeHighlight&&(this.rangeHighlight.style[a]=this.rangeHighlight.style.top="",
this.rangeHighlight.style.width=this.rangeHighlight.style.height=""),this.updateUi_())}};goog.ui.SliderBase.prototype.getOrientation=function(){return this.orientation_};
goog.ui.SliderBase.prototype.disposeInternal=function(){goog.ui.SliderBase.superClass_.disposeInternal.call(this);this.incTimer_&&this.incTimer_.dispose();delete this.incTimer_;this.currentAnimation_&&this.currentAnimation_.dispose();delete this.currentAnimation_;delete this.valueThumb;delete this.extentThumb;this.rangeHighlight&&delete this.rangeHighlight;this.rangeModel.dispose();delete this.rangeModel;this.keyHandler_&&(this.keyHandler_.dispose(),delete this.keyHandler_);this.mouseWheelHandler_&&
(this.mouseWheelHandler_.dispose(),delete this.mouseWheelHandler_);this.valueDragger_&&(this.valueDragger_.dispose(),delete this.valueDragger_);this.extentDragger_&&(this.extentDragger_.dispose(),delete this.extentDragger_)};goog.ui.SliderBase.prototype.getBlockIncrement=function(){return this.blockIncrement_};goog.ui.SliderBase.prototype.setBlockIncrement=function(a){this.blockIncrement_=a};goog.ui.SliderBase.prototype.setMinExtent=function(a){this.minExtent_=a};
goog.ui.SliderBase.prototype.unitIncrement_=1;goog.ui.SliderBase.prototype.getUnitIncrement=function(){return this.unitIncrement_};goog.ui.SliderBase.prototype.setUnitIncrement=function(a){this.unitIncrement_=a};goog.ui.SliderBase.prototype.getStep=function(){return this.rangeModel.getStep()};goog.ui.SliderBase.prototype.setStep=function(a){this.rangeModel.setStep(a)};goog.ui.SliderBase.prototype.getMoveToPointEnabled=function(){return this.moveToPointEnabled_};
goog.ui.SliderBase.prototype.setMoveToPointEnabled=function(a){this.moveToPointEnabled_=a};goog.ui.SliderBase.prototype.getValue=function(){return this.rangeModel.getValue()};goog.ui.SliderBase.prototype.setValue=function(a){this.setThumbPosition_(this.valueThumb,a)};goog.ui.SliderBase.prototype.getExtent=function(){return this.rangeModel.getExtent()};goog.ui.SliderBase.prototype.setExtent=function(a){this.setThumbPosition_(this.extentThumb,this.rangeModel.getValue()+a)};
goog.ui.SliderBase.prototype.setVisible=function(a){goog.style.setElementShown(this.getElement(),a);a&&this.updateUi_()};goog.ui.SliderBase.prototype.setAriaRoles=function(){var a=this.getElement();goog.asserts.assert(a,"The DOM element for the slider base cannot be null.");goog.a11y.aria.setRole(a,goog.a11y.aria.Role.SLIDER);this.updateAriaStates()};
goog.ui.SliderBase.prototype.updateAriaStates=function(){var a=this.getElement();a&&(goog.a11y.aria.setState(a,goog.a11y.aria.State.VALUEMIN,this.getMinimum()),goog.a11y.aria.setState(a,goog.a11y.aria.State.VALUEMAX,this.getMaximum()),goog.a11y.aria.setState(a,goog.a11y.aria.State.VALUENOW,this.getValue()),goog.a11y.aria.setState(a,goog.a11y.aria.State.VALUETEXT,this.getTextValue()||""))};
goog.ui.SliderBase.prototype.setHandleMouseWheel=function(a){this.isInDocument()&&a!=this.isHandleMouseWheel()&&this.enableMouseWheelHandling_(a);this.isHandleMouseWheel_=a};goog.ui.SliderBase.prototype.isHandleMouseWheel=function(){return this.isHandleMouseWheel_};
goog.ui.SliderBase.prototype.enableMouseWheelHandling_=function(a){a?(this.mouseWheelHandler_||(this.mouseWheelHandler_=new goog.events.MouseWheelHandler(this.getElement())),this.getHandler().listen(this.mouseWheelHandler_,goog.events.MouseWheelHandler.EventType.MOUSEWHEEL,this.handleMouseWheel_)):this.getHandler().unlisten(this.mouseWheelHandler_,goog.events.MouseWheelHandler.EventType.MOUSEWHEEL,this.handleMouseWheel_)};
goog.ui.SliderBase.prototype.setEnabled=function(a){this.enabled_!=a&&this.dispatchEvent(a?goog.ui.Component.EventType.ENABLE:goog.ui.Component.EventType.DISABLE)&&(this.enabled_=a,this.enableEventHandlers_(a),a||this.stopBlockIncrementing_(),goog.dom.classlist.enable(goog.asserts.assert(this.getElement()),goog.ui.SliderBase.DISABLED_CSS_CLASS_,!a))};goog.ui.SliderBase.prototype.isEnabled=function(){return this.enabled_};
goog.ui.SliderBase.prototype.getOffsetStart_=function(a){return this.flipForRtl_?goog.style.bidi.getOffsetStart(a):a.offsetLeft};goog.ui.SliderBase.prototype.getTextValue=function(){return this.labelFn_(this.getValue())};goog.ui.SliderBase.AnimationFactory=function(){};goog.ui.Slider=function(a,b){goog.ui.SliderBase.call(this,a,b);this.rangeModel.setExtent(0)};goog.inherits(goog.ui.Slider,goog.ui.SliderBase);goog.tagUnsealableClass(goog.ui.Slider);goog.ui.Slider.Orientation=goog.ui.SliderBase.Orientation;goog.ui.Slider.CSS_CLASS_PREFIX="goog-slider";goog.ui.Slider.THUMB_CSS_CLASS=goog.ui.Slider.CSS_CLASS_PREFIX+"-thumb";
goog.ui.Slider.prototype.getCssClass=function(a){return a==goog.ui.SliderBase.Orientation.VERTICAL?goog.ui.Slider.CSS_CLASS_PREFIX+"-vertical":goog.ui.Slider.CSS_CLASS_PREFIX+"-horizontal"};goog.ui.Slider.prototype.getThumbCssClass=function(){return goog.ui.Slider.THUMB_CSS_CLASS};
goog.ui.Slider.prototype.createThumbs=function(){var a=this.getElement(),b=goog.dom.getElementsByTagNameAndClass(null,this.getThumbCssClass(),a)[0];b||(b=this.createThumb_(),a.appendChild(b));this.valueThumb=this.extentThumb=b};goog.ui.Slider.prototype.createThumb_=function(){var a=this.getDomHelper().createDom("DIV",this.getThumbCssClass());goog.a11y.aria.setRole(a,goog.a11y.aria.Role.BUTTON);return a};Blockly.FieldColourSlider=function(a,b){Blockly.FieldColourSlider.superClass_.constructor.call(this,a,b);this.addArgType("colour")};goog.inherits(Blockly.FieldColourSlider,Blockly.Field);Blockly.FieldColourSlider.fromJson=function(a){return new Blockly.FieldColourSlider(a.colour)};Blockly.FieldColourSlider.activateEyedropper_=null;Blockly.FieldColourSlider.EYEDROPPER_PATH="eyedropper.svg";
Blockly.FieldColourSlider.prototype.init=function(a){this.fieldGroup_||(Blockly.FieldColourSlider.superClass_.init.call(this,a),this.setValue(this.getValue()))};Blockly.FieldColourSlider.prototype.getValue=function(){return this.colour_};
Blockly.FieldColourSlider.prototype.setValue=function(a){this.sourceBlock_&&Blockly.Events.isEnabled()&&this.colour_!=a&&Blockly.Events.fire(new Blockly.Events.BlockChange(this.sourceBlock_,"field",this.name,this.colour_,a));this.colour_=a;this.sourceBlock_&&this.sourceBlock_.setColour(a,a,this.sourceBlock_.getColourTertiary());this.updateSliderHandles_();this.updateDom_()};
Blockly.FieldColourSlider.prototype.createColourStops_=function(a){for(var b=[],c=0;360>=c;c+=20)switch(a){case "hue":b.push(goog.color.hsvToHex(c,this.saturation_,this.brightness_));break;case "saturation":b.push(goog.color.hsvToHex(this.hue_,c/360,this.brightness_));break;case "brightness":b.push(goog.color.hsvToHex(this.hue_,this.saturation_,255*c/360));break;default:throw Error("Unknown channel for colour sliders: "+a);}return b};
Blockly.FieldColourSlider.prototype.setGradient_=function(a,b){b=this.createColourStops_(b).join(",");goog.style.setStyle(a,"background","-moz-linear-gradient(left, "+b+")");goog.style.setStyle(a,"background","-webkit-linear-gradient(left, "+b+")");goog.style.setStyle(a,"background","-o-linear-gradient(left, "+b+")");goog.style.setStyle(a,"background","-ms-linear-gradient(left, "+b+")");goog.style.setStyle(a,"background","linear-gradient(left, "+b+")")};
Blockly.FieldColourSlider.prototype.updateDom_=function(){this.hueSlider_&&(this.setGradient_(this.hueSlider_.getElement(),"hue"),this.setGradient_(this.saturationSlider_.getElement(),"saturation"),this.setGradient_(this.brightnessSlider_.getElement(),"brightness"),this.hueReadout_.textContent=Math.floor(100*this.hue_/360).toFixed(0),this.saturationReadout_.textContent=Math.floor(100*this.saturation_).toFixed(0),this.brightnessReadout_.textContent=Math.floor(100*this.brightness_/255).toFixed(0))};
Blockly.FieldColourSlider.prototype.updateSliderHandles_=function(){this.hueSlider_&&(this.hueSlider_.setValue(this.hue_),this.saturationSlider_.setValue(this.saturation_),this.brightnessSlider_.setValue(this.brightness_))};Blockly.FieldColourSlider.prototype.getText=function(){var a=this.colour_,b=a.match(/^#(.)\1(.)\2(.)\3$/);b&&(a="#"+b[1]+b[2]+b[3]);return a};
Blockly.FieldColourSlider.prototype.createLabelDom_=function(a){var b=document.createElement("div");b.setAttribute("class","scratchColourPickerLabel");var c=document.createElement("span");c.setAttribute("class","scratchColourPickerReadout");var d=document.createElement("span");d.setAttribute("class","scratchColourPickerLabelText");d.textContent=a;b.appendChild(d);b.appendChild(c);return[b,c]};
Blockly.FieldColourSlider.prototype.sliderCallbackFactory_=function(a){var b=this;return function(c){c=c.target.getValue();var d=goog.color.hexToHsv(b.getValue());switch(a){case "hue":d[0]=b.hue_=c;break;case "saturation":d[1]=b.saturation_=c;break;case "brightness":d[2]=b.brightness_=c}c=goog.color.hsvToHex(d[0],d[1],d[2]);b.sourceBlock_&&(c=b.callValidator(c));null!==c&&b.setValue(c,!0)}};
Blockly.FieldColourSlider.prototype.activateEyedropperInternal_=function(){var a=this;Blockly.FieldColourSlider.activateEyedropper_(function(b){var c=goog.color.hexToHsv(b);a.hue_=c[0];a.saturation_=c[1];a.brightness_=c[2];a.setValue(b)})};
Blockly.FieldColourSlider.prototype.showEditor_=function(){Blockly.DropDownDiv.hideWithoutAnimation();Blockly.DropDownDiv.clearContent();var a=Blockly.DropDownDiv.getContentDiv(),b=goog.color.hexToHsv(this.getValue());this.hue_=b[0];this.saturation_=b[1];this.brightness_=b[2];b=this.createLabelDom_(Blockly.Msg.COLOUR_HUE_LABEL);a.appendChild(b[0]);this.hueReadout_=b[1];this.hueSlider_=new goog.ui.Slider;this.hueSlider_.setUnitIncrement(5);this.hueSlider_.setMinimum(0);this.hueSlider_.setMaximum(360);
this.hueSlider_.setMoveToPointEnabled(!0);this.hueSlider_.render(a);b=this.createLabelDom_(Blockly.Msg.COLOUR_SATURATION_LABEL);a.appendChild(b[0]);this.saturationReadout_=b[1];this.saturationSlider_=new goog.ui.Slider;this.saturationSlider_.setMoveToPointEnabled(!0);this.saturationSlider_.setUnitIncrement(.01);this.saturationSlider_.setStep(.001);this.saturationSlider_.setMinimum(0);this.saturationSlider_.setMaximum(1);this.saturationSlider_.render(a);b=this.createLabelDom_(Blockly.Msg.COLOUR_BRIGHTNESS_LABEL);
a.appendChild(b[0]);this.brightnessReadout_=b[1];this.brightnessSlider_=new goog.ui.Slider;this.brightnessSlider_.setUnitIncrement(2);this.brightnessSlider_.setMinimum(0);this.brightnessSlider_.setMaximum(255);this.brightnessSlider_.setMoveToPointEnabled(!0);this.brightnessSlider_.render(a);Blockly.FieldColourSlider.hueChangeEventKey_=goog.events.listen(this.hueSlider_,goog.ui.Component.EventType.CHANGE,this.sliderCallbackFactory_("hue"));Blockly.FieldColourSlider.saturationChangeEventKey_=goog.events.listen(this.saturationSlider_,
goog.ui.Component.EventType.CHANGE,this.sliderCallbackFactory_("saturation"));Blockly.FieldColourSlider.brightnessChangeEventKey_=goog.events.listen(this.brightnessSlider_,goog.ui.Component.EventType.CHANGE,this.sliderCallbackFactory_("brightness"));if(Blockly.FieldColourSlider.activateEyedropper_){b=document.createElement("button");b.setAttribute("class","scratchEyedropper");var c=document.createElement("img");c.src=Blockly.mainWorkspace.options.pathToMedia+Blockly.FieldColourSlider.EYEDROPPER_PATH;
b.appendChild(c);a.appendChild(b);Blockly.FieldColourSlider.eyedropperEventData_=Blockly.bindEventWithChecks_(b,"mousedown",this,this.activateEyedropperInternal_)}Blockly.DropDownDiv.setColour("#ffffff","#dddddd");Blockly.DropDownDiv.setCategory(this.sourceBlock_.parentBlock_.getCategory());Blockly.DropDownDiv.showPositionedByBlock(this,this.sourceBlock_);this.setValue(this.getValue())};
Blockly.FieldColourSlider.prototype.dispose=function(){Blockly.FieldColourSlider.hueChangeEventKey_&&goog.events.unlistenByKey(Blockly.FieldColourSlider.hueChangeEventKey_);Blockly.FieldColourSlider.saturationChangeEventKey_&&goog.events.unlistenByKey(Blockly.FieldColourSlider.saturationChangeEventKey_);Blockly.FieldColourSlider.brightnessChangeEventKey_&&goog.events.unlistenByKey(Blockly.FieldColourSlider.brightnessChangeEventKey_);Blockly.FieldColourSlider.eyedropperEventData_&&Blockly.unbindEvent_(Blockly.FieldColourSlider.eyedropperEventData_);
Blockly.Events.setGroup(!1);Blockly.FieldColourSlider.superClass_.dispose.call(this)};Blockly.Field.register("field_colour_slider",Blockly.FieldColourSlider);Blockly.FieldDropdown=function(a,b){this.menuGenerator_=a;this.trimOptions_();a=this.getOptions()[0];Blockly.FieldDropdown.superClass_.constructor.call(this,a[1],b);this.addArgType("dropdown")};goog.inherits(Blockly.FieldDropdown,Blockly.Field);Blockly.FieldDropdown.fromJson=function(a){return new Blockly.FieldDropdown(a.options)};Blockly.FieldDropdown.CHECKMARK_OVERHANG=25;Blockly.FieldDropdown.prototype.CURSOR="default";Blockly.FieldDropdown.prototype.selectedItem=null;
Blockly.FieldDropdown.prototype.value_="";Blockly.FieldDropdown.prototype.imageElement_=null;Blockly.FieldDropdown.prototype.imageJson_=null;
Blockly.FieldDropdown.prototype.init=function(){if(!this.fieldGroup_){this.arrowSize_=12;this.arrowX_=0;this.arrowY_=11;this.arrow_=Blockly.utils.createSvgElement("image",{height:this.arrowSize_+"px",width:this.arrowSize_+"px"});this.arrow_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"dropdown-arrow.svg");this.className_+=" blocklyDropdownText";Blockly.FieldDropdown.superClass_.init.call(this);this.sourceBlock_.isShadow()||(this.box_=Blockly.utils.createSvgElement("rect",
{rx:Blockly.BlockSvg.CORNER_RADIUS,ry:Blockly.BlockSvg.CORNER_RADIUS,x:0,y:0,width:this.size_.width,height:this.size_.height,stroke:this.sourceBlock_.getColourTertiary(),fill:this.sourceBlock_.getColour(),"class":"blocklyBlockBackground","fill-opacity":1},null),this.fieldGroup_.insertBefore(this.box_,this.textElement_));var a=this.text_;this.text_=null;this.setText(a)}};
Blockly.FieldDropdown.prototype.showEditor_=function(){var a=this.getOptions();if(0!=a.length){this.dropDownOpen_=!0;Blockly.DropDownDiv.hideWithoutAnimation();Blockly.DropDownDiv.clearContent();var b=Blockly.DropDownDiv.getContentDiv(),c=this,d=new goog.ui.Menu;d.setRightToLeft(this.sourceBlock_.RTL);for(var e=0;e<a.length;e++){var f=a[e][0],g=a[e][1];if("object"==typeof f){var h=new Image(f.width,f.height);h.src=f.src;h.alt=f.alt||"";f=h}f=new goog.ui.MenuItem(f);f.setRightToLeft(this.sourceBlock_.RTL);
f.setValue(g);f.setCheckable(!0);d.addChild(f,!0);g=g==this.value_;f.setChecked(g);g&&(this.selectedItem=f)}goog.events.listen(d,goog.ui.Component.EventType.ACTION,function(a){if(a=a.target)c.onItemSelected(this,a);Blockly.DropDownDiv.hide();Blockly.Events.setGroup(!1)});d.getHandler().listen(d.getElement(),goog.events.EventType.TOUCHSTART,function(a){this.getOwnerControl(a.target).handleMouseDown(a)});d.getHandler().listen(d.getElement(),goog.events.EventType.TOUCHEND,function(a){this.getOwnerControl(a.target).performActionInternal(a)});
d.render(b);a=d.getElement();Blockly.utils.addClass(a,"blocklyDropdownMenu");goog.style.getSize(a).height=a.scrollHeight;b=this.sourceBlock_.isShadow()?this.sourceBlock_.parentBlock_.getColour():this.sourceBlock_.getColour();Blockly.DropDownDiv.setColour(b,this.sourceBlock_.getColourTertiary());b=this.sourceBlock_.isShadow()?this.sourceBlock_.parentBlock_.getCategory():this.sourceBlock_.getCategory();Blockly.DropDownDiv.setCategory(b);e=this.sourceBlock_.workspace.scale;g=this.size_.width;b=this.size_.height;
g*=e;b*=e;e=this.fieldGroup_.getBoundingClientRect();g=e.left+g/2;b=e.top+b;e=e.top;Blockly.DropDownDiv.setBoundsElement(this.sourceBlock_.workspace.getParentSvg().parentNode);Blockly.DropDownDiv.show(this,g,b,g,e,this.onHide.bind(this));d.setAllowAutoFocus(!0);a.focus();this.disableColourChange_||(this.sourceBlock_.isShadow()?(this.savedPrimary_=this.sourceBlock_.getColour(),this.sourceBlock_.setColour(this.sourceBlock_.getColourTertiary(),this.sourceBlock_.getColourSecondary(),this.sourceBlock_.getColourTertiary())):
this.box_&&this.box_.setAttribute("fill",this.sourceBlock_.getColourTertiary()))}};Blockly.FieldDropdown.prototype.onHide=function(){this.dropDownOpen_=!1;!this.disableColourChange_&&this.sourceBlock_&&(this.sourceBlock_.isShadow()?this.sourceBlock_.setColour(this.savedPrimary_,this.sourceBlock_.getColourSecondary(),this.sourceBlock_.getColourTertiary()):this.box_&&this.box_.setAttribute("fill",this.sourceBlock_.getColour()))};
Blockly.FieldDropdown.prototype.onItemSelected=function(a,b){a=b.getValue();this.sourceBlock_&&(a=this.callValidator(a));null!==a&&this.setValue(a)};
Blockly.FieldDropdown.prototype.trimOptions_=function(){this.suffixField=this.prefixField=null;var a=this.menuGenerator_;if(goog.isArray(a)){for(var b=!1,c=0;c<a.length;c++){var d=a[c][0];"string"==typeof d?a[c][0]=Blockly.utils.replaceMessageReferences(d):(null!=d.alt&&(a[c][0].alt=Blockly.utils.replaceMessageReferences(d.alt)),b=!0)}if(!(b||2>a.length)){var e=[];for(c=0;c<a.length;c++)e.push(a[c][0]);c=Blockly.utils.shortestStringLength(e);b=Blockly.utils.commonWordPrefix(e,c);d=Blockly.utils.commonWordSuffix(e,
c);if((b||d)&&!(c<=b+d)){b&&(this.prefixField=e[0].substring(0,b-1));d&&(this.suffixField=e[0].substr(1-d));e=[];for(c=0;c<a.length;c++){var f=a[c][0],g=a[c][1];f=f.substring(b,f.length-d);e[c]=[f,g]}this.menuGenerator_=e}}}};Blockly.FieldDropdown.prototype.isOptionListDynamic=function(){return goog.isFunction(this.menuGenerator_)};Blockly.FieldDropdown.prototype.getOptions=function(){return goog.isFunction(this.menuGenerator_)?this.menuGenerator_.call(this):this.menuGenerator_};
Blockly.FieldDropdown.prototype.getValue=function(){return this.value_};
Blockly.FieldDropdown.prototype.setValue=function(a){if(null!==a&&a!==this.value_){this.sourceBlock_&&Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.BlockChange(this.sourceBlock_,"field",this.name,this.value_,a));this.selectedItem&&(this.selectedItem.setChecked(!1),this.selectedItem=null);this.value_=a;for(var b=this.getOptions(),c=0;c<b.length;c++)if(b[c][1]==a){a=b[c][0];"object"==typeof a?(this.imageJson_=a,this.text_=a.alt):(this.imageJson_=null,this.text_=a);this.forceRerender();
return}this.text_=a;this.forceRerender()}};Blockly.FieldDropdown.prototype.setText=function(a){null!==a&&a!==this.text_&&(this.text_=a,this.updateTextNode_(),this.textElement_&&this.textElement_.parentNode.appendChild(this.arrow_),this.sourceBlock_&&this.sourceBlock_.rendered&&(this.sourceBlock_.render(),this.sourceBlock_.bumpNeighbours_()))};
Blockly.FieldDropdown.prototype.positionArrow=function(a){if(!this.arrow_)return 0;this.arrowX_=this.sourceBlock_.RTL?this.arrowSize_-Blockly.BlockSvg.DROPDOWN_ARROW_PADDING:a+Blockly.BlockSvg.DROPDOWN_ARROW_PADDING/2;a=this.arrowSize_+Blockly.BlockSvg.DROPDOWN_ARROW_PADDING;this.box_&&(this.arrowX_+=Blockly.BlockSvg.BOX_FIELD_PADDING);this.arrow_.setAttribute("transform","translate("+this.arrowX_+","+this.arrowY_+")");return a};
Blockly.FieldDropdown.prototype.dispose=function(){this.selectedItem=null;Blockly.WidgetDiv.hideIfOwner(this);Blockly.FieldDropdown.superClass_.dispose.call(this)};Blockly.Field.register("field_dropdown",Blockly.FieldDropdown);Blockly.FieldIconMenu=function(a){this.icons_=a;Blockly.FieldIconMenu.superClass_.constructor.call(this,a[0].value);this.addArgType("iconmenu")};goog.inherits(Blockly.FieldIconMenu,Blockly.Field);Blockly.FieldIconMenu.fromJson=function(a){return new Blockly.FieldIconMenu(a.options)};Blockly.FieldIconMenu.DROPDOWN_WIDTH=168;Blockly.FieldIconMenu.savedPrimary_=null;
Blockly.FieldIconMenu.prototype.init=function(a){this.fieldGroup_||(this.arrowX_=18,this.arrowY_=10,a.RTL&&(this.arrowX_=-this.arrowX_-12),this.arrowIcon_=Blockly.utils.createSvgElement("image",{height:"12px",width:"12px",transform:"translate("+this.arrowX_+","+this.arrowY_+")"}),this.arrowIcon_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"dropdown-arrow.svg"),a.getSvgRoot().appendChild(this.arrowIcon_),Blockly.FieldIconMenu.superClass_.init.call(this,
a))};Blockly.FieldIconMenu.prototype.CURSOR="default";Blockly.FieldIconMenu.prototype.setValue=function(a){null!==a&&a!==this.value_&&(this.sourceBlock_&&Blockly.Events.isEnabled()&&Blockly.Events.fire(new Blockly.Events.Change(this.sourceBlock_,"field",this.name,this.value_,a)),this.value_=a,this.setParentFieldImage(this.getSrcForValue(this.value_)))};
Blockly.FieldIconMenu.prototype.setParentFieldImage=function(a){if(this.sourceBlock_&&this.sourceBlock_.parentBlock_)for(var b=this.sourceBlock_.parentBlock_,c=0,d;d=b.inputList[c];c++)for(var e=0,f;f=d.fieldRow[e];e++)if(f instanceof Blockly.FieldImage){f.setValue(a);return}};Blockly.FieldIconMenu.prototype.getValue=function(){return this.value_};Blockly.FieldIconMenu.prototype.getSrcForValue=function(a){for(var b=0,c;c=this.icons_[b];b++)if(c.value===a)return c.src};
Blockly.FieldIconMenu.prototype.showEditor_=function(){if(!Blockly.DropDownDiv.hideIfOwner(this)){Blockly.DropDownDiv.hideWithoutAnimation();Blockly.DropDownDiv.clearContent();var a=Blockly.DropDownDiv.getContentDiv();a.setAttribute("role","menu");a.setAttribute("aria-haspopup","true");for(var b=0,c;c=this.icons_[b];b++)if("placeholder"==c.type){var d=document.createElement("span");d.setAttribute("class","blocklyDropDownPlaceholder");d.style.width=c.width+"px";d.style.height=c.height+"px";a.appendChild(d)}else{d=
document.createElement("button");d.setAttribute("id",":"+b);d.setAttribute("role","menuitem");d.setAttribute("class","blocklyDropDownButton");d.title=c.alt;d.style.width=c.width+"px";d.style.height=c.height+"px";var e=this.sourceBlock_.getColour();c.value==this.getValue()&&(e=this.sourceBlock_.getColourTertiary(),d.setAttribute("aria-selected","true"));d.style.backgroundColor=e;d.style.borderColor=this.sourceBlock_.getColourTertiary();Blockly.bindEvent_(d,"click",this,this.buttonClick_);Blockly.bindEvent_(d,
"mouseup",this,this.buttonClick_);Blockly.bindEvent_(d,"mousedown",d,function(a){this.setAttribute("class","blocklyDropDownButton blocklyDropDownButtonHover");a.preventDefault()});Blockly.bindEvent_(d,"mouseover",d,function(){this.setAttribute("class","blocklyDropDownButton blocklyDropDownButtonHover");a.setAttribute("aria-activedescendant",this.id)});Blockly.bindEvent_(d,"mouseout",d,function(){this.setAttribute("class","blocklyDropDownButton");a.removeAttribute("aria-activedescendant")});e=document.createElement("img");
e.src=c.src;d.setAttribute("data-value",c.value);e.setAttribute("data-value",c.value);d.appendChild(e);a.appendChild(d)}a.style.width=Blockly.FieldIconMenu.DROPDOWN_WIDTH+"px";Blockly.DropDownDiv.setColour(this.sourceBlock_.getColour(),this.sourceBlock_.getColourTertiary());Blockly.DropDownDiv.setCategory(this.sourceBlock_.parentBlock_.getCategory());this.savedPrimary_=this.sourceBlock_.getColour();this.sourceBlock_.setColour(this.sourceBlock_.getColourSecondary(),this.sourceBlock_.getColourSecondary(),
this.sourceBlock_.getColourTertiary());b=this.sourceBlock_.workspace.scale;b=-(Blockly.BlockSvg.MIN_BLOCK_Y*b)-Blockly.BlockSvg.FIELD_Y_OFFSET*b;Blockly.DropDownDiv.showPositionedByBlock(this,this.sourceBlock_,this.onHide_.bind(this),b)||this.arrowIcon_.setAttribute("transform","translate("+(this.arrowX_+Blockly.DropDownDiv.ARROW_SIZE/1.5+1)+","+(this.arrowY_+Blockly.DropDownDiv.ARROW_SIZE/1.5)+") rotate(180)")}};
Blockly.FieldIconMenu.prototype.buttonClick_=function(a){a=a.target.getAttribute("data-value");this.setValue(a);Blockly.DropDownDiv.hide()};
Blockly.FieldIconMenu.prototype.onHide_=function(){this.sourceBlock_&&this.sourceBlock_.setColour(this.savedPrimary_,this.sourceBlock_.getColourSecondary(),this.sourceBlock_.getColourTertiary());Blockly.DropDownDiv.content_.removeAttribute("role");Blockly.DropDownDiv.content_.removeAttribute("aria-haspopup");Blockly.DropDownDiv.content_.removeAttribute("aria-activedescendant");this.arrowIcon_.setAttribute("transform","translate("+this.arrowX_+","+this.arrowY_+")")};
Blockly.Field.register("field_iconmenu",Blockly.FieldIconMenu);Blockly.FieldImage=function(a,b,c,d,e){this.sourceBlock_=null;this.height_=Number(c);this.width_=Number(b);this.size_=new goog.math.Size(this.width_,this.height_);this.text_=d||"";this.flipRTL_=e;this.setValue(a)};goog.inherits(Blockly.FieldImage,Blockly.Field);
Blockly.FieldImage.fromJson=function(a){var b=Blockly.utils.replaceMessageReferences(a.src),c=Number(Blockly.utils.replaceMessageReferences(a.width)),d=Number(Blockly.utils.replaceMessageReferences(a.height)),e=Blockly.utils.replaceMessageReferences(a.alt);return new Blockly.FieldImage(b,c,d,e,!!a.flip_rtl||!!a.flipRtl)};Blockly.FieldImage.prototype.EDITABLE=!1;
Blockly.FieldImage.prototype.init=function(){this.fieldGroup_||(this.fieldGroup_=Blockly.utils.createSvgElement("g",{},null),this.visible_||(this.fieldGroup_.style.display="none"),this.imageElement_=Blockly.utils.createSvgElement("image",{height:this.height_+"px",width:this.width_+"px"},this.fieldGroup_),this.setValue(this.src_),this.sourceBlock_.getSvgRoot().appendChild(this.fieldGroup_),this.setTooltip(this.sourceBlock_),Blockly.Tooltip.bindMouseEvents(this.imageElement_))};
Blockly.FieldImage.prototype.dispose=function(){goog.dom.removeNode(this.fieldGroup_);this.imageElement_=this.fieldGroup_=null};Blockly.FieldImage.prototype.setTooltip=function(a){this.imageElement_.tooltip=a};Blockly.FieldImage.prototype.getValue=function(){return this.src_};Blockly.FieldImage.prototype.setValue=function(a){null!==a&&(this.src_=a,this.imageElement_&&this.imageElement_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",a||""))};Blockly.FieldImage.prototype.getFlipRTL=function(){return this.flipRTL_};
Blockly.FieldImage.prototype.setText=function(a){null!==a&&(this.text_=a)};Blockly.FieldImage.prototype.render_=function(){};Blockly.FieldImage.prototype.updateWidth=function(){};Blockly.Field.register("field_image",Blockly.FieldImage);Blockly.FieldTextInputRemovable=function(a,b,c){Blockly.FieldTextInputRemovable.superClass_.constructor.call(this,a,b,c)};goog.inherits(Blockly.FieldTextInputRemovable,Blockly.FieldTextInput);
Blockly.FieldTextInputRemovable.prototype.showEditor_=function(){Blockly.FieldTextInputRemovable.superClass_.showEditor_.call(this);var a=Blockly.WidgetDiv.DIV;a.className+=" removableTextInput";var b=goog.dom.createDom("IMG","blocklyTextRemoveIcon");b.setAttribute("src",Blockly.mainWorkspace.options.pathToMedia+"icons/remove.svg");this.removeButtonMouseWrapper_=Blockly.bindEvent_(b,"mousedown",this,this.removeCallback_);a.appendChild(b)};
Blockly.FieldTextInputRemovable.prototype.removeCallback_=function(){this.sourceBlock_&&this.sourceBlock_.removeFieldCallback?this.sourceBlock_.removeFieldCallback(this):console.warn("Expected a source block with removeFieldCallback")};Blockly.FieldTextInputRemovable.fromJson=function(a){var b=Blockly.utils.replaceMessageReferences(a.text);b=new Blockly.FieldTextInputRemovable(b,a["class"]);"boolean"==typeof a.spellcheck&&b.setSpellcheck(a.spellcheck);return b};
Blockly.Field.register("field_input_removable",Blockly.FieldTextInputRemovable);Blockly.FieldTextDropdown=function(a,b,c,d){this.menuGenerator_=b;Blockly.FieldDropdown.prototype.trimOptions_.call(this);Blockly.FieldTextDropdown.superClass_.constructor.call(this,a,c,d);this.addArgType("textdropdown")};goog.inherits(Blockly.FieldTextDropdown,Blockly.FieldTextInput);Blockly.FieldTextDropdown.fromJson=function(a){var b=new Blockly.FieldTextDropdown(a.text,a.options);"boolean"==typeof a.spellcheck&&b.setSpellcheck(a.spellcheck);return b};
Blockly.FieldTextDropdown.prototype.init=function(){this.fieldGroup_||(Blockly.FieldTextDropdown.superClass_.init.call(this),this.arrow_||(this.arrowSize_=12,this.arrowX_=0,this.arrowY_=11,this.arrow_=Blockly.utils.createSvgElement("image",{height:this.arrowSize_+"px",width:this.arrowSize_+"px"}),this.arrow_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",Blockly.mainWorkspace.options.pathToMedia+"dropdown-arrow-dark.svg"),this.arrow_.style.cursor="pointer",this.fieldGroup_.appendChild(this.arrow_),
this.mouseUpWrapper_=Blockly.bindEvent_(this.arrow_,"mouseup",this,this.showDropdown_)),this.disableColourChange_=!0)};Blockly.FieldTextDropdown.prototype.dispose=function(){this.mouseUpWrapper_&&(Blockly.unbindEvent_(this.mouseUpWrapper_),this.mouseUpWrapper_=null,Blockly.Touch.clearTouchIdentifier());Blockly.FieldTextDropdown.superClass_.dispose.call(this)};
Blockly.FieldTextDropdown.prototype.showEditor_=function(){this.dropDownOpen_||Blockly.FieldTextDropdown.superClass_.showEditor_.call(this,null,null,!0,function(){Blockly.WidgetDiv.hide();this.showDropdown_();Blockly.Touch.clearTouchIdentifier()})};Blockly.FieldTextDropdown.prototype.getOptions_=Blockly.FieldDropdown.prototype.getOptions_;Blockly.FieldTextDropdown.prototype.positionArrow=Blockly.FieldDropdown.prototype.positionArrow;Blockly.FieldTextDropdown.prototype.showDropdown_=Blockly.FieldDropdown.prototype.showEditor_;
Blockly.FieldTextDropdown.prototype.onHide=Blockly.FieldDropdown.prototype.onHide;Blockly.Field.register("field_textdropdown",Blockly.FieldTextDropdown);Blockly.FieldNumber=function(a,b,c,d,e){b=this.getNumRestrictor(b,c,d);a=a&&!isNaN(a)?String(a):"0";Blockly.FieldNumber.superClass_.constructor.call(this,a,e,b);this.addArgType("number")};goog.inherits(Blockly.FieldNumber,Blockly.FieldTextInput);Blockly.FieldNumber.fromJson=function(a){return new Blockly.FieldNumber(a.value,a.min,a.max,a.precision)};Blockly.FieldNumber.DROPDOWN_WIDTH=168;Blockly.FieldNumber.DROPDOWN_Y_PADDING=8;Blockly.FieldNumber.NUMPAD_BUTTONS="789456123.0- ".split("");
Blockly.FieldNumber.NUMPAD_DELETE_ICON='data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40"><path d="M28.89,11.45H16.79a2.86,2.86,0,0,0-2,.84L9.09,18a2.85,2.85,0,0,0,0,4l5.69,5.69a2.86,2.86,0,0,0,2,.84h12.1a2.86,2.86,0,0,0,2.86-2.86V14.31A2.86,2.86,0,0,0,28.89,11.45ZM27.15,22.73a1,1,0,0,1,0,1.41,1,1,0,0,1-.71.3,1,1,0,0,1-.71-0.3L23,21.41l-2.73,2.73a1,1,0,0,1-1.41,0,1,1,0,0,1,0-1.41L21.59,20l-2.73-2.73a1,1,0,0,1,0-1.41,1,1,0,0,1,1.41,0L23,18.59l2.73-2.73a1,1,0,1,1,1.42,1.41L24.42,20Z" fill="'+
Blockly.Colours.numPadText+'"/></svg>';Blockly.FieldNumber.activeField_=null;Blockly.FieldNumber.prototype.getNumRestrictor=function(a,b,c){this.setConstraints_(a,b,c);a="[\\d]";this.decimalAllowed_&&(a+="|[\\.]");this.negativeAllowed_&&(a+="|[-]");return new RegExp(a)};Blockly.FieldNumber.prototype.setConstraints_=function(a,b,c){this.decimalAllowed_="undefined"==typeof c||isNaN(c)||0==c||Math.floor(c)!=c;this.negativeAllowed_="undefined"==typeof a||isNaN(a)||0>a};
Blockly.FieldNumber.prototype.showEditor_=function(){Blockly.FieldNumber.activeField_=this;var a=goog.userAgent.MOBILE||goog.userAgent.ANDROID||goog.userAgent.IPAD;Blockly.FieldNumber.superClass_.showEditor_.call(this,!1,a);a&&this.showNumPad_()};
Blockly.FieldNumber.prototype.showNumPad_=function(){Blockly.DropDownDiv.hideWithoutAnimation();Blockly.DropDownDiv.clearContent();var a=Blockly.DropDownDiv.getContentDiv();a.setAttribute("role","menu");a.setAttribute("aria-haspopup","true");this.addButtons_(a);Blockly.DropDownDiv.setColour(Blockly.Colours.numPadBackground,Blockly.Colours.numPadBorder);a.style.width=Blockly.FieldNumber.DROPDOWN_WIDTH+"px";this.position_()};
Blockly.FieldNumber.prototype.position_=function(){var a=this.sourceBlock_.workspace.scale,b=this.sourceBlock_.getHeightWidth();b.width*=a;b.height*=a;var c=this.getAbsoluteXY_(),d=c.x+b.width/2;b=c.y+b.height+Blockly.FieldNumber.DROPDOWN_Y_PADDING;a=c.y-Blockly.BlockSvg.MIN_BLOCK_Y*a-Blockly.BlockSvg.FIELD_Y_OFFSET*a;Blockly.DropDownDiv.setBoundsElement(this.sourceBlock_.workspace.getParentSvg().parentNode);Blockly.DropDownDiv.show(this,d,b,d,a,this.onHide_.bind(this))};
Blockly.FieldNumber.prototype.addButtons_=function(a){for(var b=Blockly.FieldNumber.NUMPAD_BUTTONS,c=0,d;d=b[c];c++){var e=document.createElement("button");e.setAttribute("role","menuitem");e.setAttribute("class","blocklyNumPadButton");e.title=d;e.innerHTML=d;Blockly.bindEvent_(e,"mousedown",e,Blockly.FieldNumber.numPadButtonTouch);if("."!=d||this.decimalAllowed_)if("-"!=d||this.negativeAllowed_)if(" "!=d||this.negativeAllowed_)" "==d&&this.negativeAllowed_&&e.setAttribute("style","visibility: hidden");
else continue;else continue;else e.setAttribute("style","visibility: hidden");a.appendChild(e)}b=document.createElement("button");b.setAttribute("role","menuitem");b.setAttribute("class","blocklyNumPadButton");b.title="Delete";c=document.createElement("img");c.src=Blockly.FieldNumber.NUMPAD_DELETE_ICON;b.appendChild(c);Blockly.bindEvent_(b,"mousedown",null,Blockly.FieldNumber.numPadEraseButtonTouch);a.appendChild(b)};
Blockly.FieldNumber.numPadButtonTouch=function(){var a=this.innerHTML,b=Blockly.FieldTextInput.htmlInput_.value,c=Blockly.FieldTextInput.htmlInput_.selectionEnd;a=b.slice(0,Blockly.FieldTextInput.htmlInput_.selectionStart)+a+b.slice(c);Blockly.FieldNumber.updateDisplay_(a);Blockly.Touch.clearTouchIdentifier()};
Blockly.FieldNumber.numPadEraseButtonTouch=function(){var a=Blockly.FieldTextInput.htmlInput_.value,b=Blockly.FieldTextInput.htmlInput_.selectionStart,c=Blockly.FieldTextInput.htmlInput_.selectionEnd,d=a.slice(0,b)+a.slice(c);0==c-b&&(d=a.slice(0,b-1)+a.slice(b));Blockly.FieldNumber.updateDisplay_(d);Blockly.Touch.clearTouchIdentifier()};
Blockly.FieldNumber.updateDisplay_=function(a){Blockly.FieldTextInput.htmlInput_.value=a;Blockly.FieldNumber.superClass_.resizeEditor_.call(Blockly.FieldNumber.activeField_);Blockly.FieldTextInput.htmlInput_.setSelectionRange(a.length,a.length);Blockly.FieldTextInput.htmlInput_.scrollLeft=Blockly.FieldTextInput.htmlInput_.scrollWidth;Blockly.FieldNumber.activeField_.validate_()};Blockly.FieldNumber.prototype.onHide_=function(){Blockly.DropDownDiv.content_.removeAttribute("role");Blockly.DropDownDiv.content_.removeAttribute("aria-haspopup")};
Blockly.Field.register("field_number",Blockly.FieldNumber);Blockly.FieldNumberDropdown=function(a,b,c,d,e,f){this.setConstraints_=Blockly.FieldNumber.prototype.setConstraints_;c=Blockly.FieldNumber.prototype.getNumRestrictor.call(this,c,d,e);Blockly.FieldNumberDropdown.superClass_.constructor.call(this,a,b,f,c);this.addArgType("numberdropdown")};goog.inherits(Blockly.FieldNumberDropdown,Blockly.FieldTextDropdown);Blockly.FieldNumberDropdown.fromJson=function(a){return new Blockly.FieldNumberDropdown(a.value,a.options,a.min,a.max,a.precision)};
Blockly.Field.register("field_numberdropdown",Blockly.FieldNumberDropdown);Blockly.FieldVariable=function(a,b,c){this.menuGenerator_=Blockly.FieldVariable.dropdownCreate;this.size_=new goog.math.Size(Blockly.BlockSvg.FIELD_WIDTH,Blockly.BlockSvg.FIELD_HEIGHT);this.setValidator(b);this.defaultVariableName=a||"";this.defaultType_=c&&1==c.length?c[0]:"";this.variableTypes=c;this.value_=null};goog.inherits(Blockly.FieldVariable,Blockly.FieldDropdown);
Blockly.FieldVariable.fromJson=function(a){var b=Blockly.utils.replaceMessageReferences(a.variable);return new Blockly.FieldVariable(b,null,a.variableTypes)};Blockly.FieldVariable.prototype.init=function(){this.fieldGroup_||(Blockly.FieldVariable.superClass_.init.call(this),this.initModel())};
Blockly.FieldVariable.prototype.initModel=function(){if(!this.variable_){this.workspace_=this.sourceBlock_.workspace;var a=this.initFlyoutBroadcast_(this.workspace_);a||(a=Blockly.Variables.getOrCreateVariablePackage(this.workspace_,null,this.defaultVariableName,this.defaultType_));Blockly.Events.disable();try{this.setValue(a.getId())}finally{Blockly.Events.enable()}}};
Blockly.FieldVariable.prototype.initFlyoutBroadcast_=function(a){var b=Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE,c=a.getVariablesOfType(b);if(a.isFlyout&&this.defaultType_==b&&0!=c.length)return c.sort(Blockly.VariableModel.compareByName),c[0]};Blockly.FieldVariable.dispose=function(){Blockly.FieldVariable.superClass_.dispose.call(this);this.variableMap_=this.workspace_=null};
Blockly.FieldVariable.prototype.setSourceBlock=function(a){goog.asserts.assert(!a.isShadow(),"Variable fields are not allowed to exist on shadow blocks.");Blockly.FieldVariable.superClass_.setSourceBlock.call(this,a)};Blockly.FieldVariable.prototype.getValue=function(){return this.variable_?this.variable_.getId():null};Blockly.FieldVariable.prototype.getText=function(){return this.variable_?this.variable_.name:""};Blockly.FieldVariable.prototype.getVariable=function(){return this.variable_};
Blockly.FieldVariable.prototype.setValue=function(a){var b=Blockly.Variables.getVariable(this.sourceBlock_.workspace,a);if(!b)throw Error("Variable id doesn't point to a real variable!  ID was "+a);var c=b.type;if(!this.typeIsAllowed_(c))throw Error("Variable type doesn't match this field!  Type was "+c);this.sourceBlock_&&Blockly.Events.isEnabled()&&(c=this.variable_?this.variable_.getId():null,Blockly.Events.fire(new Blockly.Events.BlockChange(this.sourceBlock_,"field",this.name,c,a)));this.variable_=
b;this.value_=a;this.setText(b.name)};Blockly.FieldVariable.prototype.typeIsAllowed_=function(a){var b=this.getVariableTypes_();if(!b)return!0;for(var c=0;c<b.length;c++)if(a==b[c])return!0;return!1};Blockly.FieldVariable.prototype.getVariableTypes_=function(){var a=this.variableTypes;if(null===a&&this.sourceBlock_)return this.sourceBlock_.workspace.getVariableTypes();a=a||[""];if(0==a.length)throw a=this.getText(),Error("'variableTypes' of field variable "+a+" was an empty list");return a};
Blockly.FieldVariable.dropdownCreate=function(){if(!this.variable_)throw Error("Tried to call dropdownCreate on a variable field with no variable selected.");var a=[],b=this.getText(),c=null;this.sourceBlock_&&(c=this.sourceBlock_.workspace);if(c){var d=this.getVariableTypes_();a=[];for(var e=0;e<d.length;e++){var f=d[e],g=c.getVariablesOfType(f);a=a.concat(g);if(g=c.getPotentialVariableMap())f=g.getVariablesOfType(f),a=a.concat(f)}}a.sort(Blockly.VariableModel.compareByName);c=[];for(e=0;e<a.length;e++)c[e]=
[a[e].name,a[e].getId()];this.defaultType_==Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE?c.unshift([Blockly.Msg.NEW_BROADCAST_MESSAGE,Blockly.NEW_BROADCAST_MESSAGE_ID]):(c.push([Blockly.Msg.RENAME_VARIABLE,Blockly.RENAME_VARIABLE_ID]),Blockly.Msg.DELETE_VARIABLE&&c.push([Blockly.Msg.DELETE_VARIABLE.replace("%1",b),Blockly.DELETE_VARIABLE_ID]));return c};
Blockly.FieldVariable.prototype.onItemSelected=function(a,b){a=b.getValue();if(this.sourceBlock_&&this.sourceBlock_.workspace){b=this.sourceBlock_.workspace;if(a==Blockly.RENAME_VARIABLE_ID){Blockly.Variables.renameVariable(b,this.variable_);return}if(a==Blockly.DELETE_VARIABLE_ID){b.deleteVariableById(this.variable_.getId());return}if(a==Blockly.NEW_BROADCAST_MESSAGE_ID){var c=this;Blockly.Variables.createVariable(b,function(a){a&&c.setValue(a)},Blockly.BROADCAST_MESSAGE_VARIABLE_TYPE);return}}this.setValue(a)};
Blockly.FieldVariable.prototype.referencesVariables=function(){return!0};Blockly.Field.register("field_variable",Blockly.FieldVariable);/*

 Visual Blocks Editor

 Copyright 2017 Massachusetts Institute of Technology
 https://developers.google.com/blockly/

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
Blockly.FieldVerticalSeparator=function(){this.sourceBlock_=null;this.width_=1;this.height_=Blockly.BlockSvg.ICON_SEPARATOR_HEIGHT;this.size_=new goog.math.Size(this.width_,this.height_)};goog.inherits(Blockly.FieldVerticalSeparator,Blockly.Field);Blockly.FieldVerticalSeparator.fromJson=function(a){return new Blockly.FieldVerticalSeparator};Blockly.FieldVerticalSeparator.prototype.EDITABLE=!1;
Blockly.FieldVerticalSeparator.prototype.init=function(){this.fieldGroup_||(this.fieldGroup_=Blockly.utils.createSvgElement("g",{},null),this.visible_||(this.fieldGroup_.style.display="none"),this.lineElement_=Blockly.utils.createSvgElement("line",{stroke:this.sourceBlock_.getColourSecondary(),"stroke-linecap":"round",x1:0,y1:0,x2:0,y2:this.height_},this.fieldGroup_),this.sourceBlock_.getSvgRoot().appendChild(this.fieldGroup_))};
Blockly.FieldVerticalSeparator.prototype.setLineHeight=function(a){this.lineElement_.setAttribute("y2",a)};Blockly.FieldVerticalSeparator.prototype.dispose=function(){goog.dom.removeNode(this.fieldGroup_);this.lineElement_=this.fieldGroup_=null};Blockly.FieldVerticalSeparator.prototype.getValue=function(){return null};Blockly.FieldVerticalSeparator.prototype.setValue=function(a){};Blockly.FieldVerticalSeparator.prototype.setText=function(a){};Blockly.FieldVerticalSeparator.prototype.render_=function(){};
Blockly.FieldVerticalSeparator.prototype.updateWidth=function(){};Blockly.Field.register("field_vertical_separator",Blockly.FieldVerticalSeparator);Blockly.Generator=function(a){this.name_=a;this.FUNCTION_NAME_PLACEHOLDER_REGEXP_=new RegExp(this.FUNCTION_NAME_PLACEHOLDER_,"g")};Blockly.Generator.NAME_TYPE="generated_function";Blockly.Generator.prototype.INFINITE_LOOP_TRAP=null;Blockly.Generator.prototype.STATEMENT_PREFIX=null;Blockly.Generator.prototype.INDENT="  ";Blockly.Generator.prototype.COMMENT_WRAP=60;Blockly.Generator.prototype.ORDER_OVERRIDES=[];
Blockly.Generator.prototype.workspaceToCode=function(a){a||(console.warn("No workspace specified in workspaceToCode call.  Guessing."),a=Blockly.getMainWorkspace());var b=[];this.init(a);a=a.getTopBlocks(!0);for(var c=0,d;d=a[c];c++){var e=this.blockToCode(d);goog.isArray(e)&&(e=e[0]);e&&(d.outputConnection&&this.scrubNakedValue&&(e=this.scrubNakedValue(e)),b.push(e))}b=b.join("\n");b=this.finish(b);b=b.replace(/^\s+\n/,"");b=b.replace(/\n\s+$/,"\n");return b=b.replace(/[ \t]+\n/g,"\n")};
Blockly.Generator.prototype.prefixLines=function(a,b){return b+a.replace(/(?!\n$)\n/g,"\n"+b)};Blockly.Generator.prototype.allNestedComments=function(a){var b=[];a=a.getDescendants(!0);for(var c=0;c<a.length;c++){var d=a[c].getCommentText();d&&b.push(d)}b.length&&b.push("");return b.join("\n")};
Blockly.Generator.prototype.blockToCode=function(a){if(!a)return"";if(a.disabled)return this.blockToCode(a.getNextBlock());var b=this[a.type];goog.asserts.assertFunction(b,'Language "%s" does not know how to generate code for block type "%s".',this.name_,a.type);b=b.call(a,a);if(goog.isArray(b))return goog.asserts.assert(a.outputConnection,'Expecting string from statement block "%s".',a.type),[this.scrub_(a,b[0]),b[1]];if(goog.isString(b)){var c=a.id.replace(/\$/g,"$$$$");this.STATEMENT_PREFIX&&(b=
this.STATEMENT_PREFIX.replace(/%1/g,"'"+c+"'")+b);return this.scrub_(a,b)}if(null===b)return"";goog.asserts.fail("Invalid code generated: %s",b)};
Blockly.Generator.prototype.valueToCode=function(a,b,c){isNaN(c)&&goog.asserts.fail('Expecting valid order from block "%s".',a.type);var d=a.getInputTargetBlock(b);if(!d)return"";b=this.blockToCode(d);if(""===b)return"";goog.asserts.assertArray(b,'Expecting tuple from value block "%s".',d.type);a=b[0];b=b[1];isNaN(b)&&goog.asserts.fail('Expecting valid order from value block "%s".',d.type);if(!a)return"";d=!1;var e=Math.floor(c),f=Math.floor(b);if(e<=f&&(e!=f||0!=e&&99!=e))for(d=!0,e=0;e<this.ORDER_OVERRIDES.length;e++)if(this.ORDER_OVERRIDES[e][0]==
c&&this.ORDER_OVERRIDES[e][1]==b){d=!1;break}d&&(a="("+a+")");return a};Blockly.Generator.prototype.statementToCode=function(a,b){a=a.getInputTargetBlock(b);b=this.blockToCode(a);goog.asserts.assertString(b,'Expecting code from statement block "%s".',a&&a.type);b&&(b=this.prefixLines(b,this.INDENT));return b};
Blockly.Generator.prototype.addLoopTrap=function(a,b){b=b.replace(/\$/g,"$$$$");this.INFINITE_LOOP_TRAP&&(a=this.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+b+"'")+a);this.STATEMENT_PREFIX&&(a+=this.prefixLines(this.STATEMENT_PREFIX.replace(/%1/g,"'"+b+"'"),this.INDENT));return a};Blockly.Generator.prototype.RESERVED_WORDS_="";Blockly.Generator.prototype.addReservedWords=function(a){this.RESERVED_WORDS_+=a+","};Blockly.Generator.prototype.FUNCTION_NAME_PLACEHOLDER_="{leCUI8hutHZI4480Dc}";
Blockly.Generator.prototype.provideFunction_=function(a,b){if(!this.definitions_[a]){var c=this.variableDB_.getDistinctName(a,Blockly.Procedures.NAME_TYPE);this.functionNames_[a]=c;b=b.join("\n").replace(this.FUNCTION_NAME_PLACEHOLDER_REGEXP_,c);for(var d;d!=b;)d=b,b=b.replace(/^(( {2})*) {2}/gm,"$1\x00");b=b.replace(/\0/g,this.INDENT);this.definitions_[a]=b}return this.functionNames_[a]};Blockly.Generator.prototype.init=function(a){};Blockly.Generator.prototype.scrub_=function(a,b){return b};
Blockly.Generator.prototype.finish=function(a){return a};Blockly.Generator.prototype.scrubNakedValue=function(a){return a};Blockly.Names=function(a,b){this.variablePrefix_=b||"";this.reservedDict_=Object.create(null);if(a)for(a=a.split(","),b=0;b<a.length;b++)this.reservedDict_[a[b]]=!0;this.reset()};Blockly.Names.DEVELOPER_VARIABLE_TYPE="DEVELOPER_VARIABLE";Blockly.Names.prototype.reset=function(){this.db_=Object.create(null);this.dbReverse_=Object.create(null);this.variableMap_=null};Blockly.Names.prototype.setVariableMap=function(a){this.variableMap_=a};
Blockly.Names.prototype.getNameForUserVariable_=function(a){return this.variableMap_?(a=this.variableMap_.getVariableById(a))?a.name:null:(console.log("Deprecated call to Blockly.Names.prototype.getName without defining a variable map. To fix, add the folowing code in your generator's init() function:\nBlockly.YourGeneratorName.variableDB_.setVariableMap(workspace.getVariableMap());"),null)};
Blockly.Names.prototype.getName=function(a,b){if(b==Blockly.Variables.NAME_TYPE){var c=this.getNameForUserVariable_(a);c&&(a=c)}c=a.toLowerCase()+"_"+b;var d=b==Blockly.Variables.NAME_TYPE||b==Blockly.Names.DEVELOPER_VARIABLE_TYPE?this.variablePrefix_:"";if(c in this.db_)return d+this.db_[c];a=this.getDistinctName(a,b);this.db_[c]=a.substr(d.length);return a};
Blockly.Names.prototype.getDistinctName=function(a,b){a=this.safeName_(a);for(var c="";this.dbReverse_[a+c]||a+c in this.reservedDict_;)c=c?c+1:2;a+=c;this.dbReverse_[a]=!0;return(b==Blockly.Variables.NAME_TYPE||b==Blockly.Names.DEVELOPER_VARIABLE_TYPE?this.variablePrefix_:"")+a};Blockly.Names.prototype.safeName_=function(a){a?(a=encodeURI(a.replace(/ /g,"_")).replace(/[^\w]/g,"_"),-1!="0123456789".indexOf(a[0])&&(a="my_"+a)):a="unnamed";return a};
Blockly.Names.equals=function(a,b){return a.toLowerCase()==b.toLowerCase()};Blockly.Procedures={};Blockly.Procedures.NAME_TYPE=Blockly.PROCEDURE_CATEGORY_NAME;Blockly.Procedures.allProcedures=function(a){a=a.getAllBlocks();for(var b=[],c=[],d=0;d<a.length;d++)if(a[d].getProcedureDef){var e=a[d].getProcedureDef();e&&(e[2]?b.push(e):c.push(e))}c.sort(Blockly.Procedures.procTupleComparator_);b.sort(Blockly.Procedures.procTupleComparator_);return[c,b]};
Blockly.Procedures.allProcedureMutations=function(a){a=a.getAllBlocks();for(var b=[],c=0;c<a.length;c++)if(a[c].type==Blockly.PROCEDURES_PROTOTYPE_BLOCK_TYPE){var d=a[c].mutationToDom(!0);d&&b.push(d)}return b};Blockly.Procedures.sortProcedureMutations_=function(a){a=a.slice();a.sort(function(a,c){a=a.getAttribute("proccode");c=c.getAttribute("proccode");return Blockly.scratchBlocksUtils.compareStrings(a,c)});return a};
Blockly.Procedures.procTupleComparator_=function(a,b){return Blockly.scratchBlocksUtils.compareStrings(a[0],b[0])};Blockly.Procedures.findLegalName=function(a,b){if(b.isInFlyout)return a;for(;!Blockly.Procedures.isLegalName_(a,b.workspace,b);){var c=a.match(/^(.*?)(\d+)$/);a=c?c[1]+(parseInt(c[2],10)+1):a+"2"}return a};Blockly.Procedures.isLegalName_=function(a,b,c){return!Blockly.Procedures.isNameUsed(a,b,c)};
Blockly.Procedures.isNameUsed=function(a,b,c){b=b.getAllBlocks();for(var d=0;d<b.length;d++)if(b[d]!=c&&b[d].getProcedureDef){var e=b[d].getProcedureDef();if(Blockly.Names.equals(e[0],a))return!1}return!0};Blockly.Procedures.rename=function(a){a=a.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"");var b=Blockly.Procedures.findLegalName(a,this.sourceBlock_),c=this.text_;if(c!=a&&c!=b){a=this.sourceBlock_.workspace.getAllBlocks();for(var d=0;d<a.length;d++)a[d].renameProcedure&&a[d].renameProcedure(c,b)}return b};
Blockly.Procedures.flyoutCategory=function(a){var b=[];Blockly.Procedures.addCreateButton_(a,b);a=Blockly.Procedures.allProcedureMutations(a);a=Blockly.Procedures.sortProcedureMutations_(a);for(var c=0;c<a.length;c++){var d=a[c],e=goog.dom.createDom("block");e.setAttribute("type","procedures_call");e.setAttribute("gap",16);e.appendChild(d);b.push(e)}return b};
Blockly.Procedures.addCreateButton_=function(a,b){var c=goog.dom.createDom("button");c.setAttribute("text",Blockly.Msg.NEW_PROCEDURE);c.setAttribute("callbackKey","CREATE_PROCEDURE");a.registerButtonCallback("CREATE_PROCEDURE",function(){Blockly.Procedures.createProcedureDefCallback_(a)});b.push(c)};
Blockly.Procedures.getCallers=function(a,b,c,d){var e=[],f=b.getTopBlocks();for(b=0;b<f.length;b++){var g=f[b];(g.id!=c.id||d)&&e.push.apply(e,g.getDescendants(!1))}c=[];for(b=0;b<e.length;b++)g=e[b],g.type==Blockly.PROCEDURES_CALL_BLOCK_TYPE&&(d=g.getProcCode())&&d==a&&c.push(g);return c};
Blockly.Procedures.mutateCallersAndPrototype=function(a,b,c){var d=Blockly.Procedures.getDefineBlock(a,b);b=Blockly.Procedures.getPrototypeBlock(a,b);if(d&&b){a=Blockly.Procedures.getCallers(a,d.workspace,d,!0);a.push(b);Blockly.Events.setGroup(!0);for(d=0;b=a[d];d++){var e=b.mutationToDom();e=e&&Blockly.Xml.domToText(e);b.domToMutation(c);var f=b.mutationToDom();f=f&&Blockly.Xml.domToText(f);e!=f&&Blockly.Events.fire(new Blockly.Events.BlockChange(b,"mutation",null,e,f))}Blockly.Events.setGroup(!1)}else alert("No define block on workspace")};
Blockly.Procedures.getDefineBlock=function(a,b){b=b.getTopBlocks(!1);for(var c=0;c<b.length;c++)if(b[c].type==Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE){var d=b[c].getInput("custom_block").connection.targetBlock();if(d.getProcCode&&d.getProcCode()==a)return b[c]}return null};Blockly.Procedures.getPrototypeBlock=function(a,b){return(a=Blockly.Procedures.getDefineBlock(a,b))?a.getInput("custom_block").connection.targetBlock():null};Blockly.Procedures.newProcedureMutation=function(){return Blockly.Xml.textToDom('<xml><mutation proccode="block name" argumentids="[]" argumentnames="[]" argumentdefaults="[]" warp="false"></mutation></xml>').firstChild};
Blockly.Procedures.createProcedureDefCallback_=function(a){Blockly.Procedures.externalProcedureDefCallback(Blockly.Procedures.newProcedureMutation(),Blockly.Procedures.createProcedureCallbackFactory_(a))};
Blockly.Procedures.createProcedureCallbackFactory_=function(a){return function(b){b&&(b='<xml><block type="procedures_definition"><statement name="custom_block"><shadow type="procedures_prototype">'+Blockly.Xml.domToText(b)+"</shadow></statement></block></xml>",b=Blockly.Xml.textToDom(b).firstChild,Blockly.Events.setGroup(!0),b=Blockly.Xml.domToBlock(b,a),b.moveBy(30,30),b.scheduleSnapAndBump(),Blockly.Events.setGroup(!1))}};
Blockly.Procedures.editProcedureCallback_=function(a){if(a.type==Blockly.PROCEDURES_DEFINITION_BLOCK_TYPE){a=a.getInput("custom_block");if(!a){alert("Bad input");return}a=a.connection;if(!a){alert("Bad connection");return}a=a.targetBlock();if(!a||!a.type==Blockly.PROCEDURES_PROTOTYPE_BLOCK_TYPE){alert("Bad inner block");return}}else if(a.type==Blockly.PROCEDURES_CALL_BLOCK_TYPE){var b=a.workspace.isFlyout?a.workspace.targetWorkspace:a.workspace;a=Blockly.Procedures.getPrototypeBlock(a.getProcCode(),
b)}Blockly.Procedures.externalProcedureDefCallback(a.mutationToDom(),Blockly.Procedures.editProcedureCallbackFactory_(a))};Blockly.Procedures.editProcedureCallbackFactory_=function(a){return function(b){b&&Blockly.Procedures.mutateCallersAndPrototype(a.getProcCode(),a.workspace,b)}};Blockly.Procedures.externalProcedureDefCallback=function(){alert("External procedure editor must be override Blockly.Procedures.externalProcedureDefCallback")};
Blockly.Procedures.makeEditOption=function(a){return{enabled:!0,text:Blockly.Msg.EDIT_PROCEDURE,callback:function(){Blockly.Procedures.editProcedureCallback_(a)}}};Blockly.Procedures.showProcedureDefCallback_=function(a){alert('TODO(#1136): implement showing procedure definition (procCode was "'+a.procCode_+'")')};Blockly.Procedures.makeShowDefinitionOption=function(a){return{enabled:!0,text:Blockly.Msg.SHOW_PROCEDURE_DEFINITION,callback:function(){Blockly.Procedures.showProcedureDefCallback_(a)}}};
Blockly.Procedures.deleteProcedureDefCallback=function(a,b){if(0<Blockly.Procedures.getCallers(a,b.workspace,b,!1).length)return!1;a=b.workspace;Blockly.Events.setGroup(!0);b.dispose();Blockly.Events.setGroup(!1);a.refreshToolboxSelection_();return!0};Blockly.ScratchMsgs={};Blockly.ScratchMsgs.locales={};Blockly.ScratchMsgs.currentLocale_="en";Blockly.ScratchMsgs.setLocale=function(a){Object.keys(Blockly.ScratchMsgs.locales).includes(a)?(Blockly.ScratchMsgs.currentLocale_=a,Blockly.Msg=Blockly.ScratchMsgs.locales[a]):console.warn("Ignoring unrecognized locale: "+a)};
Blockly.ScratchMsgs.translate=function(a,b,c){c=c||Blockly.ScratchMsgs.currentLocale_;return Object.keys(Blockly.ScratchMsgs.locales).includes(c)&&(c=Blockly.ScratchMsgs.locales[c],Object.keys(c).includes(a))?c[a]:b};Blockly.FlyoutButton=function(a,b,c,d){this.init(a,b,c,d);this.callback_=null;a=c.getAttribute("callbackKey");this.isLabel_&&a?console.warn("Labels should not have callbacks. Label text: "+this.text_):this.isLabel_||a&&b.getButtonCallback(a)?this.callback_=b.getButtonCallback(a):console.warn("Buttons should have callbacks. Button text: "+this.text_)};Blockly.FlyoutButton.MARGIN=40;Blockly.FlyoutButton.prototype.width=0;Blockly.FlyoutButton.prototype.height=40;
Blockly.FlyoutButton.prototype.onMouseUpWrapper_=null;Blockly.FlyoutButton.prototype.init=function(a,b,c,d){this.workspace_=a;this.targetWorkspace_=b;this.text_=c.getAttribute("text");this.position_=new goog.math.Coordinate(0,0);this.isLabel_=d;this.isCategoryLabel_="true"===c.getAttribute("category-label");this.cssClass_=c.getAttribute("web-class")||null};
Blockly.FlyoutButton.prototype.createDom=function(){var a=this.isLabel_?"blocklyFlyoutLabel":"blocklyFlyoutButton";this.cssClass_&&(a+=" "+this.cssClass_);this.svgGroup_=Blockly.utils.createSvgElement("g",{"class":a},this.workspace_.getCanvas());this.addTextSvg(this.isLabel_);this.mouseUpWrapper_=Blockly.bindEventWithChecks_(this.svgGroup_,"mouseup",this,this.onMouseUp_);return this.svgGroup_};
Blockly.FlyoutButton.prototype.addTextSvg=function(a){if(!a)var b=Blockly.utils.createSvgElement("rect",{"class":"blocklyFlyoutButtonShadow",rx:4,ry:4,x:1,y:1},this.svgGroup_);var c=Blockly.utils.createSvgElement("rect",{"class":a?"blocklyFlyoutLabelBackground":"blocklyFlyoutButtonBackground",rx:4,ry:4},this.svgGroup_),d=Blockly.utils.createSvgElement("text",{"class":a?"blocklyFlyoutLabelText":"blocklyText",x:0,y:0,"text-anchor":"middle"},this.svgGroup_);d.textContent=Blockly.utils.replaceMessageReferences(this.text_);
this.width=Blockly.Field.getCachedWidth(d);a||(this.width+=2*Blockly.FlyoutButton.MARGIN,b.setAttribute("width",this.width),b.setAttribute("height",this.height));c.setAttribute("width",this.width);c.setAttribute("height",this.height);d.setAttribute("text-anchor","middle");d.setAttribute("dominant-baseline","central");d.setAttribute("dy",goog.userAgent.EDGE_OR_IE?Blockly.Field.IE_TEXT_OFFSET:"0");d.setAttribute("x",this.width/2);d.setAttribute("y",this.height/2)};
Blockly.FlyoutButton.prototype.show=function(){this.updateTransform_();this.svgGroup_.setAttribute("display","block")};Blockly.FlyoutButton.prototype.updateTransform_=function(){this.svgGroup_.setAttribute("transform","translate("+this.position_.x+","+this.position_.y+")")};Blockly.FlyoutButton.prototype.moveTo=function(a,b){this.position_.x=a;this.position_.y=b;this.updateTransform_()};Blockly.FlyoutButton.prototype.getTargetWorkspace=function(){return this.targetWorkspace_};
Blockly.FlyoutButton.prototype.getIsCategoryLabel=function(){return this.isCategoryLabel_};Blockly.FlyoutButton.prototype.getText=function(){return this.text_};Blockly.FlyoutButton.prototype.getPosition=function(){return this.position_};Blockly.FlyoutButton.prototype.dispose=function(){this.onMouseUpWrapper_&&Blockly.unbindEvent_(this.onMouseUpWrapper_);this.svgGroup_&&(goog.dom.removeNode(this.svgGroup_),this.svgGroup_=null);this.targetWorkspace_=this.workspace_=null};
Blockly.FlyoutButton.prototype.onMouseUp_=function(a){(a=this.targetWorkspace_.getGesture(a))&&a.cancel();this.callback_&&this.callback_(this)};Blockly.FlyoutExtensionCategoryHeader=function(a,b,c){this.init(a,b,c,!1);this.flyoutWidth_=this.targetWorkspace_.getFlyout().getWidth();this.extensionId=c.getAttribute("id");this.isCategoryLabel_=!0};goog.inherits(Blockly.FlyoutExtensionCategoryHeader,Blockly.FlyoutButton);
Blockly.FlyoutExtensionCategoryHeader.prototype.createDom=function(){this.svgGroup_=Blockly.utils.createSvgElement("g",{"class":"blocklyFlyoutLabel"},this.workspace_.getCanvas());this.addTextSvg(!0);this.setStatus(Blockly.StatusButtonState.NOT_READY);var a=(this.flyoutWidth_-25-15)/this.workspace_.scale;this.imageSrc_&&(this.imageElement_=Blockly.utils.createSvgElement("image",{"class":"blocklyFlyoutButton",height:"25px",width:"25px",x:a+"px",y:"10px"},this.svgGroup_),this.setImageSrc(this.imageSrc_));
this.callback_=Blockly.statusButtonCallback.bind(this,this.extensionId);this.mouseUpWrapper_=Blockly.bindEventWithChecks_(this.imageElement_,"mouseup",this,this.onMouseUp_);return this.svgGroup_};Blockly.FlyoutExtensionCategoryHeader.prototype.setStatus=function(a){var b=Blockly.mainWorkspace.options.pathToMedia;a==Blockly.StatusButtonState.READY&&this.setImageSrc(b+"status-ready.svg");a==Blockly.StatusButtonState.NOT_READY&&this.setImageSrc(b+"status-not-ready.svg")};
Blockly.FlyoutExtensionCategoryHeader.prototype.setImageSrc=function(a){null!==a&&(this.imageSrc_=a,this.imageElement_&&this.imageElement_.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.imageSrc_||""))};Blockly.Flyout=function(a){a.getMetrics=this.getMetrics_.bind(this);a.setMetrics=this.setMetrics_.bind(this);this.workspace_=new Blockly.WorkspaceSvg(a);this.workspace_.isFlyout=!0;var b=this.workspace_.newBlock;this.workspace_.newBlock=function(a,d){return b.call(this,a,d||a)};this.RTL=!!a.RTL;this.horizontalLayout_=a.horizontalLayout;this.toolboxPosition_=a.toolboxPosition;this.eventWrappers_=[];this.backgroundButtons_=[];this.buttons_=[];this.listeners_=[];this.permanentlyDisabled_=[];this.scrollTarget=
this.parentToolbox_=null;this.recycleBlocks_=[]};Blockly.Flyout.prototype.autoClose=!1;Blockly.Flyout.prototype.isVisible_=!1;Blockly.Flyout.prototype.containerVisible_=!0;Blockly.Flyout.prototype.CORNER_RADIUS=0;Blockly.Flyout.prototype.MARGIN=12;Blockly.Flyout.prototype.GAP_X=3*Blockly.Flyout.prototype.MARGIN;Blockly.Flyout.prototype.GAP_Y=Blockly.Flyout.prototype.MARGIN;Blockly.Flyout.prototype.SCROLLBAR_PADDING=2;Blockly.Flyout.prototype.width_=0;Blockly.Flyout.prototype.height_=0;
Blockly.Flyout.prototype.contentWidth_=0;Blockly.Flyout.prototype.contentHeight_=0;Blockly.Flyout.prototype.verticalOffset_=0;Blockly.Flyout.prototype.dragAngleRange_=70;Blockly.Flyout.prototype.scrollAnimationFraction=.3;Blockly.Flyout.prototype.recyclingEnabled_=!0;
Blockly.Flyout.prototype.createDom=function(a){this.svgGroup_=Blockly.utils.createSvgElement(a,{"class":"blocklyFlyout",style:"display: none"},null);this.svgBackground_=Blockly.utils.createSvgElement("path",{"class":"blocklyFlyoutBackground"},this.svgGroup_);this.svgGroup_.appendChild(this.workspace_.createDom());return this.svgGroup_};
Blockly.Flyout.prototype.init=function(a){this.targetWorkspace_=a;this.workspace_.targetWorkspace=a;this.scrollbar_=new Blockly.Scrollbar(this.workspace_,this.horizontalLayout_,!1,"blocklyFlyoutScrollbar");this.position();Array.prototype.push.apply(this.eventWrappers_,Blockly.bindEventWithChecks_(this.svgGroup_,"wheel",this,this.wheel_));Array.prototype.push.apply(this.eventWrappers_,Blockly.bindEventWithChecks_(this.svgGroup_,"mousedown",this,this.onMouseDown_));this.workspace_.getGesture=this.targetWorkspace_.getGesture.bind(this.targetWorkspace_);
this.workspace_.variableMap_=this.targetWorkspace_.getVariableMap();this.workspace_.createPotentialVariableMap()};
Blockly.Flyout.prototype.dispose=function(){this.hide();Blockly.unbindEvent_(this.eventWrappers_);this.scrollbar_&&(this.scrollbar_.dispose(),this.scrollbar_=null);this.workspace_&&(this.workspace_.targetWorkspace=null,this.workspace_.dispose(),this.workspace_=null);this.svgGroup_&&(goog.dom.removeNode(this.svgGroup_),this.svgGroup_=null);this.targetWorkspace_=this.svgBackground_=this.parentToolbox_=null};Blockly.Flyout.prototype.setParentToolbox=function(a){this.parentToolbox_=a};
Blockly.Flyout.prototype.getWidth=function(){return this.DEFAULT_WIDTH};Blockly.Flyout.prototype.getHeight=function(){return this.height_};Blockly.Flyout.prototype.getWorkspace=function(){return this.workspace_};Blockly.Flyout.prototype.isVisible=function(){return this.isVisible_};Blockly.Flyout.prototype.setVisible=function(a){var b=a!=this.isVisible();this.isVisible_=a;b&&this.updateDisplay_()};
Blockly.Flyout.prototype.setContainerVisible=function(a){var b=a!=this.containerVisible_;this.containerVisible_=a;b&&this.updateDisplay_()};Blockly.Flyout.prototype.updateDisplay_=function(){var a=this.containerVisible_?this.isVisible():!1;this.svgGroup_.style.display=a?"block":"none";this.scrollbar_.setContainerVisible(a)};
Blockly.Flyout.prototype.hide=function(){if(this.isVisible()){this.setVisible(!1);for(var a=0,b;b=this.listeners_[a];a++)Blockly.unbindEvent_(b);this.listeners_.length=0;this.reflowWrapper_&&(this.workspace_.removeChangeListener(this.reflowWrapper_),this.reflowWrapper_=null)}};
Blockly.Flyout.prototype.show=function(a){this.workspace_.setResizesEnabled(!1);this.hide();this.clearOldBlocks_();this.setVisible(!0);for(var b=[],c=[],d=this.permanentlyDisabled_.length=0,e;e=a[d];d++){if("string"===typeof e){var f=this.workspace_.targetWorkspace.getToolboxCategoryCallback(a[d])(this.workspace_.targetWorkspace);a.splice.apply(a,[d,1].concat(f));e=a[d]}if(e.tagName){var g=e.tagName.toUpperCase();f=this.horizontalLayout_?this.GAP_X:this.GAP_Y;if("BLOCK"==g){var h=e.getAttribute("id")||
e.getAttribute("type");g=this.recycleBlocks_.findIndex(function(a){return a.id===h});g=-1<g?this.recycleBlocks_.splice(g,1)[0]:Blockly.Xml.domToBlock(e,this.workspace_);g.disabled&&this.permanentlyDisabled_.push(g);b.push({type:"block",block:g});e=parseInt(e.getAttribute("gap"),10);c.push(isNaN(e)?f:e)}else if("SEP"==e.tagName.toUpperCase())e=parseInt(e.getAttribute("gap"),10),!isNaN(e)&&0<c.length?c[c.length-1]=e:c.push(f);else if("LABEL"==g&&"true"==e.getAttribute("showStatusButton"))e=new Blockly.FlyoutExtensionCategoryHeader(this.workspace_,
this.targetWorkspace_,e),b.push({type:"button",button:e});else if("BUTTON"==g||"LABEL"==g)e=new Blockly.FlyoutButton(this.workspace_,this.targetWorkspace_,e,"LABEL"==g),b.push({type:"button",button:e}),c.push(f)}}this.emptyRecycleBlocks_();this.layout_(b,c);this.listeners_.push(Blockly.bindEvent_(this.svgBackground_,"mouseover",this,function(){for(var a=this.workspace_.getTopBlocks(!1),b=0,c;c=a[b];b++)c.removeSelect()}));this.workspace_.setResizesEnabled(!0);this.reflow();this.position();this.reflowWrapper_=
this.reflow.bind(this);this.workspace_.addChangeListener(this.reflowWrapper_);this.recordCategoryScrollPositions_()};Blockly.Flyout.prototype.emptyRecycleBlocks_=function(){var a=this.recycleBlocks_;this.recycleBlocks_=[];for(var b=0;b<a.length;b++)a[b].dispose(!1,!1)};
Blockly.Flyout.prototype.recordCategoryScrollPositions_=function(){this.categoryScrollPositions=[];for(var a=0;a<this.buttons_.length;a++)if(this.buttons_[a].getIsCategoryLabel()){var b=this.buttons_[a];this.categoryScrollPositions.push({categoryName:b.getText(),position:this.horizontalLayout_?b.getPosition().x:b.getPosition().y})}b=this.categoryScrollPositions.length;if(0<b){for(a=0;a<b-1;a++)this.categoryScrollPositions[a].length=this.categoryScrollPositions[a+1].position-this.categoryScrollPositions[a].position;
for(a=this.categoryScrollPositions[b-1].length=0;a<b;a++){var c=this.parentToolbox_.getCategoryByIndex(a);c&&c.id_&&(this.categoryScrollPositions[a].categoryId=c.id_)}}};Blockly.Flyout.prototype.selectCategoryByScrollPosition=function(a){if(!this.scrollTarget){a=Math.round(a/this.workspace_.scale);for(var b=this.categoryScrollPositions.length-1;0<=b;b--)if(a>=this.categoryScrollPositions[b].position){this.parentToolbox_.selectCategoryById(this.categoryScrollPositions[b].categoryId);break}}};
Blockly.Flyout.prototype.stepScrollAnimation=function(){if(this.scrollTarget){var a=this.horizontalLayout_?-this.workspace_.scrollX:-this.workspace_.scrollY,b=this.scrollTarget-a;1>Math.abs(b)?(this.scrollbar_.set(this.scrollTarget),this.scrollTarget=null):(this.scrollbar_.set(a+b*this.scrollAnimationFraction),requestAnimationFrame(this.stepScrollAnimation.bind(this)))}};
Blockly.Flyout.prototype.getScrollPos=function(){return(this.horizontalLayout_?-this.workspace_.scrollX:-this.workspace_.scrollY)/this.workspace_.scale};Blockly.Flyout.prototype.setScrollPos=function(a){this.scrollbar_.set(a*this.workspace_.scale)};Blockly.Flyout.prototype.setRecyclingEnabled=function(a){this.recyclingEnabled_=a};
Blockly.Flyout.prototype.clearOldBlocks_=function(){for(var a=this.workspace_.getTopBlocks(!1),b=0,c;c=a[b];b++)c.workspace==this.workspace_&&(this.recyclingEnabled_&&c.isRecyclable()?this.recycleBlock_(c):c.dispose(!1,!1));for(b=0;b<this.backgroundButtons_.length;b++)(a=this.backgroundButtons_[b])&&goog.dom.removeNode(a);for(b=this.backgroundButtons_.length=0;a=this.buttons_[b];b++)a.dispose();this.buttons_.length=0;this.workspace_.getPotentialVariableMap().clear()};
Blockly.Flyout.prototype.addBlockListeners_=function(a,b,c){this.listeners_.push(Blockly.bindEventWithChecks_(a,"mousedown",null,this.blockMouseDown_(b)));this.listeners_.push(Blockly.bindEventWithChecks_(c,"mousedown",null,this.blockMouseDown_(b)));this.listeners_.push(Blockly.bindEvent_(a,"mouseover",b,b.addSelect));this.listeners_.push(Blockly.bindEvent_(a,"mouseout",b,b.removeSelect));this.listeners_.push(Blockly.bindEvent_(c,"mouseover",b,b.addSelect));this.listeners_.push(Blockly.bindEvent_(c,
"mouseout",b,b.removeSelect))};Blockly.Flyout.prototype.blockMouseDown_=function(a){var b=this;return function(c){var d=b.targetWorkspace_.getGesture(c);d&&(d.setStartBlock(a),d.handleFlyoutStart(c,b))}};Blockly.Flyout.prototype.onMouseDown_=function(a){var b=this.targetWorkspace_.getGesture(a);b&&b.handleFlyoutStart(a,this)};
Blockly.Flyout.prototype.createBlock=function(a){var b=null;Blockly.Events.disable();var c=this.targetWorkspace_.getAllVariables();this.targetWorkspace_.setResizesEnabled(!1);try{b=this.placeNewBlock_(a),Blockly.hideChaff()}finally{Blockly.Events.enable()}a=Blockly.Variables.getAddedVariables(this.targetWorkspace_,c);if(Blockly.Events.isEnabled())for(Blockly.Events.setGroup(!0),Blockly.Events.fire(new Blockly.Events.Create(b)),c=0;c<a.length;c++)Blockly.Events.fire(new Blockly.Events.VarCreate(a[c]));
this.autoClose&&this.hide();return b};Blockly.Flyout.prototype.reflow=function(){this.reflowWrapper_&&this.workspace_.removeChangeListener(this.reflowWrapper_);var a=this.workspace_.getTopBlocks(!1);this.reflowInternal_(a);this.reflowWrapper_&&this.workspace_.addChangeListener(this.reflowWrapper_)};Blockly.Flyout.prototype.isScrollable=function(){return this.scrollbar_?this.scrollbar_.isVisible():!1};
Blockly.Flyout.prototype.placeNewBlock_=function(a){var b=this.targetWorkspace_;if(!a.getSvgRoot())throw"oldBlock is not rendered.";var c=Blockly.Xml.blockToDom(a);b.setResizesEnabled(!1);c=Blockly.Xml.domToBlock(c,b);if(!c.getSvgRoot())throw"block is not rendered.";var d=b.getOriginOffsetInPixels(),e=this.workspace_.getOriginOffsetInPixels();a=a.getRelativeToSurfaceXY().scale(this.workspace_.scale);a=goog.math.Coordinate.sum(e,a);b=goog.math.Coordinate.difference(a,d).scale(1/b.scale);c.moveBy(b.x,
b.y);return c};Blockly.Flyout.prototype.recycleBlock_=function(a){var b=a.getRelativeToSurfaceXY();a.moveBy(-b.x,-b.y);this.recycleBlocks_.push(a)};goog.dom.animationFrame={};goog.dom.animationFrame.polyfill={};goog.dom.animationFrame.polyfill.ENABLED=!0;
goog.dom.animationFrame.polyfill.install=function(){if(goog.dom.animationFrame.polyfill.ENABLED){for(var a=["ms","moz","webkit","o"],b=0,c;c=a[b]&&!goog.global.requestAnimationFrame;++b)goog.global.requestAnimationFrame=goog.global[c+"RequestAnimationFrame"],goog.global.cancelAnimationFrame=goog.global[c+"CancelAnimationFrame"]||goog.global[c+"CancelRequestAnimationFrame"];if(!goog.global.requestAnimationFrame){var d=0;goog.global.requestAnimationFrame=function(a){var b=(new Date).getTime(),c=Math.max(0,
16-(b-d));d=b+c;return goog.global.setTimeout(function(){a(b+c)},c)};goog.global.cancelAnimationFrame||(goog.global.cancelAnimationFrame=function(a){clearTimeout(a)})}}};Blockly.HorizontalFlyout=function(a){a.getMetrics=this.getMetrics_.bind(this);a.setMetrics=this.setMetrics_.bind(this);Blockly.HorizontalFlyout.superClass_.constructor.call(this,a);this.horizontalLayout_=!0};goog.inherits(Blockly.HorizontalFlyout,Blockly.Flyout);
Blockly.HorizontalFlyout.prototype.getMetrics_=function(){if(!this.isVisible())return null;try{var a=this.workspace_.getCanvas().getBBox()}catch(e){a={height:0,y:0,width:0,x:0}}var b=this.SCROLLBAR_PADDING,c=this.SCROLLBAR_PADDING;this.toolboxPosition_==Blockly.TOOLBOX_AT_BOTTOM&&(b=0);var d=this.height_;this.toolboxPosition_==Blockly.TOOLBOX_AT_TOP&&(d+=this.MARGIN);return{viewHeight:d,viewWidth:this.width_-2*this.SCROLLBAR_PADDING,contentHeight:a.height*this.workspace_.scale+2*this.MARGIN,contentWidth:a.width*
this.workspace_.scale+2*this.MARGIN,viewTop:-this.workspace_.scrollY,viewLeft:-this.workspace_.scrollX,contentTop:a.y,contentLeft:a.x,absoluteTop:b,absoluteLeft:c}};Blockly.HorizontalFlyout.prototype.setMetrics_=function(a){var b=this.getMetrics_();b&&(goog.isNumber(a.x)&&(this.workspace_.scrollX=-b.contentWidth*a.x),this.workspace_.translate(this.workspace_.scrollX+b.absoluteLeft,this.workspace_.scrollY+b.absoluteTop),this.categoryScrollPositions&&this.selectCategoryByScrollPosition(-this.workspace_.scrollX))};
Blockly.HorizontalFlyout.prototype.position=function(){if(this.isVisible()){var a=this.targetWorkspace_.getMetrics();if(a){this.setBackgroundPath_(this.horizontalLayout_?a.viewWidth-2*this.CORNER_RADIUS:this.width_-this.CORNER_RADIUS,this.horizontalLayout_?this.height_-this.CORNER_RADIUS:a.viewHeight-2*this.CORNER_RADIUS);var b=a.absoluteLeft;this.toolboxPosition_==Blockly.TOOLBOX_AT_RIGHT&&(b+=a.viewWidth,b-=this.width_);var c=a.absoluteTop;this.toolboxPosition_==Blockly.TOOLBOX_AT_BOTTOM&&(c+=a.viewHeight,
c-=this.height_);this.horizontalLayout_?this.width_=a.viewWidth:this.height_=a.viewHeight;this.svgGroup_.setAttribute("width",this.width_);this.svgGroup_.setAttribute("height",this.height_);Blockly.utils.setCssTransform(this.svgGroup_,"translate("+b+"px,"+c+"px)");this.scrollbar_&&(this.scrollbar_.setOrigin(b,c),this.scrollbar_.resize());this.svgGroup_.style.opacity=1}}};
Blockly.HorizontalFlyout.prototype.setBackgroundPath_=function(a,b){var c=this.toolboxPosition_==Blockly.TOOLBOX_AT_TOP,d=["M 0,"+(c?0:this.CORNER_RADIUS)];c?(d.push("h",a+2*this.CORNER_RADIUS),d.push("v",b),d.push("a",this.CORNER_RADIUS,this.CORNER_RADIUS,0,0,1,-this.CORNER_RADIUS,this.CORNER_RADIUS),d.push("h",-1*a),d.push("a",this.CORNER_RADIUS,this.CORNER_RADIUS,0,0,1,-this.CORNER_RADIUS,-this.CORNER_RADIUS)):(d.push("a",this.CORNER_RADIUS,this.CORNER_RADIUS,0,0,1,this.CORNER_RADIUS,-this.CORNER_RADIUS),
d.push("h",a),d.push("a",this.CORNER_RADIUS,this.CORNER_RADIUS,0,0,1,this.CORNER_RADIUS,this.CORNER_RADIUS),d.push("v",b),d.push("h",-a-2*this.CORNER_RADIUS));d.push("z");this.svgBackground_.setAttribute("d",d.join(" "))};Blockly.HorizontalFlyout.prototype.scrollToStart=function(){this.scrollbar_.set(this.RTL?Infinity:0)};
Blockly.HorizontalFlyout.prototype.scrollTo=function(a){this.scrollTarget=a*this.workspace_.scale;a=this.workspace_.getMetrics();this.scrollTarget=Math.min(this.scrollTarget,a.contentWidth-a.viewWidth);this.stepScrollAnimation()};
Blockly.HorizontalFlyout.prototype.wheel_=function(a){this.scrollTarget=null;var b=a.deltaX;Math.abs(a.deltaY)>Math.abs(b)&&(b=a.deltaY);if(b){goog.userAgent.GECKO&&1===a.deltaMode&&(b*=10);var c=this.getMetrics_();b=c.viewLeft+b;b=Math.min(b,c.contentWidth-c.viewWidth);b=Math.max(b,0);this.scrollbar_.set(b);Blockly.WidgetDiv.hide(!0);Blockly.DropDownDiv.hideWithoutAnimation()}a.preventDefault();a.stopPropagation()};
Blockly.HorizontalFlyout.prototype.layout_=function(a,b){this.workspace_.scale=this.targetWorkspace_.scale;var c=this.MARGIN,d=c;this.RTL&&(a=a.reverse());for(var e=0,f;f=a[e];e++)if("block"==f.type){f=f.block;for(var g=f.getDescendants(!1),h=0,k;k=g[h];h++)k.isInFlyout=!0;g=f.getSvgRoot();h=f.getHeightWidth();k=d;this.RTL&&(k+=h.width);f.moveBy(k,c);d+=h.width+b[e];h=Blockly.utils.createSvgElement("rect",{"fill-opacity":0},null);h.tooltip=f;Blockly.Tooltip.bindMouseEvents(h);this.workspace_.getCanvas().insertBefore(h,
f.getSvgRoot());f.flyoutRect_=h;this.backgroundButtons_[e]=h;this.addBlockListeners_(g,f,h)}else"button"==f.type&&(f=f.button,g=f.createDom(),f.moveTo(d,c),f.show(),this.listeners_.push(Blockly.bindEventWithChecks_(g,"mousedown",this,this.onMouseDown_)),this.buttons_.push(f),d+=f.width+b[e])};
Blockly.HorizontalFlyout.prototype.isDragTowardWorkspace=function(a){a=Math.atan2(a.y,a.x)/Math.PI*180;var b=!1,c=this.dragAngleRange_;this.toolboxPosition_==Blockly.TOOLBOX_AT_TOP?a<90+c&&a>90-c&&(b=!0):a>-90-c&&a<-90+c&&(b=!0);return b};
Blockly.HorizontalFlyout.prototype.getClientRect=function(){if(!this.svgGroup_)return null;var a=this.svgGroup_.getBoundingClientRect(),b=a.top;a=a.height;if(this.toolboxPosition_==Blockly.TOOLBOX_AT_TOP)return new goog.math.Rect(-1E9,b-1E9,2E9,1E9+a);if(this.toolboxPosition_==Blockly.TOOLBOX_AT_BOTTOM)return new goog.math.Rect(-1E9,b,2E9,1E9+a)};
Blockly.HorizontalFlyout.prototype.reflowInternal_=function(a){this.workspace_.scale=this.targetWorkspace_.scale;for(var b=0,c=0,d;d=a[c];c++)b=Math.max(b,d.getHeightWidth().height);b+=1.5*this.MARGIN;b*=this.workspace_.scale;b+=Blockly.Scrollbar.scrollbarThickness;if(this.height_!=b){for(c=0;d=a[c];c++){var e=d.getHeightWidth();if(d.flyoutRect_){d.flyoutRect_.setAttribute("width",e.width);d.flyoutRect_.setAttribute("height",e.height);var f=d.getRelativeToSurfaceXY();d.flyoutRect_.setAttribute("y",
f.y);d.flyoutRect_.setAttribute("x",this.RTL?f.x-e.width:f.x);(e=d.startHat_?Blockly.BlockSvg.START_HAT_HEIGHT:0)&&d.moveBy(0,e);d.flyoutRect_.setAttribute("y",f.y)}}this.height_=b;this.targetWorkspace_.resize()}};Blockly.VerticalFlyout=function(a){a.getMetrics=this.getMetrics_.bind(this);a.setMetrics=this.setMetrics_.bind(this);Blockly.VerticalFlyout.superClass_.constructor.call(this,a);this.horizontalLayout_=!1;this.checkboxes_=[]};goog.inherits(Blockly.VerticalFlyout,Blockly.Flyout);Blockly.VerticalFlyout.prototype.autoClose=!1;Blockly.VerticalFlyout.prototype.DEFAULT_WIDTH=250;Blockly.VerticalFlyout.prototype.CHECKBOX_SIZE=20;
Blockly.VerticalFlyout.prototype.CHECKMARK_PATH="M"+Blockly.VerticalFlyout.prototype.CHECKBOX_SIZE/4+" "+Blockly.VerticalFlyout.prototype.CHECKBOX_SIZE/2+"L"+5*Blockly.VerticalFlyout.prototype.CHECKBOX_SIZE/12+" "+2*Blockly.VerticalFlyout.prototype.CHECKBOX_SIZE/3+"L"+3*Blockly.VerticalFlyout.prototype.CHECKBOX_SIZE/4+" "+Blockly.VerticalFlyout.prototype.CHECKBOX_SIZE/3;Blockly.VerticalFlyout.prototype.CHECKBOX_CORNER_RADIUS=5;Blockly.VerticalFlyout.prototype.CHECKBOX_MARGIN=Blockly.Flyout.prototype.MARGIN;
Blockly.VerticalFlyout.prototype.CHECKBOX_SPACE_X=Blockly.VerticalFlyout.prototype.CHECKBOX_SIZE+2*Blockly.VerticalFlyout.prototype.CHECKBOX_MARGIN;Blockly.VerticalFlyout.prototype.init=function(a){Blockly.VerticalFlyout.superClass_.init.call(this,a);this.workspace_.scale=a.scale};
Blockly.VerticalFlyout.prototype.createDom=function(a){Blockly.VerticalFlyout.superClass_.createDom.call(this,a);this.defs_=Blockly.utils.createSvgElement("defs",{},this.svgGroup_);a=Blockly.utils.createSvgElement("clipPath",{id:"blocklyBlockMenuClipPath"},this.defs_);this.clipRect_=Blockly.utils.createSvgElement("rect",{id:"blocklyBlockMenuClipRect",height:"0",width:"0",y:"0",x:"0"},a);this.workspace_.svgGroup_.setAttribute("clip-path","url(#blocklyBlockMenuClipPath)");return this.svgGroup_};
Blockly.VerticalFlyout.prototype.getMetrics_=function(){if(!this.isVisible())return null;try{var a=this.workspace_.getCanvas().getBBox()}catch(h){a={height:0,y:0,width:0,x:0}}var b=this.SCROLLBAR_PADDING,c=this.height_-2*this.SCROLLBAR_PADDING,d=this.getWidth()-this.SCROLLBAR_PADDING,e=a.height*this.workspace_.scale;this.recordCategoryScrollPositions_();var f=this.MARGIN;if(0<this.categoryScrollPositions.length){var g=e-this.categoryScrollPositions[this.categoryScrollPositions.length-1].position*
this.workspace_.scale;g<c&&(f=c-g)}return{viewHeight:c,viewWidth:d,contentHeight:e+f,contentWidth:a.width*this.workspace_.scale+2*this.MARGIN,viewTop:-this.workspace_.scrollY+a.y,viewLeft:-this.workspace_.scrollX,contentTop:a.y,contentLeft:a.x,absoluteTop:b,absoluteLeft:0}};
Blockly.VerticalFlyout.prototype.setMetrics_=function(a){var b=this.getMetrics_();b&&(goog.isNumber(a.y)&&(this.workspace_.scrollY=-b.contentHeight*a.y),this.workspace_.translate(this.workspace_.scrollX+b.absoluteLeft,this.workspace_.scrollY+b.absoluteTop),this.clipRect_.setAttribute("height",Math.max(0,b.viewHeight)+"px"),this.clipRect_.setAttribute("width",b.viewWidth+"px"),this.categoryScrollPositions&&this.selectCategoryByScrollPosition(-this.workspace_.scrollY))};
Blockly.VerticalFlyout.prototype.position=function(){if(this.isVisible()){var a=this.targetWorkspace_.getMetrics();if(a){this.width_=this.getWidth();if(this.parentToolbox_){var b=this.parentToolbox_.getWidth()-this.width_;b=this.toolboxPosition_==Blockly.TOOLBOX_AT_RIGHT?a.viewWidth:b;var c=0}else b=this.toolboxPosition_==Blockly.TOOLBOX_AT_RIGHT?a.viewWidth-this.width_:0,c=0;this.height_=Math.max(0,a.viewHeight-c);this.setBackgroundPath_(this.width_,this.height_);this.svgGroup_.setAttribute("width",
this.width_);this.svgGroup_.setAttribute("height",this.height_);Blockly.utils.setCssTransform(this.svgGroup_,"translate("+b+"px,"+c+"px)");this.scrollbar_&&(this.scrollbar_.setOrigin(b,c),this.scrollbar_.resize());this.svgGroup_.style.opacity=1}}};
Blockly.VerticalFlyout.prototype.setBackgroundPath_=function(a,b){var c=this.toolboxPosition_==Blockly.TOOLBOX_AT_RIGHT,d=["M 0,0"];d.push("h",a);d.push("a",this.CORNER_RADIUS,this.CORNER_RADIUS,0,0,c?0:1,c?-this.CORNER_RADIUS:this.CORNER_RADIUS,this.CORNER_RADIUS);d.push("v",Math.max(0,b-2*this.CORNER_RADIUS));d.push("a",this.CORNER_RADIUS,this.CORNER_RADIUS,0,0,c?0:1,c?this.CORNER_RADIUS:-this.CORNER_RADIUS,this.CORNER_RADIUS);d.push("h",-a);d.push("z");this.svgBackground_.setAttribute("d",d.join(" "))};
Blockly.VerticalFlyout.prototype.scrollToStart=function(){this.scrollbar_.set(0)};Blockly.VerticalFlyout.prototype.scrollTo=function(a){this.scrollTarget=a*this.workspace_.scale;a=this.workspace_.getMetrics();this.scrollTarget=Math.min(this.scrollTarget,a.contentHeight-a.viewHeight);this.stepScrollAnimation()};
Blockly.VerticalFlyout.prototype.wheel_=function(a){this.scrollTarget=null;var b=a.deltaY;if(b){goog.userAgent.GECKO&&1===a.deltaMode&&(b*=10);var c=this.getMetrics_();b=c.viewTop-c.contentTop+b;b=Math.min(b,c.contentHeight-c.viewHeight);b=Math.max(b,0);this.scrollbar_.set(b);Blockly.WidgetDiv.hide(!0);Blockly.DropDownDiv.hideWithoutAnimation()}a.preventDefault();a.stopPropagation()};
Blockly.VerticalFlyout.prototype.clearOldBlocks_=function(){Blockly.VerticalFlyout.superClass_.clearOldBlocks_.call(this);for(var a=0,b;b=this.checkboxes_[a];a++)b.block.flyoutCheckbox=null,goog.dom.removeNode(b.svgRoot);this.checkboxes_=[]};Blockly.VerticalFlyout.prototype.addBlockListeners_=function(a,b,c){Blockly.VerticalFlyout.superClass_.addBlockListeners_.call(this,a,b,c);b.flyoutCheckbox&&this.listeners_.push(Blockly.bindEvent_(b.flyoutCheckbox.svgRoot,"mousedown",null,this.checkboxClicked_(b.flyoutCheckbox)))};
Blockly.VerticalFlyout.prototype.layout_=function(a,b){for(var c=this.MARGIN,d=this.getWidth()/this.workspace_.scale,e=c,f=0,g;g=a[f];f++)if("block"==g.type){g=g.block;for(var h=g.getDescendants(!1),k=0,m;m=h[k];k++)m.isInFlyout=!0;h=g.getSvgRoot();k=g.getHeightWidth();m=g.getRelativeToSurfaceXY().x;var l=d-this.MARGIN;m=this.RTL?l-m:c;g.hasCheckboxInFlyout()&&(this.createCheckbox_(g,c,e,k),m=this.RTL?m-(this.CHECKBOX_SIZE+this.CHECKBOX_MARGIN):m+(this.CHECKBOX_SIZE+this.CHECKBOX_MARGIN));g.moveBy(m,
e+(g.startHat_?Blockly.BlockSvg.START_HAT_HEIGHT:0));m=this.createRect_(g,this.RTL?m-k.width:m,e,k,f);this.addBlockListeners_(h,g,m);e+=k.height+b[f]+(g.startHat_?Blockly.BlockSvg.START_HAT_HEIGHT:0)}else"button"==g.type&&(g=g.button,h=g.createDom(),g.moveTo(c,e),g.show(),this.listeners_.push(Blockly.bindEventWithChecks_(h,"mousedown",this,this.onMouseDown_)),this.buttons_.push(g),e+=g.height+b[f])};
Blockly.VerticalFlyout.prototype.createRect_=function(a,b,c,d,e){b=Blockly.utils.createSvgElement("rect",{"fill-opacity":0,x:b,y:c,height:d.height,width:d.width},null);b.tooltip=a;Blockly.Tooltip.bindMouseEvents(b);this.workspace_.getCanvas().insertBefore(b,a.getSvgRoot());a.flyoutRect_=b;return this.backgroundButtons_[e]=b};
Blockly.VerticalFlyout.prototype.createCheckbox_=function(a,b,c,d){var e=Blockly.VerticalFlyout.getCheckboxState(a.id),f=a.getSvgRoot(),g=this.CHECKBOX_SIZE+this.CHECKBOX_MARGIN;b=this.RTL?this.getWidth()/this.workspace_.scale-g:b;c=Blockly.utils.createSvgElement("g",{"class":"blocklyFlyoutCheckbox",transform:"translate("+b+", "+(c+d.height/2-this.CHECKBOX_SIZE/2)+")"},null);Blockly.utils.createSvgElement("rect",{height:this.CHECKBOX_SIZE,width:this.CHECKBOX_SIZE,rx:this.CHECKBOX_CORNER_RADIUS,ry:this.CHECKBOX_CORNER_RADIUS},
c);Blockly.utils.createSvgElement("path",{"class":"blocklyFlyoutCheckboxPath",d:this.CHECKMARK_PATH},c);d={svgRoot:c,clicked:e,block:a};e&&Blockly.utils.addClass(d.svgRoot,"checked");a.flyoutCheckbox=d;this.workspace_.getCanvas().insertBefore(c,f);this.checkboxes_.push(d)};Blockly.VerticalFlyout.prototype.checkboxClicked_=function(a){return function(b){this.setCheckboxState(a.block.id,!a.clicked);b.stopPropagation();b.preventDefault()}.bind(this)};
Blockly.VerticalFlyout.prototype.setCheckboxState=function(a,b){for(var c=0;c<this.checkboxes_.length;c++){var d=this.checkboxes_[c];if(d.block.id===a){if(d.clicked===b)break;a=d.clicked;d.clicked=b;d.clicked?Blockly.utils.addClass(d.svgRoot,"checked"):Blockly.utils.removeClass(d.svgRoot,"checked");Blockly.Events.fire(new Blockly.Events.Change(d.block,"checkbox",null,a,b));break}}};
Blockly.VerticalFlyout.prototype.isDragTowardWorkspace=function(a){a=Math.atan2(a.y,a.x)/Math.PI*180;var b=!1,c=this.dragAngleRange_;if(this.toolboxPosition_==Blockly.TOOLBOX_AT_LEFT)a<c&&a>-c&&(b=!0);else if(a<-180+c||a>180-c)b=!0;return b};
Blockly.VerticalFlyout.prototype.getClientRect=function(){if(!this.svgGroup_)return null;var a=this.svgGroup_.getBoundingClientRect(),b=a.left;a=a.width;return this.toolboxPosition_==Blockly.TOOLBOX_AT_LEFT?new goog.math.Rect(b-1E9,-1E9,1E9+a,2E9):new goog.math.Rect(b,-1E9,1E9+a,2E9)};Blockly.VerticalFlyout.prototype.reflowInternal_=function(){};Blockly.VerticalFlyout.getCheckboxState=function(){return!1};goog.events.FocusHandler=function(a){goog.events.EventTarget.call(this);this.element_=a;a=goog.userAgent.IE?"focusout":"blur";this.listenKeyIn_=goog.events.listen(this.element_,goog.userAgent.IE?"focusin":"focus",this,!goog.userAgent.IE);this.listenKeyOut_=goog.events.listen(this.element_,a,this,!goog.userAgent.IE)};goog.inherits(goog.events.FocusHandler,goog.events.EventTarget);goog.events.FocusHandler.EventType={FOCUSIN:"focusin",FOCUSOUT:"focusout"};
goog.events.FocusHandler.prototype.handleEvent=function(a){var b=a.getBrowserEvent();b=new goog.events.BrowserEvent(b);b.type="focusin"==a.type||"focus"==a.type?goog.events.FocusHandler.EventType.FOCUSIN:goog.events.FocusHandler.EventType.FOCUSOUT;this.dispatchEvent(b)};goog.events.FocusHandler.prototype.disposeInternal=function(){goog.events.FocusHandler.superClass_.disposeInternal.call(this);goog.events.unlistenByKey(this.listenKeyIn_);goog.events.unlistenByKey(this.listenKeyOut_);delete this.element_};goog.debug.LogRecord=function(a,b,c,d,e){this.reset(a,b,c,d,e)};goog.debug.LogRecord.prototype.sequenceNumber_=0;goog.debug.LogRecord.prototype.exception_=null;goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS=!0;goog.debug.LogRecord.nextSequenceNumber_=0;
goog.debug.LogRecord.prototype.reset=function(a,b,c,d,e){goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS&&(this.sequenceNumber_="number"==typeof e?e:goog.debug.LogRecord.nextSequenceNumber_++);this.time_=d||goog.now();this.level_=a;this.msg_=b;this.loggerName_=c;delete this.exception_};goog.debug.LogRecord.prototype.getLoggerName=function(){return this.loggerName_};goog.debug.LogRecord.prototype.getException=function(){return this.exception_};
goog.debug.LogRecord.prototype.setException=function(a){this.exception_=a};goog.debug.LogRecord.prototype.setLoggerName=function(a){this.loggerName_=a};goog.debug.LogRecord.prototype.getLevel=function(){return this.level_};goog.debug.LogRecord.prototype.setLevel=function(a){this.level_=a};goog.debug.LogRecord.prototype.getMessage=function(){return this.msg_};goog.debug.LogRecord.prototype.setMessage=function(a){this.msg_=a};goog.debug.LogRecord.prototype.getMillis=function(){return this.time_};
goog.debug.LogRecord.prototype.setMillis=function(a){this.time_=a};goog.debug.LogRecord.prototype.getSequenceNumber=function(){return this.sequenceNumber_};goog.debug.LogBuffer=function(){goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(),"Cannot use goog.debug.LogBuffer without defining goog.debug.LogBuffer.CAPACITY.");this.clear()};goog.debug.LogBuffer.getInstance=function(){goog.debug.LogBuffer.instance_||(goog.debug.LogBuffer.instance_=new goog.debug.LogBuffer);return goog.debug.LogBuffer.instance_};goog.debug.LogBuffer.CAPACITY=0;
goog.debug.LogBuffer.prototype.addRecord=function(a,b,c){var d=(this.curIndex_+1)%goog.debug.LogBuffer.CAPACITY;this.curIndex_=d;if(this.isFull_)return d=this.buffer_[d],d.reset(a,b,c),d;this.isFull_=d==goog.debug.LogBuffer.CAPACITY-1;return this.buffer_[d]=new goog.debug.LogRecord(a,b,c)};goog.debug.LogBuffer.isBufferingEnabled=function(){return 0<goog.debug.LogBuffer.CAPACITY};
goog.debug.LogBuffer.prototype.clear=function(){this.buffer_=Array(goog.debug.LogBuffer.CAPACITY);this.curIndex_=-1;this.isFull_=!1};goog.debug.LogBuffer.prototype.forEachRecord=function(a){var b=this.buffer_;if(b[0]){var c=this.curIndex_,d=this.isFull_?c:-1;do d=(d+1)%goog.debug.LogBuffer.CAPACITY,a(b[d]);while(d!=c)}};goog.debug.Logger=function(a){this.name_=a;this.handlers_=this.children_=this.level_=this.parent_=null};goog.debug.Logger.ROOT_LOGGER_NAME="";goog.debug.Logger.ENABLE_HIERARCHY=!0;goog.debug.Logger.ENABLE_PROFILER_LOGGING=!1;goog.debug.Logger.ENABLE_HIERARCHY||(goog.debug.Logger.rootHandlers_=[]);goog.debug.Logger.Level=function(a,b){this.name=a;this.value=b};goog.debug.Logger.Level.prototype.toString=function(){return this.name};goog.debug.Logger.Level.OFF=new goog.debug.Logger.Level("OFF",Infinity);
goog.debug.Logger.Level.SHOUT=new goog.debug.Logger.Level("SHOUT",1200);goog.debug.Logger.Level.SEVERE=new goog.debug.Logger.Level("SEVERE",1E3);goog.debug.Logger.Level.WARNING=new goog.debug.Logger.Level("WARNING",900);goog.debug.Logger.Level.INFO=new goog.debug.Logger.Level("INFO",800);goog.debug.Logger.Level.CONFIG=new goog.debug.Logger.Level("CONFIG",700);goog.debug.Logger.Level.FINE=new goog.debug.Logger.Level("FINE",500);goog.debug.Logger.Level.FINER=new goog.debug.Logger.Level("FINER",400);
goog.debug.Logger.Level.FINEST=new goog.debug.Logger.Level("FINEST",300);goog.debug.Logger.Level.ALL=new goog.debug.Logger.Level("ALL",0);goog.debug.Logger.Level.PREDEFINED_LEVELS=[goog.debug.Logger.Level.OFF,goog.debug.Logger.Level.SHOUT,goog.debug.Logger.Level.SEVERE,goog.debug.Logger.Level.WARNING,goog.debug.Logger.Level.INFO,goog.debug.Logger.Level.CONFIG,goog.debug.Logger.Level.FINE,goog.debug.Logger.Level.FINER,goog.debug.Logger.Level.FINEST,goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_=null;goog.debug.Logger.Level.createPredefinedLevelsCache_=function(){goog.debug.Logger.Level.predefinedLevelsCache_={};for(var a=0,b;b=goog.debug.Logger.Level.PREDEFINED_LEVELS[a];a++)goog.debug.Logger.Level.predefinedLevelsCache_[b.value]=b,goog.debug.Logger.Level.predefinedLevelsCache_[b.name]=b};
goog.debug.Logger.Level.getPredefinedLevel=function(a){goog.debug.Logger.Level.predefinedLevelsCache_||goog.debug.Logger.Level.createPredefinedLevelsCache_();return goog.debug.Logger.Level.predefinedLevelsCache_[a]||null};
goog.debug.Logger.Level.getPredefinedLevelByValue=function(a){goog.debug.Logger.Level.predefinedLevelsCache_||goog.debug.Logger.Level.createPredefinedLevelsCache_();if(a in goog.debug.Logger.Level.predefinedLevelsCache_)return goog.debug.Logger.Level.predefinedLevelsCache_[a];for(var b=0;b<goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++b){var c=goog.debug.Logger.Level.PREDEFINED_LEVELS[b];if(c.value<=a)return c}return null};goog.debug.Logger.getLogger=function(a){return goog.debug.LogManager.getLogger(a)};
goog.debug.Logger.logToProfilers=function(a){if(goog.debug.Logger.ENABLE_PROFILER_LOGGING){var b=goog.global.msWriteProfilerMark;b?b(a):(b=goog.global.console)&&b.timeStamp&&b.timeStamp(a)}};goog.debug.Logger.prototype.getName=function(){return this.name_};
goog.debug.Logger.prototype.addHandler=function(a){goog.debug.LOGGING_ENABLED&&(goog.debug.Logger.ENABLE_HIERARCHY?(this.handlers_||(this.handlers_=[]),this.handlers_.push(a)):(goog.asserts.assert(!this.name_,"Cannot call addHandler on a non-root logger when goog.debug.Logger.ENABLE_HIERARCHY is false."),goog.debug.Logger.rootHandlers_.push(a)))};
goog.debug.Logger.prototype.removeHandler=function(a){if(goog.debug.LOGGING_ENABLED){var b=goog.debug.Logger.ENABLE_HIERARCHY?this.handlers_:goog.debug.Logger.rootHandlers_;return!!b&&goog.array.remove(b,a)}return!1};goog.debug.Logger.prototype.getParent=function(){return this.parent_};goog.debug.Logger.prototype.getChildren=function(){this.children_||(this.children_={});return this.children_};
goog.debug.Logger.prototype.setLevel=function(a){goog.debug.LOGGING_ENABLED&&(goog.debug.Logger.ENABLE_HIERARCHY?this.level_=a:(goog.asserts.assert(!this.name_,"Cannot call setLevel() on a non-root logger when goog.debug.Logger.ENABLE_HIERARCHY is false."),goog.debug.Logger.rootLevel_=a))};goog.debug.Logger.prototype.getLevel=function(){return goog.debug.LOGGING_ENABLED?this.level_:goog.debug.Logger.Level.OFF};
goog.debug.Logger.prototype.getEffectiveLevel=function(){if(!goog.debug.LOGGING_ENABLED)return goog.debug.Logger.Level.OFF;if(!goog.debug.Logger.ENABLE_HIERARCHY)return goog.debug.Logger.rootLevel_;if(this.level_)return this.level_;if(this.parent_)return this.parent_.getEffectiveLevel();goog.asserts.fail("Root logger has no level set.");return null};goog.debug.Logger.prototype.isLoggable=function(a){return goog.debug.LOGGING_ENABLED&&a.value>=this.getEffectiveLevel().value};
goog.debug.Logger.prototype.log=function(a,b,c){goog.debug.LOGGING_ENABLED&&this.isLoggable(a)&&(goog.isFunction(b)&&(b=b()),this.doLogRecord_(this.getLogRecord(a,b,c)))};goog.debug.Logger.prototype.getLogRecord=function(a,b,c){a=goog.debug.LogBuffer.isBufferingEnabled()?goog.debug.LogBuffer.getInstance().addRecord(a,b,this.name_):new goog.debug.LogRecord(a,String(b),this.name_);c&&a.setException(c);return a};
goog.debug.Logger.prototype.shout=function(a,b){goog.debug.LOGGING_ENABLED&&this.log(goog.debug.Logger.Level.SHOUT,a,b)};goog.debug.Logger.prototype.severe=function(a,b){goog.debug.LOGGING_ENABLED&&this.log(goog.debug.Logger.Level.SEVERE,a,b)};goog.debug.Logger.prototype.warning=function(a,b){goog.debug.LOGGING_ENABLED&&this.log(goog.debug.Logger.Level.WARNING,a,b)};goog.debug.Logger.prototype.info=function(a,b){goog.debug.LOGGING_ENABLED&&this.log(goog.debug.Logger.Level.INFO,a,b)};
goog.debug.Logger.prototype.config=function(a,b){goog.debug.LOGGING_ENABLED&&this.log(goog.debug.Logger.Level.CONFIG,a,b)};goog.debug.Logger.prototype.fine=function(a,b){goog.debug.LOGGING_ENABLED&&this.log(goog.debug.Logger.Level.FINE,a,b)};goog.debug.Logger.prototype.finer=function(a,b){goog.debug.LOGGING_ENABLED&&this.log(goog.debug.Logger.Level.FINER,a,b)};goog.debug.Logger.prototype.finest=function(a,b){goog.debug.LOGGING_ENABLED&&this.log(goog.debug.Logger.Level.FINEST,a,b)};
goog.debug.Logger.prototype.logRecord=function(a){goog.debug.LOGGING_ENABLED&&this.isLoggable(a.getLevel())&&this.doLogRecord_(a)};goog.debug.Logger.prototype.doLogRecord_=function(a){goog.debug.Logger.ENABLE_PROFILER_LOGGING&&goog.debug.Logger.logToProfilers("log:"+a.getMessage());if(goog.debug.Logger.ENABLE_HIERARCHY)for(var b=this;b;)b.callPublish_(a),b=b.getParent();else{b=0;for(var c;c=goog.debug.Logger.rootHandlers_[b++];)c(a)}};
goog.debug.Logger.prototype.callPublish_=function(a){if(this.handlers_)for(var b=0,c;c=this.handlers_[b];b++)c(a)};goog.debug.Logger.prototype.setParent_=function(a){this.parent_=a};goog.debug.Logger.prototype.addChild_=function(a,b){this.getChildren()[a]=b};goog.debug.LogManager={};goog.debug.LogManager.loggers_={};goog.debug.LogManager.rootLogger_=null;
goog.debug.LogManager.initialize=function(){goog.debug.LogManager.rootLogger_||(goog.debug.LogManager.rootLogger_=new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME),goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME]=goog.debug.LogManager.rootLogger_,goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG))};goog.debug.LogManager.getLoggers=function(){return goog.debug.LogManager.loggers_};
goog.debug.LogManager.getRoot=function(){goog.debug.LogManager.initialize();return goog.debug.LogManager.rootLogger_};goog.debug.LogManager.getLogger=function(a){goog.debug.LogManager.initialize();return goog.debug.LogManager.loggers_[a]||goog.debug.LogManager.createLogger_(a)};goog.debug.LogManager.createFunctionForCatchErrors=function(a){return function(b){(a||goog.debug.LogManager.getRoot()).severe("Error: "+b.message+" ("+b.fileName+" @ Line: "+b.line+")")}};
goog.debug.LogManager.createLogger_=function(a){var b=new goog.debug.Logger(a);if(goog.debug.Logger.ENABLE_HIERARCHY){var c=a.lastIndexOf("."),d=a.substr(0,c);c=a.substr(c+1);d=goog.debug.LogManager.getLogger(d);d.addChild_(c,b);b.setParent_(d)}return goog.debug.LogManager.loggers_[a]=b};goog.log={};goog.log.ENABLED=goog.debug.LOGGING_ENABLED;goog.log.ROOT_LOGGER_NAME=goog.debug.Logger.ROOT_LOGGER_NAME;goog.log.Logger=goog.debug.Logger;goog.log.Level=goog.debug.Logger.Level;goog.log.LogRecord=goog.debug.LogRecord;goog.log.getLogger=function(a,b){return goog.log.ENABLED?(a=goog.debug.LogManager.getLogger(a),b&&a&&a.setLevel(b),a):null};goog.log.addHandler=function(a,b){goog.log.ENABLED&&a&&a.addHandler(b)};
goog.log.removeHandler=function(a,b){return goog.log.ENABLED&&a?a.removeHandler(b):!1};goog.log.log=function(a,b,c,d){goog.log.ENABLED&&a&&a.log(b,c,d)};goog.log.error=function(a,b,c){goog.log.ENABLED&&a&&a.severe(b,c)};goog.log.warning=function(a,b,c){goog.log.ENABLED&&a&&a.warning(b,c)};goog.log.info=function(a,b,c){goog.log.ENABLED&&a&&a.info(b,c)};goog.log.fine=function(a,b,c){goog.log.ENABLED&&a&&a.fine(b,c)};goog.string.StringBuffer=function(a,b){null!=a&&this.append.apply(this,arguments)};goog.string.StringBuffer.prototype.buffer_="";goog.string.StringBuffer.prototype.set=function(a){this.buffer_=""+a};goog.string.StringBuffer.prototype.append=function(a,b,c){this.buffer_+=String(a);if(null!=b)for(var d=1;d<arguments.length;d++)this.buffer_+=arguments[d];return this};goog.string.StringBuffer.prototype.clear=function(){this.buffer_=""};goog.string.StringBuffer.prototype.getLength=function(){return this.buffer_.length};
goog.string.StringBuffer.prototype.toString=function(){return this.buffer_};goog.ui.tree={};goog.ui.tree.BaseNode=function(a,b,c){goog.ui.Component.call(this,c);this.config_=b||goog.ui.tree.BaseNode.defaultConfig;this.html_=goog.html.SafeHtml.htmlEscapePreservingNewlines(a);this.expanded_=this.selected_=!1;this.toolTip_=null;this.afterLabelHtml_=goog.html.SafeHtml.EMPTY;this.isUserCollapsible_=!0;this.depth_=-1};goog.inherits(goog.ui.tree.BaseNode,goog.ui.Component);
goog.ui.tree.BaseNode.EventType={BEFORE_EXPAND:"beforeexpand",EXPAND:"expand",BEFORE_COLLAPSE:"beforecollapse",COLLAPSE:"collapse"};goog.ui.tree.BaseNode.allNodes={};goog.ui.tree.BaseNode.prototype.disposeInternal=function(){goog.ui.tree.BaseNode.superClass_.disposeInternal.call(this);this.tree&&(this.tree.removeNode(this),this.tree=null);this.setElementInternal(null)};
goog.ui.tree.BaseNode.prototype.initAccessibility=function(){var a=this.getElement();if(a){var b=this.getLabelElement();b&&!b.id&&(b.id=this.getId()+".label");goog.a11y.aria.setRole(a,"treeitem");goog.a11y.aria.setState(a,"selected",!1);goog.a11y.aria.setState(a,"level",this.getDepth());b&&goog.a11y.aria.setState(a,"labelledby",b.id);(b=this.getIconElement())&&goog.a11y.aria.setRole(b,"presentation");(b=this.getExpandIconElement())&&goog.a11y.aria.setRole(b,"presentation");if(b=this.getChildrenElement())if(goog.a11y.aria.setRole(b,
"group"),b.hasChildNodes())for(goog.a11y.aria.setState(a,goog.a11y.aria.State.EXPANDED,!1),a=this.getChildCount(),b=1;b<=a;b++){var c=this.getChildAt(b-1).getElement();goog.asserts.assert(c,"The child element cannot be null");goog.a11y.aria.setState(c,"setsize",a);goog.a11y.aria.setState(c,"posinset",b)}}};goog.ui.tree.BaseNode.prototype.createDom=function(){var a=this.getDomHelper().safeHtmlToNode(this.toSafeHtml());this.setElementInternal(a)};
goog.ui.tree.BaseNode.prototype.enterDocument=function(){goog.ui.tree.BaseNode.superClass_.enterDocument.call(this);goog.ui.tree.BaseNode.allNodes[this.getId()]=this;this.initAccessibility()};goog.ui.tree.BaseNode.prototype.exitDocument=function(){goog.ui.tree.BaseNode.superClass_.exitDocument.call(this);delete goog.ui.tree.BaseNode.allNodes[this.getId()]};
goog.ui.tree.BaseNode.prototype.addChildAt=function(a,b,c){goog.asserts.assert(!a.getParent());goog.asserts.assertInstanceof(a,goog.ui.tree.BaseNode);c=this.getChildAt(b-1);var d=this.getChildAt(b);goog.ui.tree.BaseNode.superClass_.addChildAt.call(this,a,b);a.previousSibling_=c;a.nextSibling_=d;c?c.nextSibling_=a:this.firstChild_=a;d?d.previousSibling_=a:this.lastChild_=a;(b=this.getTree())&&a.setTreeInternal(b);a.setDepth_(this.getDepth()+1);if(b=this.getElement())if(this.updateExpandIcon(),goog.a11y.aria.setState(b,
goog.a11y.aria.State.EXPANDED,this.getExpanded()),this.getExpanded()){b=this.getChildrenElement();a.getElement()||a.createDom();var e=a.getElement(),f=d&&d.getElement();b.insertBefore(e,f);this.isInDocument()&&a.enterDocument();d||(c?c.updateExpandIcon():(goog.style.setElementShown(b,!0),this.setExpanded(this.getExpanded())))}};
goog.ui.tree.BaseNode.prototype.add=function(a,b){goog.asserts.assert(!b||b.getParent()==this,"Can only add nodes before siblings");a.getParent()&&a.getParent().removeChild(a);this.addChildAt(a,b?this.indexOfChild(b):this.getChildCount());return a};
goog.ui.tree.BaseNode.prototype.removeChild=function(a,b){var c=this.getTree();b=c?c.getSelectedItem():null;if(b==a||a.contains(b))c.hasFocus()?(this.select(),goog.Timer.callOnce(this.onTimeoutSelect_,10,this)):this.select();goog.ui.tree.BaseNode.superClass_.removeChild.call(this,a);this.lastChild_==a&&(this.lastChild_=a.previousSibling_);this.firstChild_==a&&(this.firstChild_=a.nextSibling_);a.previousSibling_&&(a.previousSibling_.nextSibling_=a.nextSibling_);a.nextSibling_&&(a.nextSibling_.previousSibling_=
a.previousSibling_);b=a.isLastSibling();a.tree=null;a.depth_=-1;if(c&&(c.removeNode(a),this.isInDocument())){c=this.getChildrenElement();if(a.isInDocument()){var d=a.getElement();c.removeChild(d);a.exitDocument()}b&&(b=this.getLastChild())&&b.updateExpandIcon();this.hasChildren()||(c.style.display="none",this.updateExpandIcon(),this.updateIcon_(),(b=this.getElement())&&goog.a11y.aria.removeState(b,goog.a11y.aria.State.EXPANDED))}return a};goog.ui.tree.BaseNode.prototype.remove=goog.ui.tree.BaseNode.prototype.removeChild;
goog.ui.tree.BaseNode.prototype.onTimeoutSelect_=function(){this.select()};goog.ui.tree.BaseNode.prototype.getTree=goog.abstractMethod;goog.ui.tree.BaseNode.prototype.getDepth=function(){var a=this.depth_;0>a&&(a=this.computeDepth_(),this.setDepth_(a));return a};goog.ui.tree.BaseNode.prototype.computeDepth_=function(){var a=this.getParent();return a?a.getDepth()+1:0};
goog.ui.tree.BaseNode.prototype.setDepth_=function(a){if(a!=this.depth_){this.depth_=a;var b=this.getRowElement();if(b){var c=this.getPixelIndent_()+"px";this.isRightToLeft()?b.style.paddingRight=c:b.style.paddingLeft=c}this.forEachChild(function(b){b.setDepth_(a+1)})}};goog.ui.tree.BaseNode.prototype.contains=function(a){for(;a;){if(a==this)return!0;a=a.getParent()}return!1};goog.ui.tree.BaseNode.EMPTY_CHILDREN_=[];
goog.ui.tree.BaseNode.prototype.getChildren=function(){var a=[];this.forEachChild(function(b){a.push(b)});return a};goog.ui.tree.BaseNode.prototype.getFirstChild=function(){return this.getChildAt(0)};goog.ui.tree.BaseNode.prototype.getLastChild=function(){return this.getChildAt(this.getChildCount()-1)};goog.ui.tree.BaseNode.prototype.getPreviousSibling=function(){return this.previousSibling_};goog.ui.tree.BaseNode.prototype.getNextSibling=function(){return this.nextSibling_};
goog.ui.tree.BaseNode.prototype.isLastSibling=function(){return!this.nextSibling_};goog.ui.tree.BaseNode.prototype.isSelected=function(){return this.selected_};goog.ui.tree.BaseNode.prototype.select=function(){var a=this.getTree();a&&a.setSelectedItem(this)};goog.ui.tree.BaseNode.prototype.deselect=goog.nullFunction;
goog.ui.tree.BaseNode.prototype.setSelectedInternal=function(a){if(this.selected_!=a){this.selected_=a;this.updateRow();var b=this.getElement();b&&(goog.a11y.aria.setState(b,"selected",a),a&&(a=this.getTree().getElement(),goog.asserts.assert(a,"The DOM element for the tree cannot be null"),goog.a11y.aria.setState(a,"activedescendant",this.getId())))}};goog.ui.tree.BaseNode.prototype.getExpanded=function(){return this.expanded_};
goog.ui.tree.BaseNode.prototype.setExpandedInternal=function(a){this.expanded_=a};
goog.ui.tree.BaseNode.prototype.setExpanded=function(a){var b=a!=this.expanded_;if(!b||this.dispatchEvent(a?goog.ui.tree.BaseNode.EventType.BEFORE_EXPAND:goog.ui.tree.BaseNode.EventType.BEFORE_COLLAPSE)){this.expanded_=a;var c=this.getTree();var d=this.getElement();if(this.hasChildren()){if(!a&&c&&this.contains(c.getSelectedItem())&&this.select(),d){if(c=this.getChildrenElement())if(goog.style.setElementShown(c,a),goog.a11y.aria.setState(d,goog.a11y.aria.State.EXPANDED,a),a&&this.isInDocument()&&
!c.hasChildNodes()){var e=[];this.forEachChild(function(a){e.push(a.toSafeHtml())});goog.dom.safe.setInnerHtml(c,goog.html.SafeHtml.concat(e));this.forEachChild(function(a){a.enterDocument()})}this.updateExpandIcon()}}else(c=this.getChildrenElement())&&goog.style.setElementShown(c,!1);d&&this.updateIcon_();b&&this.dispatchEvent(a?goog.ui.tree.BaseNode.EventType.EXPAND:goog.ui.tree.BaseNode.EventType.COLLAPSE)}};goog.ui.tree.BaseNode.prototype.toggle=function(){this.setExpanded(!this.getExpanded())};
goog.ui.tree.BaseNode.prototype.expand=function(){this.setExpanded(!0)};goog.ui.tree.BaseNode.prototype.collapse=function(){this.setExpanded(!1)};goog.ui.tree.BaseNode.prototype.collapseChildren=function(){this.forEachChild(function(a){a.collapseAll()})};goog.ui.tree.BaseNode.prototype.collapseAll=function(){this.collapseChildren();this.collapse()};goog.ui.tree.BaseNode.prototype.expandChildren=function(){this.forEachChild(function(a){a.expandAll()})};
goog.ui.tree.BaseNode.prototype.expandAll=function(){this.expandChildren();this.expand()};goog.ui.tree.BaseNode.prototype.reveal=function(){var a=this.getParent();a&&(a.setExpanded(!0),a.reveal())};goog.ui.tree.BaseNode.prototype.setIsUserCollapsible=function(a){(this.isUserCollapsible_=a)||this.expand();this.getElement()&&this.updateExpandIcon()};goog.ui.tree.BaseNode.prototype.isUserCollapsible=function(){return this.isUserCollapsible_};
goog.ui.tree.BaseNode.prototype.toSafeHtml=function(){var a=this.getTree(),b=!a.getShowLines()||a==this.getParent()&&!a.getShowRootLines()?this.config_.cssChildrenNoLines:this.config_.cssChildren;a=this.getExpanded()&&this.hasChildren();b={"class":b,style:this.getLineStyle()};var c=[];a&&this.forEachChild(function(a){c.push(a.toSafeHtml())});a=goog.html.SafeHtml.create("div",b,c);return goog.html.SafeHtml.create("div",{"class":this.config_.cssItem,id:this.getId()},[this.getRowSafeHtml(),a])};
goog.ui.tree.BaseNode.prototype.getPixelIndent_=function(){return Math.max(0,(this.getDepth()-1)*this.config_.indentWidth)};goog.ui.tree.BaseNode.prototype.getRowSafeHtml=function(){var a={};a["padding-"+(this.isRightToLeft()?"right":"left")]=this.getPixelIndent_()+"px";a={"class":this.getRowClassName(),style:a};var b=[this.getExpandIconSafeHtml(),this.getIconSafeHtml(),this.getLabelSafeHtml()];return goog.html.SafeHtml.create("div",a,b)};
goog.ui.tree.BaseNode.prototype.getRowClassName=function(){var a=this.isSelected()?" "+this.config_.cssSelectedRow:"";return this.config_.cssTreeRow+a};goog.ui.tree.BaseNode.prototype.getLabelSafeHtml=function(){var a=goog.html.SafeHtml.create("span",{"class":this.config_.cssItemLabel,title:this.getToolTip()||null},this.getSafeHtml());return goog.html.SafeHtml.concat(a,goog.html.SafeHtml.create("span",{},this.getAfterLabelSafeHtml()))};goog.ui.tree.BaseNode.prototype.getAfterLabelHtml=function(){return goog.html.SafeHtml.unwrap(this.getAfterLabelSafeHtml())};
goog.ui.tree.BaseNode.prototype.getAfterLabelSafeHtml=function(){return this.afterLabelHtml_};goog.ui.tree.BaseNode.prototype.setAfterLabelSafeHtml=function(a){this.afterLabelHtml_=a;var b=this.getAfterLabelElement();b&&goog.dom.safe.setInnerHtml(b,a)};goog.ui.tree.BaseNode.prototype.getIconSafeHtml=function(){return goog.html.SafeHtml.create("span",{style:{display:"inline-block"},"class":this.getCalculatedIconClass()})};goog.ui.tree.BaseNode.prototype.getCalculatedIconClass=goog.abstractMethod;
goog.ui.tree.BaseNode.prototype.getExpandIconSafeHtml=function(){return goog.html.SafeHtml.create("span",{type:"expand",style:{display:"inline-block"},"class":this.getExpandIconClass()})};
goog.ui.tree.BaseNode.prototype.getExpandIconClass=function(){var a=this.getTree(),b=!a.getShowLines()||a==this.getParent()&&!a.getShowRootLines(),c=this.config_,d=new goog.string.StringBuffer;d.append(c.cssTreeIcon," ",c.cssExpandTreeIcon," ");if(this.hasChildren()){var e=0;a.getShowExpandIcons()&&this.isUserCollapsible_&&(e=this.getExpanded()?2:1);b||(e=this.isLastSibling()?e+4:e+8);switch(e){case 1:d.append(c.cssExpandTreeIconPlus);break;case 2:d.append(c.cssExpandTreeIconMinus);break;case 4:d.append(c.cssExpandTreeIconL);
break;case 5:d.append(c.cssExpandTreeIconLPlus);break;case 6:d.append(c.cssExpandTreeIconLMinus);break;case 8:d.append(c.cssExpandTreeIconT);break;case 9:d.append(c.cssExpandTreeIconTPlus);break;case 10:d.append(c.cssExpandTreeIconTMinus);break;default:d.append(c.cssExpandTreeIconBlank)}}else b?d.append(c.cssExpandTreeIconBlank):this.isLastSibling()?d.append(c.cssExpandTreeIconL):d.append(c.cssExpandTreeIconT);return d.toString()};
goog.ui.tree.BaseNode.prototype.getLineStyle=function(){var a=this.getExpanded()&&this.hasChildren();return goog.html.SafeStyle.create({"background-position":this.getBackgroundPosition(),display:a?null:"none"})};goog.ui.tree.BaseNode.prototype.getBackgroundPosition=function(){return(this.isLastSibling()?"-100":(this.getDepth()-1)*this.config_.indentWidth)+"px 0"};
goog.ui.tree.BaseNode.prototype.getElement=function(){var a=goog.ui.tree.BaseNode.superClass_.getElement.call(this);a||(a=this.getDomHelper().getElement(this.getId()),this.setElementInternal(a));return a};goog.ui.tree.BaseNode.prototype.getRowElement=function(){var a=this.getElement();return a?a.firstChild:null};goog.ui.tree.BaseNode.prototype.getExpandIconElement=function(){var a=this.getRowElement();return a?a.firstChild:null};
goog.ui.tree.BaseNode.prototype.getIconElement=function(){var a=this.getRowElement();return a?a.childNodes[1]:null};goog.ui.tree.BaseNode.prototype.getLabelElement=function(){var a=this.getRowElement();return a&&a.lastChild?a.lastChild.previousSibling:null};goog.ui.tree.BaseNode.prototype.getAfterLabelElement=function(){var a=this.getRowElement();return a?a.lastChild:null};goog.ui.tree.BaseNode.prototype.getChildrenElement=function(){var a=this.getElement();return a?a.lastChild:null};
goog.ui.tree.BaseNode.prototype.setIconClass=function(a){this.iconClass_=a;this.isInDocument()&&this.updateIcon_()};goog.ui.tree.BaseNode.prototype.getIconClass=function(){return this.iconClass_};goog.ui.tree.BaseNode.prototype.setExpandedIconClass=function(a){this.expandedIconClass_=a;this.isInDocument()&&this.updateIcon_()};goog.ui.tree.BaseNode.prototype.getExpandedIconClass=function(){return this.expandedIconClass_};goog.ui.tree.BaseNode.prototype.setText=function(a){this.setSafeHtml(goog.html.SafeHtml.htmlEscape(a))};
goog.ui.tree.BaseNode.prototype.getText=function(){return goog.string.unescapeEntities(goog.html.SafeHtml.unwrap(this.html_))};goog.ui.tree.BaseNode.prototype.setSafeHtml=function(a){this.html_=a;var b=this.getLabelElement();b&&goog.dom.safe.setInnerHtml(b,a);(a=this.getTree())&&a.setNode(this)};goog.ui.tree.BaseNode.prototype.getHtml=function(){return goog.html.SafeHtml.unwrap(this.getSafeHtml())};goog.ui.tree.BaseNode.prototype.getSafeHtml=function(){return this.html_};
goog.ui.tree.BaseNode.prototype.setToolTip=function(a){this.toolTip_=a;var b=this.getLabelElement();b&&(b.title=a)};goog.ui.tree.BaseNode.prototype.getToolTip=function(){return this.toolTip_};goog.ui.tree.BaseNode.prototype.updateRow=function(){var a=this.getRowElement();a&&(a.className=this.getRowClassName())};
goog.ui.tree.BaseNode.prototype.updateExpandIcon=function(){var a=this.getExpandIconElement();a&&(a.className=this.getExpandIconClass());if(a=this.getChildrenElement())a.style.backgroundPosition=this.getBackgroundPosition()};goog.ui.tree.BaseNode.prototype.updateIcon_=function(){this.getIconElement().className=this.getCalculatedIconClass()};
goog.ui.tree.BaseNode.prototype.onMouseDown=function(a){"expand"==a.target.getAttribute("type")&&this.hasChildren()?this.isUserCollapsible_&&this.toggle():(this.select(),this.updateRow())};goog.ui.tree.BaseNode.prototype.onClick_=goog.events.Event.preventDefault;goog.ui.tree.BaseNode.prototype.onDoubleClick_=function(a){"expand"==a.target.getAttribute("type")&&this.hasChildren()||this.isUserCollapsible_&&this.toggle()};
goog.ui.tree.BaseNode.prototype.onKeyDown=function(a){var b=!0;switch(a.keyCode){case goog.events.KeyCodes.RIGHT:if(a.altKey)break;this.hasChildren()&&(this.getExpanded()?this.getFirstChild().select():this.setExpanded(!0));break;case goog.events.KeyCodes.LEFT:if(a.altKey)break;if(this.hasChildren()&&this.getExpanded()&&this.isUserCollapsible_)this.setExpanded(!1);else{var c=this.getParent(),d=this.getTree();c&&(d.getShowRootNode()||c!=d)&&c.select()}break;case goog.events.KeyCodes.DOWN:(c=this.getNextShownNode())&&
c.select();break;case goog.events.KeyCodes.UP:(c=this.getPreviousShownNode())&&c.select();break;default:b=!1}b&&(a.preventDefault(),(d=this.getTree())&&d.clearTypeAhead());return b};goog.ui.tree.BaseNode.prototype.getLastShownDescendant=function(){return this.getExpanded()&&this.hasChildren()?this.getLastChild().getLastShownDescendant():this};
goog.ui.tree.BaseNode.prototype.getNextShownNode=function(){if(this.hasChildren()&&this.getExpanded())return this.getFirstChild();for(var a=this,b;a!=this.getTree();){b=a.getNextSibling();if(null!=b)return b;a=a.getParent()}return null};goog.ui.tree.BaseNode.prototype.getPreviousShownNode=function(){var a=this.getPreviousSibling();if(null!=a)return a.getLastShownDescendant();a=this.getParent();var b=this.getTree();return!b.getShowRootNode()&&a==b||this==b?null:a};
goog.ui.tree.BaseNode.prototype.getClientData=goog.ui.tree.BaseNode.prototype.getModel;goog.ui.tree.BaseNode.prototype.setClientData=goog.ui.tree.BaseNode.prototype.setModel;goog.ui.tree.BaseNode.prototype.getConfig=function(){return this.config_};goog.ui.tree.BaseNode.prototype.setTreeInternal=function(a){this.tree!=a&&(this.tree=a,a.setNode(this),this.forEachChild(function(b){b.setTreeInternal(a)}))};
goog.ui.tree.BaseNode.defaultConfig={indentWidth:19,cssRoot:"goog-tree-root goog-tree-item",cssHideRoot:"goog-tree-hide-root",cssItem:"goog-tree-item",cssChildren:"goog-tree-children",cssChildrenNoLines:"goog-tree-children-nolines",cssTreeRow:"goog-tree-row",cssItemLabel:"goog-tree-item-label",cssTreeIcon:"goog-tree-icon",cssExpandTreeIcon:"goog-tree-expand-icon",cssExpandTreeIconPlus:"goog-tree-expand-icon-plus",cssExpandTreeIconMinus:"goog-tree-expand-icon-minus",cssExpandTreeIconTPlus:"goog-tree-expand-icon-tplus",
cssExpandTreeIconTMinus:"goog-tree-expand-icon-tminus",cssExpandTreeIconLPlus:"goog-tree-expand-icon-lplus",cssExpandTreeIconLMinus:"goog-tree-expand-icon-lminus",cssExpandTreeIconT:"goog-tree-expand-icon-t",cssExpandTreeIconL:"goog-tree-expand-icon-l",cssExpandTreeIconBlank:"goog-tree-expand-icon-blank",cssExpandedFolderIcon:"goog-tree-expanded-folder-icon",cssCollapsedFolderIcon:"goog-tree-collapsed-folder-icon",cssFileIcon:"goog-tree-file-icon",cssExpandedRootIcon:"goog-tree-expanded-folder-icon",
cssCollapsedRootIcon:"goog-tree-collapsed-folder-icon",cssSelectedRow:"selected"};goog.ui.tree.TreeNode=function(a,b,c){goog.ui.tree.BaseNode.call(this,a,b,c)};goog.inherits(goog.ui.tree.TreeNode,goog.ui.tree.BaseNode);goog.ui.tree.TreeNode.prototype.getTree=function(){if(this.tree)return this.tree;var a=this.getParent();return a&&(a=a.getTree())?(this.setTreeInternal(a),a):null};
goog.ui.tree.TreeNode.prototype.getCalculatedIconClass=function(){var a=this.getExpanded(),b=this.getExpandedIconClass();if(a&&b)return b;b=this.getIconClass();if(!a&&b)return b;b=this.getConfig();if(this.hasChildren()){if(a&&b.cssExpandedFolderIcon)return b.cssTreeIcon+" "+b.cssExpandedFolderIcon;if(!a&&b.cssCollapsedFolderIcon)return b.cssTreeIcon+" "+b.cssCollapsedFolderIcon}else if(b.cssFileIcon)return b.cssTreeIcon+" "+b.cssFileIcon;return""};goog.structs={};goog.structs.getCount=function(a){return a.getCount&&"function"==typeof a.getCount?a.getCount():goog.isArrayLike(a)||goog.isString(a)?a.length:goog.object.getCount(a)};goog.structs.getValues=function(a){if(a.getValues&&"function"==typeof a.getValues)return a.getValues();if(goog.isString(a))return a.split("");if(goog.isArrayLike(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}return goog.object.getValues(a)};
goog.structs.getKeys=function(a){if(a.getKeys&&"function"==typeof a.getKeys)return a.getKeys();if(!a.getValues||"function"!=typeof a.getValues){if(goog.isArrayLike(a)||goog.isString(a)){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}return goog.object.getKeys(a)}};
goog.structs.contains=function(a,b){return a.contains&&"function"==typeof a.contains?a.contains(b):a.containsValue&&"function"==typeof a.containsValue?a.containsValue(b):goog.isArrayLike(a)||goog.isString(a)?goog.array.contains(a,b):goog.object.containsValue(a,b)};goog.structs.isEmpty=function(a){return a.isEmpty&&"function"==typeof a.isEmpty?a.isEmpty():goog.isArrayLike(a)||goog.isString(a)?goog.array.isEmpty(a):goog.object.isEmpty(a)};
goog.structs.clear=function(a){a.clear&&"function"==typeof a.clear?a.clear():goog.isArrayLike(a)?goog.array.clear(a):goog.object.clear(a)};goog.structs.forEach=function(a,b,c){if(a.forEach&&"function"==typeof a.forEach)a.forEach(b,c);else if(goog.isArrayLike(a)||goog.isString(a))goog.array.forEach(a,b,c);else for(var d=goog.structs.getKeys(a),e=goog.structs.getValues(a),f=e.length,g=0;g<f;g++)b.call(c,e[g],d&&d[g],a)};
goog.structs.filter=function(a,b,c){if("function"==typeof a.filter)return a.filter(b,c);if(goog.isArrayLike(a)||goog.isString(a))return goog.array.filter(a,b,c);var d=goog.structs.getKeys(a),e=goog.structs.getValues(a),f=e.length;if(d){var g={};for(var h=0;h<f;h++)b.call(c,e[h],d[h],a)&&(g[d[h]]=e[h])}else for(g=[],h=0;h<f;h++)b.call(c,e[h],void 0,a)&&g.push(e[h]);return g};
goog.structs.map=function(a,b,c){if("function"==typeof a.map)return a.map(b,c);if(goog.isArrayLike(a)||goog.isString(a))return goog.array.map(a,b,c);var d=goog.structs.getKeys(a),e=goog.structs.getValues(a),f=e.length;if(d){var g={};for(var h=0;h<f;h++)g[d[h]]=b.call(c,e[h],d[h],a)}else for(g=[],h=0;h<f;h++)g[h]=b.call(c,e[h],void 0,a);return g};
goog.structs.some=function(a,b,c){if("function"==typeof a.some)return a.some(b,c);if(goog.isArrayLike(a)||goog.isString(a))return goog.array.some(a,b,c);for(var d=goog.structs.getKeys(a),e=goog.structs.getValues(a),f=e.length,g=0;g<f;g++)if(b.call(c,e[g],d&&d[g],a))return!0;return!1};
goog.structs.every=function(a,b,c){if("function"==typeof a.every)return a.every(b,c);if(goog.isArrayLike(a)||goog.isString(a))return goog.array.every(a,b,c);for(var d=goog.structs.getKeys(a),e=goog.structs.getValues(a),f=e.length,g=0;g<f;g++)if(!b.call(c,e[g],d&&d[g],a))return!1;return!0};goog.structs.Trie=function(a){this.value_=void 0;this.childNodes_={};a&&this.setAll(a)};goog.structs.Trie.prototype.set=function(a,b){this.setOrAdd_(a,b,!1)};goog.structs.Trie.prototype.add=function(a,b){this.setOrAdd_(a,b,!0)};
goog.structs.Trie.prototype.setOrAdd_=function(a,b,c){for(var d=this,e=0;e<a.length;e++){var f=a.charAt(e);d.childNodes_[f]||(d.childNodes_[f]=new goog.structs.Trie);d=d.childNodes_[f]}if(c&&void 0!==d.value_)throw Error('The collection already contains the key "'+a+'"');d.value_=b};goog.structs.Trie.prototype.setAll=function(a){var b=goog.structs.getKeys(a);a=goog.structs.getValues(a);for(var c=0;c<b.length;c++)this.set(b[c],a[c])};
goog.structs.Trie.prototype.getChildNode_=function(a){for(var b=this,c=0;c<a.length;c++){var d=a.charAt(c);b=b.childNodes_[d];if(!b)return}return b};goog.structs.Trie.prototype.get=function(a){return(a=this.getChildNode_(a))?a.value_:void 0};goog.structs.Trie.prototype.getKeyAndPrefixes=function(a,b){var c=this,d={};b=b||0;void 0!==c.value_&&(d[b]=c.value_);for(;b<a.length;b++){var e=a.charAt(b);if(!(e in c.childNodes_))break;c=c.childNodes_[e];void 0!==c.value_&&(d[b]=c.value_)}return d};
goog.structs.Trie.prototype.getValues=function(){var a=[];this.getValuesInternal_(a);return a};goog.structs.Trie.prototype.getValuesInternal_=function(a){void 0!==this.value_&&a.push(this.value_);for(var b in this.childNodes_)this.childNodes_[b].getValuesInternal_(a)};goog.structs.Trie.prototype.getKeys=function(a){var b=[];if(a){for(var c=this,d=0;d<a.length;d++){var e=a.charAt(d);if(!c.childNodes_[e])return[];c=c.childNodes_[e]}c.getKeysInternal_(a,b)}else this.getKeysInternal_("",b);return b};
goog.structs.Trie.prototype.getKeysInternal_=function(a,b){void 0!==this.value_&&b.push(a);for(var c in this.childNodes_)this.childNodes_[c].getKeysInternal_(a+c,b)};goog.structs.Trie.prototype.containsKey=function(a){return void 0!==this.get(a)};goog.structs.Trie.prototype.containsPrefix=function(a){return 0==a.length?!this.isEmpty():!!this.getChildNode_(a)};
goog.structs.Trie.prototype.containsValue=function(a){if(this.value_===a)return!0;for(var b in this.childNodes_)if(this.childNodes_[b].containsValue(a))return!0;return!1};goog.structs.Trie.prototype.clear=function(){this.childNodes_={};this.value_=void 0};
goog.structs.Trie.prototype.remove=function(a){for(var b=this,c=[],d=0;d<a.length;d++){var e=a.charAt(d);if(!b.childNodes_[e])throw Error('The collection does not have the key "'+a+'"');c.push([b,e]);b=b.childNodes_[e]}a=b.value_;for(delete b.value_;0<c.length;)if(e=c.pop(),b=e[0],e=e[1],b.childNodes_[e].isEmpty())delete b.childNodes_[e];else break;return a};goog.structs.Trie.prototype.clone=function(){return new goog.structs.Trie(this)};goog.structs.Trie.prototype.getCount=function(){return goog.structs.getCount(this.getValues())};
goog.structs.Trie.prototype.isEmpty=function(){return void 0===this.value_&&goog.object.isEmpty(this.childNodes_)};goog.ui.tree.TypeAhead=function(){this.nodeMap_=new goog.structs.Trie;this.buffer_="";this.matchingNodes_=this.matchingLabels_=null;this.matchingNodeIndex_=this.matchingLabelIndex_=0};goog.ui.tree.TypeAhead.Offset={DOWN:1,UP:-1};
goog.ui.tree.TypeAhead.prototype.handleNavigation=function(a){var b=!1;switch(a.keyCode){case goog.events.KeyCodes.DOWN:case goog.events.KeyCodes.UP:a.ctrlKey&&(this.jumpTo_(a.keyCode==goog.events.KeyCodes.DOWN?goog.ui.tree.TypeAhead.Offset.DOWN:goog.ui.tree.TypeAhead.Offset.UP),b=!0);break;case goog.events.KeyCodes.BACKSPACE:a=this.buffer_.length-1;b=!0;0<a?(this.buffer_=this.buffer_.substring(0,a),this.jumpToLabel_(this.buffer_)):0==a?this.buffer_="":b=!1;break;case goog.events.KeyCodes.ESC:this.buffer_=
"",b=!0}return b};goog.ui.tree.TypeAhead.prototype.handleTypeAheadChar=function(a){var b=!1;a.ctrlKey||a.altKey||(a=String.fromCharCode(a.charCode||a.keyCode).toLowerCase(),goog.string.isUnicodeChar(a)&&(" "!=a||this.buffer_)&&(this.buffer_+=a,b=this.jumpToLabel_(this.buffer_)));return b};
goog.ui.tree.TypeAhead.prototype.setNodeInMap=function(a){var b=a.getText();if(b&&!goog.string.isEmptyOrWhitespace(goog.string.makeSafe(b))){b=b.toLowerCase();var c=this.nodeMap_.get(b);c?c.push(a):this.nodeMap_.set(b,[a])}};
goog.ui.tree.TypeAhead.prototype.removeNodeFromMap=function(a){var b=a.getText();if(b&&!goog.string.isEmptyOrWhitespace(goog.string.makeSafe(b))){b=b.toLowerCase();var c=this.nodeMap_.get(b);if(c){for(var d=a.getChildCount(),e=0;e<d;e++)this.removeNodeFromMap(a.getChildAt(e));goog.array.remove(c,a);c.length||this.nodeMap_.remove(b)}}};
goog.ui.tree.TypeAhead.prototype.jumpToLabel_=function(a){var b=!1;(a=this.nodeMap_.getKeys(a))&&a.length&&(this.matchingLabelIndex_=this.matchingNodeIndex_=0,b=this.nodeMap_.get(a[0]),b=this.selectMatchingNode_(b))&&(this.matchingLabels_=a);return b};
goog.ui.tree.TypeAhead.prototype.jumpTo_=function(a){var b=!1,c=this.matchingLabels_;if(c){b=null;var d=!1;if(this.matchingNodes_){var e=this.matchingNodeIndex_+a;0<=e&&e<this.matchingNodes_.length?(this.matchingNodeIndex_=e,b=this.matchingNodes_):d=!0}b||(e=this.matchingLabelIndex_+a,0<=e&&e<c.length&&(this.matchingLabelIndex_=e),c.length>this.matchingLabelIndex_&&(b=this.nodeMap_.get(c[this.matchingLabelIndex_])),b&&b.length&&d&&(this.matchingNodeIndex_=a==goog.ui.tree.TypeAhead.Offset.UP?b.length-
1:0));if(b=this.selectMatchingNode_(b))this.matchingLabels_=c}return b};goog.ui.tree.TypeAhead.prototype.selectMatchingNode_=function(a){if(a){if(this.matchingNodeIndex_<a.length){var b=a[this.matchingNodeIndex_];this.matchingNodes_=a}b&&(b.reveal(),b.select())}return!!b};goog.ui.tree.TypeAhead.prototype.clear=function(){this.buffer_=""};goog.ui.tree.TreeControl=function(a,b,c){goog.ui.tree.BaseNode.call(this,a,b,c);this.setExpandedInternal(!0);this.setSelectedInternal(!0);this.selectedItem_=this;this.typeAhead_=new goog.ui.tree.TypeAhead;this.focusHandler_=this.keyHandler_=null;this.logger_=goog.log.getLogger("this");this.focused_=!1;this.focusedNode_=null;this.showRootLines_=this.showRootNode_=this.showExpandIcons_=this.showLines_=!0;if(goog.userAgent.IE)try{document.execCommand("BackgroundImageCache",!1,!0)}catch(d){goog.log.warning(this.logger_,
"Failed to enable background image cache")}};goog.inherits(goog.ui.tree.TreeControl,goog.ui.tree.BaseNode);goog.ui.tree.TreeControl.prototype.getTree=function(){return this};goog.ui.tree.TreeControl.prototype.getDepth=function(){return 0};goog.ui.tree.TreeControl.prototype.reveal=function(){};goog.ui.tree.TreeControl.prototype.handleFocus_=function(a){this.focused_=!0;goog.dom.classlist.add(goog.asserts.assert(this.getElement()),"focused");this.selectedItem_&&this.selectedItem_.select()};
goog.ui.tree.TreeControl.prototype.handleBlur_=function(a){this.focused_=!1;goog.dom.classlist.remove(goog.asserts.assert(this.getElement()),"focused")};goog.ui.tree.TreeControl.prototype.hasFocus=function(){return this.focused_};goog.ui.tree.TreeControl.prototype.getExpanded=function(){return!this.showRootNode_||goog.ui.tree.TreeControl.superClass_.getExpanded.call(this)};
goog.ui.tree.TreeControl.prototype.setExpanded=function(a){this.showRootNode_?goog.ui.tree.TreeControl.superClass_.setExpanded.call(this,a):this.setExpandedInternal(a)};goog.ui.tree.TreeControl.prototype.getExpandIconSafeHtml=function(){return goog.html.SafeHtml.EMPTY};goog.ui.tree.TreeControl.prototype.getIconElement=function(){var a=this.getRowElement();return a?a.firstChild:null};goog.ui.tree.TreeControl.prototype.getExpandIconElement=function(){return null};
goog.ui.tree.TreeControl.prototype.updateExpandIcon=function(){};goog.ui.tree.TreeControl.prototype.getRowClassName=function(){return goog.ui.tree.TreeControl.superClass_.getRowClassName.call(this)+(this.showRootNode_?"":" "+this.getConfig().cssHideRoot)};
goog.ui.tree.TreeControl.prototype.getCalculatedIconClass=function(){var a=this.getExpanded(),b=this.getExpandedIconClass();if(a&&b)return b;b=this.getIconClass();if(!a&&b)return b;b=this.getConfig();return a&&b.cssExpandedRootIcon?b.cssTreeIcon+" "+b.cssExpandedRootIcon:!a&&b.cssCollapsedRootIcon?b.cssTreeIcon+" "+b.cssCollapsedRootIcon:""};
goog.ui.tree.TreeControl.prototype.setSelectedItem=function(a){if(this.selectedItem_!=a){var b=!1;this.selectedItem_&&(b=this.selectedItem_==this.focusedNode_,this.selectedItem_.setSelectedInternal(!1));if(this.selectedItem_=a)a.setSelectedInternal(!0),b&&a.select();this.dispatchEvent(goog.events.EventType.CHANGE)}};goog.ui.tree.TreeControl.prototype.getSelectedItem=function(){return this.selectedItem_};
goog.ui.tree.TreeControl.prototype.setShowLines=function(a){this.showLines_!=a&&(this.showLines_=a,this.isInDocument()&&this.updateLinesAndExpandIcons_())};goog.ui.tree.TreeControl.prototype.getShowLines=function(){return this.showLines_};
goog.ui.tree.TreeControl.prototype.updateLinesAndExpandIcons_=function(){function a(e){var f=e.getChildrenElement();if(f){var g=!c||b==e.getParent()&&!d?e.getConfig().cssChildrenNoLines:e.getConfig().cssChildren;f.className=g;if(f=e.getExpandIconElement())f.className=e.getExpandIconClass()}e.forEachChild(a)}var b=this,c=b.getShowLines(),d=b.getShowRootLines();a(this)};
goog.ui.tree.TreeControl.prototype.setShowRootLines=function(a){this.showRootLines_!=a&&(this.showRootLines_=a,this.isInDocument()&&this.updateLinesAndExpandIcons_())};goog.ui.tree.TreeControl.prototype.getShowRootLines=function(){return this.showRootLines_};goog.ui.tree.TreeControl.prototype.setShowExpandIcons=function(a){this.showExpandIcons_!=a&&(this.showExpandIcons_=a,this.isInDocument()&&this.updateLinesAndExpandIcons_())};goog.ui.tree.TreeControl.prototype.getShowExpandIcons=function(){return this.showExpandIcons_};
goog.ui.tree.TreeControl.prototype.setShowRootNode=function(a){if(this.showRootNode_!=a){this.showRootNode_=a;if(this.isInDocument()){var b=this.getRowElement();b&&(b.className=this.getRowClassName())}!a&&this.getSelectedItem()==this&&this.getFirstChild()&&this.setSelectedItem(this.getFirstChild())}};goog.ui.tree.TreeControl.prototype.getShowRootNode=function(){return this.showRootNode_};
goog.ui.tree.TreeControl.prototype.initAccessibility=function(){goog.ui.tree.TreeControl.superClass_.initAccessibility.call(this);var a=this.getElement();goog.asserts.assert(a,"The DOM element for the tree cannot be null.");goog.a11y.aria.setRole(a,"tree");goog.a11y.aria.setState(a,"labelledby",this.getLabelElement().id)};
goog.ui.tree.TreeControl.prototype.enterDocument=function(){goog.ui.tree.TreeControl.superClass_.enterDocument.call(this);var a=this.getElement();a.className=this.getConfig().cssRoot;a.setAttribute("hideFocus","true");this.attachEvents_();this.initAccessibility()};goog.ui.tree.TreeControl.prototype.exitDocument=function(){goog.ui.tree.TreeControl.superClass_.exitDocument.call(this);this.detachEvents_()};
goog.ui.tree.TreeControl.prototype.attachEvents_=function(){var a=this.getElement();a.tabIndex=0;var b=this.keyHandler_=new goog.events.KeyHandler(a),c=this.focusHandler_=new goog.events.FocusHandler(a);this.getHandler().listen(c,goog.events.FocusHandler.EventType.FOCUSOUT,this.handleBlur_).listen(c,goog.events.FocusHandler.EventType.FOCUSIN,this.handleFocus_).listen(b,goog.events.KeyHandler.EventType.KEY,this.handleKeyEvent).listen(a,goog.events.EventType.MOUSEDOWN,this.handleMouseEvent_).listen(a,
goog.events.EventType.CLICK,this.handleMouseEvent_).listen(a,goog.events.EventType.DBLCLICK,this.handleMouseEvent_)};goog.ui.tree.TreeControl.prototype.detachEvents_=function(){this.keyHandler_.dispose();this.keyHandler_=null;this.focusHandler_.dispose();this.focusHandler_=null};
goog.ui.tree.TreeControl.prototype.handleMouseEvent_=function(a){goog.log.fine(this.logger_,"Received event "+a.type);var b=this.getNodeFromEvent_(a);if(b)switch(a.type){case goog.events.EventType.MOUSEDOWN:b.onMouseDown(a);break;case goog.events.EventType.CLICK:b.onClick_(a);break;case goog.events.EventType.DBLCLICK:b.onDoubleClick_(a)}};
goog.ui.tree.TreeControl.prototype.handleKeyEvent=function(a){var b;(b=this.typeAhead_.handleNavigation(a)||this.selectedItem_&&this.selectedItem_.onKeyDown(a)||this.typeAhead_.handleTypeAheadChar(a))&&a.preventDefault();return b};goog.ui.tree.TreeControl.prototype.getNodeFromEvent_=function(a){for(var b=a.target;null!=b;){if(a=goog.ui.tree.BaseNode.allNodes[b.id])return a;if(b==this.getElement())break;b=b.parentNode}return null};
goog.ui.tree.TreeControl.prototype.createNode=function(a){return new goog.ui.tree.TreeNode(a||goog.html.SafeHtml.EMPTY,this.getConfig(),this.getDomHelper())};goog.ui.tree.TreeControl.prototype.setNode=function(a){this.typeAhead_.setNodeInMap(a)};goog.ui.tree.TreeControl.prototype.removeNode=function(a){this.typeAhead_.removeNodeFromMap(a)};goog.ui.tree.TreeControl.prototype.clearTypeAhead=function(){this.typeAhead_.clear()};goog.ui.tree.TreeControl.defaultConfig=goog.ui.tree.BaseNode.defaultConfig;Blockly.Toolbox=function(a){this.workspace_=a;this.iconic_=!1;this.RTL=a.options.RTL;this.horizontalLayout_=a.options.horizontalLayout;this.toolboxPosition=a.options.toolboxPosition};Blockly.Toolbox.prototype.width=302;Blockly.Toolbox.prototype.height=0;Blockly.Toolbox.prototype.selectedItem_=null;
Blockly.Toolbox.prototype.init=function(){var a=this.workspace_,b=this.workspace_.getParentSvg();this.HtmlDiv=goog.dom.createDom("DIV","blocklyToolboxDiv");this.HtmlDiv.setAttribute("dir",a.RTL?"RTL":"LTR");b.parentNode.insertBefore(this.HtmlDiv,b);Blockly.bindEventWithChecks_(this.HtmlDiv,"mousedown",this,function(a){this.workspace_.cancelCurrentGesture();Blockly.utils.isRightButton(a)||a.target==this.HtmlDiv?Blockly.hideChaff(!1):Blockly.hideChaff(!0);Blockly.Touch.clearTouchIdentifier()},!1,!0);
this.createFlyout_();this.categoryMenu_=new Blockly.Toolbox.CategoryMenu(this,this.HtmlDiv);this.populate_(a.options.languageTree);this.position()};Blockly.Toolbox.prototype.dispose=function(){this.flyout_.dispose();this.categoryMenu_.dispose();this.categoryMenu_=null;goog.dom.removeNode(this.HtmlDiv);this.lastCategory_=this.workspace_=null};
Blockly.Toolbox.prototype.createFlyout_=function(){var a=this.workspace_,b={disabledPatternId:a.options.disabledPatternId,parentWorkspace:a,RTL:a.RTL,oneBasedIndex:a.options.oneBasedIndex,horizontalLayout:a.horizontalLayout,toolboxPosition:a.options.toolboxPosition,stackGlowFilterId:a.options.stackGlowFilterId};this.flyout_=a.horizontalLayout?new Blockly.HorizontalFlyout(b):new Blockly.VerticalFlyout(b);this.flyout_.setParentToolbox(this);goog.dom.insertSiblingAfter(this.flyout_.createDom("svg"),
this.workspace_.getParentSvg());this.flyout_.init(a)};Blockly.Toolbox.prototype.populate_=function(a){this.categoryMenu_.populate(a);this.showAll_();this.setSelectedItem(this.categoryMenu_.categories_[0],!1)};
Blockly.Toolbox.prototype.showAll_=function(){for(var a=[],b=0;b<this.categoryMenu_.categories_.length;b++){var c=this.categoryMenu_.categories_[b],d=Blockly.Xml.textToDom('<xml><label text="'+c.name_+'" id="'+c.id_+'" category-label="true" showStatusButton="'+c.showStatusButton_+'" web-class="categoryLabel"></label></xml>');a.push(d.firstChild);a=a.concat(c.getContents())}this.flyout_.show(a)};Blockly.Toolbox.prototype.getWidth=function(){return this.width};
Blockly.Toolbox.prototype.getHeight=function(){return this.categoryMenu_?this.categoryMenu_.getHeight():0};
Blockly.Toolbox.prototype.position=function(){var a=this.HtmlDiv;if(a){var b=this.workspace_.getParentSvg();b=Blockly.svgSize(b);this.horizontalLayout_?(a.style.left="0",a.style.height="auto",a.style.width=b.width+"px",this.height=a.offsetHeight,this.toolboxPosition==Blockly.TOOLBOX_AT_TOP?a.style.top="0":a.style.bottom="0"):(this.toolboxPosition==Blockly.TOOLBOX_AT_RIGHT?a.style.right="0":a.style.left="0",a.style.height="100%");this.flyout_.position()}};Blockly.Toolbox.prototype.clearSelection=function(){this.setSelectedItem(null)};
Blockly.Toolbox.prototype.addStyle=function(a){Blockly.utils.addClass(this.HtmlDiv,a)};Blockly.Toolbox.prototype.removeStyle=function(a){Blockly.utils.removeClass(this.HtmlDiv,a)};
Blockly.Toolbox.prototype.getClientRect=function(){if(!this.HtmlDiv)return null;if(!this.flyout_.autoClose)return this.flyout_.getClientRect();var a=this.HtmlDiv.getBoundingClientRect(),b=a.left,c=a.top,d=a.width,e=a.height;return this.toolboxPosition==Blockly.TOOLBOX_AT_LEFT?new goog.math.Rect(-1E7,-1E7,1E7+b+d,2E7):this.toolboxPosition==Blockly.TOOLBOX_AT_RIGHT?new goog.math.Rect(a.right-d,-1E7,1E7+d,2E7):this.toolboxPosition==Blockly.TOOLBOX_AT_TOP?new goog.math.Rect(-1E7,-1E7,2E7,1E7+c+e):new goog.math.Rect(0,
c,2E7,1E7)};Blockly.Toolbox.prototype.refreshSelection=function(){this.showAll_()};Blockly.Toolbox.prototype.getSelectedItem=function(){return this.selectedItem_};Blockly.Toolbox.prototype.getSelectedCategoryName=function(){return this.selectedItem_.name_};Blockly.Toolbox.prototype.getSelectedCategoryId=function(){return this.selectedItem_.id_};
Blockly.Toolbox.prototype.getCategoryScrollOffset=function(){var a=this.getCategoryPositionById(this.getSelectedCategoryId());return this.flyout_.getScrollPos()-a};Blockly.Toolbox.prototype.getCategoryPositionByName=function(a){for(var b=this.flyout_.categoryScrollPositions,c=0;c<b.length;c++)if(a===b[c].categoryName)return b[c].position};Blockly.Toolbox.prototype.getCategoryPositionById=function(a){for(var b=this.flyout_.categoryScrollPositions,c=0;c<b.length;c++)if(a===b[c].categoryId)return b[c].position};
Blockly.Toolbox.prototype.getCategoryLengthByName=function(a){for(var b=this.flyout_.categoryScrollPositions,c=0;c<b.length;c++)if(a===b[c].categoryName)return b[c].length};Blockly.Toolbox.prototype.getCategoryLengthById=function(a){for(var b=this.flyout_.categoryScrollPositions,c=0;c<b.length;c++)if(a===b[c].categoryId)return b[c].length};Blockly.Toolbox.prototype.setFlyoutScrollPos=function(a){this.flyout_.setScrollPos(a)};
Blockly.Toolbox.prototype.setSelectedItem=function(a,b){"undefined"===typeof b&&(b=!0);this.selectedItem_&&this.selectedItem_.setSelected(!1);this.selectedItem_=a;null!=this.selectedItem_&&(this.selectedItem_.setSelected(!0),a=a.id_,b&&this.scrollToCategoryById(a))};Blockly.Toolbox.prototype.setSelectedCategoryByName=function(a){this.selectCategoryByName(a);this.scrollToCategoryByName(a)};Blockly.Toolbox.prototype.setSelectedCategoryById=function(a){this.selectCategoryById(a);this.scrollToCategoryById(a)};
Blockly.Toolbox.prototype.scrollToCategoryByName=function(a){for(var b=this.flyout_.categoryScrollPositions,c=0;c<b.length;c++)if(a===b[c].categoryName){this.flyout_.setVisible(!0);this.flyout_.scrollTo(b[c].position);break}};Blockly.Toolbox.prototype.scrollToCategoryById=function(a){for(var b=this.flyout_.categoryScrollPositions,c=0;c<b.length;c++)if(a===b[c].categoryId){this.flyout_.setVisible(!0);this.flyout_.scrollTo(b[c].position);break}};
Blockly.Toolbox.prototype.getCategoryByIndex=function(a){return this.categoryMenu_.categories_?this.categoryMenu_.categories_[a]:null};Blockly.Toolbox.prototype.selectCategoryByName=function(a){for(var b=0;b<this.categoryMenu_.categories_.length;b++){var c=this.categoryMenu_.categories_[b];a===c.name_&&(this.selectedItem_.setSelected(!1),this.selectedItem_=c,this.selectedItem_.setSelected(!0))}};
Blockly.Toolbox.prototype.selectCategoryById=function(a){for(var b=0;b<this.categoryMenu_.categories_.length;b++){var c=this.categoryMenu_.categories_[b];a===c.id_&&(this.selectedItem_.setSelected(!1),this.selectedItem_=c,this.selectedItem_.setSelected(!0))}};Blockly.Toolbox.prototype.setSelectedItemFactory=function(a){return function(){this.setSelectedItem(a);Blockly.Touch.clearTouchIdentifier()}};
Blockly.Toolbox.CategoryMenu=function(a,b){this.parent_=a;this.height_=0;this.parentHtml_=b;this.createDom();this.categories_=[]};Blockly.Toolbox.CategoryMenu.prototype.getHeight=function(){return this.height_};Blockly.Toolbox.CategoryMenu.prototype.createDom=function(){this.table=goog.dom.createDom("div",this.parent_.horizontalLayout_?"scratchCategoryMenuHorizontal":"scratchCategoryMenu");this.parentHtml_.appendChild(this.table)};
Blockly.Toolbox.CategoryMenu.prototype.populate=function(a){if(a){this.dispose();this.createDom();for(var b=[],c=0,d;d=a.childNodes[c];c++)d.tagName&&"CATEGORY"==d.tagName.toUpperCase()&&b.push(d);for(c=0;c<b.length;c++)d=b[c],a=goog.dom.createDom("div","scratchCategoryMenuRow"),this.table.appendChild(a),d&&this.categories_.push(new Blockly.Toolbox.Category(this,a,d));this.height_=this.table.offsetHeight}};
Blockly.Toolbox.CategoryMenu.prototype.dispose=function(){for(var a=0,b;b=this.categories_[a];a++)b.dispose();this.categories_=[];this.table&&(goog.dom.removeNode(this.table),this.table=null)};
Blockly.Toolbox.Category=function(a,b,c){this.parent_=a;this.parentHtml_=b;this.name_=c.getAttribute("name");this.id_=c.getAttribute("id");this.setColour(c);this.custom_=c.getAttribute("custom");this.iconURI_=c.getAttribute("iconURI");this.showStatusButton_=c.getAttribute("showStatusButton");this.contents_=[];this.custom_||this.parseContents_(c);this.createDom()};
Blockly.Toolbox.Category.prototype.dispose=function(){this.item_&&(goog.dom.removeNode(this.item_),this.item=null);this.contents_=this.parentHtml_=this.parent_=null};
Blockly.Toolbox.Category.prototype.createDom=function(){var a=this.parent_.parent_;this.item_=goog.dom.createDom("div",{"class":"scratchCategoryMenuItem"});this.label_=goog.dom.createDom("div",{"class":"scratchCategoryMenuItemLabel"},Blockly.utils.replaceMessageReferences(this.name_));this.iconURI_?(this.bubble_=goog.dom.createDom("div",{"class":"scratchCategoryItemIcon"}),this.bubble_.style.backgroundImage="url("+this.iconURI_+")"):(this.bubble_=goog.dom.createDom("div",{"class":"scratchCategoryItemBubble"}),
this.bubble_.style.backgroundColor=this.colour_,this.bubble_.style.borderColor=this.secondaryColour_);this.item_.appendChild(this.bubble_);this.item_.appendChild(this.label_);this.parentHtml_.appendChild(this.item_);Blockly.bindEvent_(this.item_,"mouseup",a,a.setSelectedItemFactory(this))};Blockly.Toolbox.Category.prototype.setSelected=function(a){this.item_.className=a?"scratchCategoryMenuItem categorySelected":"scratchCategoryMenuItem"};
Blockly.Toolbox.Category.prototype.parseContents_=function(a){for(var b=0,c;c=a.childNodes[b];b++)if(c.tagName)switch(c.tagName.toUpperCase()){case "BLOCK":case "SHADOW":case "LABEL":case "BUTTON":case "SEP":case "TEXT":this.contents_.push(c)}};Blockly.Toolbox.Category.prototype.getContents=function(){return this.custom_?this.custom_:this.contents_};
Blockly.Toolbox.Category.prototype.setColour=function(a){var b=a.getAttribute("colour");a=a.getAttribute("secondaryColour");goog.isString(b)?(b.match(/^#[0-9a-fA-F]{6}$/)?this.colour_=b:this.colour_=Blockly.hueToRgb(b),a.match(/^#[0-9a-fA-F]{6}$/)?this.secondaryColour_=a:this.secondaryColour_=Blockly.hueToRgb(a),this.hasColours_=!0):this.secondaryColour_=this.colour_="#000000"};Blockly.Css={};Blockly.Css.Cursor={OPEN:"handopen",CLOSED:"handclosed",DELETE:"handdelete"};Blockly.Css.currentCursor_="";Blockly.Css.styleSheet_=null;Blockly.Css.mediaPath_="";
Blockly.Css.inject=function(a,b){if(!Blockly.Css.styleSheet_){var c=".blocklyDraggable {}\n";a&&(c+=Blockly.Css.CONTENT.join("\n"),Blockly.FieldDate&&(c+=Blockly.FieldDate.CSS.join("\n")));Blockly.Css.mediaPath_=b.replace(/[\\\/]$/,"");c=c.replace(/<<<PATH>>>/g,Blockly.Css.mediaPath_);for(var d in Blockly.Colours)Blockly.Colours.hasOwnProperty(d)&&(c=c.replace(new RegExp("\\$colour\\_"+d,"g"),Blockly.Colours[d]));a=document.createElement("style");document.head.insertBefore(a,document.head.firstChild);
c=document.createTextNode(c);a.appendChild(c);Blockly.Css.styleSheet_=a.sheet}};Blockly.Css.setCursor=function(a){console.warn("Deprecated call to Blockly.Css.setCursor.See https://github.com/google/blockly/issues/981 for context")};
Blockly.Css.CONTENT=[".blocklySvg {","background-color: $colour_workspace;","outline: none;","overflow: hidden;","position: absolute;","display: block;","}",".blocklyRelativeWrapper {","position: relative;","width: 100%;","height: 100%;","}",".blocklyWidgetDiv {","display: none;","position: absolute;","z-index: 99999;","}",".injectionDiv {","height: 100%;","position: relative;","overflow: hidden;","touch-action: none","}",".blocklyNonSelectable {","user-select: none;","-moz-user-select: none;","-webkit-user-select: none;",
"-ms-user-select: none;","}",".blocklyWidgetDiv.fieldTextInput {","overflow: hidden;","border: 1px solid;","box-sizing: border-box;","transform-origin: 0 0;","-ms-transform-origin: 0 0;","-moz-transform-origin: 0 0;","-webkit-transform-origin: 0 0;","}",".blocklyWidgetDiv.fieldTextInput.removableTextInput {","overflow: visible;","}",".blocklyTextDropDownArrow {","position: absolute;","}",".blocklyTextRemoveIcon {","position: absolute;","width: 24px;","height: 24px;","top: -40px;","left: 50%;","margin-left: -12px;",
"cursor: pointer;","}",".blocklyNonSelectable {","user-select: none;","-moz-user-select: none;","-webkit-user-select: none;","-ms-user-select: none;","}",".blocklyWsDragSurface {","display: none;","position: absolute;","top: 0;","left: 0;","}",".blocklyWsDragSurface.blocklyOverflowVisible {","overflow: visible;","}",".blocklyBlockDragSurface {","display: none;","position: absolute;","top: 0;","left: 0;","right: 0;","bottom: 0;","overflow: visible !important;","z-index: 50;","}",".blocklyTooltipDiv {",
"background-color: #ffffc7;","border: 1px solid #ddc;","box-shadow: 4px 4px 20px 1px rgba(0,0,0,.15);","color: #000;","display: none;",'font-family: "Helvetica Neue", Helvetica, sans-serif;',"font-size: 9pt;","opacity: 0.9;","padding: 2px;","position: absolute;","z-index: 100000;","}",".blocklyDropDownDiv {","position: fixed;","left: 0;","top: 0;","z-index: 1000;","display: none;","border: 1px solid;","border-radius: 4px;","box-shadow: 0px 0px 8px 1px "+Blockly.Colours.dropDownShadow+";","padding: 4px;",
"-webkit-user-select: none;","min-height: 26px","}",".blocklyDropDownContent {","max-height: 300px;","overflow: auto;","}",".blocklyDropDownArrow {","position: absolute;","left: 0;","top: 0;","width: 16px;","height: 16px;","z-index: -1;","background-color: inherit;","border-color: inherit;","}",".blocklyDropDownButton {","display: inline-block;","float: left;","padding: 0;","margin: 4px;","border-radius: 4px;","outline: none;","border: 1px solid;","transition: box-shadow .1s;","cursor: pointer;",
"}",".blocklyDropDownButtonHover {","box-shadow: 0px 0px 0px 4px "+Blockly.Colours.fieldShadow+";","}",".blocklyDropDownButton:active {","box-shadow: 0px 0px 0px 6px "+Blockly.Colours.fieldShadow+";","}",".blocklyDropDownButton > img {","width: 80%;","height: 80%;","margin-top: 5%","}",".blocklyDropDownPlaceholder {","display: inline-block;","float: left;","padding: 0;","margin: 4px;","}",".blocklyNumPadButton {","display: inline-block;","float: left;","padding: 0;","width: 48px;","height: 48px;",
"margin: 4px;","border-radius: 4px;","background: $colour_numPadBackground;","color: $colour_numPadText;","outline: none;","border: 1px solid $colour_numPadBorder;","cursor: pointer;","font-weight: 600;",'font-family: "Helvetica Neue", Helvetica, sans-serif;',"font-size: 12pt;","-webkit-tap-highlight-color: rgba(0,0,0,0);","}",".blocklyNumPadButton > img {","margin-top: 10%;","width: 80%;","height: 80%;","}",".blocklyNumPadButton:active {","background: $colour_numPadActiveBackground;","-webkit-tap-highlight-color: rgba(0,0,0,0);",
"}",".arrowTop {","border-top: 1px solid;","border-left: 1px solid;","border-top-left-radius: 4px;","border-color: inherit;","}",".arrowBottom {","border-bottom: 1px solid;","border-right: 1px solid;","border-bottom-right-radius: 4px;","border-color: inherit;","}",".valueReportBox {","min-width: 50px;","max-width: 300px;","max-height: 200px;","overflow: auto;","word-wrap: break-word;","text-align: center;",'font-family: "Helvetica Neue", Helvetica, sans-serif;',"font-size: .8em;","}",".blocklyResizeSE {",
"cursor: se-resize;","fill: #aaa;","}",".blocklyResizeSW {","cursor: sw-resize;","fill: #aaa;","}",".blocklyResizeLine {","stroke: #888;","stroke-width: 1;","}",".blocklyHighlightedConnectionPath {","fill: none;","stroke: #fc3;","stroke-width: 4px;","}",".blocklyPath {","stroke-width: 1px;","}",".blocklySelected>.blocklyPath {","}",".blocklySelected>.blocklyPathLight {","display: none;","}",".blocklyDraggable {",'cursor: url("<<<PATH>>>/handopen.cur"), auto;',"cursor: grab;","cursor: -webkit-grab;",
"cursor: -moz-grab;","}",".blocklyDragging {",'cursor: url("<<<PATH>>>/handclosed.cur"), auto;',"cursor: grabbing;","cursor: -webkit-grabbing;","cursor: -moz-grabbing;","}",".blocklyDraggable:active {",'cursor: url("<<<PATH>>>/handclosed.cur"), auto;',"cursor: grabbing;","cursor: -webkit-grabbing;","cursor: -moz-grabbing;","}",".blocklyBlockDragSurface .blocklyDraggable {",'cursor: url("<<<PATH>>>/handclosed.cur"), auto;',"cursor: grabbing;","cursor: -webkit-grabbing;","cursor: -moz-grabbing;","}",
".blocklyDragging.blocklyDraggingDelete {",'cursor: url("<<<PATH>>>/handdelete.cur"), auto;',"}",".blocklyDragging.blocklyDraggingMouseThrough {","pointer-events: none;","}",".blocklyToolboxDelete {",'cursor: url("<<<PATH>>>/handdelete.cur"), auto;',"}",".blocklyToolboxGrab {",'cursor: url("<<<PATH>>>/handclosed.cur"), auto;',"cursor: grabbing;","cursor: -webkit-grabbing;","}",".blocklyDragging>.blocklyPath,",".blocklyDragging>.blocklyPathLight {","fill-opacity: 1.0;","stroke-opacity: 1.0;","}",".blocklyDragging>.blocklyPath {",
"}",".blocklyDisabled>.blocklyPath {","fill-opacity: .5;","stroke-opacity: .5;","}",".blocklyInsertionMarker>.blocklyPath {","stroke: none;","}",".blocklyText {","fill: #fff;",'font-family: "Helvetica Neue", Helvetica, sans-serif;',"font-size: 12pt;","font-weight: 500;","}",".blocklyTextTruncated {","font-size: 11pt;","}",".blocklyNonEditableText>text {","pointer-events: none;","}",".blocklyNonEditableText>text,",".blocklyEditableText>text {","fill: $colour_text;","}",".blocklyEditableText>.blocklyEditableLabel {",
"fill: #fff;","}",".blocklyDropdownText {","fill: #fff !important;","}",".blocklyBubbleText {","fill: $colour_text;","}",".blocklyFlyout {","position: absolute;","z-index: 20;","}",".blocklyFlyout {","position: absolute;","z-index: 20;","}",".blocklyFlyoutButton {","fill: none;","}",".blocklyFlyoutButtonBackground {","stroke: #c6c6c6;","}",".blocklyFlyoutButton .blocklyText {","fill: $colour_text;","}",".blocklyFlyoutButtonShadow {","fill: transparent;","}",".blocklyFlyoutButton:hover {","fill: white;",
"cursor: pointer;","}",".blocklyFlyoutLabel {","cursor: default;","}",".blocklyFlyoutLabelBackground {","opacity: 0;","}",".blocklyFlyoutLabelText {",'font-family: "Helvetica Neue", Helvetica, sans-serif;',"font-size: 14pt;","fill: #575E75;","font-weight: bold;","}",".blocklySvg text, .blocklyBlockDragSurface text, .blocklyFlyout text, .blocklyToolboxDiv text {","user-select: none;","-moz-user-select: none;","-webkit-user-select: none;","cursor: inherit;","}",".blocklyHidden {","display: none;","}",
".blocklyFieldDropdown:not(.blocklyHidden) {","display: block;","}",".blocklyIconGroup {","cursor: default;","}",".blocklyIconGroup:not(:hover),",".blocklyIconGroupReadonly {","opacity: .6;","}",".blocklyIconShape {","fill: #00f;","stroke: #fff;","stroke-width: 1px;","}",".blocklyIconSymbol {","fill: #fff;","}",".blocklyMinimalBody {","margin: 0;","padding: 0;","}",".blocklyCommentForeignObject {","position: relative;","z-index: 0;","}",".blocklyCommentRect {","fill: #E7DE8E;","stroke: #bcA903;",
"stroke-width: 1px","}",".blocklyCommentTarget {","fill: transparent;","stroke: #bcA903;","}",".blocklyCommentTargetFocused {","fill: none;","}",".blocklyCommentHandleTarget {","fill: none;","}",".blocklyCommentHandleTargetFocused {","fill: transparent;","}",".blocklyFocused>.blocklyCommentRect {","fill: #B9B272;","stroke: #B9B272;","}",".blocklySelected>.blocklyCommentTarget {","stroke: #fc3;","stroke-width: 3px;","}",".blocklyCommentTextarea {","background-color: #fef49c;","border: 0;","outline: 0;",
"margin: 0;","padding: 3px;","resize: none;","display: block;","overflow: hidden;","}",".blocklyCommentDeleteIcon {","cursor: pointer;","fill: #000;","display: none","}",".blocklySelected > .blocklyCommentDeleteIcon {","display: block","}",".blocklyDeleteIconShape {","fill: #000;","stroke: #000;","stroke-width: 1px;","}",".blocklyDeleteIconShape.blocklyDeleteIconHighlighted {","stroke: #fc3;","}",".scratchCommentForeignObject {","position: relative;","}",".scratchCommentBody {","background-color: #fef49c;",
"}",".scratchCommentRect {","fill: #fef49c;","}",".scratchCommentTarget {","fill: transparent;","}",".scratchWorkspaceCommentBorder {","stroke: #bcA903;","stroke-width: 1px;","}",".scratchCommentTargetFocused {","fill: none;","}",".scratchCommentTopBar {","fill: #000000;","fill-opacity: 0.1","}",".scratchCommentText {",'font-family: "Helvetica Neue", Helvetica, sans-serif;',"font-size: 12pt;","font-weight: 400;","}",".scratchCommentTextarea {","background-color: #fef49c;","border: 0;","outline: 0;",
"padding: 0;","resize: none;","overflow: hidden;","}",".scratchCommentResizeSE {","cursor: se-resize;","fill: transparent;","}",".scratchCommentResizeSW {","cursor: sw-resize;","fill: transparent;","}",".blocklyHtmlInput {","border: none;",'font-family: "Helvetica Neue", Helvetica, sans-serif;',"font-size: 12pt;","height: 100%;","margin: 0;","outline: none;","box-sizing: border-box;","width: 100%;","text-align: center;","color: $colour_text;","font-weight: 500;","}",".blocklyMainBackground {","stroke-width: 1;",
"stroke: #c6c6c6;","}",".blocklyMutatorBackground {","fill: #fff;","stroke: #ddd;","stroke-width: 1;","}",".blocklyFlyoutBackground {","fill: $colour_flyout;","fill-opacity: .8;","}",".blocklyMainWorkspaceScrollbar {","z-index: 20;","}",".blocklyFlyoutScrollbar {","z-index: 30;","}",".blocklyScrollbarHorizontal, .blocklyScrollbarVertical {","position: absolute;","outline: none;","}",".blocklyScrollbarBackground {","opacity: 0;","}",".blocklyScrollbarHandle {","fill: $colour_scrollbar;","}",".blocklyScrollbarBackground:hover+.blocklyScrollbarHandle,",
".blocklyScrollbarHandle:hover {","fill: $colour_scrollbarHover;","}",".blocklyZoom>image {","opacity: 1;","}",".blocklyFlyout .blocklyScrollbarHandle {","fill: #bbb;","}",".blocklyFlyout .blocklyScrollbarBackground:hover+.blocklyScrollbarHandle,",".blocklyFlyout .blocklyScrollbarHandle:hover {","fill: #aaa;","}",".blocklyInvalidInput {","background: #faa;","}",".blocklyAngleCircle {","stroke: "+Blockly.Colours.motion.tertiary+";","stroke-width: 1;","fill: "+Blockly.Colours.motion.secondary+";","}",
".blocklyAngleCenterPoint {","stroke: #fff;","stroke-width: 1;","fill: #fff;","}",".blocklyAngleDragHandle {","stroke: #fff;","stroke-width: 5;","stroke-opacity: 0.25;","fill: #fff;","cursor: pointer;","}",".blocklyAngleMarks {","stroke: #fff;","stroke-width: 1;","stroke-opacity: 0.5;","}",".blocklyAngleGauge {","fill: #fff;","fill-opacity: 0.20;","}",".blocklyAngleLine {","stroke: #fff;","stroke-width: 1;","stroke-linecap: round;","pointer-events: none;","}",".blocklyContextMenu {","border-radius: 4px;",
"}",".blocklyDropdownMenu {","padding: 0 !important;","}",".blocklyDropDownNumPad {","background-color: $colour_numPadBackground;","}",".blocklyWidgetDiv .goog-option-selected .goog-menuitem-checkbox,",".blocklyWidgetDiv .goog-option-selected .goog-menuitem-icon {","background: url(<<<PATH>>>/sprites.png) no-repeat -48px -16px !important;","}",".blocklyToolboxDiv {","background-color: $colour_toolbox;","color: $colour_toolboxText;","overflow-x: visible;","overflow-y: auto;","position: absolute;",
'font-family: "Helvetica Neue", Helvetica, sans-serif;',"z-index: 40;","-webkit-tap-highlight-color: transparent;","}",".blocklyTreeRoot {","padding: 4px 0;","}",".blocklyTreeRoot:focus {","outline: none;","}",".blocklyTreeRow {","height: 22px;","line-height: 22px;","margin-bottom: 3px;","padding-right: 8px;","white-space: nowrap;","}",".blocklyHorizontalTree {","float: left;","margin: 1px 5px 8px 0;","}",".blocklyHorizontalTreeRtl {","float: right;","margin: 1px 0 8px 5px;","}",'.blocklyToolboxDiv[dir="RTL"] .blocklyTreeRow {',
"margin-left: 8px;","}",".blocklyTreeRow:not(.blocklyTreeSelected):hover {","background-color: #e4e4e4;","}",".blocklyTreeSeparator {","border-bottom: solid #e5e5e5 1px;","height: 0;","margin: 5px 0;","}",".blocklyTreeSeparatorHorizontal {","border-right: solid #e5e5e5 1px;","width: 0;","padding: 5px 0;","margin: 0 5px;","}",".blocklyTreeIcon {","background-image: url(<<<PATH>>>/sprites.png);","height: 16px;","vertical-align: middle;","width: 16px;","}",".blocklyTreeIconClosedLtr {","background-position: -32px -1px;",
"}",".blocklyTreeIconClosedRtl {","background-position: 0px -1px;","}",".blocklyTreeIconOpen {","background-position: -16px -1px;","}",".blocklyTreeSelected>.blocklyTreeIconClosedLtr {","background-position: -32px -17px;","}",".blocklyTreeSelected>.blocklyTreeIconClosedRtl {","background-position: 0px -17px;","}",".blocklyTreeSelected>.blocklyTreeIconOpen {","background-position: -16px -17px;","}",".blocklyTreeIconNone,",".blocklyTreeSelected>.blocklyTreeIconNone {","background-position: -48px -1px;",
"}",".blocklyTreeLabel {","cursor: default;",'font-family: "Helvetica Neue", Helvetica, sans-serif;',"font-size: 16px;","padding: 0 3px;","vertical-align: middle;","}",".blocklyToolboxDelete .blocklyTreeLabel {",'cursor: url("<<<PATH>>>/handdelete.cur"), auto;',"}",".blocklyTreeSelected .blocklyTreeLabel {","color: #fff;","}",".blocklyDropDownDiv .goog-slider-horizontal {","margin: 8px;","height: 22px;","width: 150px;","position: relative;","outline: none;","border-radius: 11px;","margin-bottom: 20px;",
"}",".blocklyDropDownDiv .goog-slider-horizontal .goog-slider-thumb {","width: 26px;","height: 26px;","top: -1px;","position: absolute;","background-color: white;","border-radius: 100%;","-webkit-box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.15);","-moz-box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.15);","box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.15);","}",".scratchEyedropper {","background: none;","outline: none;","border: none;","width: 100%;","text-align: center;","border-top: 1px solid #ddd;","padding-top: 5px;",
"cursor: pointer;","}",".scratchColourPickerLabel {",'font-family: "Helvetica Neue", Helvetica, sans-serif;',"font-size: 0.65rem;","color: $colour_toolboxText;","margin: 8px;","}",".scratchColourPickerLabelText {","font-weight: bold;","}",".scratchColourPickerReadout {","margin-left: 10px;","}",".blocklyWidgetDiv .goog-menu {","background: #fff;","border-color: #ccc #666 #666 #ccc;","border-style: solid;","border-width: 1px;","cursor: default;",'font: normal 13px "Helvetica Neue", Helvetica, sans-serif;',
"margin: 0;","outline: none;","padding: 4px 0;","position: absolute;","overflow-y: auto;","overflow-x: hidden;","z-index: 20000;","}",".blocklyDropDownDiv .goog-menu {","cursor: default;",'font: normal 13px "Helvetica Neue", Helvetica, sans-serif;',"outline: none;","z-index: 20000;","}",".blocklyWidgetDiv .goog-menuitem {","color: #000;",'font: normal 13px "Helvetica Neue", Helvetica, sans-serif;',"list-style: none;","margin: 0;","padding: 4px 7em 4px 28px;","white-space: nowrap;","}",".blocklyDropDownDiv .goog-menuitem {",
"color: #fff;",'font: normal 13px "Helvetica Neue", Helvetica, sans-serif;',"font-weight: bold;","list-style: none;","margin: 0;","min-height: 24px;","padding: 4px 7em 4px 28px;","white-space: nowrap;","}",".blocklyWidgetDiv .goog-menuitem.goog-menuitem-rtl, ",".blocklyDropDownDiv .goog-menuitem.goog-menuitem-rtl {","padding-left: 7em;","padding-right: 28px;","}",".blocklyWidgetDiv .goog-menu-nocheckbox .goog-menuitem,",".blocklyWidgetDiv .goog-menu-noicon .goog-menuitem, ",".blocklyDropDownDiv .goog-menu-nocheckbox .goog-menuitem,",
".blocklyDropDownDiv .goog-menu-noicon .goog-menuitem { ","padding-left: 12px;","}",".blocklyWidgetDiv .goog-menu-noaccel .goog-menuitem, ",".blocklyDropDownDiv .goog-menu-noaccel .goog-menuitem {","padding-right: 20px;","}",".blocklyWidgetDiv .goog-menuitem-content ",".blocklyDropDownDiv .goog-menuitem-content {","color: #000;",'font: normal 13px "Helvetica Neue", Helvetica, sans-serif;',"}",".blocklyWidgetDiv .goog-menuitem-disabled .goog-menuitem-accel,",".blocklyWidgetDiv .goog-menuitem-disabled .goog-menuitem-content, ",
".blocklyDropDownDiv .goog-menuitem-disabled .goog-menuitem-accel,",".blocklyDropDownDiv .goog-menuitem-disabled .goog-menuitem-content {","color: #ccc !important;","}",".blocklyWidgetDiv .goog-menuitem-disabled .goog-menuitem-icon, ",".blocklyDropDownDiv .goog-menuitem-disabled .goog-menuitem-icon {","opacity: 0.3;","-moz-opacity: 0.3;","filter: alpha(opacity=30);","}",".blocklyWidgetDiv .goog-menuitem-highlight,",".blocklyWidgetDiv .goog-menuitem-hover {","background-color: #d6e9f8;","border-color: #d6e9f8;",
"border-style: dotted;","border-width: 1px 0;","padding-bottom: 3px;","padding-top: 3px;","}",".blocklyDropDownDiv .goog-menuitem-highlight,",".blocklyDropDownDiv .goog-menuitem-hover {","background-color: rgba(0, 0, 0, 0.2);","}",".blocklyWidgetDiv .goog-menuitem-checkbox,",".blocklyWidgetDiv .goog-menuitem-icon, ",".blocklyDropDownDiv .goog-menuitem-checkbox,",".blocklyDropDownDiv .goog-menuitem-icon {","background-repeat: no-repeat;","height: 16px;","left: 6px;","position: absolute;","right: auto;",
"vertical-align: middle;","width: 16px;","}",".blocklyWidgetDiv .goog-option-selected .goog-menuitem-checkbox,",".blocklyWidgetDiv .goog-option-selected .goog-menuitem-icon,",".blocklyDropDownDiv .goog-option-selected .goog-menuitem-checkbox,",".blocklyDropDownDiv .goog-option-selected .goog-menuitem-icon {","background: url(<<<PATH>>>/sprites.png) no-repeat -48px -16px !important;","position: static;","float: left;","margin-left: -24px;","}",".blocklyWidgetDiv .goog-menuitem-rtl .goog-menuitem-checkbox,",
".blocklyWidgetDiv .goog-menuitem-rtl .goog-menuitem-icon,",".blocklyDropDownDiv .goog-menuitem-rtl .goog-menuitem-checkbox,",".blocklyDropDownDiv .goog-menuitem-rtl .goog-menuitem-icon {","float: right;","margin-left: 6px;","}",".blocklyWidgetDiv .goog-menuitem-accel, ",".blocklyDropDownDiv .goog-menuitem-accel {","color: #999;","direction: ltr;","left: auto;","padding: 0 6px;","position: absolute;","right: 0;","text-align: right;","}",".blocklyWidgetDiv .goog-menuitem-rtl .goog-menuitem-accel, ",
".blocklyDropDownDiv .goog-menuitem-rtl .goog-menuitem-accel {","left: 0;","right: auto;","text-align: left;","}",".blocklyWidgetDiv .goog-menuitem-mnemonic-hint, ",".blocklyDropDownDiv .goog-menuitem-mnemonic-hint {","text-decoration: underline;","}",".blocklyWidgetDiv .goog-menuitem-mnemonic-separator, ",".blocklyDropDownDiv .goog-menuitem-mnemonic-separator {","color: #999;","font-size: 12px;","padding-left: 4px;","}",".blocklyWidgetDiv .goog-menuseparator, ",".blocklyDropDownDiv .goog-menuseparator {",
"border-top: 1px solid #ccc;","margin: 4px 0;","padding: 0;","}",".blocklyFlyoutCheckbox {","fill: white;","stroke: #c8c8c8;","}",".blocklyFlyoutCheckbox.checked {","fill: "+Blockly.Colours.motion.primary+";","stroke: "+Blockly.Colours.motion.tertiary+";","}",".blocklyFlyoutCheckboxPath {","stroke: white;","stroke-width: 3;","stroke-linecap: round;","stroke-linejoin: round;","}",".scratchCategoryMenu {","width: 52px;","background: $colour_toolbox;","color: $colour_toolboxText;","font-size: .7rem;",
"user-select: none;","-webkit-user-select: none;","-moz-user-select: none;","-ms-user-select: none;","}",".scratchCategoryMenuHorizontal {","width: 100%;","height: 50px;","background: $colour_toolbox;","color: $colour_toolboxText;","font-size: .7em;","user-select: none;","-webkit-user-select: none;","-moz-user-select: none;","-ms-user-select: none;","}",".scratchCategoryMenuHorizontal .scratchCategoryMenuRow {","float: left;","margin: 3px;","}",".scratchCategoryMenuRow {","}",".scratchCategoryMenuItem {",
"padding: 0.375rem 0px;","cursor: pointer;","text-align: center;","}",".scratchCategoryMenuHorizontal .scratchCategoryMenuItem {","padding: 6px 5px;","}",".scratchCategoryMenuItem.categorySelected {","background: $colour_toolboxSelected;","}",".scratchCategoryItemBubble {","width: 1.25rem;","height: 1.25rem;","border: 1px solid;","border-radius: 100%;","margin: 0 auto 0.125rem;","}",".scratchCategoryItemIcon {","width: 1.25rem;","height: 1.25rem;","margin: 0 auto 0.125rem;","background-size: 100%;",
"}",".scratchCategoryMenuItem:hover {","color: $colour_toolboxHover !important;","}",""];Blockly.WidgetDiv={};Blockly.WidgetDiv.DIV=null;Blockly.WidgetDiv.owner_=null;Blockly.WidgetDiv.dispose_=null;Blockly.WidgetDiv.disposeAnimationFinished_=null;Blockly.WidgetDiv.disposeAnimationTimer_=null;Blockly.WidgetDiv.disposeAnimationTimerLength_=0;Blockly.WidgetDiv.createDom=function(){Blockly.WidgetDiv.DIV||(Blockly.WidgetDiv.DIV=goog.dom.createDom("DIV","blocklyWidgetDiv"),document.body.appendChild(Blockly.WidgetDiv.DIV))};
Blockly.WidgetDiv.show=function(a,b,c,d,e){Blockly.WidgetDiv.hide();Blockly.WidgetDiv.owner_=a;Blockly.WidgetDiv.dispose_=c;Blockly.WidgetDiv.disposeAnimationFinished_=d;Blockly.WidgetDiv.disposeAnimationTimerLength_=e;a=goog.style.getViewportPageOffset(document);Blockly.WidgetDiv.DIV.style.top=a.y+"px";Blockly.WidgetDiv.DIV.style.direction=b?"rtl":"ltr";Blockly.WidgetDiv.DIV.style.display="block"};
Blockly.WidgetDiv.hide=function(a){Blockly.WidgetDiv.disposeAnimationTimer_?(window.clearTimeout(Blockly.WidgetDiv.disposeAnimationTimer_),Blockly.WidgetDiv.disposeAnimationFinished_&&Blockly.WidgetDiv.disposeAnimationFinished_(),Blockly.WidgetDiv.disposeAnimationFinished_=null,Blockly.WidgetDiv.disposeAnimationTimer_=null,Blockly.WidgetDiv.owner_=null,Blockly.WidgetDiv.hideAndClearDom_()):Blockly.WidgetDiv.isVisible()&&(Blockly.WidgetDiv.dispose_&&Blockly.WidgetDiv.dispose_(),Blockly.WidgetDiv.dispose_=
null,Blockly.WidgetDiv.disposeAnimationFinished_&&!a?Blockly.WidgetDiv.disposeAnimationTimer_=window.setTimeout(Blockly.WidgetDiv.hide,1E3*Blockly.WidgetDiv.disposeAnimationTimerLength_):(Blockly.WidgetDiv.disposeAnimationFinished_&&Blockly.WidgetDiv.disposeAnimationFinished_(),Blockly.WidgetDiv.disposeAnimationFinished_=null,Blockly.WidgetDiv.owner_=null,Blockly.WidgetDiv.hideAndClearDom_()))};
Blockly.WidgetDiv.hideAndClearDom_=function(){Blockly.WidgetDiv.DIV.style.display="none";Blockly.WidgetDiv.DIV.style.left="";Blockly.WidgetDiv.DIV.style.top="";Blockly.WidgetDiv.DIV.style.height="";goog.dom.removeChildren(Blockly.WidgetDiv.DIV)};Blockly.WidgetDiv.isVisible=function(){return!!Blockly.WidgetDiv.owner_};Blockly.WidgetDiv.hideIfOwner=function(a){Blockly.WidgetDiv.owner_==a&&Blockly.WidgetDiv.hide()};
Blockly.WidgetDiv.position=function(a,b,c,d,e){b<d.y&&(b=d.y);e?a>c.width+d.x&&(a=c.width+d.x):a<d.x&&(a=d.x);Blockly.WidgetDiv.positionInternal_(a,b,c.height)};Blockly.WidgetDiv.positionInternal_=function(a,b,c){Blockly.WidgetDiv.DIV.style.left=a+"px";Blockly.WidgetDiv.DIV.style.top=b+"px";Blockly.WidgetDiv.DIV.style.height=c+"px"};
Blockly.WidgetDiv.positionWithAnchor=function(a,b,c,d){var e=Blockly.WidgetDiv.calculateY_(a,b,c);a=Blockly.WidgetDiv.calculateX_(a,b,c,d);Blockly.WidgetDiv.positionInternal_(a,e,c.height)};Blockly.WidgetDiv.calculateX_=function(a,b,c,d){if(d)return b=Math.max(b.right-c.width,a.left),Math.min(b,a.right-c.width);b=Math.min(b.left,a.right-c.width);return Math.max(b,a.left)};Blockly.WidgetDiv.calculateY_=function(a,b,c){return b.bottom+c.height>=a.bottom?b.top-c.height:b.bottom};Blockly.inject=function(a,b){goog.isString(a)&&(a=document.getElementById(a)||document.querySelector(a));if(!goog.dom.contains(document,a))throw"Error: container is not in current document.";b=new Blockly.Options(b||{});var c=goog.dom.createDom("div","injectionDiv");a.appendChild(c);Blockly.Field.startCache();a=Blockly.createDom_(c,b);var d=new Blockly.BlockDragSurfaceSvg(c);c=new Blockly.WorkspaceDragSurfaceSvg(c);b=Blockly.createMainWorkspace_(a,b,d,c);Blockly.init_(b);Blockly.mainWorkspace=b;Blockly.svgResize(b);
return b};
Blockly.createDom_=function(a,b){a.setAttribute("dir","LTR");goog.ui.Component.setDefaultRightToLeft(b.RTL);Blockly.Css.inject(b.hasCss,b.pathToMedia);a=Blockly.utils.createSvgElement("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:html":"http://www.w3.org/1999/xhtml","xmlns:xlink":"http://www.w3.org/1999/xlink",version:"1.1","class":"blocklySvg"},a);var c=Blockly.utils.createSvgElement("defs",{},a),d=String(Math.random()).substring(2),e=Blockly.utils.createSvgElement("filter",{id:"blocklyStackGlowFilter"+d,
height:"160%",width:"180%",y:"-30%",x:"-40%"},c);b.stackGlowBlur=Blockly.utils.createSvgElement("feGaussianBlur",{"in":"SourceGraphic",stdDeviation:Blockly.Colours.stackGlowSize},e);var f=Blockly.utils.createSvgElement("feComponentTransfer",{result:"outBlur"},e);Blockly.utils.createSvgElement("feFuncA",{type:"table",tableValues:"0"+goog.string.repeat(" 1",16)},f);Blockly.utils.createSvgElement("feFlood",{"flood-color":Blockly.Colours.stackGlow,"flood-opacity":Blockly.Colours.stackGlowOpacity,result:"outColor"},
e);Blockly.utils.createSvgElement("feComposite",{"in":"outColor",in2:"outBlur",operator:"in",result:"outGlow"},e);Blockly.utils.createSvgElement("feComposite",{"in":"SourceGraphic",in2:"outGlow",operator:"over"},e);var g=Blockly.utils.createSvgElement("filter",{id:"blocklyReplacementGlowFilter"+d,height:"160%",width:"180%",y:"-30%",x:"-40%"},c);Blockly.utils.createSvgElement("feGaussianBlur",{"in":"SourceGraphic",stdDeviation:Blockly.Colours.replacementGlowSize},g);f=Blockly.utils.createSvgElement("feComponentTransfer",
{result:"outBlur"},g);Blockly.utils.createSvgElement("feFuncA",{type:"table",tableValues:"0"+goog.string.repeat(" 1",16)},f);Blockly.utils.createSvgElement("feFlood",{"flood-color":Blockly.Colours.replacementGlow,"flood-opacity":Blockly.Colours.replacementGlowOpacity,result:"outColor"},g);Blockly.utils.createSvgElement("feComposite",{"in":"outColor",in2:"outBlur",operator:"in",result:"outGlow"},g);Blockly.utils.createSvgElement("feComposite",{"in":"SourceGraphic",in2:"outGlow",operator:"over"},g);
f=Blockly.utils.createSvgElement("pattern",{id:"blocklyDisabledPattern"+d,patternUnits:"userSpaceOnUse",width:10,height:10},c);Blockly.utils.createSvgElement("rect",{width:10,height:10,fill:"#aaa"},f);Blockly.utils.createSvgElement("path",{d:"M 0 0 L 10 10 M 10 0 L 0 10",stroke:"#cc0"},f);b.stackGlowFilterId=e.id;b.replacementGlowFilterId=g.id;b.disabledPatternId=f.id;b.gridPattern=Blockly.Grid.createDom(d,b.gridOptions,c);return a};
Blockly.createMainWorkspace_=function(a,b,c,d){b.parentWorkspace=null;var e=new Blockly.WorkspaceSvg(b,c,d);e.scale=b.zoomOptions.startScale;a.appendChild(e.createDom("blocklyMainBackground"));!b.hasCategories&&b.languageTree&&(c=e.addFlyout_("svg"),Blockly.utils.insertAfter_(c,a));e.translate(0,0);Blockly.mainWorkspace=e;b.readOnly||b.hasScrollbars||e.addChangeListener(function(){if(!e.isDragging()){var a=e.getMetrics(),c=a.viewLeft+a.absoluteLeft,d=a.viewTop+a.absoluteTop;if(a.contentTop<d||a.contentTop+
a.contentHeight>a.viewHeight+d||a.contentLeft<(b.RTL?a.viewLeft:c)||a.contentLeft+a.contentWidth>(b.RTL?a.viewWidth:a.viewWidth+c))for(var k=e.getTopBlocks(!1),m=0,l;l=k[m];m++){var n=l.getRelativeToSurfaceXY(),q=l.getHeightWidth(),p=d+25-q.height-n.y;0<p&&l.moveBy(0,p);p=d+a.viewHeight-25-n.y;0>p&&l.moveBy(0,p);p=25+c-n.x-(b.RTL?0:q.width);0<p&&l.moveBy(p,0);n=c+a.viewWidth-25-n.x+(b.RTL?q.width:0);0>n&&l.moveBy(n,0)}}});Blockly.svgResize(e);Blockly.WidgetDiv.createDom();Blockly.DropDownDiv.createDom();
Blockly.Tooltip.createDom();return e};
Blockly.init_=function(a){var b=a.options,c=a.getParentSvg();Blockly.bindEventWithChecks_(c.parentNode,"contextmenu",null,function(a){Blockly.utils.isTargetInput(a)||a.preventDefault()});c=Blockly.bindEventWithChecks_(window,"resize",null,function(){Blockly.hideChaff(!0);Blockly.svgResize(a)});a.setResizeHandlerWrapper(c);Blockly.inject.bindDocumentEvents_();b.languageTree&&(a.toolbox_?a.toolbox_.init(a):a.flyout_&&(a.flyout_.init(a),a.flyout_.show(b.languageTree.childNodes),a.flyout_.scrollToStart(),
b.horizontalLayout?(a.scrollY=a.flyout_.height_,b.toolboxPosition==Blockly.TOOLBOX_AT_BOTTOM&&(a.scrollY*=-1)):(a.scrollX=a.flyout_.width_,b.toolboxPosition==Blockly.TOOLBOX_AT_RIGHT&&(a.scrollX*=-1)),a.translate(a.scrollX,a.scrollY)));b.hasScrollbars&&(a.scrollbar=new Blockly.ScrollbarPair(a),a.scrollbar.resize());b.hasSounds&&Blockly.inject.loadSounds_(b.pathToMedia,a)};
Blockly.inject.bindDocumentEvents_=function(){Blockly.documentEventsBound_||(Blockly.bindEventWithChecks_(document,"keydown",null,Blockly.onKeyDown_),Blockly.bindEvent_(document,"touchend",null,Blockly.longStop_),Blockly.bindEvent_(document,"touchcancel",null,Blockly.longStop_),goog.userAgent.IPAD&&Blockly.bindEventWithChecks_(window,"orientationchange",document,function(){Blockly.svgResize(Blockly.getMainWorkspace())}));Blockly.documentEventsBound_=!0};
Blockly.inject.loadSounds_=function(a,b){var c=b.getAudioManager();c.load([a+"click.mp3",a+"click.wav",a+"click.ogg"],"click");c.load([a+"delete.mp3",a+"delete.ogg",a+"delete.wav"],"delete");var d=[];a=function(){for(;d.length;)Blockly.unbindEvent_(d.pop());c.preload()};d.push(Blockly.bindEventWithChecks_(document,"mousemove",null,a,!0));d.push(Blockly.bindEventWithChecks_(document,"touchstart",null,a,!0))};
Blockly.updateToolbox=function(a){console.warn("Deprecated call to Blockly.updateToolbox, use workspace.updateToolbox instead.");Blockly.getMainWorkspace().updateToolbox(a)};var CLOSURE_DEFINES={"goog.DEBUG":!1};Blockly.mainWorkspace=null;Blockly.selected=null;Blockly.draggingConnections_=[];Blockly.clipboardXml_=null;Blockly.clipboardSource_=null;Blockly.cache3dSupported_=null;Blockly.hueToRgb=function(a){return goog.color.hsvToHex(a,Blockly.HSV_SATURATION,255*Blockly.HSV_VALUE)};Blockly.svgSize=function(a){return{width:a.cachedWidth_,height:a.cachedHeight_}};Blockly.resizeSvgContents=function(a){a.resizeContents()};
Blockly.svgResize=function(a){for(;a.options.parentWorkspace;)a=a.options.parentWorkspace;var b=a.getParentSvg(),c=b.parentNode;if(c){var d=c.offsetWidth;c=c.offsetHeight;b.cachedWidth_!=d&&(b.setAttribute("width",d+"px"),b.cachedWidth_=d);b.cachedHeight_!=c&&(b.setAttribute("height",c+"px"),b.cachedHeight_=c);a.resize()}};
Blockly.onKeyDown_=function(a){if(!Blockly.mainWorkspace.options.readOnly&&!Blockly.utils.isTargetInput(a)){var b=!1;if(27==a.keyCode)Blockly.hideChaff(),Blockly.DropDownDiv.hide();else if(8==a.keyCode||46==a.keyCode){a.preventDefault();if(Blockly.mainWorkspace.isDragging())return;Blockly.selected&&Blockly.selected.isDeletable()&&(b=!0)}else if(a.altKey||a.ctrlKey||a.metaKey){if(Blockly.mainWorkspace.isDragging())return;Blockly.selected&&Blockly.selected.isDeletable()&&Blockly.selected.isMovable()&&
(67==a.keyCode?(Blockly.hideChaff(),Blockly.copy_(Blockly.selected)):88!=a.keyCode||Blockly.selected.workspace.isFlyout||(Blockly.copy_(Blockly.selected),b=!0));86==a.keyCode?Blockly.clipboardXml_&&(Blockly.Events.setGroup(!0),a=Blockly.clipboardSource_,a.isFlyout&&(a=a.targetWorkspace),a.paste(Blockly.clipboardXml_),Blockly.Events.setGroup(!1)):90==a.keyCode&&(Blockly.hideChaff(),Blockly.mainWorkspace.undo(a.shiftKey))}b&&!Blockly.selected.workspace.isFlyout&&(Blockly.Events.setGroup(!0),Blockly.hideChaff(),
Blockly.selected.dispose(!0,!0),Blockly.Events.setGroup(!1))}};Blockly.copy_=function(a){if(a.isComment)var b=a.toXmlWithXY();else{b=Blockly.Xml.blockToDom(a);var c=a.getRelativeToSurfaceXY();b.setAttribute("x",a.RTL?-c.x:c.x);b.setAttribute("y",c.y)}Blockly.clipboardXml_=b;Blockly.clipboardSource_=a.workspace};
Blockly.duplicate_=function(a){var b=Blockly.clipboardXml_,c=Blockly.clipboardSource_;Blockly.copy_(a);a.workspace.paste(Blockly.clipboardXml_);Blockly.clipboardXml_=b;Blockly.clipboardSource_=c};Blockly.onContextMenu_=function(a){Blockly.utils.isTargetInput(a)||a.preventDefault()};
Blockly.hideChaff=function(a){Blockly.Tooltip.hide();Blockly.WidgetDiv.hide(!0);Blockly.DropDownDiv.hideWithoutAnimation();a||(a=Blockly.getMainWorkspace(),a.toolbox_&&a.toolbox_.flyout_&&a.toolbox_.flyout_.autoClose&&a.toolbox_.clearSelection())};Blockly.getMainWorkspace=function(){return Blockly.mainWorkspace};Blockly.alert=function(a,b){window.alert(a);b&&b()};Blockly.confirm=function(a,b){b(window.confirm(a))};Blockly.prompt=function(a,b,c,d,e){c(window.prompt(a,b))};
Blockly.statusButtonCallback=function(a){window.alert("status button was pressed for "+a)};Blockly.updateStatusButton=function(a,b,c){a=a.getFlyout().buttons_;for(var d=0;d<a.length;d++)a[d]instanceof Blockly.FlyoutExtensionCategoryHeader&&a[d].extensionId==b&&a[d].setStatus(c)};Blockly.jsonInitFactory_=function(a){return function(){this.jsonInit(a)}};
Blockly.defineBlocksWithJsonArray=function(a){for(var b=0;b<a.length;b++){var c=a[b];if(c){var d=c.type;null==d||""===d?console.warn("Block definition #"+b+" in JSON array is missing a type attribute. Skipping."):(Blockly.Blocks[d]&&console.warn("Block definition #"+b+' in JSON array overwrites prior definition of "'+d+'".'),Blockly.Blocks[d]={init:Blockly.jsonInitFactory_(c)})}else console.warn("Block definition #"+b+" in JSON array is "+c+". Skipping.")}};
Blockly.bindEventWithChecks_=function(a,b,c,d,e,f){var g=!1,h=function(a){var b=!e;a=Blockly.Touch.splitEventByTouches(a);for(var f=0,h;h=a[f];f++)if(!b||Blockly.Touch.shouldHandleEvent(h))Blockly.Touch.setClientFromTouch(h),c?d.call(c,h):d(h),g=!0};a.addEventListener(b,h,!1);var k=[[a,b,h]];if(b in Blockly.Touch.TOUCH_MAP)for(var m=function(a){h(a);var b=!f;g&&b&&a.preventDefault()},l=0,n;n=Blockly.Touch.TOUCH_MAP[b][l];l++)a.addEventListener(n,m,!1),k.push([a,n,m]);return k};
Blockly.bindEvent_=function(a,b,c,d){var e=function(a){c?d.call(c,a):d(a)};a.addEventListener(b,e,!1);var f=[[a,b,e]];if(b in Blockly.Touch.TOUCH_MAP)for(var g=function(a){if(1==a.changedTouches.length){var b=a.changedTouches[0];a.clientX=b.clientX;a.clientY=b.clientY}e(a);a.preventDefault()},h=0,k;k=Blockly.Touch.TOUCH_MAP[b][h];h++)a.addEventListener(k,g,!1),f.push([a,k,g]);return f};Blockly.unbindEvent_=function(a){for(;a.length;){var b=a.pop(),c=b[2];b[0].removeEventListener(b[1],c,!1)}return c};
Blockly.isNumber=function(a){return!!a.match(/^\s*-?\d+(\.\d+)?\s*$/)};goog.global.console||(goog.global.console={log:function(){},warn:function(){}});goog.global.Blockly||(goog.global.Blockly={});goog.global.Blockly.getMainWorkspace=Blockly.getMainWorkspace;


/*** EXPORTS FROM exports-loader ***/
exports["Blockly"] = (Blockly);
exports["goog"] = (goog);
}.call(window));

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(65);


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(42).Blockly;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(63);


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(66);


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  isPlainObject = __webpack_require__(4).isPlainObject;

  XMLNode = __webpack_require__(2);

  XMLStringifier = __webpack_require__(44);

  XMLStringWriter = __webpack_require__(31);

  module.exports = XMLDocument = (function(superClass) {
    extend(XMLDocument, superClass);

    function XMLDocument(options) {
      XMLDocument.__super__.constructor.call(this, null);
      options || (options = {});
      if (!options.writer) {
        options.writer = new XMLStringWriter();
      }
      this.options = options;
      this.stringify = new XMLStringifier(options);
      this.isDocument = true;
    }

    XMLDocument.prototype.end = function(writer) {
      var writerOptions;
      if (!writer) {
        writer = this.options.writer;
      } else if (isPlainObject(writer)) {
        writerOptions = writer;
        writer = this.options.writer.set(writerOptions);
      }
      return writer.document(this);
    };

    XMLDocument.prototype.toString = function(options) {
      return this.options.writer.set(options).document(this);
    };

    return XMLDocument;

  })(XMLNode);

}).call(this);


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,
    hasProp = {}.hasOwnProperty;

  ref = __webpack_require__(4), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;

  XMLElement = __webpack_require__(19);

  XMLCData = __webpack_require__(11);

  XMLComment = __webpack_require__(12);

  XMLRaw = __webpack_require__(21);

  XMLText = __webpack_require__(22);

  XMLProcessingInstruction = __webpack_require__(20);

  XMLDeclaration = __webpack_require__(17);

  XMLDocType = __webpack_require__(18);

  XMLDTDAttList = __webpack_require__(13);

  XMLDTDEntity = __webpack_require__(15);

  XMLDTDElement = __webpack_require__(14);

  XMLDTDNotation = __webpack_require__(16);

  XMLAttribute = __webpack_require__(43);

  XMLStringifier = __webpack_require__(44);

  XMLStringWriter = __webpack_require__(31);

  module.exports = XMLDocumentCB = (function() {
    function XMLDocumentCB(options, onData, onEnd) {
      var writerOptions;
      options || (options = {});
      if (!options.writer) {
        options.writer = new XMLStringWriter(options);
      } else if (isPlainObject(options.writer)) {
        writerOptions = options.writer;
        options.writer = new XMLStringWriter(writerOptions);
      }
      this.options = options;
      this.writer = options.writer;
      this.stringify = new XMLStringifier(options);
      this.onDataCallback = onData || function() {};
      this.onEndCallback = onEnd || function() {};
      this.currentNode = null;
      this.currentLevel = -1;
      this.openTags = {};
      this.documentStarted = false;
      this.documentCompleted = false;
      this.root = null;
    }

    XMLDocumentCB.prototype.node = function(name, attributes, text) {
      var ref1;
      if (name == null) {
        throw new Error("Missing node name");
      }
      if (this.root && this.currentLevel === -1) {
        throw new Error("Document can only have one root node");
      }
      this.openCurrent();
      name = name.valueOf();
      if (attributes == null) {
        attributes = {};
      }
      attributes = attributes.valueOf();
      if (!isObject(attributes)) {
        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];
      }
      this.currentNode = new XMLElement(this, name, attributes);
      this.currentNode.children = false;
      this.currentLevel++;
      this.openTags[this.currentLevel] = this.currentNode;
      if (text != null) {
        this.text(text);
      }
      return this;
    };

    XMLDocumentCB.prototype.element = function(name, attributes, text) {
      if (this.currentNode && this.currentNode instanceof XMLDocType) {
        return this.dtdElement.apply(this, arguments);
      } else {
        return this.node(name, attributes, text);
      }
    };

    XMLDocumentCB.prototype.attribute = function(name, value) {
      var attName, attValue;
      if (!this.currentNode || this.currentNode.children) {
        throw new Error("att() can only be used immediately after an ele() call in callback mode");
      }
      if (name != null) {
        name = name.valueOf();
      }
      if (isObject(name)) {
        for (attName in name) {
          if (!hasProp.call(name, attName)) continue;
          attValue = name[attName];
          this.attribute(attName, attValue);
        }
      } else {
        if (isFunction(value)) {
          value = value.apply();
        }
        if (!this.options.skipNullAttributes || (value != null)) {
          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);
        }
      }
      return this;
    };

    XMLDocumentCB.prototype.text = function(value) {
      var node;
      this.openCurrent();
      node = new XMLText(this, value);
      this.onData(this.writer.text(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.cdata = function(value) {
      var node;
      this.openCurrent();
      node = new XMLCData(this, value);
      this.onData(this.writer.cdata(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.comment = function(value) {
      var node;
      this.openCurrent();
      node = new XMLComment(this, value);
      this.onData(this.writer.comment(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.raw = function(value) {
      var node;
      this.openCurrent();
      node = new XMLRaw(this, value);
      this.onData(this.writer.raw(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.instruction = function(target, value) {
      var i, insTarget, insValue, len, node;
      this.openCurrent();
      if (target != null) {
        target = target.valueOf();
      }
      if (value != null) {
        value = value.valueOf();
      }
      if (Array.isArray(target)) {
        for (i = 0, len = target.length; i < len; i++) {
          insTarget = target[i];
          this.instruction(insTarget);
        }
      } else if (isObject(target)) {
        for (insTarget in target) {
          if (!hasProp.call(target, insTarget)) continue;
          insValue = target[insTarget];
          this.instruction(insTarget, insValue);
        }
      } else {
        if (isFunction(value)) {
          value = value.apply();
        }
        node = new XMLProcessingInstruction(this, target, value);
        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));
      }
      return this;
    };

    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {
      var node;
      this.openCurrent();
      if (this.documentStarted) {
        throw new Error("declaration() must be the first node");
      }
      node = new XMLDeclaration(this, version, encoding, standalone);
      this.onData(this.writer.declaration(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {
      this.openCurrent();
      if (root == null) {
        throw new Error("Missing root node name");
      }
      if (this.root) {
        throw new Error("dtd() must come before the root node");
      }
      this.currentNode = new XMLDocType(this, pubID, sysID);
      this.currentNode.rootNodeName = root;
      this.currentNode.children = false;
      this.currentLevel++;
      this.openTags[this.currentLevel] = this.currentNode;
      return this;
    };

    XMLDocumentCB.prototype.dtdElement = function(name, value) {
      var node;
      this.openCurrent();
      node = new XMLDTDElement(this, name, value);
      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {
      var node;
      this.openCurrent();
      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);
      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.entity = function(name, value) {
      var node;
      this.openCurrent();
      node = new XMLDTDEntity(this, false, name, value);
      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.pEntity = function(name, value) {
      var node;
      this.openCurrent();
      node = new XMLDTDEntity(this, true, name, value);
      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.notation = function(name, value) {
      var node;
      this.openCurrent();
      node = new XMLDTDNotation(this, name, value);
      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));
      return this;
    };

    XMLDocumentCB.prototype.up = function() {
      if (this.currentLevel < 0) {
        throw new Error("The document node has no parent");
      }
      if (this.currentNode) {
        if (this.currentNode.children) {
          this.closeNode(this.currentNode);
        } else {
          this.openNode(this.currentNode);
        }
        this.currentNode = null;
      } else {
        this.closeNode(this.openTags[this.currentLevel]);
      }
      delete this.openTags[this.currentLevel];
      this.currentLevel--;
      return this;
    };

    XMLDocumentCB.prototype.end = function() {
      while (this.currentLevel >= 0) {
        this.up();
      }
      return this.onEnd();
    };

    XMLDocumentCB.prototype.openCurrent = function() {
      if (this.currentNode) {
        this.currentNode.children = true;
        return this.openNode(this.currentNode);
      }
    };

    XMLDocumentCB.prototype.openNode = function(node) {
      if (!node.isOpen) {
        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {
          this.root = node;
        }
        this.onData(this.writer.openNode(node, this.currentLevel));
        return node.isOpen = true;
      }
    };

    XMLDocumentCB.prototype.closeNode = function(node) {
      if (!node.isClosed) {
        this.onData(this.writer.closeNode(node, this.currentLevel));
        return node.isClosed = true;
      }
    };

    XMLDocumentCB.prototype.onData = function(chunk) {
      this.documentStarted = true;
      return this.onDataCallback(chunk);
    };

    XMLDocumentCB.prototype.onEnd = function() {
      this.documentCompleted = true;
      return this.onEndCallback();
    };

    XMLDocumentCB.prototype.ele = function() {
      return this.element.apply(this, arguments);
    };

    XMLDocumentCB.prototype.nod = function(name, attributes, text) {
      return this.node(name, attributes, text);
    };

    XMLDocumentCB.prototype.txt = function(value) {
      return this.text(value);
    };

    XMLDocumentCB.prototype.dat = function(value) {
      return this.cdata(value);
    };

    XMLDocumentCB.prototype.com = function(value) {
      return this.comment(value);
    };

    XMLDocumentCB.prototype.ins = function(target, value) {
      return this.instruction(target, value);
    };

    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {
      return this.declaration(version, encoding, standalone);
    };

    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {
      return this.doctype(root, pubID, sysID);
    };

    XMLDocumentCB.prototype.e = function(name, attributes, text) {
      return this.element(name, attributes, text);
    };

    XMLDocumentCB.prototype.n = function(name, attributes, text) {
      return this.node(name, attributes, text);
    };

    XMLDocumentCB.prototype.t = function(value) {
      return this.text(value);
    };

    XMLDocumentCB.prototype.d = function(value) {
      return this.cdata(value);
    };

    XMLDocumentCB.prototype.c = function(value) {
      return this.comment(value);
    };

    XMLDocumentCB.prototype.r = function(value) {
      return this.raw(value);
    };

    XMLDocumentCB.prototype.i = function(target, value) {
      return this.instruction(target, value);
    };

    XMLDocumentCB.prototype.att = function() {
      if (this.currentNode && this.currentNode instanceof XMLDocType) {
        return this.attList.apply(this, arguments);
      } else {
        return this.attribute.apply(this, arguments);
      }
    };

    XMLDocumentCB.prototype.a = function() {
      if (this.currentNode && this.currentNode instanceof XMLDocType) {
        return this.attList.apply(this, arguments);
      } else {
        return this.attribute.apply(this, arguments);
      }
    };

    XMLDocumentCB.prototype.ent = function(name, value) {
      return this.entity(name, value);
    };

    XMLDocumentCB.prototype.pent = function(name, value) {
      return this.pEntity(name, value);
    };

    XMLDocumentCB.prototype.not = function(name, value) {
      return this.notation(name, value);
    };

    return XMLDocumentCB;

  })();

}).call(this);


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLDeclaration = __webpack_require__(17);

  XMLDocType = __webpack_require__(18);

  XMLCData = __webpack_require__(11);

  XMLComment = __webpack_require__(12);

  XMLElement = __webpack_require__(19);

  XMLRaw = __webpack_require__(21);

  XMLText = __webpack_require__(22);

  XMLProcessingInstruction = __webpack_require__(20);

  XMLDTDAttList = __webpack_require__(13);

  XMLDTDElement = __webpack_require__(14);

  XMLDTDEntity = __webpack_require__(15);

  XMLDTDNotation = __webpack_require__(16);

  XMLWriterBase = __webpack_require__(45);

  module.exports = XMLStreamWriter = (function(superClass) {
    extend(XMLStreamWriter, superClass);

    function XMLStreamWriter(stream, options) {
      XMLStreamWriter.__super__.constructor.call(this, options);
      this.stream = stream;
    }

    XMLStreamWriter.prototype.document = function(doc) {
      var child, i, j, len, len1, ref, ref1, results;
      ref = doc.children;
      for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        child.isLastRootNode = false;
      }
      doc.children[doc.children.length - 1].isLastRootNode = true;
      ref1 = doc.children;
      results = [];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        child = ref1[j];
        switch (false) {
          case !(child instanceof XMLDeclaration):
            results.push(this.declaration(child));
            break;
          case !(child instanceof XMLDocType):
            results.push(this.docType(child));
            break;
          case !(child instanceof XMLComment):
            results.push(this.comment(child));
            break;
          case !(child instanceof XMLProcessingInstruction):
            results.push(this.processingInstruction(child));
            break;
          default:
            results.push(this.element(child));
        }
      }
      return results;
    };

    XMLStreamWriter.prototype.attribute = function(att) {
      return this.stream.write(' ' + att.name + '="' + att.value + '"');
    };

    XMLStreamWriter.prototype.cdata = function(node, level) {
      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));
    };

    XMLStreamWriter.prototype.comment = function(node, level) {
      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));
    };

    XMLStreamWriter.prototype.declaration = function(node, level) {
      this.stream.write(this.space(level));
      this.stream.write('<?xml version="' + node.version + '"');
      if (node.encoding != null) {
        this.stream.write(' encoding="' + node.encoding + '"');
      }
      if (node.standalone != null) {
        this.stream.write(' standalone="' + node.standalone + '"');
      }
      this.stream.write(this.spacebeforeslash + '?>');
      return this.stream.write(this.endline(node));
    };

    XMLStreamWriter.prototype.docType = function(node, level) {
      var child, i, len, ref;
      level || (level = 0);
      this.stream.write(this.space(level));
      this.stream.write('<!DOCTYPE ' + node.root().name);
      if (node.pubID && node.sysID) {
        this.stream.write(' PUBLIC "' + node.pubID + '" "' + node.sysID + '"');
      } else if (node.sysID) {
        this.stream.write(' SYSTEM "' + node.sysID + '"');
      }
      if (node.children.length > 0) {
        this.stream.write(' [');
        this.stream.write(this.endline(node));
        ref = node.children;
        for (i = 0, len = ref.length; i < len; i++) {
          child = ref[i];
          switch (false) {
            case !(child instanceof XMLDTDAttList):
              this.dtdAttList(child, level + 1);
              break;
            case !(child instanceof XMLDTDElement):
              this.dtdElement(child, level + 1);
              break;
            case !(child instanceof XMLDTDEntity):
              this.dtdEntity(child, level + 1);
              break;
            case !(child instanceof XMLDTDNotation):
              this.dtdNotation(child, level + 1);
              break;
            case !(child instanceof XMLCData):
              this.cdata(child, level + 1);
              break;
            case !(child instanceof XMLComment):
              this.comment(child, level + 1);
              break;
            case !(child instanceof XMLProcessingInstruction):
              this.processingInstruction(child, level + 1);
              break;
            default:
              throw new Error("Unknown DTD node type: " + child.constructor.name);
          }
        }
        this.stream.write(']');
      }
      this.stream.write(this.spacebeforeslash + '>');
      return this.stream.write(this.endline(node));
    };

    XMLStreamWriter.prototype.element = function(node, level) {
      var att, child, i, len, name, ref, ref1, space;
      level || (level = 0);
      space = this.space(level);
      this.stream.write(space + '<' + node.name);
      ref = node.attributes;
      for (name in ref) {
        if (!hasProp.call(ref, name)) continue;
        att = ref[name];
        this.attribute(att);
      }
      if (node.children.length === 0 || node.children.every(function(e) {
        return e.value === '';
      })) {
        if (this.allowEmpty) {
          this.stream.write('></' + node.name + '>');
        } else {
          this.stream.write(this.spacebeforeslash + '/>');
        }
      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {
        this.stream.write('>');
        this.stream.write(node.children[0].value);
        this.stream.write('</' + node.name + '>');
      } else {
        this.stream.write('>' + this.newline);
        ref1 = node.children;
        for (i = 0, len = ref1.length; i < len; i++) {
          child = ref1[i];
          switch (false) {
            case !(child instanceof XMLCData):
              this.cdata(child, level + 1);
              break;
            case !(child instanceof XMLComment):
              this.comment(child, level + 1);
              break;
            case !(child instanceof XMLElement):
              this.element(child, level + 1);
              break;
            case !(child instanceof XMLRaw):
              this.raw(child, level + 1);
              break;
            case !(child instanceof XMLText):
              this.text(child, level + 1);
              break;
            case !(child instanceof XMLProcessingInstruction):
              this.processingInstruction(child, level + 1);
              break;
            default:
              throw new Error("Unknown XML node type: " + child.constructor.name);
          }
        }
        this.stream.write(space + '</' + node.name + '>');
      }
      return this.stream.write(this.endline(node));
    };

    XMLStreamWriter.prototype.processingInstruction = function(node, level) {
      this.stream.write(this.space(level) + '<?' + node.target);
      if (node.value) {
        this.stream.write(' ' + node.value);
      }
      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));
    };

    XMLStreamWriter.prototype.raw = function(node, level) {
      return this.stream.write(this.space(level) + node.value + this.endline(node));
    };

    XMLStreamWriter.prototype.text = function(node, level) {
      return this.stream.write(this.space(level) + node.value + this.endline(node));
    };

    XMLStreamWriter.prototype.dtdAttList = function(node, level) {
      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);
      if (node.defaultValueType !== '#DEFAULT') {
        this.stream.write(' ' + node.defaultValueType);
      }
      if (node.defaultValue) {
        this.stream.write(' "' + node.defaultValue + '"');
      }
      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));
    };

    XMLStreamWriter.prototype.dtdElement = function(node, level) {
      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);
      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));
    };

    XMLStreamWriter.prototype.dtdEntity = function(node, level) {
      this.stream.write(this.space(level) + '<!ENTITY');
      if (node.pe) {
        this.stream.write(' %');
      }
      this.stream.write(' ' + node.name);
      if (node.value) {
        this.stream.write(' "' + node.value + '"');
      } else {
        if (node.pubID && node.sysID) {
          this.stream.write(' PUBLIC "' + node.pubID + '" "' + node.sysID + '"');
        } else if (node.sysID) {
          this.stream.write(' SYSTEM "' + node.sysID + '"');
        }
        if (node.nData) {
          this.stream.write(' NDATA ' + node.nData);
        }
      }
      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));
    };

    XMLStreamWriter.prototype.dtdNotation = function(node, level) {
      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);
      if (node.pubID && node.sysID) {
        this.stream.write(' PUBLIC "' + node.pubID + '" "' + node.sysID + '"');
      } else if (node.pubID) {
        this.stream.write(' PUBLIC "' + node.pubID + '"');
      } else if (node.sysID) {
        this.stream.write(' SYSTEM "' + node.sysID + '"');
      }
      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));
    };

    XMLStreamWriter.prototype.endline = function(node) {
      if (!node.isLastRootNode) {
        return this.newline;
      } else {
        return '';
      }
    };

    return XMLStreamWriter;

  })(XMLWriterBase);

}).call(this);


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.7
(function() {
  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;

  ref = __webpack_require__(4), assign = ref.assign, isFunction = ref.isFunction;

  XMLDocument = __webpack_require__(72);

  XMLDocumentCB = __webpack_require__(73);

  XMLStringWriter = __webpack_require__(31);

  XMLStreamWriter = __webpack_require__(74);

  module.exports.create = function(name, xmldec, doctype, options) {
    var doc, root;
    if (name == null) {
      throw new Error("Root element needs a name");
    }
    options = assign({}, xmldec, doctype, options);
    doc = new XMLDocument(options);
    root = doc.element(name);
    if (!options.headless) {
      doc.declaration(options);
      if ((options.pubID != null) || (options.sysID != null)) {
        doc.doctype(options);
      }
    }
    return root;
  };

  module.exports.begin = function(options, onData, onEnd) {
    var ref1;
    if (isFunction(options)) {
      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];
      options = {};
    }
    if (onData) {
      return new XMLDocumentCB(options, onData, onEnd);
    } else {
      return new XMLDocument(options);
    }
  };

  module.exports.stringWriter = function(options) {
    return new XMLStringWriter(options);
  };

  module.exports.streamWriter = function(stream, options) {
    return new XMLStreamWriter(stream, options);
  };

}).call(this);


/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Storage of the state of the workspace
 *
 * things that need to be possible are:
 *      - get the last block and the type of the block
 *
 * @file   This files defines the State class.
 * @author Ellen Vanhove.
 */

const MODUS = {
    NONE:0,
    STACK:1,
    REPORTER:2,
    BOOLEAN:3,
};

class State {

    constructor(informationVisitor) {
        this.infoVisitor = informationVisitor;
        this.reset();
    }

    /**
     * reset the state:
     *  removes all stored information
     */
    reset() {
        //list of all blocks
        this.blocks = [];
        this.blocks.push({ID:-1}); //this should not happen normally but this way nothing breaks during dev
        this.modus = MODUS.NONE;
        this.interrupted = false;
        //when opening a new context the previous is stored here
        this.storage = [];
    }



    pushStorage(){
       this.storage.push(
            {
                blocks : this.blocks,
                modus: this.modus
            }
        );
    }

    popStorage(){
        let stored = this.storage.pop();
        this.setBack(stored);
    }

    setBack(stored) {
        this.blocks = stored.blocks;
        this.modus = stored.modus;
    }

    isBuildingStackBlock(){
        return this.modus === MODUS.STACK;
    }

    isBuildingReporterBlock(){
        return this.modus === MODUS.REPORTER;
    }

    isBuildingBooleanBlock(){
        return this.modus === MODUS.BOOLEAN;
    }

    /**
     * store informaton about a block
     * @param id the id of the block
     * @param shape the shape of the block
     */
    addBlock(id){
        this.blocks.push({ID:id})
    }


    /**
     * return the id of the last added block
     * @returns {string}
     */
    getFirstBlockID(){
        return this.blocks[0].ID;
    }


    /**
     * return the id of the last added block
     * @returns {string}
     */
    getLastBlockID(){
        return this.blocks[this.blocks.length-1].ID;
    }

    startStack(){
        this.pushStorage();
        this.modus = MODUS.STACK;
        this.interrupted=false;
    }

    endStack(){
        this.popStorage();
    }

    interruptStack(){
        let stored =  this.storage[0];
        this.setBack(stored);
        this.storage = []
        this.interrupted = true;
    }

    isInterruptedStack(){
        return this.interrupted;
    }

    openBooleanBlock(){
        this.pushStorage();
        this.modus = MODUS.BOOLEAN;
    }

    closeBooleanBlock(){
        this.popStorage();
    }

    openReporterBlock(){
        this.pushStorage();
        this.modus = MODUS.REPORTER;
    }

    closeReporterBlock(){
        this.popStorage();
    }



}
/* harmony export (immutable) */ __webpack_exports__["a"] = State;


/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chevrotain__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chevrotain___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_chevrotain__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__LNParser__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__InfoLNVisitor__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_xmlbuilder__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_xmlbuilder___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_xmlbuilder__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__IDManager__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__State__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__blocks__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__LNLexer__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__modifierAnalyser__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__warnings__ = __webpack_require__(79);
/**
 * Template for the visitor.
 *
 * This file consist of a template for the visitor .
 *
 * @file   This files defines the LNVisitor class.
 * @author Ellen Vanhove.
 */

//parser

//import {NumberLiteral, ColorLiteral} from "./LNLexer";
const lntokens = __webpack_require__(23);
let NumberLiteral = lntokens.NumberLiteral;
let ColorLiteral = lntokens.ColorLiteral;
let StringLiteral = lntokens.StringLiteral;
let ChoiceLiteral = lntokens.ChoiceLiteral;



//xml








//const BaseCstVisitor = lnparser.getBaseCstVisitorConstructor();

/*
    No dispatching necessary if nothing special happens, specifically block and composite
    only for no return values
    docs: This base visitor includes a default implementation for all visit methods which simply invokes this.visit on all none terminals in the CSTNode's children.

*/
const BaseCstVisitorWithDefaults = __WEBPACK_IMPORTED_MODULE_1__LNParser__["b" /* lnparser */].getBaseCstVisitorConstructorWithDefaults();

//variable types
const ARG = 'arg';

//shapes
const STACKBLOCK = "statement";
const BOOLEANBLOCK = "blooleanblock";
const REPORTERBLOCK = "reporterblock";
const HATBLOCK = "hatblock";
//regexen
const DEFINE_REGEX = /^[ \t]*define/i;
const VARIABLE_REGEX = /^([ \t]*%[0-9][ \t]*)*$/i;


class XMLLNVisitor extends BaseCstVisitorWithDefaults {

    constructor() {
        super();
        // This helper will detect any missing or redundant methods on this visitor
        this.validateVisitor();

        //-- xml --
        //the visitor stores an xml, this is reinit every visit call.
        //the builder keeps where we are adding the next block
        this.xml = null;
        //xml root
        this.xmlRoot = null;
        //placeholder in the beginning for variables
        this.variablesTag = null;

        //id generation
        this.idManager = new __WEBPACK_IMPORTED_MODULE_4__IDManager__["c" /* BasicIDManager */]();

        //information visitor
        this.infoVisitor = new __WEBPACK_IMPORTED_MODULE_2__InfoLNVisitor__["b" /* InfoLNVisitor */]();

        //state
        this.state = new __WEBPACK_IMPORTED_MODULE_5__State__["a" /* State */](__WEBPACK_IMPORTED_MODULE_2__InfoLNVisitor__["b" /* InfoLNVisitor */]);

        //modifiers
        this.modifierAnalyser = new __WEBPACK_IMPORTED_MODULE_8__modifierAnalyser__["a" /* ModifierAnalyser */]();

        this.warningsKeeper = new __WEBPACK_IMPORTED_MODULE_9__warnings__["a" /* WarningsKeeper */]();
    }

    getXML(cst) {
        //reset
        this.idManager.reset();
        //create new xml
        this.xml = __WEBPACK_IMPORTED_MODULE_3_xmlbuilder___default.a.begin().ele('xml').att('xmlns', 'http://www.w3.org/1999/xhtml');
        this.variablesTag = this.xml.ele('variables');
        this.xmlRoot = this.xml;
        this.visit(cst);
        this.xml = this.variablesTag;
        for (let key in this.idManager.varMap) {
            if (this.idManager.varMap.hasOwnProperty(key)) {
                if (this.idManager.varMap[key].variableType !== ARG) {
                    this.xml.ele('variable', {
                        'type': this.idManager.varMap[key].variableType,
                        'id': this.idManager.varMap[key].id,
                    }, key);
                }
            }
        }
        return {
            xml: this.xml.end({
                pretty: true
            }),
            warnings: this.warningsKeeper.getList(),
        }
    }


    /*code(ctx) {
       //todo: correct order of comments and stacks
    }*/

    /*delimiters(ctx) {
        //does nothing
    }

    stackDelimiter(ctx) {
        //does nothing
    }*/

    /*comments(ctx) {
        //no xml creation here
    }*/


    stack(ctx) {
        this.state.startStack();
        let prevxml = this.xml;
        for (let i = 0; ctx.block && i < ctx.block.length; i++) {
            this.visit(ctx.block[i]); //opens a block
            //the flow was interrupted by a hat block or stand alone variable
            //so a new stack has to start
            if (this.state.isInterruptedStack()) {
                if(i<ctx.block.length-1) { //no warning if nothing follows
                    this.warningsKeeper.add(ctx.block[i], "started a new stack");
                }
                this.state.startStack();
            } else { //normal flow
                this.xml = this.xml.ele('next');
            }
        }
        this.xml = prevxml;
        this.state.endStack();
    }

    /*block(ctx) {
        //nothing to do here
    }*/

    atomic(ctx) {
        let description = this.infoVisitor.getString(ctx, "atomic");

        //todo obtain modifiers
        let modifiers = this.modifierAnalyser.getMods(this.infoVisitor.getModifiers(ctx.annotations));
        if (this.isBuildInBlock(description, ctx, modifiers)) {
            //generate block
            __WEBPACK_IMPORTED_MODULE_6__blocks__["a" /* default */][description](ctx, this, modifiers)
        } else if (description.match(DEFINE_REGEX)) {
            this.createDefineBlock(ctx, description);
        } else { //the block is not defined in scratch, so considered it as user-defined
            if (this.isCustomReporterblock(ctx, modifiers)) {
                this.createCustomReporterBlock(ctx, description);

            } else if (this.isListBlock(ctx, modifiers)) {
                this.createListBlock(ctx, description);

            } else if (this.isVariableBlock(ctx, modifiers)) {
                this.createVariableBlock(ctx, description);

            } else if (this.isBooleanBlock(ctx, modifiers)) {
                if(!modifiers.custom){
                    this.warningsKeeper.add(ctx, "unkown boolean block, add ::custom if you want a custom block")
                }
                this.createCustomBooleanBlock(ctx, description);

            } else {
                //todo
                //if the label is empty this is a stand alone block so just visit the child
                if (description.match(VARIABLE_REGEX)) {
                    this.interruptStack();
                    for (let a = 0; a < ctx.argument.length; a++) {
                        this.visit(ctx.argument[a])
                    }
                } else {
                    //if this is a stack block
                    this.createProcedureBlock(ctx, description);
                }
            }
        }
        //will create the comment
        this.visit(ctx.annotations)
    }

    /**
     * intterupt a stack, can be done because of a hatblock, standalone variable, after a cap block
     * this wil set the state correctly and set the xml to the correct position to start building new blocks
     */
    interruptStack() {
        //notify the state
        this.state.interruptStack();
        //set xml to the root
        this.xml = this.xmlRoot;
    }

    /**
     * start the stack again after an interrupt
     */
    startStack() {
        this.state.startStack();
    }


    isBuildInBlock(description, ctx, modifiers) {
        return !modifiers.user && !modifiers.custom && description in __WEBPACK_IMPORTED_MODULE_6__blocks__["a" /* default */];
    }

    isVariableBlock(ctx, modifiers) {
        return this.state.isBuildingReporterBlock();
    }

    isListBlock(ctx, modifiers) {
        return this.isVariableBlock(ctx, modifiers) && modifiers.list;
    }

    isCustomReporterblock(ctx, modifiers) {
        return this.isVariableBlock(ctx, modifiers) && modifiers.custom;
    }

    isBooleanBlock(ctx, modifiers) {
        return this.state.isBuildingBooleanBlock();
    }

    /**
     * add a procedure block to the xml
     * @param ctx
     * @param description can be obtain from the ctx but avoid multiple calls to getstring
     */
    createProcedureBlock(ctx, description) {
        let blockid = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "atomic"));
        this.state.addBlock(blockid, STACKBLOCK);
        this.xml = this.xml.ele('block', {
            'id': blockid,
        });
        this.xml.att('type', 'procedures_call');
        this.addMutation(ctx, description, blockid, true);
    }

    /**
     * adds a procedure definition to the xml
     * @param ctx
     * @param description
     */
    createDefineBlock(ctx, description) {
        //stop the previous stack
        this.interruptStack();
        description = description.replace(DEFINE_REGEX, '');
        let blockid = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "atomic"));
        this.state.addBlock(blockid, HATBLOCK);
        this.xml = this.xml.ele('block', {
            'type': 'procedures_definition',
            'id': blockid,
        }).ele('statement', {
            'name': 'custom_block'
        }).ele('shadow', {
            'type': 'procedures_prototype'
        });
        this.addMutation(ctx, description, blockid, false);
        this.xml = this.xml.up().up();
        //start a new stack
        this.startStack();
    }


    /**
     * adds a mutation to the xml
     * @param ctx
     * @param description e.g. "some label %1 and %2 and %3"
     * @param blockid the id of the parent block
     * @param visitArgs boolean indicating whethter the arguments must visited or not
     */
    addMutation(ctx, description, blockid, visitArgs) {
        let args = [];
        let argumentnames = [];
        let argumentdefaults = [];
        let argumentids = [];
        let head = this.xml.ele('mutation');

        //this is a very weird construction but it works...
        //assign this to a variable so that it can be accessed by the function
        let thisVisitor = this;
        //replace %1 by %s or %b corresponding to the block
        let proccode = description.replace(/%[1-9]/g, function (m) {
            let index = m[1] - 1;
            return thisVisitor.infoVisitor.getPlaceholder(ctx.argument[index]);
        });

        for (let i = 0; ctx.argument && i < ctx.argument.length; i++) {
            //make names
            let name = this.infoVisitor.getString(ctx.argument[i]);
            if (!name) {
                name = 'argumentname_' + blockid + '_' + i
            }
            argumentnames.push(name);
            argumentdefaults.push('');
            if (visitArgs) {
                //make xml
                this.xml = this.xml.ele('value', {
                    'name': argumentnames[argumentnames.length - 1]
                });
                let arg = this.visit(ctx.argument[i]);
                this.xml = this.xml.up();
                args.push(arg);
            }
            argumentids.push(this.idManager.acquireVariableID(argumentnames[argumentnames.length - 1], ARG));
        }
        if (argumentnames.length > 0) {
            head.att('proccode', proccode);
            if (!visitArgs) {
                head.att('argumentnames', '["' + argumentnames.join('","') + '"]');
            }
            head.att('warp', 'null');
            head.att('argumentids', '["' + argumentnames.join('","') + '"]');
            //head.att('argumentdefaults', "['" + argumentdefaults.join("','") + "']");
        } else {
            head.att('proccode', proccode);
        }
    }


    /*composite(ctx) {
        //nothing to do here
    }
    */

    ifelse(ctx) {
        let blockid = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "ifelse"));
        if (!ctx.Else) {
            this.xml = this.xml.ele('block', {
                'type': 'control_if',
                'id': blockid,
            });
        } else {
            this.xml = this.xml.ele('block', {
                'type': 'control_if_else',
                'id': blockid,
            });
        }
        this.state.addBlock(blockid);
        this.xml = this.xml.ele('value', {
            'name': 'CONDITION'
        });
        this.visit(ctx.condition);
        //Stack
        //go up from condition
        this.xml = this.xml.up().ele('statement ', {
            'name': 'SUBSTACK'
        });
        this.visit(ctx.ifClause);
        this.xml = this.xml.up();
        if (ctx.Else) {
            this.xml = this.xml.ele('statement ', {
                'name': 'SUBSTACK2'
            });
            this.visit(ctx.elseClause);
            this.xml = this.xml.up();
        }
        this.visit(ctx.annotations);

    }

    forever(ctx) {
        let blockid = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "forever"));
        this.xml = this.xml.ele('block', {
            'type': 'control_forever',
            'id': blockid,
        }).ele('statement ', {
            'name': 'SUBSTACK'
        });
        this.state.addBlock(blockid);
        this.visit(ctx.clause);
        this.xml = this.xml.up(); //close statement (stack will close block)
        this.visit(ctx.annotations);
        this.interruptStack();

    }

    repeat(ctx) {
        let blockid = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "repeat"));
        this.xml = this.xml.ele('block', {
            'type': 'control_repeat',
            'id': blockid,
        }).ele('value', {
            'name': 'TIMES'
        });
        this.state.addBlock(blockid);
        this.visit(ctx.argument);
        this.xml = this.xml.up().ele('statement ', {
            'name': 'SUBSTACK'
        });
        this.visit(ctx.clause);
        this.xml = this.xml.up(); //go out of statement
        this.visit(ctx.annotations);
    }

    repeatuntil(ctx) {
        let blockid = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "repeatuntil"));
        this.xml = this.xml.ele('block', {
            'type': 'control_repeat_until',
            'id': blockid,
        }).ele('value', {
            'name': 'CONDITION'
        });
        this.state.addBlock(blockid);
        this.visit(ctx.condition);
        this.xml = this.xml.up().ele('statement ', {
            'name': 'SUBSTACK'
        });
        this.visit(ctx.clause);
        this.xml = this.xml.up(); //go out of statement
        this.visit(ctx.annotations);
    }

    /*clause(ctx) {
        //it is not possible to add the statement, substack here because the name is different for the else clause
        //it's only one line 5 times deal with it.
    }*/

    /*modifiers(ctx) {
        //will add nothing to the xml
    }*/

    /*annotations(ctx) {
       //no xml here
    }*/

    /*modifiers(ctx) {
        // no xml generation
    }*/

    /*id(ctx) {
        // no xml generation
    }*/

    comment(ctx) {
        let pinned = this.state.isBuildingStackBlock() || this.state.isBuildingBooleanBlock() || this.state.isBuildingReporterBlock()
        this.createComment(ctx, pinned)
    }

    /**
     * creates the xml for a comment
     * @param ctx
     * @param pinned (linked to a block)
     */
    createComment(ctx, pinned) {
        this.xml.ele('comment ', {
            'id': this.idManager.getNextCommentID(this.infoVisitor.getID(ctx, "comment")),
            'pinned': pinned,
            'minimized': false, //todo:should be known from modifier in the ctx
        }, this.infoVisitor.getString(ctx, "comment"));
    }

    argument(ctx) {
        if (ctx.Literal) {
            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_chevrotain__["tokenMatcher"])(ctx.Literal[0], ColorLiteral)) {
                this.createColourPickerInput(ctx);
            } else {
                this.createTextInput(ctx);
                //todo: numberinputs + context -> createnumber
            }
        } else if (ctx.Label) {
            this.createTextInput(ctx);
        } else if (ctx.expression) {
            this.visit(ctx.expression);
        } else if (ctx.predicate) {
            this.visit(ctx.predicate)
        } else if (ctx.$empty) {
            this.createTextInput(ctx);
        }
    }

    createTextInput(ctx) {
        this.xml.ele('shadow', {
            'type': 'text',
            'id': this.idManager.getNextInputID(this.state.getLastBlockID(), this.infoVisitor.getID(ctx, "argument")),
        }).ele('field', {
            'name': 'TEXT',
        }, this.infoVisitor.getString(ctx, "argument"));
    }

    createColourPickerInput(ctx) {
        this.xml.ele('shadow', {
            'type': 'colour_picker',
            'id': this.idManager.getNextInputID(this.state.getLastBlockID(), this.infoVisitor.getID(ctx, "argument")),
        }).ele('field', {
            'name': 'COLOUR',
        }, this.infoVisitor.getString(ctx, "argument"));
    }

    createMathNumberInput(ctx) {
        this.xml.ele('shadow', {
            'type': 'math_number',
            'id': this.idManager.getNextInputID(this.state.getLastBlockID(), this.infoVisitor.getID(ctx, "argument")),
        }).ele('field', {
            'name': 'NUM',
        }, this.infoVisitor.getString(ctx, "argument"));
    }

    condition(ctx) {
        this.visit(ctx.predicate);
    }

    /*condition$empty(ctx) {
        //does nothing
    }*/

    expression(ctx) {
        let before = this.xml;
        this.state.openReporterBlock();
        this.visit(ctx.atomic);
        this.state.closeReporterBlock();
        this.xml = before;
    }

    predicate(ctx) {
        let before = this.xml;
        this.state.openBooleanBlock();
        this.visit(ctx.atomic);
        this.state.closeBooleanBlock();
        this.xml = before;
    }

    createVariableBlock(ctx, description) {
        let blockID = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "atomic"));
        let varID = this.idManager.acquireVariableID(this.infoVisitor.getString(ctx, "atomic"));
        this.xml = this.xml.ele('block', {
            'type': 'data_variable',
            'id': blockID,
        }).ele('field', {
            'name': 'VARIABLE',
            'id': varID,
        }, description).up();
        this.state.addBlock(blockID);
    }

    createListBlock(ctx, description) {
        let blockID = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "atomic"));
        let varID = this.idManager.acquireVariableID(this.infoVisitor.getString(ctx, "atomic"), __WEBPACK_IMPORTED_MODULE_4__IDManager__["a" /* LIST */]);
        this.xml = this.xml.ele('block', {
            'type': 'data_listcontents',
            'id': blockID,
        }).ele('field', {
            'name': 'LIST',
            'id': varID,
        }, description).up();
        this.state.addBlock(blockID);
    }

    createCustomReporterBlock(ctx, description) {
        let blockID = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "atomic"));
        let varID = this.idManager.acquireVariableID(this.infoVisitor.getString(ctx, "atomic"), __WEBPACK_IMPORTED_MODULE_4__IDManager__["a" /* LIST */]);
        this.xml = this.xml.ele('block', {
            'type': 'argument_reporter_string_number',
            'id': blockID,
        }).ele('field', {
            'name': 'VALUE',
            'id': varID,
        }, description).up();
        this.state.addBlock(blockID);
    }

    createCustomBooleanBlock(ctx, description) {
        let blockID = this.idManager.getNextBlockID(this.infoVisitor.getID(ctx, "atomic"));
        let varID = this.idManager.acquireVariableID(this.infoVisitor.getString(ctx, "atomic"), __WEBPACK_IMPORTED_MODULE_4__IDManager__["a" /* LIST */]);
        this.xml = this.xml.ele('block', {
            'type': 'argument_reporter_boolean',
            'id': blockID,
        }).ele('field', {
            'name': 'VALUE',
            'id': varID,
        }, description).up();
        this.state.addBlock(blockID);
    }

}
/* harmony export (immutable) */ __webpack_exports__["a"] = XMLLNVisitor;




/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Extract modifiers.
 *
 * This files contains all necessary classes to extract information about a modifier.
 * A modifier extract implements all methods from ModifierExtractor, so it extends the class.
 *
 *
 * @file   This files defines the Modifierextractor,ListmodifierExtractor, ModifierAnalyser class.
 * @author Ellen Vanhove.
 */

class ModifierExtractor {

    /**
     * analyse the modifier token and return whether it contains a certain key
     * @param modifierToken
     * return {boolean} the modifier token contains the key
     */
    containsKey(modifierToken) {
        throw new Error('You have to implement the method containsKey!');
    }

    /**
     * returns an object
     * @param modifierToken
     * returns object
     */
    extractParameters(modifierToken) {
        throw new Error('You have to implement the method extractParameters!');
    }

    /**
     * return a generic name for this extractor
     */
    getName() {
        throw new Error('You have to implement the method getName!');
    }

}

class listModifierExtractor extends ModifierExtractor {
    containsKey(modifierToken) {
        return modifierToken.image.match(/::list/i);
    }

    extractParameters(modifierToken) {
        return {}
    }

    getName() {
        return "list"
    }
}

class customModifierExtractor extends ModifierExtractor {
    containsKey(modifierToken) {
        return modifierToken.image.match(/::custom/i);
    }

    extractParameters(modifierToken) {
        return {}
    }

    getName() {
        return "custom"
    }
}

class varModifierExtractor extends ModifierExtractor {
    containsKey(modifierToken) {
        return modifierToken.image.match(/::user-defined/i);
    }

    extractParameters(modifierToken) {
        return {}
    }

    getName() {
        return "user"
    }
}

class ModifierAnalyser {
    constructor(ctx, informationVisitor) {
        this.infoVisitor = informationVisitor;
        this.modifierExtractors = [];
        this.modifierExtractors.push(new listModifierExtractor());
        this.modifierExtractors.push(new customModifierExtractor());
        this.modifierExtractors.push(new varModifierExtractor());
    }

    getMods(modifierList) {
        let mods = {};
        //let modifierList =  ctx.children.Modifier;
        if (modifierList) {
            for (let i = 0; i < modifierList.length; i++) {
                for (let m = 0; m < this.modifierExtractors.length; m++) {
                    if (this.modifierExtractors[m].containsKey(modifierList[i])) {
                        mods[this.modifierExtractors[m].getName()] = this.modifierExtractors[m].extractParameters(modifierList[i]);
                    }
                }
            }
        }
        return mods;
    }

}
/* harmony export (immutable) */ __webpack_exports__["a"] = ModifierAnalyser;


/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Warnings.
 *
 * An object that determines the structure of the warnings.
 *
 * @file   This files defines the WarningsKeeper class.
 * @author Ellen Vanhove.
 */

class WarningsKeeper {

    constructor(informationVisitor) {
        this.reset();
    }

    reset(){
        this.list = [];
    }

    add(ctx,msg){
        this.list.push({
            msg:msg,
            ctx:ctx,
        })
    }

    getList(){
        return this.list;
    }

}
/* harmony export (immutable) */ __webpack_exports__["a"] = WarningsKeeper;


/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["scratchify"] = scratchify;
/* harmony export (immutable) */ __webpack_exports__["getWorkspace"] = getWorkspace;
/* harmony export (immutable) */ __webpack_exports__["stackGlow"] = stackGlow;
/* harmony export (immutable) */ __webpack_exports__["glowBlock"] = glowBlock;
/* harmony export (immutable) */ __webpack_exports__["report"] = report;
/* harmony export (immutable) */ __webpack_exports__["changeValue"] = changeValue;
/* harmony export (immutable) */ __webpack_exports__["createWorkspace"] = createWorkspace;
/* harmony export (immutable) */ __webpack_exports__["fitBlocks"] = fitBlocks;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_scratch_blocks__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_scratch_blocks___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_scratch_blocks__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__parser_parserUtils_js__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__(48);






const LOCALE_ATTR ="blocks-locale";
const SCALE_ATTR ="blocks-scale";

/**
 *
 * @param selector see: https://www.w3schools.com/jquery/jquery_ref_selectors.asp
 * @param properties see: DEFAULT_PROPERTIES
 */
function scratchify(selector='.scratch',properties={}) {
    let userDefaultProperties=mergeProperties(properties,DEFAULT_PROPERTIES);
    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(selector).each(function(i, obj) {
        let id = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).attr('id');
        if (!id) {
            id = "workspace_" + i;
        } else {
            id = "workspace_" + id;
        }
        //create the div to inject the workspace in
        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).parent().append(__WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div class=blocklyDiv id=" + id + "></div>"));
        let extracted = {};
        let locale = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).attr(LOCALE_ATTR);
        if(locale) {
            extracted.locale = locale;
        }
        let scale = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).attr(SCALE_ATTR);
        if(scale) {
            extracted.zoom = {
                startScale: scale
            };
        }
        let prop=mergeProperties(extracted,userDefaultProperties);
        let workspace = createWorkspace(id,prop);
        //do parsing
        let text = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).text();
        //remove the text
        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).remove();
        //console.log(text);
        let xml = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__parser_parserUtils_js__["a" /* default */])(text);
        //only if succesfully parsed
        if (xml) {
            //add to this workspace
            let dom = Blockly.Xml.textToDom(xml);
            Blockly.Xml.domToWorkspace(dom, workspace);
            workspace.cleanUp();
        }
        //rescale the workspace to fit to the blocks
        fitBlocks(workspace, id,prop);
        storeWorkspace(id, workspace);
    });
}

const workspaces = {};

function storeWorkspace(workspaceName, workspace) {
    workspaces[workspaceName] = workspace;
}

function getWorkspace(id) {
    var workspaceName = "workspace_" + id;
    return workspaces[workspaceName];
}

function stackGlow(id, blockID, on) {
    getWorkspace(id).glowStack(blockID, on);
}

function glowBlock(id, blockID, on) {
    getWorkspace(id).glowBlock(blockID, on);
}

function report(id, blockID, value) {
    getWorkspace(id).reportValue(blockID, value);
}

function changeValue(id, blockID, value) {
    var block = getWorkspace(id).getBlockById(blockID);
    var field = block.inputList[0].fieldRow[0];
    field.setText(value);
}

const DEFAULT_PROPERTIES = {
    //this is exactly the same as blockly/scratchblocks properties
    readOnly: true,
    toolbox: '<xml></xml>',
    scrollbars: false,
    trashcan: false,
    comments: true,
    media: __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* MEDIA */],
    colours: {
        fieldShadow: 'rgba(255, 255, 255, 1)'
    },
    zoom: {
        startScale: 0.5
    },
    // ----
    //extra locale
    locale: "en",
};
/* harmony export (immutable) */ __webpack_exports__["DEFAULT_PROPERTIES"] = DEFAULT_PROPERTIES;


function createWorkspace(workspaceName,properties=DEFAULT_PROPERTIES) {
    __WEBPACK_IMPORTED_MODULE_1_scratch_blocks___default.a.ScratchMsgs.setLocale(properties.locale);
    return __WEBPACK_IMPORTED_MODULE_1_scratch_blocks___default.a.inject(workspaceName, properties);
}

function mergeProperties(properties, defaultprops){
    let prop = {};
    for(let p in defaultprops){
        if(properties.hasOwnProperty(p)){
            prop[p] = properties[p];
        }else{
            prop[p] = defaultprops[p];
        }
    }
    return prop;
}

function fitBlocks(workspace, id,properties) {
    let isHead = false;
    //get the topblocks, this are the beginning of stacks. they are ordered by location.
    let topBlocks=workspace.getTopBlocks(true);
    if(topBlocks[0]) {
        isHead = topBlocks[0].startHat_;
    }
    let metrics = workspace.getMetrics(); //is not dependent on the location of the workspace
    if(isHead){
        __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#' + id).css('height', (metrics.contentHeight + 20*properties.zoom.startScale) + 'px');
        //translate the whole workspace (like dragging in the live view)
        workspace.translate(5,20*properties.zoom.startScale);
    }else{
        __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#' + id).css('height', (metrics.contentHeight + 10) + 'px');
        workspace.translate(5,5);
    }
    __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#' + id).css('width', (metrics.contentWidth + 10) + 'px');
    __WEBPACK_IMPORTED_MODULE_1_scratch_blocks___default.a.svgResize(workspace);
}

/***/ })
/******/ ]);
//# sourceMappingURL=ScratchLN.js.map